

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon May 29 22:39:13 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4620 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  003182                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _nextGameSpeed
    91  003182  0010               	dw	16
    92                           
    93                           ;initializer for _gameSpeed
    94  003184  0010               	dw	16
    95                           
    96                           ;initializer for _game_state
    97  003186  01                 	db	1
    98                           
    99                           	psect	idataBANK0
   100  003000                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _segValues
   104  003000  3F                 	db	63
   105  003001  06                 	db	6
   106  003002  5B                 	db	91
   107  003003  4F                 	db	79
   108  003004  66                 	db	102
   109  003005  6D                 	db	109
   110  003006  7D                 	db	125
   111  003007  07                 	db	7
   112  003008  7F                 	db	127
   113  003009  6F                 	db	111
   114  00300A  40                 	db	64
   115                           
   116                           ;initializer for _lcd_y
   117  00300B  01                 	db	1
   118                           
   119                           ;initializer for _lcd_x
   120  00300C  01                 	db	1
   121                           
   122                           ;initializer for _frisbee_target
   123  00300D  0E                 	db	14
   124  00300E  11                 	db	17
   125  00300F  11                 	db	17
   126  003010  11                 	db	17
   127  003011  0E                 	db	14
   128  003012  00                 	db	0
   129  003013  00                 	db	0
   130  003014  00                 	db	0
   131                           
   132                           ;initializer for _frisbeeChar
   133  003015  0E                 	db	14
   134  003016  1F                 	db	31
   135  003017  1F                 	db	31
   136  003018  1F                 	db	31
   137  003019  0E                 	db	14
   138  00301A  00                 	db	0
   139  00301B  00                 	db	0
   140  00301C  00                 	db	0
   141                           
   142                           ;initializer for _selected_teamB_player_with_frisbee
   143  00301D  1F                 	db	31
   144  00301E  15                 	db	21
   145  00301F  0A                 	db	10
   146  003020  04                 	db	4
   147  003021  0E                 	db	14
   148  003022  1F                 	db	31
   149  003023  0A                 	db	10
   150  003024  1F                 	db	31
   151                           
   152                           ;initializer for _selected_teamA_player_with_frisbee
   153  003025  1F                 	db	31
   154  003026  15                 	db	21
   155  003027  0A                 	db	10
   156  003028  04                 	db	4
   157  003029  04                 	db	4
   158  00302A  04                 	db	4
   159  00302B  0A                 	db	10
   160  00302C  1F                 	db	31
   161                           
   162                           ;initializer for _selected_teamB_player
   163  00302D  11                 	db	17
   164  00302E  15                 	db	21
   165  00302F  0A                 	db	10
   166  003030  04                 	db	4
   167  003031  0E                 	db	14
   168  003032  1F                 	db	31
   169  003033  0A                 	db	10
   170  003034  1F                 	db	31
   171                           
   172                           ;initializer for _selected_teamA_player
   173  003035  11                 	db	17
   174  003036  15                 	db	21
   175  003037  0A                 	db	10
   176  003038  04                 	db	4
   177  003039  04                 	db	4
   178  00303A  04                 	db	4
   179  00303B  0A                 	db	10
   180  00303C  1F                 	db	31
   181                           
   182                           ;initializer for _teamB_player
   183  00303D  11                 	db	17
   184  00303E  15                 	db	21
   185  00303F  0A                 	db	10
   186  003040  04                 	db	4
   187  003041  0E                 	db	14
   188  003042  1F                 	db	31
   189  003043  0A                 	db	10
   190  003044  0A                 	db	10
   191                           
   192                           ;initializer for _teamA_player
   193  003045  11                 	db	17
   194  003046  15                 	db	21
   195  003047  0A                 	db	10
   196  003048  04                 	db	4
   197  003049  04                 	db	4
   198  00304A  04                 	db	4
   199  00304B  0A                 	db	10
   200  00304C  0A                 	db	10
   201  0000                     _TRISAbits	set	3986
   202  0000                     _ADCON2bits	set	4032
   203  0000                     _ADCON0	set	4034
   204  0000                     _T2CON	set	4042
   205  0000                     _T1CON	set	4045
   206  0000                     _IPR1bits	set	3999
   207  0000                     _RCONbits	set	4048
   208  0000                     _TMR0H	set	4055
   209  0000                     _TMR0L	set	4054
   210  0000                     _T0CON	set	4053
   211  0000                     _TRISA	set	3986
   212  0000                     _TRISB	set	3987
   213  0000                     _T3CON	set	4017
   214  0000                     _INTCON2bits	set	4081
   215  0000                     _ADCON1	set	4033
   216  0000                     _ADCON0bits	set	4034
   217  0000                     _LATD	set	3980
   218  0000                     _LATA	set	3977
   219  0000                     _PORTA	set	3968
   220  0000                     _PIE1bits	set	3997
   221  0000                     _INTCON3bits	set	4080
   222  0000                     _TMR1H	set	4047
   223  0000                     _TMR1L	set	4046
   224  0000                     _T1CONbits	set	4045
   225  0000                     _ADRESH	set	4036
   226  0000                     _PIR1bits	set	3998
   227  0000                     _T0CONbits	set	4053
   228  0000                     _INTCONbits	set	4082
   229  0000                     _PORTB	set	3969
   230  0000                     _TRISD	set	3989
   231  0000                     _TRISEbits	set	3990
   232  0000                     _PORTD	set	3971
   233  0000                     _PORTEbits	set	3972
   234  0000                     _TMR3H	set	4019
   235  0000                     _TMR3L	set	4018
   236  0000                     _T3CONbits	set	4017
   237                           
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241  002EC2                     __pcinit:
   242                           	callstack 0
   243  002EC2                     start_initialization:
   244                           	callstack 0
   245  002EC2                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Initialize objects allocated to BANK0 (77 bytes)
   249                           ; load TBLPTR registers with __pidataBANK0
   250  002EC2  0E00               	movlw	low __pidataBANK0
   251  002EC4  6EF6               	movwf	tblptrl,c
   252  002EC6  0E30               	movlw	high __pidataBANK0
   253  002EC8  6EF7               	movwf	tblptrh,c
   254  002ECA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   255  002ECC  6EF8               	movwf	tblptru,c
   256  002ECE  EE00  F080         	lfsr	0,__pdataBANK0
   257  002ED2  EE10 F04D          	lfsr	1,77
   258  002ED6                     copy_data0:
   259  002ED6  0009               	tblrd		*+
   260  002ED8  CFF5 FFEE          	movff	tablat,postinc0
   261  002EDC  50E5               	movf	postdec1,w,c
   262  002EDE  50E1               	movf	fsr1l,w,c
   263  002EE0  E1FA               	bnz	copy_data0
   264                           
   265                           ; Initialize objects allocated to COMRAM (5 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267  002EE2  0E82               	movlw	low __pidataCOMRAM
   268  002EE4  6EF6               	movwf	tblptrl,c
   269  002EE6  0E31               	movlw	high __pidataCOMRAM
   270  002EE8  6EF7               	movwf	tblptrh,c
   271  002EEA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272  002EEC  6EF8               	movwf	tblptru,c
   273  002EEE  EE00  F077         	lfsr	0,__pdataCOMRAM
   274  002EF2  EE10 F005          	lfsr	1,5
   275  002EF6                     copy_data1:
   276  002EF6  0009               	tblrd		*+
   277  002EF8  CFF5 FFEE          	movff	tablat,postinc0
   278  002EFC  50E5               	movf	postdec1,w,c
   279  002EFE  50E1               	movf	fsr1l,w,c
   280  002F00  E1FA               	bnz	copy_data1
   281                           
   282                           ; Clear objects allocated to BANK1 (188 bytes)
   283  002F02  EE01  F000         	lfsr	0,__pbssBANK1
   284  002F06  0EBC               	movlw	188
   285  002F08                     clear_0:
   286  002F08  6AEE               	clrf	postinc0,c
   287  002F0A  06E8               	decf	wreg,f,c
   288  002F0C  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to BANK0 (4 bytes)
   291  002F0E  0100               	movlb	0
   292  002F10  6BF2               	clrf	(__pbssBANK0+3)& (0+255),b
   293  002F12  6BF1               	clrf	(__pbssBANK0+2)& (0+255),b
   294  002F14  6BF0               	clrf	(__pbssBANK0+1)& (0+255),b
   295  002F16  6BEF               	clrf	__pbssBANK0& (0+255),b
   296                           
   297                           ; Clear objects allocated to COMRAM (44 bytes)
   298  002F18  EE00  F04B         	lfsr	0,__pbssCOMRAM
   299  002F1C  0E2C               	movlw	44
   300  002F1E                     clear_1:
   301  002F1E  6AEE               	clrf	postinc0,c
   302  002F20  06E8               	decf	wreg,f,c
   303  002F22  E1FD               	bnz	clear_1
   304  002F24                     end_of_initialization:
   305                           	callstack 0
   306  002F24                     __end_of__initialization:
   307                           	callstack 0
   308  002F24  907C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   309  002F26  927C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   310  002F28  0E00               	movlw	low (__Lmediumconst shr (0+16))
   311  002F2A  6EF8               	movwf	tblptru,c
   312  002F2C  0100               	movlb	0
   313  002F2E  EFAB  F018         	goto	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMRAM
   316  00004B                     __pbssCOMRAM:
   317                           	callstack 0
   318  00004B                     _curFrisbeeSteps:
   319                           	callstack 0
   320  00004B                     	ds	2
   321  00004D                     _frisbeeSteps:
   322                           	callstack 0
   323  00004D                     	ds	2
   324  00004F                     _pulseCounter:
   325                           	callstack 0
   326  00004F                     	ds	2
   327  000051                     _digital:
   328                           	callstack 0
   329  000051                     	ds	2
   330  000053                     _currentSegment:
   331                           	callstack 0
   332  000053                     	ds	2
   333  000055                     _selectedPlayer:
   334                           	callstack 0
   335  000055                     	ds	2
   336  000057                     _portbVals:
   337                           	callstack 0
   338  000057                     	ds	1
   339  000058                     _acceptInterrupts:
   340                           	callstack 0
   341  000058                     	ds	1
   342  000059                     _objs:
   343                           	callstack 0
   344  000059                     	ds	30
   345                           
   346                           	psect	dataCOMRAM
   347  000077                     __pdataCOMRAM:
   348                           	callstack 0
   349  000077                     _nextGameSpeed:
   350                           	callstack 0
   351  000077                     	ds	2
   352  000079                     _gameSpeed:
   353                           	callstack 0
   354  000079                     	ds	2
   355  00007B                     _game_state:
   356                           	callstack 0
   357  00007B                     	ds	1
   358                           
   359                           	psect	bssBANK0
   360  0000EF                     __pbssBANK0:
   361                           	callstack 0
   362  0000EF                     _scoreB:
   363                           	callstack 0
   364  0000EF                     	ds	2
   365  0000F1                     _scoreA:
   366                           	callstack 0
   367  0000F1                     	ds	2
   368                           
   369                           	psect	dataBANK0
   370  000080                     __pdataBANK0:
   371                           	callstack 0
   372  000080                     _segValues:
   373                           	callstack 0
   374  000080                     	ds	11
   375  00008B                     _lcd_y:
   376                           	callstack 0
   377  00008B                     	ds	1
   378  00008C                     _lcd_x:
   379                           	callstack 0
   380  00008C                     	ds	1
   381  00008D                     _frisbee_target:
   382                           	callstack 0
   383  00008D                     	ds	8
   384  000095                     _frisbeeChar:
   385                           	callstack 0
   386  000095                     	ds	8
   387  00009D                     _selected_teamB_player_with_frisbee:
   388                           	callstack 0
   389  00009D                     	ds	8
   390  0000A5                     _selected_teamA_player_with_frisbee:
   391                           	callstack 0
   392  0000A5                     	ds	8
   393  0000AD                     _selected_teamB_player:
   394                           	callstack 0
   395  0000AD                     	ds	8
   396  0000B5                     _selected_teamA_player:
   397                           	callstack 0
   398  0000B5                     	ds	8
   399  0000BD                     _teamB_player:
   400                           	callstack 0
   401  0000BD                     	ds	8
   402  0000C5                     _teamA_player:
   403                           	callstack 0
   404  0000C5                     	ds	8
   405                           
   406                           	psect	bssBANK1
   407  000100                     __pbssBANK1:
   408                           	callstack 0
   409  000100                     _display:
   410                           	callstack 0
   411  000100                     	ds	128
   412  000180                     _frisbee_steps:
   413                           	callstack 0
   414  000180                     	ds	60
   415                           
   416                           	psect	cstackBANK0
   417  0000CD                     __pcstackBANK0:
   418                           	callstack 0
   419  0000CD                     ??_lowIsr:
   420                           
   421                           ; 1 bytes @ 0x0
   422  0000CD                     	ds	6
   423  0000D3                     lowIsr@temp_d:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x6
   427  0000D3                     	ds	1
   428  0000D4                     lowIsr@temp_a:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x7
   432  0000D4                     	ds	1
   433  0000D5                     ?___wmul:
   434                           	callstack 0
   435  0000D5                     LCDCmd@cmd:
   436                           	callstack 0
   437  0000D5                     LCDDat@dat:
   438                           	callstack 0
   439  0000D5                     ___wmul@multiplier:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x8
   443  0000D5                     	ds	1
   444  0000D6                     LCDGoto@p_1:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x9
   448  0000D6                     	ds	1
   449  0000D7                     LCDGoto@p_2:
   450                           	callstack 0
   451  0000D7                     ___wmul@multiplicand:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xA
   455  0000D7                     	ds	1
   456  0000D8                     LCDAddSpecialCharacter@data:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xB
   460  0000D8                     	ds	1
   461  0000D9                     ___wmul@product:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xC
   465  0000D9                     	ds	1
   466  0000DA                     LCDAddSpecialCharacter@character_index:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xD
   470  0000DA                     	ds	1
   471  0000DB                     ??_InitGameObjects:
   472  0000DB                     ??_UpdateAndPrintDisplay:
   473  0000DB                     LCDAddSpecialCharacter@i:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0xE
   477  0000DB                     	ds	1
   478  0000DC                     
   479                           ; 1 bytes @ 0xF
   480  0000DC                     	ds	9
   481  0000E5                     UpdateAndPrintDisplay@i:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x18
   485  0000E5                     	ds	2
   486  0000E7                     UpdateAndPrintDisplay@j:
   487                           	callstack 0
   488  0000E7                     InitGameObjects@i:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x1A
   492  0000E7                     	ds	2
   493  0000E9                     UpdateAndPrintDisplay@i_989:
   494                           	callstack 0
   495  0000E9                     InitGameObjects@j:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499  0000E9                     	ds	2
   500  0000EB                     UpdateAndPrintDisplay@j_990:
   501                           	callstack 0
   502  0000EB                     InitGameObjects@i_999:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1E
   506  0000EB                     	ds	2
   507  0000ED                     UpdateAndPrintDisplay@i_988:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x20
   511  0000ED                     	ds	2
   512  0000EF                     
   513                           ; 1 bytes @ 0x22
   514                           
   515                           	psect	cstackCOMRAM
   516  000001                     __pcstackCOMRAM:
   517                           	callstack 0
   518  000001                     ?___lwmod:
   519                           	callstack 0
   520  000001                     ?i2___wmul:
   521                           	callstack 0
   522  000001                     ___lwmod@dividend:
   523                           	callstack 0
   524  000001                     i2___wmul@multiplier:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x0
   528  000001                     	ds	2
   529  000003                     ___lwmod@divisor:
   530                           	callstack 0
   531  000003                     i2___wmul@multiplicand:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x2
   535  000003                     	ds	2
   536  000005                     ___lwmod@counter:
   537                           	callstack 0
   538  000005                     i2___wmul@product:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x4
   542  000005                     	ds	1
   543  000006                     ?_random_generator:
   544                           	callstack 0
   545  000006                     random_generator@modulo:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x5
   549  000006                     	ds	1
   550  000007                     CatchFrisbee@pl:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x6
   554  000007                     	ds	1
   555  000008                     ??_random_generator:
   556  000008                     CheckIfCaughtFrisbee@i:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x7
   560  000008                     	ds	1
   561  000009                     ??_CatchFrisbee:
   562                           
   563                           ; 1 bytes @ 0x8
   564  000009                     	ds	1
   565  00000A                     random_generator@i:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x9
   569  00000A                     	ds	2
   570  00000C                     random_generator@temp:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0xB
   574  00000C                     	ds	1
   575  00000D                     random_generator@res:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0xC
   579  00000D                     	ds	1
   580  00000E                     ?_compute_frisbee_target_and_route:
   581                           	callstack 0
   582  00000E                     compute_frisbee_target_and_route@current_fisbee_x_position:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0xD
   586  00000E                     	ds	2
   587  000010                     compute_frisbee_target_and_route@current_fisbee_y_position:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xF
   591  000010                     	ds	1
   592  000011                     CatchFrisbee@i:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x10
   596  000011                     	ds	1
   597  000012                     ??_compute_frisbee_target_and_route:
   598                           
   599                           ; 1 bytes @ 0x11
   600  000012                     	ds	1
   601  000013                     left@pl:
   602                           	callstack 0
   603  000013                     right@pl:
   604                           	callstack 0
   605  000013                     up@pl:
   606                           	callstack 0
   607  000013                     down@pl:
   608                           	callstack 0
   609  000013                     upleft@pl:
   610                           	callstack 0
   611  000013                     upright@pl:
   612                           	callstack 0
   613  000013                     downleft@pl:
   614                           	callstack 0
   615  000013                     downright@pl:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x12
   619  000013                     	ds	1
   620  000014                     compute_frisbee_target_and_route@i:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x13
   624  000014                     	ds	1
   625  000015                     ??_up:
   626  000015                     ??_right:
   627  000015                     ??_down:
   628  000015                     ??_left:
   629  000015                     ??_upleft:
   630  000015                     ??_upright:
   631  000015                     ??_downleft:
   632  000015                     ??_downright:
   633                           
   634                           ; 1 bytes @ 0x14
   635  000015                     	ds	1
   636  000016                     compute_frisbee_target_and_route@i_840:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x15
   640  000016                     	ds	2
   641  000018                     compute_frisbee_target_and_route@i_841:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x17
   645  000018                     	ds	2
   646  00001A                     compute_frisbee_target_and_route@i_843:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x19
   650  00001A                     	ds	2
   651  00001C                     compute_frisbee_target_and_route@i_844:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1B
   655  00001C                     	ds	2
   656  00001E                     compute_frisbee_target_and_route@i_845:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x1D
   660  00001E                     	ds	1
   661  00001F                     ??_MoveEveryone:
   662                           
   663                           ; 1 bytes @ 0x1E
   664  00001F                     	ds	1
   665  000020                     compute_frisbee_target_and_route@number_of_steps:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x1F
   669  000020                     	ds	1
   670  000021                     MoveEveryone@val:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x20
   674  000021                     	ds	1
   675  000022                     compute_frisbee_target_and_route@target_x:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x21
   679  000022                     	ds	1
   680  000023                     _MoveEveryone$1795:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x22
   684  000023                     	ds	1
   685  000024                     compute_frisbee_target_and_route@target_y:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x23
   689  000024                     	ds	1
   690  000025                     _MoveEveryone$1796:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x24
   694  000025                     	ds	1
   695  000026                     compute_frisbee_target_and_route@x:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x25
   699  000026                     	ds	1
   700  000027                     _MoveEveryone$1797:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x26
   704  000027                     	ds	1
   705  000028                     compute_frisbee_target_and_route@y:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x27
   709  000028                     	ds	1
   710  000029                     _MoveEveryone$1798:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x28
   714  000029                     	ds	1
   715  00002A                     compute_frisbee_target_and_route@x_step_size:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x29
   719  00002A                     	ds	1
   720  00002B                     _MoveEveryone$1799:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2A
   724  00002B                     	ds	1
   725  00002C                     compute_frisbee_target_and_route@y_step_size:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x2B
   729  00002C                     	ds	1
   730  00002D                     _MoveEveryone$1800:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x2C
   734  00002D                     	ds	2
   735  00002F                     _MoveEveryone$1801:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x2E
   739  00002F                     	ds	2
   740  000031                     _MoveEveryone$1802:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x30
   744  000031                     	ds	2
   745  000033                     MoveEveryone@i:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x32
   749  000033                     	ds	2
   750  000035                     ??_highIsr:
   751                           
   752                           ; 1 bytes @ 0x34
   753  000035                     	ds	14
   754  000043                     _highIsr$1791:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x42
   758  000043                     	ds	2
   759  000045                     _highIsr$1792:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x44
   763  000045                     	ds	2
   764  000047                     _highIsr$1793:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x46
   768  000047                     	ds	2
   769  000049                     _highIsr$1794:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x48
   773  000049                     	ds	2
   774                           
   775 ;;
   776 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   777 ;;
   778 ;; *************** function _main *****************
   779 ;; Defined at:
   780 ;;		line 238 in file "main.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels required when called:   10
   800 ;; This function calls:
   801 ;;		_AddCustomCharacters
   802 ;;		_InitGameObjects
   803 ;;		_InitInterrupts
   804 ;;		_InitLCD
   805 ;;		_UpdateAndPrintDisplay
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text0
   812  003156                     __ptext0:
   813                           	callstack 0
   814  003156                     _main:
   815                           	callstack 21
   816  003156                     
   817                           ;main.c: 240:     InitInterrupts();
   818  003156  EC9D  F016         	call	_InitInterrupts	;wreg free
   819                           
   820                           ;main.c: 241:     InitLCD();
   821  00315A  EC4C  F018         	call	_InitLCD	;wreg free
   822  00315E                     
   823                           ;main.c: 242:     InitGameObjects();
   824  00315E  EC2A  F014         	call	_InitGameObjects	;wreg free
   825  003162                     
   826                           ;main.c: 244:     AddCustomCharacters();
   827  003162  ECE4  F016         	call	_AddCustomCharacters	;wreg free
   828  003166                     l3126:
   829                           
   830                           ;main.c: 249:         UpdateAndPrintDisplay();
   831  003166  EC5F  F003         	call	_UpdateAndPrintDisplay	;wreg free
   832  00316A  EFB3  F018         	goto	l3126
   833  00316E  EF64  F000         	goto	start
   834  003172                     __end_of_main:
   835                           	callstack 0
   836                           
   837 ;; *************** function _UpdateAndPrintDisplay *****************
   838 ;; Defined at:
   839 ;;		line 290 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  j               2   30[BANK0 ] int 
   844 ;;  j               2   26[BANK0 ] int 
   845 ;;  i               2   28[BANK0 ] int 
   846 ;;  i               2   32[BANK0 ] int 
   847 ;;  i               2   24[BANK0 ] int 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:       20 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    8
   864 ;; This function calls:
   865 ;;		_LCDDat
   866 ;;		_LCDGoto
   867 ;;		___wmul
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text1
   874  0006BE                     __ptext1:
   875                           	callstack 0
   876  0006BE                     _UpdateAndPrintDisplay:
   877                           	callstack 22
   878  0006BE                     
   879                           ;main.c: 291:     for (int i = 0; i < 4; i++) {
   880  0006BE  0E00               	movlw	0
   881  0006C0  0100               	movlb	0	; () banked
   882  0006C2  6FE6               	movwf	(UpdateAndPrintDisplay@i+1)& (0+255),b
   883  0006C4  0E00               	movlw	0
   884  0006C6  6FE5               	movwf	UpdateAndPrintDisplay@i& (0+255),b
   885  0006C8                     l2802:
   886                           
   887                           ; BSR set to: 0
   888                           ;main.c: 292:         for (int j = 0; j < 16; j++) {
   889  0006C8  0E00               	movlw	0
   890  0006CA  6FE8               	movwf	(UpdateAndPrintDisplay@j+1)& (0+255),b
   891  0006CC  0E00               	movlw	0
   892  0006CE  6FE7               	movwf	UpdateAndPrintDisplay@j& (0+255),b
   893  0006D0                     l2808:
   894                           
   895                           ; BSR set to: 0
   896                           ;main.c: 293:             display[i][j] = ((void*)0);
   897  0006D0  C0E5  F0DB         	movff	UpdateAndPrintDisplay@i,??_UpdateAndPrintDisplay
   898  0006D4  C0E6  F0DC         	movff	UpdateAndPrintDisplay@i+1,??_UpdateAndPrintDisplay+1
   899  0006D8  0E05               	movlw	5
   900  0006DA                     u2765:
   901  0006DA  90D8               	bcf	status,0,c
   902  0006DC  37DB               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
   903  0006DE  37DC               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   904  0006E0  2EE8               	decfsz	wreg,f,c
   905  0006E2  EF6D  F003         	goto	u2765
   906  0006E6  0E00               	movlw	low _display
   907  0006E8  6FDD               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   908  0006EA  0E01               	movlw	high _display
   909  0006EC  6FDE               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   910  0006EE  51DB               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
   911  0006F0  27DD               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   912  0006F2  51DC               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
   913  0006F4  23DE               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   914  0006F6  90D8               	bcf	status,0,c
   915  0006F8  35E7               	rlcf	UpdateAndPrintDisplay@j& (0+255),w,b
   916  0006FA  6ED9               	movwf	fsr2l,c
   917  0006FC  35E8               	rlcf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   918  0006FE  6EDA               	movwf	fsr2h,c
   919  000700  51DD               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   920  000702  26D9               	addwf	fsr2l,f,c
   921  000704  51DE               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   922  000706  22DA               	addwfc	fsr2h,f,c
   923  000708  0E00               	movlw	0
   924  00070A  6EDE               	movwf	postinc2,c
   925  00070C  0E00               	movlw	0
   926  00070E  6EDD               	movwf	postdec2,c
   927  000710                     
   928                           ; BSR set to: 0
   929                           ;main.c: 294:         }
   930  000710  4BE7               	infsnz	UpdateAndPrintDisplay@j& (0+255),f,b
   931  000712  2BE8               	incf	(UpdateAndPrintDisplay@j+1)& (0+255),f,b
   932  000714                     
   933                           ; BSR set to: 0
   934  000714  BFE8               	btfsc	(UpdateAndPrintDisplay@j+1)& (0+255),7,b
   935  000716  EF96  F003         	goto	u2771
   936  00071A  51E8               	movf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   937  00071C  E109               	bnz	u2770
   938  00071E  0E10               	movlw	16
   939  000720  5DE7               	subwf	UpdateAndPrintDisplay@j& (0+255),w,b
   940  000722  A0D8               	btfss	status,0,c
   941  000724  EF96  F003         	goto	u2771
   942  000728  EF98  F003         	goto	u2770
   943  00072C                     u2771:
   944  00072C  EF68  F003         	goto	l2808
   945  000730                     u2770:
   946  000730                     
   947                           ; BSR set to: 0
   948                           ;main.c: 295:     }
   949  000730  4BE5               	infsnz	UpdateAndPrintDisplay@i& (0+255),f,b
   950  000732  2BE6               	incf	(UpdateAndPrintDisplay@i+1)& (0+255),f,b
   951  000734                     
   952                           ; BSR set to: 0
   953  000734  BFE6               	btfsc	(UpdateAndPrintDisplay@i+1)& (0+255),7,b
   954  000736  EFA6  F003         	goto	u2781
   955  00073A  51E6               	movf	(UpdateAndPrintDisplay@i+1)& (0+255),w,b
   956  00073C  E109               	bnz	u2780
   957  00073E  0E04               	movlw	4
   958  000740  5DE5               	subwf	UpdateAndPrintDisplay@i& (0+255),w,b
   959  000742  A0D8               	btfss	status,0,c
   960  000744  EFA6  F003         	goto	u2781
   961  000748  EFA8  F003         	goto	u2780
   962  00074C                     u2781:
   963  00074C  EF64  F003         	goto	l2802
   964  000750                     u2780:
   965  000750                     
   966                           ; BSR set to: 0
   967                           ;main.c: 296:     for (int i = 6 -1; i >= 0; i--) {
   968  000750  0E00               	movlw	0
   969  000752  6FEE               	movwf	(UpdateAndPrintDisplay@i_988+1)& (0+255),b
   970  000754  0E05               	movlw	5
   971  000756  6FED               	movwf	UpdateAndPrintDisplay@i_988& (0+255),b
   972  000758                     l2824:
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 297:         if (objs[i].active && !(objs[i].x == 0 || objs[i].y == 0)) {
   976  000758  C0ED  F0D5         	movff	UpdateAndPrintDisplay@i_988,___wmul@multiplier
   977  00075C  C0EE  F0D6         	movff	UpdateAndPrintDisplay@i_988+1,___wmul@multiplier+1
   978  000760  0E00               	movlw	0
   979  000762  6FD8               	movwf	(___wmul@multiplicand+1)& (0+255),b
   980  000764  0E05               	movlw	5
   981  000766  6FD7               	movwf	___wmul@multiplicand& (0+255),b
   982  000768  EC65  F018         	call	___wmul	;wreg free
   983  00076C  0E5B               	movlw	low (_objs+2)
   984  00076E  0100               	movlb	0	; () banked
   985  000770  25D5               	addwf	?___wmul& (0+255),w,b
   986  000772  6ED9               	movwf	fsr2l,c
   987  000774  0E00               	movlw	high (_objs+2)
   988  000776  21D6               	addwfc	(?___wmul+1)& (0+255),w,b
   989  000778  6EDA               	movwf	fsr2h,c
   990  00077A  50DF               	movf	indf2,w,c
   991  00077C  B4D8               	btfsc	status,2,c
   992  00077E  EFC3  F003         	goto	u2791
   993  000782  EFC5  F003         	goto	u2790
   994  000786                     u2791:
   995  000786  EF56  F004         	goto	l2832
   996  00078A                     u2790:
   997  00078A                     
   998                           ; BSR set to: 0
   999  00078A  C0ED  F0D5         	movff	UpdateAndPrintDisplay@i_988,___wmul@multiplier
  1000  00078E  C0EE  F0D6         	movff	UpdateAndPrintDisplay@i_988+1,___wmul@multiplier+1
  1001  000792  0E00               	movlw	0
  1002  000794  6FD8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1003  000796  0E05               	movlw	5
  1004  000798  6FD7               	movwf	___wmul@multiplicand& (0+255),b
  1005  00079A  EC65  F018         	call	___wmul	;wreg free
  1006  00079E  0E59               	movlw	low _objs
  1007  0007A0  0100               	movlb	0	; () banked
  1008  0007A2  25D5               	addwf	?___wmul& (0+255),w,b
  1009  0007A4  6ED9               	movwf	fsr2l,c
  1010  0007A6  0E00               	movlw	high _objs
  1011  0007A8  21D6               	addwfc	(?___wmul+1)& (0+255),w,b
  1012  0007AA  6EDA               	movwf	fsr2h,c
  1013  0007AC  50DF               	movf	indf2,w,c
  1014  0007AE  B4D8               	btfsc	status,2,c
  1015  0007B0  EFDC  F003         	goto	u2801
  1016  0007B4  EFDE  F003         	goto	u2800
  1017  0007B8                     u2801:
  1018  0007B8  EF56  F004         	goto	l2832
  1019  0007BC                     u2800:
  1020  0007BC                     
  1021                           ; BSR set to: 0
  1022  0007BC  C0ED  F0D5         	movff	UpdateAndPrintDisplay@i_988,___wmul@multiplier
  1023  0007C0  C0EE  F0D6         	movff	UpdateAndPrintDisplay@i_988+1,___wmul@multiplier+1
  1024  0007C4  0E00               	movlw	0
  1025  0007C6  6FD8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1026  0007C8  0E05               	movlw	5
  1027  0007CA  6FD7               	movwf	___wmul@multiplicand& (0+255),b
  1028  0007CC  EC65  F018         	call	___wmul	;wreg free
  1029  0007D0  0E5A               	movlw	low (_objs+1)
  1030  0007D2  0100               	movlb	0	; () banked
  1031  0007D4  25D5               	addwf	?___wmul& (0+255),w,b
  1032  0007D6  6ED9               	movwf	fsr2l,c
  1033  0007D8  0E00               	movlw	high (_objs+1)
  1034  0007DA  21D6               	addwfc	(?___wmul+1)& (0+255),w,b
  1035  0007DC  6EDA               	movwf	fsr2h,c
  1036  0007DE  50DF               	movf	indf2,w,c
  1037  0007E0  B4D8               	btfsc	status,2,c
  1038  0007E2  EFF5  F003         	goto	u2811
  1039  0007E6  EFF7  F003         	goto	u2810
  1040  0007EA                     u2811:
  1041  0007EA  EF56  F004         	goto	l2832
  1042  0007EE                     u2810:
  1043  0007EE                     
  1044                           ; BSR set to: 0
  1045                           ;main.c: 298:             display[objs[i].y-1][objs[i].x-1] = &objs[i];
  1046  0007EE  C0ED  F0D5         	movff	UpdateAndPrintDisplay@i_988,___wmul@multiplier
  1047  0007F2  C0EE  F0D6         	movff	UpdateAndPrintDisplay@i_988+1,___wmul@multiplier+1
  1048  0007F6  0E00               	movlw	0
  1049  0007F8  6FD8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1050  0007FA  0E05               	movlw	5
  1051  0007FC  6FD7               	movwf	___wmul@multiplicand& (0+255),b
  1052  0007FE  EC65  F018         	call	___wmul	;wreg free
  1053  000802  0E59               	movlw	low _objs
  1054  000804  0100               	movlb	0	; () banked
  1055  000806  6FDB               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1056  000808  0E00               	movlw	high _objs
  1057  00080A  6FDC               	movwf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1058  00080C  51D5               	movf	?___wmul& (0+255),w,b
  1059  00080E  27DB               	addwf	??_UpdateAndPrintDisplay& (0+255),f,b
  1060  000810  51D6               	movf	(?___wmul+1)& (0+255),w,b
  1061  000812  23DC               	addwfc	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1062  000814  C0ED  F0D5         	movff	UpdateAndPrintDisplay@i_988,___wmul@multiplier
  1063  000818  C0EE  F0D6         	movff	UpdateAndPrintDisplay@i_988+1,___wmul@multiplier+1
  1064  00081C  0E00               	movlw	0
  1065  00081E  6FD8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1066  000820  0E05               	movlw	5
  1067  000822  6FD7               	movwf	___wmul@multiplicand& (0+255),b
  1068  000824  EC65  F018         	call	___wmul	;wreg free
  1069  000828  0E5A               	movlw	low (_objs+1)
  1070  00082A  0100               	movlb	0	; () banked
  1071  00082C  25D5               	addwf	?___wmul& (0+255),w,b
  1072  00082E  6ED9               	movwf	fsr2l,c
  1073  000830  0E00               	movlw	high (_objs+1)
  1074  000832  21D6               	addwfc	(?___wmul+1)& (0+255),w,b
  1075  000834  6EDA               	movwf	fsr2h,c
  1076  000836  50DF               	movf	indf2,w,c
  1077  000838  6FDD               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1078  00083A  6BDE               	clrf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1079  00083C  0E05               	movlw	5
  1080  00083E                     u2825:
  1081  00083E  90D8               	bcf	status,0,c
  1082  000840  37DD               	rlcf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1083  000842  37DE               	rlcf	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1084  000844  2EE8               	decfsz	wreg,f,c
  1085  000846  EF1F  F004         	goto	u2825
  1086  00084A  C0ED  F0D5         	movff	UpdateAndPrintDisplay@i_988,___wmul@multiplier
  1087  00084E  C0EE  F0D6         	movff	UpdateAndPrintDisplay@i_988+1,___wmul@multiplier+1
  1088  000852  0E00               	movlw	0
  1089  000854  6FD8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1090  000856  0E05               	movlw	5
  1091  000858  6FD7               	movwf	___wmul@multiplicand& (0+255),b
  1092  00085A  EC65  F018         	call	___wmul	;wreg free
  1093  00085E  0E59               	movlw	low _objs
  1094  000860  0100               	movlb	0	; () banked
  1095  000862  25D5               	addwf	?___wmul& (0+255),w,b
  1096  000864  6ED9               	movwf	fsr2l,c
  1097  000866  0E00               	movlw	high _objs
  1098  000868  21D6               	addwfc	(?___wmul+1)& (0+255),w,b
  1099  00086A  6EDA               	movwf	fsr2h,c
  1100  00086C  50DF               	movf	indf2,w,c
  1101  00086E  6FDF               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1102  000870  6BE0               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1103  000872  90D8               	bcf	status,0,c
  1104  000874  37DF               	rlcf	(??_UpdateAndPrintDisplay+4)& (0+255),f,b
  1105  000876  37E0               	rlcf	(??_UpdateAndPrintDisplay+5)& (0+255),f,b
  1106  000878  0EDE               	movlw	222
  1107  00087A  6FE1               	movwf	(??_UpdateAndPrintDisplay+6)& (0+255),b
  1108  00087C  0EFF               	movlw	255
  1109  00087E  6FE2               	movwf	(??_UpdateAndPrintDisplay+7)& (0+255),b
  1110  000880  0E00               	movlw	low _display
  1111  000882  6FE3               	movwf	(??_UpdateAndPrintDisplay+8)& (0+255),b
  1112  000884  0E01               	movlw	high _display
  1113  000886  6FE4               	movwf	(??_UpdateAndPrintDisplay+9)& (0+255),b
  1114  000888  51E1               	movf	(??_UpdateAndPrintDisplay+6)& (0+255),w,b
  1115  00088A  27E3               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
  1116  00088C  51E2               	movf	(??_UpdateAndPrintDisplay+7)& (0+255),w,b
  1117  00088E  23E4               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
  1118  000890  51DF               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1119  000892  27E3               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
  1120  000894  51E0               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1121  000896  23E4               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
  1122  000898  51DD               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1123  00089A  25E3               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),w,b
  1124  00089C  6ED9               	movwf	fsr2l,c
  1125  00089E  51DE               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1126  0008A0  21E4               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),w,b
  1127  0008A2  6EDA               	movwf	fsr2h,c
  1128  0008A4  C0DB  FFDE         	movff	??_UpdateAndPrintDisplay,postinc2
  1129  0008A8  C0DC  FFDD         	movff	??_UpdateAndPrintDisplay+1,postdec2
  1130  0008AC                     l2832:
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;main.c: 300:     }
  1134  0008AC  07ED               	decf	UpdateAndPrintDisplay@i_988& (0+255),f,b
  1135  0008AE  A0D8               	btfss	status,0,c
  1136  0008B0  07EE               	decf	(UpdateAndPrintDisplay@i_988+1)& (0+255),f,b
  1137  0008B2                     
  1138                           ; BSR set to: 0
  1139  0008B2  BFEE               	btfsc	(UpdateAndPrintDisplay@i_988+1)& (0+255),7,b
  1140  0008B4  EF60  F004         	goto	u2830
  1141  0008B8  EF5E  F004         	goto	u2831
  1142  0008BC                     u2831:
  1143  0008BC  EFAC  F003         	goto	l2824
  1144  0008C0                     u2830:
  1145  0008C0                     
  1146                           ; BSR set to: 0
  1147                           ;main.c: 302:     for (int i = 0; i < 4; i++) {
  1148  0008C0  0E00               	movlw	0
  1149  0008C2  6FEA               	movwf	(UpdateAndPrintDisplay@i_989+1)& (0+255),b
  1150  0008C4  0E00               	movlw	0
  1151  0008C6  6FE9               	movwf	UpdateAndPrintDisplay@i_989& (0+255),b
  1152  0008C8                     l2842:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 303:         for (int j = 0; j < 16; j++) {
  1156  0008C8  0E00               	movlw	0
  1157  0008CA  6FEC               	movwf	(UpdateAndPrintDisplay@j_990+1)& (0+255),b
  1158  0008CC  0E00               	movlw	0
  1159  0008CE  6FEB               	movwf	UpdateAndPrintDisplay@j_990& (0+255),b
  1160  0008D0                     l2848:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;main.c: 304:             lcd_x = j+1;
  1164  0008D0  29EB               	incf	UpdateAndPrintDisplay@j_990& (0+255),w,b
  1165  0008D2  6F8C               	movwf	_lcd_x& (0+255),b
  1166                           
  1167                           ;main.c: 305:             lcd_y = i+1;
  1168  0008D4  29E9               	incf	UpdateAndPrintDisplay@i_989& (0+255),w,b
  1169  0008D6  6F8B               	movwf	_lcd_y& (0+255),b
  1170  0008D8                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 306:             LCDGoto(lcd_x, lcd_y);
  1173  0008D8  C08B  F0D6         	movff	_lcd_y,LCDGoto@p_1
  1174  0008DC  518C               	movf	_lcd_x& (0+255),w,b
  1175  0008DE  EC25  F017         	call	_LCDGoto
  1176  0008E2                     
  1177                           ;main.c: 308:             if (display[i][j] == ((void*)0)) {
  1178  0008E2  C0E9  F0DB         	movff	UpdateAndPrintDisplay@i_989,??_UpdateAndPrintDisplay
  1179  0008E6  C0EA  F0DC         	movff	UpdateAndPrintDisplay@i_989+1,??_UpdateAndPrintDisplay+1
  1180  0008EA  0E05               	movlw	5
  1181  0008EC                     u2845:
  1182  0008EC  90D8               	bcf	status,0,c
  1183  0008EE  0100               	movlb	0	; () banked
  1184  0008F0  37DB               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1185  0008F2  37DC               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1186  0008F4  2EE8               	decfsz	wreg,f,c
  1187  0008F6  EF76  F004         	goto	u2845
  1188  0008FA  0E00               	movlw	low _display
  1189  0008FC  6FDD               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1190  0008FE  0E01               	movlw	high _display
  1191  000900  6FDE               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1192  000902  51DB               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1193  000904  27DD               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1194  000906  51DC               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1195  000908  23DE               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1196  00090A  90D8               	bcf	status,0,c
  1197  00090C  35EB               	rlcf	UpdateAndPrintDisplay@j_990& (0+255),w,b
  1198  00090E  6ED9               	movwf	fsr2l,c
  1199  000910  35EC               	rlcf	(UpdateAndPrintDisplay@j_990+1)& (0+255),w,b
  1200  000912  6EDA               	movwf	fsr2h,c
  1201  000914  51DD               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1202  000916  26D9               	addwf	fsr2l,f,c
  1203  000918  51DE               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1204  00091A  22DA               	addwfc	fsr2h,f,c
  1205  00091C  50DE               	movf	postinc2,w,c
  1206  00091E  10DE               	iorwf	postinc2,w,c
  1207  000920  A4D8               	btfss	status,2,c
  1208  000922  EF95  F004         	goto	u2851
  1209  000926  EF97  F004         	goto	u2850
  1210  00092A                     u2851:
  1211  00092A  EF3A  F005         	goto	l2882
  1212  00092E                     u2850:
  1213  00092E                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 309:                 LCDDat(' ');
  1216  00092E  0E20               	movlw	32
  1217  000930  EC8C  F018         	call	_LCDDat
  1218                           
  1219                           ;main.c: 310:                 continue;
  1220  000934  EF79  F005         	goto	l2884
  1221  000938                     l2856:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 315:                     LCDDat(6);
  1225  000938  0E06               	movlw	6
  1226  00093A  EC8C  F018         	call	_LCDDat
  1227                           
  1228                           ;main.c: 316:                     break;
  1229  00093E  EF79  F005         	goto	l2884
  1230  000942                     l2858:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;main.c: 318:                     LCDDat(7);
  1234  000942  0E07               	movlw	7
  1235  000944  EC8C  F018         	call	_LCDDat
  1236                           
  1237                           ;main.c: 319:                     break;
  1238  000948  EF79  F005         	goto	l2884
  1239  00094C                     l2860:
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 323:                             LCDDat(0);
  1243  00094C  0E00               	movlw	0
  1244  00094E  EC8C  F018         	call	_LCDDat
  1245                           
  1246                           ;main.c: 324:                             break;
  1247  000952  EF79  F005         	goto	l2884
  1248  000956                     l2862:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;main.c: 326:                             LCDDat(2);
  1252  000956  0E02               	movlw	2
  1253  000958  EC8C  F018         	call	_LCDDat
  1254                           
  1255                           ;main.c: 327:                             break;
  1256  00095C  EF79  F005         	goto	l2884
  1257  000960                     l2864:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;main.c: 329:                             LCDDat(4);
  1261  000960  0E04               	movlw	4
  1262  000962  EC8C  F018         	call	_LCDDat
  1263                           
  1264                           ;main.c: 330:                             break;
  1265  000966  EF79  F005         	goto	l2884
  1266  00096A                     l2868:
  1267                           
  1268                           ; BSR set to: 0
  1269  00096A  C0E9  F0DB         	movff	UpdateAndPrintDisplay@i_989,??_UpdateAndPrintDisplay
  1270  00096E  C0EA  F0DC         	movff	UpdateAndPrintDisplay@i_989+1,??_UpdateAndPrintDisplay+1
  1271  000972  0E05               	movlw	5
  1272  000974                     u2865:
  1273  000974  90D8               	bcf	status,0,c
  1274  000976  37DB               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1275  000978  37DC               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1276  00097A  2EE8               	decfsz	wreg,f,c
  1277  00097C  EFBA  F004         	goto	u2865
  1278  000980  0E00               	movlw	low _display
  1279  000982  6FDD               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1280  000984  0E01               	movlw	high _display
  1281  000986  6FDE               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1282  000988  51DB               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1283  00098A  27DD               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1284  00098C  51DC               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1285  00098E  23DE               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1286  000990  90D8               	bcf	status,0,c
  1287  000992  35EB               	rlcf	UpdateAndPrintDisplay@j_990& (0+255),w,b
  1288  000994  6ED9               	movwf	fsr2l,c
  1289  000996  35EC               	rlcf	(UpdateAndPrintDisplay@j_990+1)& (0+255),w,b
  1290  000998  6EDA               	movwf	fsr2h,c
  1291  00099A  51DD               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1292  00099C  26D9               	addwf	fsr2l,f,c
  1293  00099E  51DE               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1294  0009A0  22DA               	addwfc	fsr2h,f,c
  1295  0009A2  EE10 F004          	lfsr	1,4
  1296  0009A6  50DE               	movf	postinc2,w,c
  1297  0009A8  26E1               	addwf	fsr1l,f,c
  1298  0009AA  50DD               	movf	postdec2,w,c
  1299  0009AC  22E2               	addwfc	fsr1h,f,c
  1300  0009AE  50E7               	movf	indf1,w,c
  1301  0009B0  6FDF               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1302  0009B2  6BE0               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1303                           
  1304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 1, Range of values is 0 to 0
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte            4     3 (average)
  1310                           ;	Chosen strategy is simple_byte
  1311  0009B4  51E0               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1312  0009B6  0A00               	xorlw	0	; case 0
  1313  0009B8  B4D8               	btfsc	status,2,c
  1314  0009BA  EFE1  F004         	goto	l3248
  1315  0009BE  EF79  F005         	goto	l322
  1316  0009C2                     l3248:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 3, Range of values is 0 to 2
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte           10     6 (average)
  1324                           ;	Chosen strategy is simple_byte
  1325  0009C2  51DF               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1326  0009C4  0A00               	xorlw	0	; case 0
  1327  0009C6  B4D8               	btfsc	status,2,c
  1328  0009C8  EFA6  F004         	goto	l2860
  1329  0009CC  0A01               	xorlw	1	; case 1
  1330  0009CE  B4D8               	btfsc	status,2,c
  1331  0009D0  EFAB  F004         	goto	l2862
  1332  0009D4  0A03               	xorlw	3	; case 2
  1333  0009D6  B4D8               	btfsc	status,2,c
  1334  0009D8  EFB0  F004         	goto	l2864
  1335  0009DC  EF79  F005         	goto	l322
  1336  0009E0                     l2870:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;main.c: 339:                             LCDDat(1);
  1340  0009E0  0E01               	movlw	1
  1341  0009E2  EC8C  F018         	call	_LCDDat
  1342                           
  1343                           ;main.c: 340:                             break;
  1344  0009E6  EF79  F005         	goto	l2884
  1345  0009EA                     l2872:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 342:                             LCDDat(3);
  1349  0009EA  0E03               	movlw	3
  1350  0009EC  EC8C  F018         	call	_LCDDat
  1351                           
  1352                           ;main.c: 343:                             break;
  1353  0009F0  EF79  F005         	goto	l2884
  1354  0009F4                     l2874:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;main.c: 345:                             LCDDat(5);
  1358  0009F4  0E05               	movlw	5
  1359  0009F6  EC8C  F018         	call	_LCDDat
  1360                           
  1361                           ;main.c: 346:                             break;
  1362  0009FA  EF79  F005         	goto	l2884
  1363  0009FE                     l2878:
  1364                           
  1365                           ; BSR set to: 0
  1366  0009FE  C0E9  F0DB         	movff	UpdateAndPrintDisplay@i_989,??_UpdateAndPrintDisplay
  1367  000A02  C0EA  F0DC         	movff	UpdateAndPrintDisplay@i_989+1,??_UpdateAndPrintDisplay+1
  1368  000A06  0E05               	movlw	5
  1369  000A08                     u2875:
  1370  000A08  90D8               	bcf	status,0,c
  1371  000A0A  37DB               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1372  000A0C  37DC               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1373  000A0E  2EE8               	decfsz	wreg,f,c
  1374  000A10  EF04  F005         	goto	u2875
  1375  000A14  0E00               	movlw	low _display
  1376  000A16  6FDD               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1377  000A18  0E01               	movlw	high _display
  1378  000A1A  6FDE               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1379  000A1C  51DB               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1380  000A1E  27DD               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1381  000A20  51DC               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1382  000A22  23DE               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1383  000A24  90D8               	bcf	status,0,c
  1384  000A26  35EB               	rlcf	UpdateAndPrintDisplay@j_990& (0+255),w,b
  1385  000A28  6ED9               	movwf	fsr2l,c
  1386  000A2A  35EC               	rlcf	(UpdateAndPrintDisplay@j_990+1)& (0+255),w,b
  1387  000A2C  6EDA               	movwf	fsr2h,c
  1388  000A2E  51DD               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1389  000A30  26D9               	addwf	fsr2l,f,c
  1390  000A32  51DE               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1391  000A34  22DA               	addwfc	fsr2h,f,c
  1392  000A36  EE10 F004          	lfsr	1,4
  1393  000A3A  50DE               	movf	postinc2,w,c
  1394  000A3C  26E1               	addwf	fsr1l,f,c
  1395  000A3E  50DD               	movf	postdec2,w,c
  1396  000A40  22E2               	addwfc	fsr1h,f,c
  1397  000A42  50E7               	movf	indf1,w,c
  1398  000A44  6FDF               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1399  000A46  6BE0               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1400                           
  1401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1402                           ; Switch size 1, requested type "simple"
  1403                           ; Number of cases is 1, Range of values is 0 to 0
  1404                           ; switch strategies available:
  1405                           ; Name         Instructions Cycles
  1406                           ; simple_byte            4     3 (average)
  1407                           ;	Chosen strategy is simple_byte
  1408  000A48  51E0               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1409  000A4A  0A00               	xorlw	0	; case 0
  1410  000A4C  B4D8               	btfsc	status,2,c
  1411  000A4E  EF2B  F005         	goto	l3250
  1412  000A52  EF79  F005         	goto	l322
  1413  000A56                     l3250:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ; Switch size 1, requested type "simple"
  1417                           ; Number of cases is 3, Range of values is 0 to 2
  1418                           ; switch strategies available:
  1419                           ; Name         Instructions Cycles
  1420                           ; simple_byte           10     6 (average)
  1421                           ;	Chosen strategy is simple_byte
  1422  000A56  51DF               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1423  000A58  0A00               	xorlw	0	; case 0
  1424  000A5A  B4D8               	btfsc	status,2,c
  1425  000A5C  EFF0  F004         	goto	l2870
  1426  000A60  0A01               	xorlw	1	; case 1
  1427  000A62  B4D8               	btfsc	status,2,c
  1428  000A64  EFF5  F004         	goto	l2872
  1429  000A68  0A03               	xorlw	3	; case 2
  1430  000A6A  B4D8               	btfsc	status,2,c
  1431  000A6C  EFFA  F004         	goto	l2874
  1432  000A70  EF79  F005         	goto	l322
  1433  000A74                     l2882:
  1434                           
  1435                           ; BSR set to: 0
  1436  000A74  C0E9  F0DB         	movff	UpdateAndPrintDisplay@i_989,??_UpdateAndPrintDisplay
  1437  000A78  C0EA  F0DC         	movff	UpdateAndPrintDisplay@i_989+1,??_UpdateAndPrintDisplay+1
  1438  000A7C  0E05               	movlw	5
  1439  000A7E                     u2885:
  1440  000A7E  90D8               	bcf	status,0,c
  1441  000A80  37DB               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1442  000A82  37DC               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1443  000A84  2EE8               	decfsz	wreg,f,c
  1444  000A86  EF3F  F005         	goto	u2885
  1445  000A8A  0E00               	movlw	low _display
  1446  000A8C  6FDD               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1447  000A8E  0E01               	movlw	high _display
  1448  000A90  6FDE               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1449  000A92  51DB               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1450  000A94  27DD               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1451  000A96  51DC               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1452  000A98  23DE               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1453  000A9A  90D8               	bcf	status,0,c
  1454  000A9C  35EB               	rlcf	UpdateAndPrintDisplay@j_990& (0+255),w,b
  1455  000A9E  6ED9               	movwf	fsr2l,c
  1456  000AA0  35EC               	rlcf	(UpdateAndPrintDisplay@j_990+1)& (0+255),w,b
  1457  000AA2  6EDA               	movwf	fsr2h,c
  1458  000AA4  51DD               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1459  000AA6  26D9               	addwf	fsr2l,f,c
  1460  000AA8  51DE               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1461  000AAA  22DA               	addwfc	fsr2h,f,c
  1462  000AAC  EE10 F003          	lfsr	1,3
  1463  000AB0  50DE               	movf	postinc2,w,c
  1464  000AB2  26E1               	addwf	fsr1l,f,c
  1465  000AB4  50DD               	movf	postdec2,w,c
  1466  000AB6  22E2               	addwfc	fsr1h,f,c
  1467  000AB8  50E7               	movf	indf1,w,c
  1468  000ABA  6FDF               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1469  000ABC  6BE0               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1470                           
  1471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1472                           ; Switch size 1, requested type "simple"
  1473                           ; Number of cases is 1, Range of values is 0 to 0
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; simple_byte            4     3 (average)
  1477                           ;	Chosen strategy is simple_byte
  1478  000ABE  51E0               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1479  000AC0  0A00               	xorlw	0	; case 0
  1480  000AC2  B4D8               	btfsc	status,2,c
  1481  000AC4  EF66  F005         	goto	l3252
  1482  000AC8  EF79  F005         	goto	l2884
  1483  000ACC                     l3252:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 4, Range of values is 0 to 3
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte           13     7 (average)
  1491                           ;	Chosen strategy is simple_byte
  1492  000ACC  51DF               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1493  000ACE  0A00               	xorlw	0	; case 0
  1494  000AD0  B4D8               	btfsc	status,2,c
  1495  000AD2  EFB5  F004         	goto	l2868
  1496  000AD6  0A01               	xorlw	1	; case 1
  1497  000AD8  B4D8               	btfsc	status,2,c
  1498  000ADA  EFFF  F004         	goto	l2878
  1499  000ADE  0A03               	xorlw	3	; case 2
  1500  000AE0  B4D8               	btfsc	status,2,c
  1501  000AE2  EF9C  F004         	goto	l2856
  1502  000AE6  0A01               	xorlw	1	; case 3
  1503  000AE8  B4D8               	btfsc	status,2,c
  1504  000AEA  EFA1  F004         	goto	l2858
  1505  000AEE  EF79  F005         	goto	l2884
  1506  000AF2                     l322:
  1507  000AF2                     l2884:
  1508  000AF2  0100               	movlb	0	; () banked
  1509  000AF4  4BEB               	infsnz	UpdateAndPrintDisplay@j_990& (0+255),f,b
  1510  000AF6  2BEC               	incf	(UpdateAndPrintDisplay@j_990+1)& (0+255),f,b
  1511  000AF8                     
  1512                           ; BSR set to: 0
  1513  000AF8  BFEC               	btfsc	(UpdateAndPrintDisplay@j_990+1)& (0+255),7,b
  1514  000AFA  EF88  F005         	goto	u2891
  1515  000AFE  51EC               	movf	(UpdateAndPrintDisplay@j_990+1)& (0+255),w,b
  1516  000B00  E109               	bnz	u2890
  1517  000B02  0E10               	movlw	16
  1518  000B04  5DEB               	subwf	UpdateAndPrintDisplay@j_990& (0+255),w,b
  1519  000B06  A0D8               	btfss	status,0,c
  1520  000B08  EF88  F005         	goto	u2891
  1521  000B0C  EF8A  F005         	goto	u2890
  1522  000B10                     u2891:
  1523  000B10  EF68  F004         	goto	l2848
  1524  000B14                     u2890:
  1525  000B14                     
  1526                           ; BSR set to: 0
  1527                           ;main.c: 357:     }
  1528  000B14  4BE9               	infsnz	UpdateAndPrintDisplay@i_989& (0+255),f,b
  1529  000B16  2BEA               	incf	(UpdateAndPrintDisplay@i_989+1)& (0+255),f,b
  1530  000B18                     
  1531                           ; BSR set to: 0
  1532  000B18  BFEA               	btfsc	(UpdateAndPrintDisplay@i_989+1)& (0+255),7,b
  1533  000B1A  EF98  F005         	goto	u2901
  1534  000B1E  51EA               	movf	(UpdateAndPrintDisplay@i_989+1)& (0+255),w,b
  1535  000B20  E109               	bnz	u2900
  1536  000B22  0E04               	movlw	4
  1537  000B24  5DE9               	subwf	UpdateAndPrintDisplay@i_989& (0+255),w,b
  1538  000B26  A0D8               	btfss	status,0,c
  1539  000B28  EF98  F005         	goto	u2901
  1540  000B2C  EF9A  F005         	goto	u2900
  1541  000B30                     u2901:
  1542  000B30  EF64  F004         	goto	l2842
  1543  000B34                     u2900:
  1544  000B34                     
  1545                           ; BSR set to: 0
  1546  000B34  0012               	return		;funcret
  1547  000B36                     __end_of_UpdateAndPrintDisplay:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _InitLCD *****************
  1551 ;; Defined at:
  1552 ;;		line 124 in file "./lcd.h"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;Total ram usage:        0 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    7
  1573 ;; This function calls:
  1574 ;;		_LCDCmd
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text2
  1581  003098                     __ptext2:
  1582                           	callstack 0
  1583  003098                     _InitLCD:
  1584                           	callstack 23
  1585  003098                     
  1586                           ;./lcd.h: 125:   TRISEbits.RE1 = 0;
  1587  003098  9296               	bcf	150,1,c	;volatile
  1588                           
  1589                           ;./lcd.h: 126:   TRISEbits.RE2 = 0;
  1590  00309A  9496               	bcf	150,2,c	;volatile
  1591  00309C                     
  1592                           ;./lcd.h: 127:   TRISD = 0;
  1593  00309C  0E00               	movlw	0
  1594  00309E  6E95               	movwf	149,c	;volatile
  1595  0030A0                     
  1596                           ;./lcd.h: 129:   PORTEbits.RE1 = 0;
  1597  0030A0  9284               	bcf	132,1,c	;volatile
  1598  0030A2                     
  1599                           ;./lcd.h: 130:   PORTEbits.RE2 = 0;
  1600  0030A2  9484               	bcf	132,2,c	;volatile
  1601  0030A4                     
  1602                           ;./lcd.h: 131:   LCDCmd(0x38);
  1603  0030A4  0E38               	movlw	56
  1604  0030A6  EC9C  F018         	call	_LCDCmd
  1605  0030AA                     
  1606                           ;./lcd.h: 132:   LCDCmd(0x08);
  1607  0030AA  0E08               	movlw	8
  1608  0030AC  EC9C  F018         	call	_LCDCmd
  1609  0030B0                     
  1610                           ;./lcd.h: 133:   LCDCmd(0x0C);
  1611  0030B0  0E0C               	movlw	12
  1612  0030B2  EC9C  F018         	call	_LCDCmd
  1613  0030B6                     
  1614                           ;./lcd.h: 134:   LCDCmd(0x06);
  1615  0030B6  0E06               	movlw	6
  1616  0030B8  EC9C  F018         	call	_LCDCmd
  1617  0030BC                     
  1618                           ;./lcd.h: 135:   LCDCmd(0x01);
  1619  0030BC  0E01               	movlw	1
  1620  0030BE  EC9C  F018         	call	_LCDCmd
  1621  0030C2                     
  1622                           ;./lcd.h: 136:   LCDCmd(0x80);
  1623  0030C2  0E80               	movlw	128
  1624  0030C4  EC9C  F018         	call	_LCDCmd
  1625  0030C8  0012               	return		;funcret
  1626  0030CA                     __end_of_InitLCD:
  1627                           	callstack 0
  1628                           
  1629 ;; *************** function _InitInterrupts *****************
  1630 ;; Defined at:
  1631 ;;		line 411 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    6
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text3
  1660  002D3A                     __ptext3:
  1661                           	callstack 0
  1662  002D3A                     _InitInterrupts:
  1663                           	callstack 24
  1664  002D3A                     
  1665                           ;main.c: 412:     ADCON1 = 0b00001110;
  1666  002D3A  0E0E               	movlw	14
  1667  002D3C  6EC1               	movwf	193,c	;volatile
  1668  002D3E                     
  1669                           ;main.c: 413:     INTCON2bits.RBPU = 0;
  1670  002D3E  9EF1               	bcf	241,7,c	;volatile
  1671                           
  1672                           ;main.c: 414:     PORTB = 0;
  1673  002D40  0E00               	movlw	0
  1674  002D42  6E81               	movwf	129,c	;volatile
  1675                           
  1676                           ;main.c: 416:     T3CON = 0b10000001;
  1677  002D44  0E81               	movlw	129
  1678  002D46  6EB1               	movwf	177,c	;volatile
  1679  002D48                     
  1680                           ;main.c: 417:     TRISB = 0xff;
  1681  002D48  6893               	setf	147,c	;volatile
  1682                           
  1683                           ;main.c: 418:     TRISA = 0x0;
  1684  002D4A  0E00               	movlw	0
  1685  002D4C  6E92               	movwf	146,c	;volatile
  1686                           
  1687                           ;main.c: 419:     TRISD = 0x0;
  1688  002D4E  0E00               	movlw	0
  1689  002D50  6E95               	movwf	149,c	;volatile
  1690                           
  1691                           ;main.c: 423:     T0CON = 0b00010011;
  1692  002D52  0E13               	movlw	19
  1693  002D54  6ED5               	movwf	213,c	;volatile
  1694                           
  1695                           ;main.c: 424:     acceptInterrupts = 0;
  1696  002D56  0E00               	movlw	0
  1697  002D58  6E58               	movwf	_acceptInterrupts^0,c
  1698                           
  1699                           ;main.c: 425:     TMR0L = 0;
  1700  002D5A  0E00               	movlw	0
  1701  002D5C  6ED6               	movwf	214,c	;volatile
  1702                           
  1703                           ;main.c: 426:     TMR0H = 0x80;
  1704  002D5E  0E80               	movlw	128
  1705  002D60  6ED7               	movwf	215,c	;volatile
  1706  002D62                     
  1707                           ;main.c: 427:     T0CONbits.TMR0ON = 1;
  1708  002D62  8ED5               	bsf	213,7,c	;volatile
  1709  002D64                     
  1710                           ;main.c: 429:     INTCONbits.PEIE = 1;
  1711  002D64  8CF2               	bsf	242,6,c	;volatile
  1712  002D66                     
  1713                           ;main.c: 430:     INTCONbits.INT0E = 1;
  1714  002D66  88F2               	bsf	242,4,c	;volatile
  1715  002D68                     
  1716                           ;main.c: 431:     INTCONbits.RBIE = 1;
  1717  002D68  86F2               	bsf	242,3,c	;volatile
  1718  002D6A                     
  1719                           ;main.c: 432:     INTCONbits.T0IE = 1;
  1720  002D6A  8AF2               	bsf	242,5,c	;volatile
  1721  002D6C                     
  1722                           ;main.c: 433:     INTCON3bits.INT1E = 1;
  1723  002D6C  86F0               	bsf	240,3,c	;volatile
  1724  002D6E                     
  1725                           ;main.c: 435:     INTCON2bits.INTEDG0 = 0;
  1726  002D6E  9CF1               	bcf	241,6,c	;volatile
  1727  002D70                     
  1728                           ;main.c: 436:     INTCON2bits.INTEDG1 = 0;
  1729  002D70  9AF1               	bcf	241,5,c	;volatile
  1730  002D72                     
  1731                           ;main.c: 439:     INTCONbits.RBIF = 0;
  1732  002D72  90F2               	bcf	242,0,c	;volatile
  1733  002D74                     
  1734                           ;main.c: 440:     INTCONbits.INT0IF = 0;
  1735  002D74  92F2               	bcf	242,1,c	;volatile
  1736  002D76                     
  1737                           ;main.c: 441:     INTCON3bits.INT1IF = 0;
  1738  002D76  90F0               	bcf	240,0,c	;volatile
  1739  002D78                     
  1740                           ;main.c: 443:     INTCONbits.RBIE = 0;
  1741  002D78  96F2               	bcf	242,3,c	;volatile
  1742  002D7A                     
  1743                           ;main.c: 444:     INTCONbits.GIE = 1;
  1744  002D7A  8EF2               	bsf	242,7,c	;volatile
  1745  002D7C                     
  1746                           ;main.c: 445:     PORTB = PORTB;
  1747  002D7C  CF81 FF81          	movff	3969,3969	;volatile
  1748  002D80                     
  1749                           ;main.c: 446:     INTCONbits.RBIF = 0;
  1750  002D80  90F2               	bcf	242,0,c	;volatile
  1751  002D82                     
  1752                           ;main.c: 447:     INTCONbits.RBIE = 1;
  1753  002D82  86F2               	bsf	242,3,c	;volatile
  1754  002D84                     
  1755                           ;main.c: 450:     RCONbits.IPEN = 1;
  1756  002D84  8ED0               	bsf	208,7,c	;volatile
  1757  002D86                     
  1758                           ;main.c: 451:     INTCON2bits.RBIP = 1;
  1759  002D86  80F1               	bsf	241,0,c	;volatile
  1760  002D88                     
  1761                           ;main.c: 452:     INTCON2bits.TMR0IP = 1;
  1762  002D88  84F1               	bsf	241,2,c	;volatile
  1763  002D8A                     
  1764                           ;main.c: 453:     INTCON3bits.INT1IP = 1;
  1765  002D8A  8CF0               	bsf	240,6,c	;volatile
  1766  002D8C                     
  1767                           ;main.c: 454:     IPR1bits.TMR1IP = 1;
  1768  002D8C  809F               	bsf	159,0,c	;volatile
  1769  002D8E                     
  1770                           ;main.c: 455:     IPR1bits.ADIP = 1;
  1771  002D8E  8C9F               	bsf	159,6,c	;volatile
  1772  002D90                     
  1773                           ;main.c: 456:     IPR1bits.TMR2IP = 0;
  1774  002D90  929F               	bcf	159,1,c	;volatile
  1775  002D92                     
  1776                           ;main.c: 458:     PIE1bits.TMR1IE = 1;
  1777  002D92  809D               	bsf	157,0,c	;volatile
  1778  002D94                     
  1779                           ;main.c: 459:     PIR1bits.TMR1IF = 0;
  1780  002D94  909E               	bcf	158,0,c	;volatile
  1781  002D96                     
  1782                           ;main.c: 460:     IPR1bits.TMR1IP = 1;
  1783  002D96  809F               	bsf	159,0,c	;volatile
  1784                           
  1785                           ;main.c: 461:     TMR1L = 0xED;
  1786  002D98  0EED               	movlw	237
  1787  002D9A  6ECE               	movwf	206,c	;volatile
  1788                           
  1789                           ;main.c: 462:     TMR1H = 0x85;
  1790  002D9C  0E85               	movlw	133
  1791  002D9E  6ECF               	movwf	207,c	;volatile
  1792                           
  1793                           ;main.c: 463:     T1CON = 0b10110001;
  1794  002DA0  0EB1               	movlw	177
  1795  002DA2  6ECD               	movwf	205,c	;volatile
  1796  002DA4                     
  1797                           ;main.c: 465:     PIE1bits.TMR2IE = 1;
  1798  002DA4  829D               	bsf	157,1,c	;volatile
  1799  002DA6                     
  1800                           ;main.c: 466:     PIR1bits.TMR2IF = 0;
  1801  002DA6  929E               	bcf	158,1,c	;volatile
  1802                           
  1803                           ;main.c: 467:     T2CON = 0b01111111;
  1804  002DA8  0E7F               	movlw	127
  1805  002DAA  6ECA               	movwf	202,c	;volatile
  1806                           
  1807                           ;main.c: 469:     ADCON0 = 0b00000001;
  1808  002DAC  0E01               	movlw	1
  1809  002DAE  6EC2               	movwf	194,c	;volatile
  1810                           
  1811                           ;main.c: 470:     ADCON2bits.ADCS = 0b010;
  1812  002DB0  50C0               	movf	192,w,c	;volatile
  1813  002DB2  0BF8               	andlw	-8
  1814  002DB4  0902               	iorlw	2
  1815  002DB6  6EC0               	movwf	192,c	;volatile
  1816                           
  1817                           ;main.c: 471:     ADCON2bits.ACQT = 0b010;
  1818  002DB8  50C0               	movf	192,w,c	;volatile
  1819  002DBA  0BC7               	andlw	-57
  1820  002DBC  0910               	iorlw	16
  1821  002DBE  6EC0               	movwf	192,c	;volatile
  1822  002DC0                     
  1823                           ;main.c: 472:     ADCON2bits.ADFM = 1;
  1824  002DC0  8EC0               	bsf	192,7,c	;volatile
  1825  002DC2                     
  1826                           ;main.c: 474:     TRISAbits.RA0 = 1;
  1827  002DC2  8092               	bsf	146,0,c	;volatile
  1828  002DC4                     
  1829                           ;main.c: 476:     PIE1bits.ADIE = 1;
  1830  002DC4  8C9D               	bsf	157,6,c	;volatile
  1831  002DC6  0012               	return		;funcret
  1832  002DC8                     __end_of_InitInterrupts:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _InitGameObjects *****************
  1836 ;; Defined at:
  1837 ;;		line 361 in file "main.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  j               2   28[BANK0 ] int 
  1842 ;;  i               2   30[BANK0 ] int 
  1843 ;;  i               2   26[BANK0 ] int 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;Total ram usage:       18 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    7
  1860 ;; This function calls:
  1861 ;;		___wmul
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text4
  1868  002854                     __ptext4:
  1869                           	callstack 0
  1870  002854                     _InitGameObjects:
  1871                           	callstack 23
  1872  002854                     
  1873                           ;main.c: 362:     for (int i = 0; i < 4; i++) {
  1874  002854  0E00               	movlw	0
  1875  002856  0100               	movlb	0	; () banked
  1876  002858  6FE8               	movwf	(InitGameObjects@i+1)& (0+255),b
  1877  00285A  0E00               	movlw	0
  1878  00285C  6FE7               	movwf	InitGameObjects@i& (0+255),b
  1879  00285E                     l2768:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 363:         for (int j = 0; j < 16; j++) {
  1883  00285E  0E00               	movlw	0
  1884  002860  6FEA               	movwf	(InitGameObjects@j+1)& (0+255),b
  1885  002862  0E00               	movlw	0
  1886  002864  6FE9               	movwf	InitGameObjects@j& (0+255),b
  1887  002866                     l2774:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;main.c: 364:             display[i][j] = ((void*)0);
  1891  002866  C0E7  F0DB         	movff	InitGameObjects@i,??_InitGameObjects
  1892  00286A  C0E8  F0DC         	movff	InitGameObjects@i+1,??_InitGameObjects+1
  1893  00286E  0E05               	movlw	5
  1894  002870                     u2725:
  1895  002870  90D8               	bcf	status,0,c
  1896  002872  37DB               	rlcf	??_InitGameObjects& (0+255),f,b
  1897  002874  37DC               	rlcf	(??_InitGameObjects+1)& (0+255),f,b
  1898  002876  2EE8               	decfsz	wreg,f,c
  1899  002878  EF38  F014         	goto	u2725
  1900  00287C  0E00               	movlw	low _display
  1901  00287E  6FDD               	movwf	(??_InitGameObjects+2)& (0+255),b
  1902  002880  0E01               	movlw	high _display
  1903  002882  6FDE               	movwf	(??_InitGameObjects+3)& (0+255),b
  1904  002884  51DB               	movf	??_InitGameObjects& (0+255),w,b
  1905  002886  27DD               	addwf	(??_InitGameObjects+2)& (0+255),f,b
  1906  002888  51DC               	movf	(??_InitGameObjects+1)& (0+255),w,b
  1907  00288A  23DE               	addwfc	(??_InitGameObjects+3)& (0+255),f,b
  1908  00288C  90D8               	bcf	status,0,c
  1909  00288E  35E9               	rlcf	InitGameObjects@j& (0+255),w,b
  1910  002890  6ED9               	movwf	fsr2l,c
  1911  002892  35EA               	rlcf	(InitGameObjects@j+1)& (0+255),w,b
  1912  002894  6EDA               	movwf	fsr2h,c
  1913  002896  51DD               	movf	(??_InitGameObjects+2)& (0+255),w,b
  1914  002898  26D9               	addwf	fsr2l,f,c
  1915  00289A  51DE               	movf	(??_InitGameObjects+3)& (0+255),w,b
  1916  00289C  22DA               	addwfc	fsr2h,f,c
  1917  00289E  0E00               	movlw	0
  1918  0028A0  6EDE               	movwf	postinc2,c
  1919  0028A2  0E00               	movlw	0
  1920  0028A4  6EDD               	movwf	postdec2,c
  1921  0028A6                     
  1922                           ; BSR set to: 0
  1923                           ;main.c: 365:         }
  1924  0028A6  4BE9               	infsnz	InitGameObjects@j& (0+255),f,b
  1925  0028A8  2BEA               	incf	(InitGameObjects@j+1)& (0+255),f,b
  1926  0028AA                     
  1927                           ; BSR set to: 0
  1928  0028AA  BFEA               	btfsc	(InitGameObjects@j+1)& (0+255),7,b
  1929  0028AC  EF61  F014         	goto	u2731
  1930  0028B0  51EA               	movf	(InitGameObjects@j+1)& (0+255),w,b
  1931  0028B2  E109               	bnz	u2730
  1932  0028B4  0E10               	movlw	16
  1933  0028B6  5DE9               	subwf	InitGameObjects@j& (0+255),w,b
  1934  0028B8  A0D8               	btfss	status,0,c
  1935  0028BA  EF61  F014         	goto	u2731
  1936  0028BE  EF63  F014         	goto	u2730
  1937  0028C2                     u2731:
  1938  0028C2  EF33  F014         	goto	l2774
  1939  0028C6                     u2730:
  1940  0028C6                     
  1941                           ; BSR set to: 0
  1942                           ;main.c: 366:     }
  1943  0028C6  4BE7               	infsnz	InitGameObjects@i& (0+255),f,b
  1944  0028C8  2BE8               	incf	(InitGameObjects@i+1)& (0+255),f,b
  1945  0028CA                     
  1946                           ; BSR set to: 0
  1947  0028CA  BFE8               	btfsc	(InitGameObjects@i+1)& (0+255),7,b
  1948  0028CC  EF71  F014         	goto	u2741
  1949  0028D0  51E8               	movf	(InitGameObjects@i+1)& (0+255),w,b
  1950  0028D2  E109               	bnz	u2740
  1951  0028D4  0E04               	movlw	4
  1952  0028D6  5DE7               	subwf	InitGameObjects@i& (0+255),w,b
  1953  0028D8  A0D8               	btfss	status,0,c
  1954  0028DA  EF71  F014         	goto	u2741
  1955  0028DE  EF73  F014         	goto	u2740
  1956  0028E2                     u2741:
  1957  0028E2  EF2F  F014         	goto	l2768
  1958  0028E6                     u2740:
  1959  0028E6                     
  1960                           ; BSR set to: 0
  1961                           ;main.c: 368:     selectedPlayer = 0;
  1962  0028E6  0E00               	movlw	0
  1963  0028E8  6E56               	movwf	(_selectedPlayer+1)^0,c
  1964  0028EA  0E00               	movlw	0
  1965  0028EC  6E55               	movwf	_selectedPlayer^0,c
  1966                           
  1967                           ;main.c: 370:     objs[0].x = 3;
  1968  0028EE  0E03               	movlw	3
  1969  0028F0  6E59               	movwf	_objs^0,c
  1970                           
  1971                           ;main.c: 371:     objs[0].y = 2;
  1972  0028F2  0E02               	movlw	2
  1973  0028F4  6E5A               	movwf	(_objs+1)^0,c
  1974                           
  1975                           ;main.c: 372:     objs[0].type = OT_PLAYERA;
  1976  0028F6  0E00               	movlw	0
  1977  0028F8  6E5C               	movwf	(_objs+3)^0,c
  1978                           
  1979                           ;main.c: 373:     objs[0].state = OS_SELECTED;
  1980  0028FA  0E01               	movlw	1
  1981  0028FC  6E5D               	movwf	(_objs+4)^0,c
  1982                           
  1983                           ;main.c: 374:     objs[0].active = 1;
  1984  0028FE  0E01               	movlw	1
  1985  002900  6E5B               	movwf	(_objs+2)^0,c
  1986                           
  1987                           ;main.c: 376:     objs[1].x = 3;
  1988  002902  0E03               	movlw	3
  1989  002904  6E5E               	movwf	(_objs+5)^0,c
  1990                           
  1991                           ;main.c: 377:     objs[1].y = 3;
  1992  002906  0E03               	movlw	3
  1993  002908  6E5F               	movwf	(_objs+6)^0,c
  1994                           
  1995                           ;main.c: 378:     objs[1].type = OT_PLAYERA;
  1996  00290A  0E00               	movlw	0
  1997  00290C  6E61               	movwf	(_objs+8)^0,c
  1998                           
  1999                           ;main.c: 379:     objs[1].state = OS_DEFAULT;
  2000  00290E  0E00               	movlw	0
  2001  002910  6E62               	movwf	(_objs+9)^0,c
  2002                           
  2003                           ;main.c: 380:     objs[1].active = 1;
  2004  002912  0E01               	movlw	1
  2005  002914  6E60               	movwf	(_objs+7)^0,c
  2006                           
  2007                           ;main.c: 382:     objs[2].x = 14;
  2008  002916  0E0E               	movlw	14
  2009  002918  6E63               	movwf	(_objs+10)^0,c
  2010                           
  2011                           ;main.c: 383:     objs[2].y = 2;
  2012  00291A  0E02               	movlw	2
  2013  00291C  6E64               	movwf	(_objs+11)^0,c
  2014                           
  2015                           ;main.c: 384:     objs[2].type = OT_PLAYERB;
  2016  00291E  0E01               	movlw	1
  2017  002920  6E66               	movwf	(_objs+13)^0,c
  2018                           
  2019                           ;main.c: 385:     objs[2].state = OS_DEFAULT;
  2020  002922  0E00               	movlw	0
  2021  002924  6E67               	movwf	(_objs+14)^0,c
  2022                           
  2023                           ;main.c: 386:     objs[2].active = 1;
  2024  002926  0E01               	movlw	1
  2025  002928  6E65               	movwf	(_objs+12)^0,c
  2026                           
  2027                           ;main.c: 388:     objs[3].x = 14;
  2028  00292A  0E0E               	movlw	14
  2029  00292C  6E68               	movwf	(_objs+15)^0,c
  2030                           
  2031                           ;main.c: 389:     objs[3].y = 3;
  2032  00292E  0E03               	movlw	3
  2033  002930  6E69               	movwf	(_objs+16)^0,c
  2034                           
  2035                           ;main.c: 390:     objs[3].type = OT_PLAYERB;
  2036  002932  0E01               	movlw	1
  2037  002934  6E6B               	movwf	(_objs+18)^0,c
  2038                           
  2039                           ;main.c: 391:     objs[3].state = OS_DEFAULT;
  2040  002936  0E00               	movlw	0
  2041  002938  6E6C               	movwf	(_objs+19)^0,c
  2042                           
  2043                           ;main.c: 392:     objs[3].active = 1;
  2044  00293A  0E01               	movlw	1
  2045  00293C  6E6A               	movwf	(_objs+17)^0,c
  2046                           
  2047                           ;main.c: 394:     objs[5].x = 9;
  2048  00293E  0E09               	movlw	9
  2049  002940  6E72               	movwf	(_objs+25)^0,c
  2050                           
  2051                           ;main.c: 395:     objs[5].y = 2;
  2052  002942  0E02               	movlw	2
  2053  002944  6E73               	movwf	(_objs+26)^0,c
  2054                           
  2055                           ;main.c: 396:     objs[5].type = OT_FRISBEE;
  2056  002946  0E02               	movlw	2
  2057  002948  6E75               	movwf	(_objs+28)^0,c
  2058                           
  2059                           ;main.c: 397:     objs[5].state = OS_FELL;
  2060  00294A  0E04               	movlw	4
  2061  00294C  6E76               	movwf	(_objs+29)^0,c
  2062                           
  2063                           ;main.c: 398:     objs[5].active = 1;
  2064  00294E  0E01               	movlw	1
  2065  002950  6E74               	movwf	(_objs+27)^0,c
  2066                           
  2067                           ;main.c: 400:     objs[4].x = 1;
  2068  002952  0E01               	movlw	1
  2069  002954  6E6D               	movwf	(_objs+20)^0,c
  2070                           
  2071                           ;main.c: 401:     objs[4].y = 1;
  2072  002956  0E01               	movlw	1
  2073  002958  6E6E               	movwf	(_objs+21)^0,c
  2074                           
  2075                           ;main.c: 402:     objs[4].type = OT_TARGET;
  2076  00295A  0E03               	movlw	3
  2077  00295C  6E70               	movwf	(_objs+23)^0,c
  2078                           
  2079                           ;main.c: 403:     objs[4].active = 0;
  2080  00295E  0E00               	movlw	0
  2081  002960  6E6F               	movwf	(_objs+22)^0,c
  2082                           
  2083                           ;main.c: 405:     for (int i = 0; i < 6; i++) {
  2084  002962  0E00               	movlw	0
  2085  002964  6FEC               	movwf	(InitGameObjects@i_999+1)& (0+255),b
  2086  002966  0E00               	movlw	0
  2087  002968  6FEB               	movwf	InitGameObjects@i_999& (0+255),b
  2088  00296A                     l2790:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;main.c: 406:         display[objs[i].y][objs[i].x] = &objs[i];
  2092  00296A  C0EB  F0D5         	movff	InitGameObjects@i_999,___wmul@multiplier
  2093  00296E  C0EC  F0D6         	movff	InitGameObjects@i_999+1,___wmul@multiplier+1
  2094  002972  0E00               	movlw	0
  2095  002974  6FD8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2096  002976  0E05               	movlw	5
  2097  002978  6FD7               	movwf	___wmul@multiplicand& (0+255),b
  2098  00297A  EC65  F018         	call	___wmul	;wreg free
  2099  00297E  0E59               	movlw	low _objs
  2100  002980  0100               	movlb	0	; () banked
  2101  002982  6FDB               	movwf	??_InitGameObjects& (0+255),b
  2102  002984  0E00               	movlw	high _objs
  2103  002986  6FDC               	movwf	(??_InitGameObjects+1)& (0+255),b
  2104  002988  51D5               	movf	?___wmul& (0+255),w,b
  2105  00298A  27DB               	addwf	??_InitGameObjects& (0+255),f,b
  2106  00298C  51D6               	movf	(?___wmul+1)& (0+255),w,b
  2107  00298E  23DC               	addwfc	(??_InitGameObjects+1)& (0+255),f,b
  2108  002990  0E05               	movlw	5
  2109  002992  03EB               	mulwf	InitGameObjects@i_999& (0+255),b
  2110  002994  CFF3 F0DD          	movff	prodl,??_InitGameObjects+2
  2111  002998  CFF4 F0DE          	movff	prodh,??_InitGameObjects+3
  2112  00299C  03EC               	mulwf	(InitGameObjects@i_999+1)& (0+255),b
  2113  00299E  50F3               	movf	prodl,w,c
  2114  0029A0  27DE               	addwf	(??_InitGameObjects+3)& (0+255),f,b
  2115  0029A2  0E59               	movlw	low _objs
  2116  0029A4  25DD               	addwf	(??_InitGameObjects+2)& (0+255),w,b
  2117  0029A6  6ED9               	movwf	fsr2l,c
  2118  0029A8  0E00               	movlw	high _objs
  2119  0029AA  21DE               	addwfc	(??_InitGameObjects+3)& (0+255),w,b
  2120  0029AC  6EDA               	movwf	fsr2h,c
  2121  0029AE  50DF               	movf	indf2,w,c
  2122  0029B0  6FDF               	movwf	(??_InitGameObjects+4)& (0+255),b
  2123  0029B2  51DF               	movf	(??_InitGameObjects+4)& (0+255),w,b
  2124  0029B4  0D02               	mullw	2
  2125  0029B6  CFF3 F0E0          	movff	prodl,??_InitGameObjects+5
  2126  0029BA  CFF4 F0E1          	movff	prodh,??_InitGameObjects+6
  2127  0029BE  0E05               	movlw	5
  2128  0029C0  03EB               	mulwf	InitGameObjects@i_999& (0+255),b
  2129  0029C2  CFF3 F0E2          	movff	prodl,??_InitGameObjects+7
  2130  0029C6  CFF4 F0E3          	movff	prodh,??_InitGameObjects+8
  2131  0029CA  03EC               	mulwf	(InitGameObjects@i_999+1)& (0+255),b
  2132  0029CC  50F3               	movf	prodl,w,c
  2133  0029CE  27E3               	addwf	(??_InitGameObjects+8)& (0+255),f,b
  2134  0029D0  0E5A               	movlw	low (_objs+1)
  2135  0029D2  25E2               	addwf	(??_InitGameObjects+7)& (0+255),w,b
  2136  0029D4  6ED9               	movwf	fsr2l,c
  2137  0029D6  0E00               	movlw	high (_objs+1)
  2138  0029D8  21E3               	addwfc	(??_InitGameObjects+8)& (0+255),w,b
  2139  0029DA  6EDA               	movwf	fsr2h,c
  2140  0029DC  50DF               	movf	indf2,w,c
  2141  0029DE  6FE4               	movwf	(??_InitGameObjects+9)& (0+255),b
  2142  0029E0  51E4               	movf	(??_InitGameObjects+9)& (0+255),w,b
  2143  0029E2  0D20               	mullw	32
  2144  0029E4  0E00               	movlw	low _display
  2145  0029E6  6FE5               	movwf	(??_InitGameObjects+10)& (0+255),b
  2146  0029E8  0E01               	movlw	high _display
  2147  0029EA  6FE6               	movwf	(??_InitGameObjects+11)& (0+255),b
  2148  0029EC  50F3               	movf	243,w,c
  2149  0029EE  27E5               	addwf	(??_InitGameObjects+10)& (0+255),f,b
  2150  0029F0  50F4               	movf	244,w,c
  2151  0029F2  23E6               	addwfc	(??_InitGameObjects+11)& (0+255),f,b
  2152  0029F4  51E0               	movf	(??_InitGameObjects+5)& (0+255),w,b
  2153  0029F6  25E5               	addwf	(??_InitGameObjects+10)& (0+255),w,b
  2154  0029F8  6ED9               	movwf	fsr2l,c
  2155  0029FA  51E1               	movf	(??_InitGameObjects+6)& (0+255),w,b
  2156  0029FC  21E6               	addwfc	(??_InitGameObjects+11)& (0+255),w,b
  2157  0029FE  6EDA               	movwf	fsr2h,c
  2158  002A00  C0DB  FFDE         	movff	??_InitGameObjects,postinc2
  2159  002A04  C0DC  FFDD         	movff	??_InitGameObjects+1,postdec2
  2160  002A08                     
  2161                           ; BSR set to: 0
  2162                           ;main.c: 407:     }
  2163  002A08  4BEB               	infsnz	InitGameObjects@i_999& (0+255),f,b
  2164  002A0A  2BEC               	incf	(InitGameObjects@i_999+1)& (0+255),f,b
  2165  002A0C                     
  2166                           ; BSR set to: 0
  2167  002A0C  BFEC               	btfsc	(InitGameObjects@i_999+1)& (0+255),7,b
  2168  002A0E  EF12  F015         	goto	u2751
  2169  002A12  51EC               	movf	(InitGameObjects@i_999+1)& (0+255),w,b
  2170  002A14  E109               	bnz	u2750
  2171  002A16  0E06               	movlw	6
  2172  002A18  5DEB               	subwf	InitGameObjects@i_999& (0+255),w,b
  2173  002A1A  A0D8               	btfss	status,0,c
  2174  002A1C  EF12  F015         	goto	u2751
  2175  002A20  EF14  F015         	goto	u2750
  2176  002A24                     u2751:
  2177  002A24  EFB5  F014         	goto	l2790
  2178  002A28                     u2750:
  2179  002A28                     
  2180                           ; BSR set to: 0
  2181  002A28  0012               	return		;funcret
  2182  002A2A                     __end_of_InitGameObjects:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function ___wmul *****************
  2186 ;; Defined at:
  2187 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  multiplier      2    8[BANK0 ] unsigned int 
  2190 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  product         2   12[BANK0 ] unsigned int 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2    8[BANK0 ] unsigned int 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, prodl, prodh
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;Total ram usage:        6 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    6
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_UpdateAndPrintDisplay
  2213 ;;		_InitGameObjects
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text5
  2218  0030CA                     __ptext5:
  2219                           	callstack 0
  2220  0030CA                     ___wmul:
  2221                           	callstack 23
  2222  0030CA  0100               	movlb	0	; () banked
  2223  0030CC  51D5               	movf	___wmul@multiplier& (0+255),w,b
  2224  0030CE  03D7               	mulwf	___wmul@multiplicand& (0+255),b
  2225  0030D0  CFF3 F0D9          	movff	prodl,___wmul@product
  2226  0030D4  CFF4 F0DA          	movff	prodh,___wmul@product+1
  2227  0030D8  51D5               	movf	___wmul@multiplier& (0+255),w,b
  2228  0030DA  03D8               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2229  0030DC  50F3               	movf	243,w,c
  2230  0030DE  27DA               	addwf	(___wmul@product+1)& (0+255),f,b
  2231  0030E0  51D6               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2232  0030E2  03D7               	mulwf	___wmul@multiplicand& (0+255),b
  2233  0030E4  50F3               	movf	243,w,c
  2234  0030E6  27DA               	addwf	(___wmul@product+1)& (0+255),f,b
  2235  0030E8                     
  2236                           ; BSR set to: 0
  2237  0030E8  C0D9  F0D5         	movff	___wmul@product,?___wmul
  2238  0030EC  C0DA  F0D6         	movff	___wmul@product+1,?___wmul+1
  2239  0030F0                     
  2240                           ; BSR set to: 0
  2241  0030F0  0012               	return		;funcret
  2242  0030F2                     __end_of___wmul:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _AddCustomCharacters *****************
  2246 ;; Defined at:
  2247 ;;		line 161 in file "./lcd.h"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    9
  2268 ;; This function calls:
  2269 ;;		_LCDAddSpecialCharacter
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text6
  2276  002DC8                     __ptext6:
  2277                           	callstack 0
  2278  002DC8                     _AddCustomCharacters:
  2279                           	callstack 21
  2280  002DC8                     
  2281                           ;./lcd.h: 162:     LCDAddSpecialCharacter(0, teamA_player);
  2282  002DC8  0EC5               	movlw	low _teamA_player
  2283  002DCA  0100               	movlb	0	; () banked
  2284  002DCC  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2285  002DCE  0E00               	movlw	high _teamA_player
  2286  002DD0  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2287  002DD2  0E00               	movlw	0
  2288  002DD4  EC27  F018         	call	_LCDAddSpecialCharacter
  2289                           
  2290                           ;./lcd.h: 163:     LCDAddSpecialCharacter(1, teamB_player);
  2291  002DD8  0EBD               	movlw	low _teamB_player
  2292  002DDA  0100               	movlb	0	; () banked
  2293  002DDC  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2294  002DDE  0E00               	movlw	high _teamB_player
  2295  002DE0  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2296  002DE2  0E01               	movlw	1
  2297  002DE4  EC27  F018         	call	_LCDAddSpecialCharacter
  2298                           
  2299                           ;./lcd.h: 164:     LCDAddSpecialCharacter(2, selected_teamA_player);
  2300  002DE8  0EB5               	movlw	low _selected_teamA_player
  2301  002DEA  0100               	movlb	0	; () banked
  2302  002DEC  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2303  002DEE  0E00               	movlw	high _selected_teamA_player
  2304  002DF0  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2305  002DF2  0E02               	movlw	2
  2306  002DF4  EC27  F018         	call	_LCDAddSpecialCharacter
  2307                           
  2308                           ;./lcd.h: 165:     LCDAddSpecialCharacter(3, selected_teamB_player);
  2309  002DF8  0EAD               	movlw	low _selected_teamB_player
  2310  002DFA  0100               	movlb	0	; () banked
  2311  002DFC  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2312  002DFE  0E00               	movlw	high _selected_teamB_player
  2313  002E00  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2314  002E02  0E03               	movlw	3
  2315  002E04  EC27  F018         	call	_LCDAddSpecialCharacter
  2316                           
  2317                           ;./lcd.h: 166:     LCDAddSpecialCharacter(4, selected_teamA_player_with_frisbee);
  2318  002E08  0EA5               	movlw	low _selected_teamA_player_with_frisbee
  2319  002E0A  0100               	movlb	0	; () banked
  2320  002E0C  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2321  002E0E  0E00               	movlw	high _selected_teamA_player_with_frisbee
  2322  002E10  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2323  002E12  0E04               	movlw	4
  2324  002E14  EC27  F018         	call	_LCDAddSpecialCharacter
  2325                           
  2326                           ;./lcd.h: 167:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
  2327  002E18  0E9D               	movlw	low _selected_teamB_player_with_frisbee
  2328  002E1A  0100               	movlb	0	; () banked
  2329  002E1C  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2330  002E1E  0E00               	movlw	high _selected_teamB_player_with_frisbee
  2331  002E20  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2332  002E22  0E05               	movlw	5
  2333  002E24  EC27  F018         	call	_LCDAddSpecialCharacter
  2334                           
  2335                           ;./lcd.h: 168:     LCDAddSpecialCharacter(6, frisbeeChar);
  2336  002E28  0E95               	movlw	low _frisbeeChar
  2337  002E2A  0100               	movlb	0	; () banked
  2338  002E2C  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2339  002E2E  0E00               	movlw	high _frisbeeChar
  2340  002E30  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2341  002E32  0E06               	movlw	6
  2342  002E34  EC27  F018         	call	_LCDAddSpecialCharacter
  2343                           
  2344                           ;./lcd.h: 169:     LCDAddSpecialCharacter(7, frisbee_target);
  2345  002E38  0E8D               	movlw	low _frisbee_target
  2346  002E3A  0100               	movlb	0	; () banked
  2347  002E3C  6FD8               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2348  002E3E  0E00               	movlw	high _frisbee_target
  2349  002E40  6FD9               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2350  002E42  0E07               	movlw	7
  2351  002E44  EC27  F018         	call	_LCDAddSpecialCharacter
  2352  002E48  0012               	return		;funcret
  2353  002E4A                     __end_of_AddCustomCharacters:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _LCDAddSpecialCharacter *****************
  2357 ;; Defined at:
  2358 ;;		line 145 in file "./lcd.h"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  character_in    1    wreg     unsigned char 
  2361 ;;  data            2   11[BANK0 ] PTR unsigned char 
  2362 ;;		 -> frisbee_target(8), frisbeeChar(8), selected_teamB_player_with_frisbee(8), selected_teamA_player_with_frisbee(8),
      + 
  2363 ;;		 -> selected_teamB_player(8), selected_teamA_player(8), teamB_player(8), teamA_player(8), 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  character_in    1   13[BANK0 ] unsigned char 
  2366 ;;  i               1   14[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;Total ram usage:        4 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    8
  2383 ;; This function calls:
  2384 ;;		_LCDCmd
  2385 ;;		_LCDDat
  2386 ;;		_LCDGoto
  2387 ;; This function is called by:
  2388 ;;		_AddCustomCharacters
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text7
  2393  00304E                     __ptext7:
  2394                           	callstack 0
  2395  00304E                     _LCDAddSpecialCharacter:
  2396                           	callstack 21
  2397                           
  2398                           ;incstack = 0
  2399                           ;LCDAddSpecialCharacter@character_index stored from wreg
  2400  00304E  0100               	movlb	0	; () banked
  2401  003050  6FDA               	movwf	LCDAddSpecialCharacter@character_index& (0+255),b
  2402  003052                     
  2403                           ;./lcd.h: 151:     LCDCmd(0b01000000+(character_index*8));
  2404  003052  0100               	movlb	0	; () banked
  2405  003054  51DA               	movf	LCDAddSpecialCharacter@character_index& (0+255),w,b
  2406  003056  0D08               	mullw	8
  2407  003058  50F3               	movf	243,w,c
  2408  00305A  0F40               	addlw	64
  2409  00305C  EC9C  F018         	call	_LCDCmd
  2410  003060                     
  2411                           ;./lcd.h: 152:     for(byte i=0; i < 8; i++) {
  2412  003060  0E00               	movlw	0
  2413  003062  0100               	movlb	0	; () banked
  2414  003064  6FDB               	movwf	LCDAddSpecialCharacter@i& (0+255),b
  2415  003066                     l2268:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;./lcd.h: 153:         LCDDat(data[i]);
  2419  003066  51DB               	movf	LCDAddSpecialCharacter@i& (0+255),w,b
  2420  003068  25D8               	addwf	LCDAddSpecialCharacter@data& (0+255),w,b
  2421  00306A  6ED9               	movwf	fsr2l,c
  2422  00306C  0E00               	movlw	0
  2423  00306E  21D9               	addwfc	(LCDAddSpecialCharacter@data+1)& (0+255),w,b
  2424  003070  6EDA               	movwf	fsr2h,c
  2425  003072  50DF               	movf	indf2,w,c
  2426  003074  EC8C  F018         	call	_LCDDat
  2427  003078                     
  2428                           ;./lcd.h: 154:     }
  2429  003078  0100               	movlb	0	; () banked
  2430  00307A  2BDB               	incf	LCDAddSpecialCharacter@i& (0+255),f,b
  2431  00307C                     
  2432                           ; BSR set to: 0
  2433  00307C  0E07               	movlw	7
  2434  00307E  65DB               	cpfsgt	LCDAddSpecialCharacter@i& (0+255),b
  2435  003080  EF44  F018         	goto	u1721
  2436  003084  EF46  F018         	goto	u1720
  2437  003088                     u1721:
  2438  003088  EF33  F018         	goto	l2268
  2439  00308C                     u1720:
  2440  00308C                     
  2441                           ; BSR set to: 0
  2442                           ;./lcd.h: 156:     LCDGoto(lcd_x, lcd_y);
  2443  00308C  C08B  F0D6         	movff	_lcd_y,LCDGoto@p_1
  2444  003090  518C               	movf	_lcd_x& (0+255),w,b
  2445  003092  EC25  F017         	call	_LCDGoto
  2446  003096  0012               	return		;funcret
  2447  003098                     __end_of_LCDAddSpecialCharacter:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _LCDGoto *****************
  2451 ;; Defined at:
  2452 ;;		line 88 in file "./lcd.h"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  p_2             1    wreg     unsigned char 
  2455 ;;  p_1             1    9[BANK0 ] unsigned char 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  p_2             1   10[BANK0 ] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2467 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;Total ram usage:        2 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    7
  2474 ;; This function calls:
  2475 ;;		_LCDCmd
  2476 ;; This function is called by:
  2477 ;;		_LCDAddSpecialCharacter
  2478 ;;		_UpdateAndPrintDisplay
  2479 ;;		_LCDStr
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text8
  2484  002E4A                     __ptext8:
  2485                           	callstack 0
  2486  002E4A                     _LCDGoto:
  2487                           	callstack 22
  2488                           
  2489                           ;incstack = 0
  2490                           ;LCDGoto@p_2 stored from wreg
  2491  002E4A  0100               	movlb	0	; () banked
  2492  002E4C  6FD7               	movwf	LCDGoto@p_2& (0+255),b
  2493  002E4E                     
  2494                           ;./lcd.h: 89:   if(p_1==1) {
  2495  002E4E  0100               	movlb	0	; () banked
  2496  002E50  05D6               	decf	LCDGoto@p_1& (0+255),w,b
  2497  002E52  A4D8               	btfss	status,2,c
  2498  002E54  EF2E  F017         	goto	u1591
  2499  002E58  EF30  F017         	goto	u1590
  2500  002E5C                     u1591:
  2501  002E5C  EF37  F017         	goto	l2172
  2502  002E60                     u1590:
  2503  002E60                     
  2504                           ; BSR set to: 0
  2505                           ;./lcd.h: 90:     LCDCmd(0x80 +((p_2-1)%16));
  2506  002E60  05D7               	decf	LCDGoto@p_2& (0+255),w,b
  2507  002E62  0B0F               	andlw	15
  2508  002E64  0F80               	addlw	128
  2509  002E66  EC9C  F018         	call	_LCDCmd
  2510                           
  2511                           ;./lcd.h: 91:   }
  2512  002E6A  EF5C  F017         	goto	l2182
  2513  002E6E                     l2172:
  2514                           
  2515                           ; BSR set to: 0
  2516  002E6E  0E02               	movlw	2
  2517  002E70  19D6               	xorwf	LCDGoto@p_1& (0+255),w,b
  2518  002E72  A4D8               	btfss	status,2,c
  2519  002E74  EF3E  F017         	goto	u1601
  2520  002E78  EF40  F017         	goto	u1600
  2521  002E7C                     u1601:
  2522  002E7C  EF47  F017         	goto	l2176
  2523  002E80                     u1600:
  2524  002E80                     
  2525                           ; BSR set to: 0
  2526                           ;./lcd.h: 93:     LCDCmd(0xC0 +((p_2-1)%16));
  2527  002E80  05D7               	decf	LCDGoto@p_2& (0+255),w,b
  2528  002E82  0B0F               	andlw	15
  2529  002E84  0FC0               	addlw	192
  2530  002E86  EC9C  F018         	call	_LCDCmd
  2531                           
  2532                           ;./lcd.h: 94:   }
  2533  002E8A  EF5C  F017         	goto	l2182
  2534  002E8E                     l2176:
  2535                           
  2536                           ; BSR set to: 0
  2537  002E8E  0E03               	movlw	3
  2538  002E90  19D6               	xorwf	LCDGoto@p_1& (0+255),w,b
  2539  002E92  A4D8               	btfss	status,2,c
  2540  002E94  EF4E  F017         	goto	u1611
  2541  002E98  EF50  F017         	goto	u1610
  2542  002E9C                     u1611:
  2543  002E9C  EF57  F017         	goto	l2180
  2544  002EA0                     u1610:
  2545  002EA0                     
  2546                           ; BSR set to: 0
  2547                           ;./lcd.h: 96:     LCDCmd(0x90 +((p_2-1)%16));
  2548  002EA0  05D7               	decf	LCDGoto@p_2& (0+255),w,b
  2549  002EA2  0B0F               	andlw	15
  2550  002EA4  0F90               	addlw	144
  2551  002EA6  EC9C  F018         	call	_LCDCmd
  2552                           
  2553                           ;./lcd.h: 97:   }
  2554  002EAA  EF5C  F017         	goto	l2182
  2555  002EAE                     l2180:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;./lcd.h: 99:     LCDCmd(0xD0 +((p_2-1)%16));
  2559  002EAE  05D7               	decf	LCDGoto@p_2& (0+255),w,b
  2560  002EB0  0B0F               	andlw	15
  2561  002EB2  0FD0               	addlw	208
  2562  002EB4  EC9C  F018         	call	_LCDCmd
  2563  002EB8                     l2182:
  2564                           
  2565                           ;./lcd.h: 101:   lcd_x = p_2;
  2566  002EB8  C0D7  F08C         	movff	LCDGoto@p_2,_lcd_x
  2567  002EBC                     
  2568                           ;./lcd.h: 102:   lcd_y = p_1;
  2569  002EBC  C0D6  F08B         	movff	LCDGoto@p_1,_lcd_y
  2570  002EC0  0012               	return		;funcret
  2571  002EC2                     __end_of_LCDGoto:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _LCDCmd *****************
  2575 ;; Defined at:
  2576 ;;		line 64 in file "./lcd.h"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  cmd             1    wreg     unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  cmd             1    8[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;Total ram usage:        1 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    6
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_LCDGoto
  2601 ;;		_InitLCD
  2602 ;;		_LCDAddSpecialCharacter
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text9
  2607  003138                     __ptext9:
  2608                           	callstack 0
  2609  003138                     _LCDCmd:
  2610                           	callstack 22
  2611                           
  2612                           ;incstack = 0
  2613                           ;LCDCmd@cmd stored from wreg
  2614  003138  0100               	movlb	0	; () banked
  2615  00313A  6FD5               	movwf	LCDCmd@cmd& (0+255),b
  2616  00313C                     
  2617                           ;./lcd.h: 65:   PORTEbits.RE1 = 0;
  2618  00313C  9284               	bcf	132,1,c	;volatile
  2619                           
  2620                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  2621  00313E  9484               	bcf	132,2,c	;volatile
  2622  003140                     
  2623                           ;./lcd.h: 67:   PORTD = cmd;
  2624  003140  C0D5  FF83         	movff	LCDCmd@cmd,3971	;volatile
  2625  003144                     
  2626                           ;./lcd.h: 68:   PORTEbits.RE1 = 1;
  2627  003144  8284               	bsf	132,1,c	;volatile
  2628  003146                     
  2629                           ;./lcd.h: 69:   _delay((unsigned long)((300)*(10000000L/4000000.0)));
  2630  003146  0EFA               	movlw	250
  2631  003148                     u3177:
  2632  003148  2EE8               	decfsz	wreg,f,c
  2633  00314A  D7FE               	bra	u3177
  2634  00314C                     
  2635                           ;./lcd.h: 70:   PORTEbits.RE1 = 0;
  2636  00314C  9284               	bcf	132,1,c	;volatile
  2637  00314E                     
  2638                           ;./lcd.h: 71:   _delay((unsigned long)((300)*(10000000L/4000000.0)));
  2639  00314E  0EFA               	movlw	250
  2640  003150                     u3187:
  2641  003150  2EE8               	decfsz	wreg,f,c
  2642  003152  D7FE               	bra	u3187
  2643  003154  0012               	return		;funcret
  2644  003156                     __end_of_LCDCmd:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _LCDDat *****************
  2648 ;; Defined at:
  2649 ;;		line 74 in file "./lcd.h"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  dat             1    wreg     unsigned char 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  dat             1    8[BANK0 ] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;Total ram usage:        1 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    6
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_LCDAddSpecialCharacter
  2674 ;;		_UpdateAndPrintDisplay
  2675 ;;		_LCDStr
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text10
  2680  003118                     __ptext10:
  2681                           	callstack 0
  2682  003118                     _LCDDat:
  2683                           	callstack 23
  2684                           
  2685                           ;incstack = 0
  2686                           ;LCDDat@dat stored from wreg
  2687  003118  0100               	movlb	0	; () banked
  2688  00311A  6FD5               	movwf	LCDDat@dat& (0+255),b
  2689  00311C                     
  2690                           ;./lcd.h: 75:   PORTEbits.RE1 = 0;
  2691  00311C  9284               	bcf	132,1,c	;volatile
  2692                           
  2693                           ;./lcd.h: 76:   PORTEbits.RE2 = 1;
  2694  00311E  8484               	bsf	132,2,c	;volatile
  2695  003120                     
  2696                           ;./lcd.h: 77:   PORTD = dat;
  2697  003120  C0D5  FF83         	movff	LCDDat@dat,3971	;volatile
  2698  003124                     
  2699                           ;./lcd.h: 78:   PORTEbits.RE1 = 1;
  2700  003124  8284               	bsf	132,1,c	;volatile
  2701  003126                     
  2702                           ;./lcd.h: 79:   _delay((unsigned long)((300)*(10000000L/4000000.0)));
  2703  003126  0EFA               	movlw	250
  2704  003128                     u3197:
  2705  003128  2EE8               	decfsz	wreg,f,c
  2706  00312A  D7FE               	bra	u3197
  2707  00312C                     
  2708                           ;./lcd.h: 80:   PORTEbits.RE1 = 0;
  2709  00312C  9284               	bcf	132,1,c	;volatile
  2710  00312E                     
  2711                           ;./lcd.h: 81:   _delay((unsigned long)((300)*(10000000L/4000000.0)));
  2712  00312E  0EFA               	movlw	250
  2713  003130                     u3207:
  2714  003130  2EE8               	decfsz	wreg,f,c
  2715  003132  D7FE               	bra	u3207
  2716  003134                     
  2717                           ;./lcd.h: 82:   PORTEbits.RE2 = 0;
  2718  003134  9484               	bcf	132,2,c	;volatile
  2719  003136  0012               	return		;funcret
  2720  003138                     __end_of_LCDDat:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _lowIsr *****************
  2724 ;; Defined at:
  2725 ;;		line 206 in file "main.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  temp_a          1    7[BANK0 ] unsigned char 
  2730 ;;  temp_d          1    6[BANK0 ] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;Total ram usage:        8 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    5
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		Interrupt level 1
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	intcodelo
  2755  000018                     __pintcodelo:
  2756                           	callstack 0
  2757  000018                     _lowIsr:
  2758                           	callstack 21
  2759                           
  2760                           ;incstack = 0
  2761  000018  807C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2762  00001A  CFD8 F0CE          	movff	status,??_lowIsr+1
  2763  00001E  CFE8 F0CF          	movff	wreg,??_lowIsr+2
  2764  000022  CFE0 F0D0          	movff	bsr,??_lowIsr+3
  2765  000026  CFD9 F0D1          	movff	fsr2l,??_lowIsr+4
  2766  00002A  CFDA F0D2          	movff	fsr2h,??_lowIsr+5
  2767  00002E                     
  2768                           ;main.c: 207:     PIR1bits.TMR2IF = 0;
  2769  00002E  929E               	bcf	158,1,c	;volatile
  2770                           
  2771                           ;main.c: 208:     PIE1bits.TMR2IE = 0;
  2772  000030  929D               	bcf	157,1,c	;volatile
  2773                           
  2774                           ;main.c: 210:     byte temp_d = PORTD;
  2775  000032  CF83 F0D3          	movff	3971,lowIsr@temp_d	;volatile
  2776                           
  2777                           ;main.c: 211:     byte temp_a = PORTA;
  2778  000036  CF80 F0D4          	movff	3968,lowIsr@temp_a	;volatile
  2779  00003A                     
  2780                           ;main.c: 213:     LATA = 0b1000;
  2781  00003A  0E08               	movlw	8
  2782  00003C  6E89               	movwf	137,c	;volatile
  2783  00003E                     
  2784                           ;main.c: 214:     LATD = segValues[scoreA];
  2785  00003E  0E80               	movlw	low _segValues
  2786  000040  0100               	movlb	0	; () banked
  2787  000042  25F1               	addwf	_scoreA& (0+255),w,b
  2788  000044  6ED9               	movwf	fsr2l,c
  2789  000046  0E00               	movlw	high _segValues
  2790  000048  21F2               	addwfc	(_scoreA+1)& (0+255),w,b
  2791  00004A  6EDA               	movwf	fsr2h,c
  2792  00004C  50DF               	movf	indf2,w,c
  2793  00004E  6E8C               	movwf	140,c	;volatile
  2794  000050                     
  2795                           ; BSR set to: 0
  2796                           ;main.c: 215:     _delay((unsigned long)((3500)*(10000000L/4000000.0)));
  2797  000050  0E0C               	movlw	12
  2798  000052  0100               	movlb	0	; () banked
  2799  000054  6FCD               	movwf	??_lowIsr& (0+255),b
  2800  000056  0E5B               	movlw	91
  2801  000058                     i1u321_27:
  2802  000058  2EE8               	decfsz	wreg,f,c
  2803  00005A  D7FE               	bra	i1u321_27
  2804  00005C  2FCD               	decfsz	??_lowIsr& (0+255),f,b
  2805  00005E  D7FC               	bra	i1u321_27
  2806  000060  D000               	nop2	
  2807  000062                     
  2808                           ;main.c: 217:     LATA = 0b10000;
  2809  000062  0E10               	movlw	16
  2810  000064  6E89               	movwf	137,c	;volatile
  2811  000066                     
  2812                           ;main.c: 218:     LATD = segValues[10];
  2813  000066  C08A  FF8C         	movff	_segValues+10,3980	;volatile
  2814  00006A                     
  2815                           ;main.c: 219:     _delay((unsigned long)((3500)*(10000000L/4000000.0)));
  2816  00006A  0E0C               	movlw	12
  2817  00006C  0100               	movlb	0	; () banked
  2818  00006E  6FCD               	movwf	??_lowIsr& (0+255),b
  2819  000070  0E5B               	movlw	91
  2820  000072                     i1u322_27:
  2821  000072  2EE8               	decfsz	wreg,f,c
  2822  000074  D7FE               	bra	i1u322_27
  2823  000076  2FCD               	decfsz	??_lowIsr& (0+255),f,b
  2824  000078  D7FC               	bra	i1u322_27
  2825  00007A  D000               	nop2	
  2826  00007C                     
  2827                           ;main.c: 221:     LATA = 0b100000;
  2828  00007C  0E20               	movlw	32
  2829  00007E  6E89               	movwf	137,c	;volatile
  2830  000080                     
  2831                           ;main.c: 222:     LATD = segValues[scoreB];
  2832  000080  0E80               	movlw	low _segValues
  2833  000082  0100               	movlb	0	; () banked
  2834  000084  25EF               	addwf	_scoreB& (0+255),w,b
  2835  000086  6ED9               	movwf	fsr2l,c
  2836  000088  0E00               	movlw	high _segValues
  2837  00008A  21F0               	addwfc	(_scoreB+1)& (0+255),w,b
  2838  00008C  6EDA               	movwf	fsr2h,c
  2839  00008E  50DF               	movf	indf2,w,c
  2840  000090  6E8C               	movwf	140,c	;volatile
  2841  000092                     
  2842                           ; BSR set to: 0
  2843                           ;main.c: 223:     _delay((unsigned long)((3500)*(10000000L/4000000.0)));
  2844  000092  0E0C               	movlw	12
  2845  000094  0100               	movlb	0	; () banked
  2846  000096  6FCD               	movwf	??_lowIsr& (0+255),b
  2847  000098  0E5B               	movlw	91
  2848  00009A                     i1u323_27:
  2849  00009A  2EE8               	decfsz	wreg,f,c
  2850  00009C  D7FE               	bra	i1u323_27
  2851  00009E  2FCD               	decfsz	??_lowIsr& (0+255),f,b
  2852  0000A0  D7FC               	bra	i1u323_27
  2853  0000A2  D000               	nop2	
  2854  0000A4                     
  2855                           ;main.c: 226:     LATA = temp_a;
  2856  0000A4  C0D4  FF89         	movff	lowIsr@temp_a,3977	;volatile
  2857  0000A8                     
  2858                           ;main.c: 227:     LATD = temp_d;
  2859  0000A8  C0D3  FF8C         	movff	lowIsr@temp_d,3980	;volatile
  2860  0000AC                     
  2861                           ;main.c: 229:     PIE1bits.TMR2IE = 1;
  2862  0000AC  829D               	bsf	157,1,c	;volatile
  2863  0000AE                     
  2864                           ;main.c: 231:     ADCON0bits.GO = 1;
  2865  0000AE  82C2               	bsf	194,1,c	;volatile
  2866  0000B0  C0D2  FFDA         	movff	??_lowIsr+5,fsr2h
  2867  0000B4  C0D1  FFD9         	movff	??_lowIsr+4,fsr2l
  2868  0000B8  C0D0  FFE0         	movff	??_lowIsr+3,bsr
  2869  0000BC  C0CF  FFE8         	movff	??_lowIsr+2,wreg
  2870  0000C0  C0CE  FFD8         	movff	??_lowIsr+1,status
  2871  0000C4  907C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2872  0000C6  0010               	retfie	
  2873  0000C8                     __end_of_lowIsr:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _highIsr *****************
  2877 ;; Defined at:
  2878 ;;		line 49 in file "main.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:       22 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    4
  2899 ;; This function calls:
  2900 ;;		_CheckIfCaughtFrisbee
  2901 ;;		_MoveEveryone
  2902 ;;		_SetupDebouncingTimer
  2903 ;;		_compute_frisbee_target_and_route
  2904 ;;		_down
  2905 ;;		_left
  2906 ;;		_right
  2907 ;;		_up
  2908 ;;		i2___wmul
  2909 ;; This function is called by:
  2910 ;;		Interrupt level 2
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	intcode
  2915  000008                     __pintcode:
  2916                           	callstack 0
  2917  000008                     _highIsr:
  2918                           	callstack 21
  2919                           
  2920                           ;incstack = 0
  2921  000008  827C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2922  00000A  ED66  F000         	call	int_func,f	;refresh shadow registers
  2923                           
  2924                           	psect	intcode_body
  2925  0000CC                     __pintcode_body:
  2926                           	callstack 21
  2927  0000CC                     int_func:
  2928                           	callstack 21
  2929  0000CC  0006               	pop		; remove dummy address from shadow register refresh
  2930  0000CE  CFE1 F03D          	movff	fsr1l,??_highIsr+8
  2931  0000D2  CFE2 F03E          	movff	fsr1h,??_highIsr+9
  2932  0000D6  CFD9 F03F          	movff	fsr2l,??_highIsr+10
  2933  0000DA  CFDA F040          	movff	fsr2h,??_highIsr+11
  2934  0000DE  CFF3 F041          	movff	prodl,??_highIsr+12
  2935  0000E2  CFF4 F042          	movff	prodh,??_highIsr+13
  2936  0000E6                     
  2937                           ;main.c: 50:     portbVals = PORTB;
  2938  0000E6  CF81 F057          	movff	3969,_portbVals	;volatile
  2939                           
  2940                           ;main.c: 52:     if (INTCONbits.TMR0IF) {
  2941  0000EA  A4F2               	btfss	242,2,c	;volatile
  2942  0000EC  EF7A  F000         	goto	i2u294_41
  2943  0000F0  EF7C  F000         	goto	i2u294_40
  2944  0000F4                     i2u294_41:
  2945  0000F4  EF80  F000         	goto	i2l2934
  2946  0000F8                     i2u294_40:
  2947  0000F8                     
  2948                           ;main.c: 53:         acceptInterrupts = 1;
  2949  0000F8  0E01               	movlw	1
  2950  0000FA  6E58               	movwf	_acceptInterrupts^0,c
  2951  0000FC                     
  2952                           ;main.c: 54:         T0CONbits.TMR0ON = 0;
  2953  0000FC  9ED5               	bcf	213,7,c	;volatile
  2954  0000FE                     
  2955                           ;main.c: 55:         INTCONbits.TMR0IF = 0;
  2956  0000FE  94F2               	bcf	242,2,c	;volatile
  2957  000100                     i2l2934:
  2958                           
  2959                           ;main.c: 58:     if (PIR1bits.ADIF) {
  2960  000100  AC9E               	btfss	158,6,c	;volatile
  2961  000102  EF85  F000         	goto	i2u295_41
  2962  000106  EF87  F000         	goto	i2u295_40
  2963  00010A                     i2u295_41:
  2964  00010A  EFBF  F000         	goto	i2l239
  2965  00010E                     i2u295_40:
  2966  00010E                     
  2967                           ;main.c: 60:         PIR1bits.ADIF = 0;
  2968  00010E  9C9E               	bcf	158,6,c	;volatile
  2969                           
  2970                           ;main.c: 61:         switch(ADRESH) {
  2971  000110  EFA2  F000         	goto	i2l2948
  2972  000114                     i2l2938:
  2973                           
  2974                           ;main.c: 63:                 nextGameSpeed = 4;
  2975  000114  0E00               	movlw	0
  2976  000116  6E78               	movwf	(_nextGameSpeed+1)^0,c
  2977  000118  0E04               	movlw	4
  2978  00011A  6E77               	movwf	_nextGameSpeed^0,c
  2979                           
  2980                           ;main.c: 64:                 break;
  2981  00011C  EFBF  F000         	goto	i2l239
  2982  000120                     i2l2940:
  2983                           
  2984                           ;main.c: 66:                 nextGameSpeed = 8;
  2985  000120  0E00               	movlw	0
  2986  000122  6E78               	movwf	(_nextGameSpeed+1)^0,c
  2987  000124  0E08               	movlw	8
  2988  000126  6E77               	movwf	_nextGameSpeed^0,c
  2989                           
  2990                           ;main.c: 67:                 break;
  2991  000128  EFBF  F000         	goto	i2l239
  2992  00012C                     i2l2942:
  2993                           
  2994                           ;main.c: 69:                 nextGameSpeed = 12;
  2995  00012C  0E00               	movlw	0
  2996  00012E  6E78               	movwf	(_nextGameSpeed+1)^0,c
  2997  000130  0E0C               	movlw	12
  2998  000132  6E77               	movwf	_nextGameSpeed^0,c
  2999                           
  3000                           ;main.c: 70:                 break;
  3001  000134  EFBF  F000         	goto	i2l239
  3002  000138                     i2l2944:
  3003                           
  3004                           ;main.c: 72:                 nextGameSpeed = 16;
  3005  000138  0E00               	movlw	0
  3006  00013A  6E78               	movwf	(_nextGameSpeed+1)^0,c
  3007  00013C  0E10               	movlw	16
  3008  00013E  6E77               	movwf	_nextGameSpeed^0,c
  3009                           
  3010                           ;main.c: 73:                 break;
  3011  000140  EFBF  F000         	goto	i2l239
  3012  000144                     i2l2948:
  3013  000144  50C4               	movf	196,w,c	;volatile
  3014  000146  6E35               	movwf	??_highIsr^0,c
  3015  000148  6A36               	clrf	(??_highIsr+1)^0,c
  3016                           
  3017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3018                           ; Switch size 1, requested type "simple"
  3019                           ; Number of cases is 1, Range of values is 0 to 0
  3020                           ; switch strategies available:
  3021                           ; Name         Instructions Cycles
  3022                           ; simple_byte            4     3 (average)
  3023                           ;	Chosen strategy is simple_byte
  3024  00014A  5036               	movf	(??_highIsr+1)^0,w,c
  3025  00014C  0A00               	xorlw	0	; case 0
  3026  00014E  B4D8               	btfsc	status,2,c
  3027  000150  EFAC  F000         	goto	i2l3254
  3028  000154  EFBF  F000         	goto	i2l239
  3029  000158                     i2l3254:
  3030                           
  3031                           ; Switch size 1, requested type "simple"
  3032                           ; Number of cases is 4, Range of values is 0 to 3
  3033                           ; switch strategies available:
  3034                           ; Name         Instructions Cycles
  3035                           ; simple_byte           13     7 (average)
  3036                           ;	Chosen strategy is simple_byte
  3037  000158  5035               	movf	??_highIsr^0,w,c
  3038  00015A  0A00               	xorlw	0	; case 0
  3039  00015C  B4D8               	btfsc	status,2,c
  3040  00015E  EF8A  F000         	goto	i2l2938
  3041  000162  0A01               	xorlw	1	; case 1
  3042  000164  B4D8               	btfsc	status,2,c
  3043  000166  EF90  F000         	goto	i2l2940
  3044  00016A  0A03               	xorlw	3	; case 2
  3045  00016C  B4D8               	btfsc	status,2,c
  3046  00016E  EF96  F000         	goto	i2l2942
  3047  000172  0A01               	xorlw	1	; case 3
  3048  000174  B4D8               	btfsc	status,2,c
  3049  000176  EF9C  F000         	goto	i2l2944
  3050  00017A  EFBF  F000         	goto	i2l239
  3051  00017E                     i2l239:
  3052                           
  3053                           ;main.c: 80:     if (PIR1bits.TMR1IF) {
  3054  00017E  A09E               	btfss	158,0,c	;volatile
  3055  000180  EFC4  F000         	goto	i2u296_41
  3056  000184  EFC6  F000         	goto	i2u296_40
  3057  000188                     i2u296_41:
  3058  000188  EFA5  F001         	goto	i2l2998
  3059  00018C                     i2u296_40:
  3060  00018C                     
  3061                           ;main.c: 81:         PIR1bits.TMR1IF = 0;
  3062  00018C  909E               	bcf	158,0,c	;volatile
  3063                           
  3064                           ;main.c: 82:         T1CONbits.TMR1ON = 0;
  3065  00018E  90CD               	bcf	205,0,c	;volatile
  3066  000190                     
  3067                           ;main.c: 83:         TMR1L = 0xED;
  3068  000190  0EED               	movlw	237
  3069  000192  6ECE               	movwf	206,c	;volatile
  3070                           
  3071                           ;main.c: 84:         TMR1H = 0x85;
  3072  000194  0E85               	movlw	133
  3073  000196  6ECF               	movwf	207,c	;volatile
  3074  000198                     
  3075                           ;main.c: 85:         T1CONbits.TMR1ON = 1;
  3076  000198  80CD               	bsf	205,0,c	;volatile
  3077  00019A                     
  3078                           ;main.c: 89:         pulseCounter++;
  3079  00019A  4A4F               	infsnz	_pulseCounter^0,f,c
  3080  00019C  2A50               	incf	(_pulseCounter+1)^0,f,c
  3081  00019E                     
  3082                           ;main.c: 91:         if (objs[5].state == OS_FLYING && pulseCounter % 2 == 0 && game_sta
      +                          te == GS_ACTIVE) {
  3083  00019E  0E03               	movlw	3
  3084  0001A0  1876               	xorwf	(_objs+29)^0,w,c
  3085  0001A2  A4D8               	btfss	status,2,c
  3086  0001A4  EFD6  F000         	goto	i2u297_41
  3087  0001A8  EFD8  F000         	goto	i2u297_40
  3088  0001AC                     i2u297_41:
  3089  0001AC  EFF2  F000         	goto	i2l248
  3090  0001B0                     i2u297_40:
  3091  0001B0  B04F               	btfsc	_pulseCounter^0,0,c
  3092  0001B2  EFDD  F000         	goto	i2u298_41
  3093  0001B6  EFDF  F000         	goto	i2u298_40
  3094  0001BA                     i2u298_41:
  3095  0001BA  EFF2  F000         	goto	i2l248
  3096  0001BE                     i2u298_40:
  3097  0001BE  507B               	movf	_game_state^0,w,c
  3098  0001C0  A4D8               	btfss	status,2,c
  3099  0001C2  EFE5  F000         	goto	i2u299_41
  3100  0001C6  EFE7  F000         	goto	i2u299_40
  3101  0001CA                     i2u299_41:
  3102  0001CA  EFF2  F000         	goto	i2l248
  3103  0001CE                     i2u299_40:
  3104  0001CE                     
  3105                           ;main.c: 92:             objs[4].active = ~objs[4].active;
  3106  0001CE  046F               	decf	(_objs+22)^0,w,c
  3107  0001D0  A4D8               	btfss	status,2,c
  3108  0001D2  EFED  F000         	goto	i2u300_41
  3109  0001D6  EFF0  F000         	goto	i2u300_40
  3110  0001DA                     i2u300_41:
  3111  0001DA  0E01               	movlw	1
  3112  0001DC  EFF1  F000         	goto	i2u301_40
  3113  0001E0                     i2u300_40:
  3114  0001E0  0E00               	movlw	0
  3115  0001E2                     i2u301_40:
  3116  0001E2  6E6F               	movwf	(_objs+22)^0,c
  3117  0001E4                     i2l248:
  3118                           
  3119                           ;main.c: 95:         if (pulseCounter == gameSpeed) {
  3120  0001E4  5079               	movf	_gameSpeed^0,w,c
  3121  0001E6  184F               	xorwf	_pulseCounter^0,w,c
  3122  0001E8  E107               	bnz	i2u302_41
  3123  0001EA  507A               	movf	(_gameSpeed+1)^0,w,c
  3124  0001EC  1850               	xorwf	(_pulseCounter+1)^0,w,c
  3125  0001EE  A4D8               	btfss	status,2,c
  3126  0001F0  EFFC  F000         	goto	i2u302_41
  3127  0001F4  EFFE  F000         	goto	i2u302_40
  3128  0001F8                     i2u302_41:
  3129  0001F8  EFA5  F001         	goto	i2l2998
  3130  0001FC                     i2u302_40:
  3131  0001FC                     
  3132                           ;main.c: 96:             pulseCounter = 0;
  3133  0001FC  0E00               	movlw	0
  3134  0001FE  6E50               	movwf	(_pulseCounter+1)^0,c
  3135  000200  0E00               	movlw	0
  3136  000202  6E4F               	movwf	_pulseCounter^0,c
  3137  000204                     
  3138                           ;main.c: 97:             if (objs[5].state == OS_FLYING && game_state == GS_ACTIVE) {
  3139  000204  0E03               	movlw	3
  3140  000206  1876               	xorwf	(_objs+29)^0,w,c
  3141  000208  A4D8               	btfss	status,2,c
  3142  00020A  EF09  F001         	goto	i2u303_41
  3143  00020E  EF0B  F001         	goto	i2u303_40
  3144  000212                     i2u303_41:
  3145  000212  EFA5  F001         	goto	i2l2998
  3146  000216                     i2u303_40:
  3147  000216  507B               	movf	_game_state^0,w,c
  3148  000218  A4D8               	btfss	status,2,c
  3149  00021A  EF11  F001         	goto	i2u304_41
  3150  00021E  EF13  F001         	goto	i2u304_40
  3151  000222                     i2u304_41:
  3152  000222  EFA5  F001         	goto	i2l2998
  3153  000226                     i2u304_40:
  3154  000226                     
  3155                           ;main.c: 99:                 MoveEveryone();
  3156  000226  EC09  F013         	call	_MoveEveryone	;wreg free
  3157  00022A                     
  3158                           ;main.c: 101:                 curFrisbeeSteps++;
  3159  00022A  4A4B               	infsnz	_curFrisbeeSteps^0,f,c
  3160  00022C  2A4C               	incf	(_curFrisbeeSteps+1)^0,f,c
  3161  00022E                     
  3162                           ;main.c: 103:                 objs[5].x = frisbee_steps[curFrisbeeSteps][0];
  3163  00022E  0E80               	movlw	low _frisbee_steps
  3164  000230  6E35               	movwf	??_highIsr^0,c
  3165  000232  0E01               	movlw	high _frisbee_steps
  3166  000234  6E36               	movwf	(??_highIsr+1)^0,c
  3167  000236  90D8               	bcf	status,0,c
  3168  000238  344B               	rlcf	_curFrisbeeSteps^0,w,c
  3169  00023A  6ED9               	movwf	fsr2l,c
  3170  00023C  344C               	rlcf	(_curFrisbeeSteps+1)^0,w,c
  3171  00023E  6EDA               	movwf	fsr2h,c
  3172  000240  90D8               	bcf	status,0,c
  3173  000242  36D9               	rlcf	fsr2l,f,c
  3174  000244  36DA               	rlcf	fsr2h,f,c
  3175  000246  5035               	movf	??_highIsr^0,w,c
  3176  000248  26D9               	addwf	fsr2l,f,c
  3177  00024A  5036               	movf	(??_highIsr+1)^0,w,c
  3178  00024C  22DA               	addwfc	fsr2h,f,c
  3179  00024E  50DF               	movf	indf2,w,c
  3180  000250  6E72               	movwf	(_objs+25)^0,c
  3181  000252                     
  3182                           ;main.c: 104:                 objs[5].y = frisbee_steps[curFrisbeeSteps][1];
  3183  000252  0E80               	movlw	low _frisbee_steps
  3184  000254  6E35               	movwf	??_highIsr^0,c
  3185  000256  0E01               	movlw	high _frisbee_steps
  3186  000258  6E36               	movwf	(??_highIsr+1)^0,c
  3187  00025A  0E02               	movlw	2
  3188  00025C  2635               	addwf	??_highIsr^0,f,c
  3189  00025E  0E00               	movlw	0
  3190  000260  2236               	addwfc	(??_highIsr+1)^0,f,c
  3191  000262  90D8               	bcf	status,0,c
  3192  000264  344B               	rlcf	_curFrisbeeSteps^0,w,c
  3193  000266  6ED9               	movwf	fsr2l,c
  3194  000268  344C               	rlcf	(_curFrisbeeSteps+1)^0,w,c
  3195  00026A  6EDA               	movwf	fsr2h,c
  3196  00026C  90D8               	bcf	status,0,c
  3197  00026E  36D9               	rlcf	fsr2l,f,c
  3198  000270  36DA               	rlcf	fsr2h,f,c
  3199  000272  5035               	movf	??_highIsr^0,w,c
  3200  000274  26D9               	addwf	fsr2l,f,c
  3201  000276  5036               	movf	(??_highIsr+1)^0,w,c
  3202  000278  22DA               	addwfc	fsr2h,f,c
  3203  00027A  50DF               	movf	indf2,w,c
  3204  00027C  6E73               	movwf	(_objs+26)^0,c
  3205  00027E                     
  3206                           ;main.c: 106:                 CheckIfCaughtFrisbee();
  3207  00027E  ECF8  F015         	call	_CheckIfCaughtFrisbee	;wreg free
  3208  000282                     
  3209                           ;main.c: 109:                 if ((objs[5].x == objs[4].x && objs[5].y == objs[4].y) || 
      +                          curFrisbeeSteps == frisbeeSteps-1) {
  3210  000282  506D               	movf	(_objs+20)^0,w,c
  3211  000284  1872               	xorwf	(_objs+25)^0,w,c
  3212  000286  A4D8               	btfss	status,2,c
  3213  000288  EF48  F001         	goto	i2u305_41
  3214  00028C  EF4A  F001         	goto	i2u305_40
  3215  000290                     i2u305_41:
  3216  000290  EF53  F001         	goto	i2l2986
  3217  000294                     i2u305_40:
  3218  000294  506E               	movf	(_objs+21)^0,w,c
  3219  000296  1873               	xorwf	(_objs+26)^0,w,c
  3220  000298  B4D8               	btfsc	status,2,c
  3221  00029A  EF51  F001         	goto	i2u306_41
  3222  00029E  EF53  F001         	goto	i2u306_40
  3223  0002A2                     i2u306_41:
  3224  0002A2  EF6B  F001         	goto	i2l2988
  3225  0002A6                     i2u306_40:
  3226  0002A6                     i2l2986:
  3227  0002A6  0EFF               	movlw	255
  3228  0002A8  6E35               	movwf	??_highIsr^0,c
  3229  0002AA  0EFF               	movlw	255
  3230  0002AC  6E36               	movwf	(??_highIsr+1)^0,c
  3231  0002AE  C04D  F037         	movff	_frisbeeSteps,??_highIsr+2
  3232  0002B2  C04E  F038         	movff	_frisbeeSteps+1,??_highIsr+3
  3233  0002B6  5035               	movf	??_highIsr^0,w,c
  3234  0002B8  2637               	addwf	(??_highIsr+2)^0,f,c
  3235  0002BA  5036               	movf	(??_highIsr+1)^0,w,c
  3236  0002BC  2238               	addwfc	(??_highIsr+3)^0,f,c
  3237  0002BE  504B               	movf	_curFrisbeeSteps^0,w,c
  3238  0002C0  1837               	xorwf	(??_highIsr+2)^0,w,c
  3239  0002C2  E107               	bnz	i2u307_41
  3240  0002C4  504C               	movf	(_curFrisbeeSteps+1)^0,w,c
  3241  0002C6  1838               	xorwf	(??_highIsr+3)^0,w,c
  3242  0002C8  A4D8               	btfss	status,2,c
  3243  0002CA  EF69  F001         	goto	i2u307_41
  3244  0002CE  EF6B  F001         	goto	i2u307_40
  3245  0002D2                     i2u307_41:
  3246  0002D2  EFA5  F001         	goto	i2l249
  3247  0002D6                     i2u307_40:
  3248  0002D6                     i2l2988:
  3249                           
  3250                           ;main.c: 110:                     objs[5].state = OS_FELL;
  3251  0002D6  0E04               	movlw	4
  3252  0002D8  6E76               	movwf	(_objs+29)^0,c
  3253                           
  3254                           ;main.c: 111:                     objs[4].active = 0;
  3255  0002DA  0E00               	movlw	0
  3256  0002DC  6E6F               	movwf	(_objs+22)^0,c
  3257  0002DE                     
  3258                           ;main.c: 112:                     display[objs[4].y-1][objs[4].x-1] = &objs[5];
  3259  0002DE  506E               	movf	(_objs+21)^0,w,c
  3260  0002E0  6E35               	movwf	??_highIsr^0,c
  3261  0002E2  6A36               	clrf	(??_highIsr+1)^0,c
  3262  0002E4  0E05               	movlw	5
  3263  0002E6                     i2u308_45:
  3264  0002E6  90D8               	bcf	status,0,c
  3265  0002E8  3635               	rlcf	??_highIsr^0,f,c
  3266  0002EA  3636               	rlcf	(??_highIsr+1)^0,f,c
  3267  0002EC  2EE8               	decfsz	wreg,f,c
  3268  0002EE  EF73  F001         	goto	i2u308_45
  3269  0002F2  506D               	movf	(_objs+20)^0,w,c
  3270  0002F4  6E37               	movwf	(??_highIsr+2)^0,c
  3271  0002F6  6A38               	clrf	(??_highIsr+3)^0,c
  3272  0002F8  90D8               	bcf	status,0,c
  3273  0002FA  3637               	rlcf	(??_highIsr+2)^0,f,c
  3274  0002FC  3638               	rlcf	(??_highIsr+3)^0,f,c
  3275  0002FE  0EDE               	movlw	222
  3276  000300  6E39               	movwf	(??_highIsr+4)^0,c
  3277  000302  0EFF               	movlw	255
  3278  000304  6E3A               	movwf	(??_highIsr+5)^0,c
  3279  000306  0E00               	movlw	low _display
  3280  000308  6E3B               	movwf	(??_highIsr+6)^0,c
  3281  00030A  0E01               	movlw	high _display
  3282  00030C  6E3C               	movwf	(??_highIsr+7)^0,c
  3283  00030E  5039               	movf	(??_highIsr+4)^0,w,c
  3284  000310  263B               	addwf	(??_highIsr+6)^0,f,c
  3285  000312  503A               	movf	(??_highIsr+5)^0,w,c
  3286  000314  223C               	addwfc	(??_highIsr+7)^0,f,c
  3287  000316  5037               	movf	(??_highIsr+2)^0,w,c
  3288  000318  263B               	addwf	(??_highIsr+6)^0,f,c
  3289  00031A  5038               	movf	(??_highIsr+3)^0,w,c
  3290  00031C  223C               	addwfc	(??_highIsr+7)^0,f,c
  3291  00031E  5035               	movf	??_highIsr^0,w,c
  3292  000320  243B               	addwf	(??_highIsr+6)^0,w,c
  3293  000322  6ED9               	movwf	fsr2l,c
  3294  000324  5036               	movf	(??_highIsr+1)^0,w,c
  3295  000326  203C               	addwfc	(??_highIsr+7)^0,w,c
  3296  000328  6EDA               	movwf	fsr2h,c
  3297  00032A  0E72               	movlw	low (_objs+25)
  3298  00032C  6EDE               	movwf	postinc2,c
  3299  00032E  0E00               	movlw	high (_objs+25)
  3300  000330  6EDD               	movwf	postdec2,c
  3301  000332                     
  3302                           ;main.c: 113:                     objs[4].x = objs[4].y = 0;
  3303  000332  0E00               	movlw	0
  3304  000334  6E6E               	movwf	(_objs+21)^0,c
  3305  000336  C06E  F06D         	movff	_objs+21,_objs+20
  3306  00033A                     
  3307                           ;main.c: 114:                     game_state = GS_INACTIVE;
  3308  00033A  0E01               	movlw	1
  3309  00033C  6E7B               	movwf	_game_state^0,c
  3310  00033E                     
  3311                           ;main.c: 115:                     curFrisbeeSteps = 0;
  3312  00033E  0E00               	movlw	0
  3313  000340  6E4C               	movwf	(_curFrisbeeSteps+1)^0,c
  3314  000342  0E00               	movlw	0
  3315  000344  6E4B               	movwf	_curFrisbeeSteps^0,c
  3316  000346  EFA5  F001         	goto	i2l2998
  3317  00034A                     i2l249:
  3318  00034A                     i2l2998:
  3319                           
  3320                           ;main.c: 122:     if (INTCONbits.INT0IF){
  3321  00034A  A2F2               	btfss	242,1,c	;volatile
  3322  00034C  EFAA  F001         	goto	i2u309_41
  3323  000350  EFAC  F001         	goto	i2u309_40
  3324  000354                     i2u309_41:
  3325  000354  EF64  F002         	goto	i2l256
  3326  000358                     i2u309_40:
  3327  000358                     
  3328                           ;main.c: 123:         if (acceptInterrupts) {
  3329  000358  5058               	movf	_acceptInterrupts^0,w,c
  3330  00035A  B4D8               	btfsc	status,2,c
  3331  00035C  EFB2  F001         	goto	i2u310_41
  3332  000360  EFB4  F001         	goto	i2u310_40
  3333  000364                     i2u310_41:
  3334  000364  EF4D  F003         	goto	i2l3076
  3335  000368                     i2u310_40:
  3336  000368                     
  3337                           ;main.c: 125:             if (objs[selectedPlayer].state == OS_SEL_W_FRISBEE) {
  3338  000368  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3339  00036C  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3340  000370  0E00               	movlw	0
  3341  000372  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3342  000374  0E05               	movlw	5
  3343  000376  6E03               	movwf	i2___wmul@multiplicand^0,c
  3344  000378  EC79  F018         	call	i2___wmul	;wreg free
  3345  00037C  0E5D               	movlw	low (_objs+4)
  3346  00037E  2401               	addwf	?i2___wmul^0,w,c
  3347  000380  6ED9               	movwf	fsr2l,c
  3348  000382  0E00               	movlw	high (_objs+4)
  3349  000384  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3350  000386  6EDA               	movwf	fsr2h,c
  3351  000388  0E02               	movlw	2
  3352  00038A  18DE               	xorwf	postinc2,w,c
  3353  00038C  A4D8               	btfss	status,2,c
  3354  00038E  EFCB  F001         	goto	i2u311_41
  3355  000392  EFCD  F001         	goto	i2u311_40
  3356  000396                     i2u311_41:
  3357  000396  EF60  F002         	goto	i2l3032
  3358  00039A                     i2u311_40:
  3359  00039A                     
  3360                           ;main.c: 127:                 frisbeeSteps = compute_frisbee_target_and_route(objs[selec
      +                          tedPlayer].x, objs[selectedPlayer].y);
  3361  00039A  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3362  00039E  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3363  0003A2  0E00               	movlw	0
  3364  0003A4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3365  0003A6  0E05               	movlw	5
  3366  0003A8  6E03               	movwf	i2___wmul@multiplicand^0,c
  3367  0003AA  EC79  F018         	call	i2___wmul	;wreg free
  3368  0003AE  0E59               	movlw	low _objs
  3369  0003B0  2401               	addwf	?i2___wmul^0,w,c
  3370  0003B2  6ED9               	movwf	fsr2l,c
  3371  0003B4  0E00               	movlw	high _objs
  3372  0003B6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3373  0003B8  6EDA               	movwf	fsr2h,c
  3374  0003BA  50DF               	movf	indf2,w,c
  3375  0003BC  6E35               	movwf	??_highIsr^0,c
  3376  0003BE  5035               	movf	??_highIsr^0,w,c
  3377  0003C0  6E0E               	movwf	compute_frisbee_target_and_route@current_fisbee_x_position^0,c
  3378  0003C2  6A0F               	clrf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,c
  3379  0003C4  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3380  0003C8  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3381  0003CC  0E00               	movlw	0
  3382  0003CE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3383  0003D0  0E05               	movlw	5
  3384  0003D2  6E03               	movwf	i2___wmul@multiplicand^0,c
  3385  0003D4  EC79  F018         	call	i2___wmul	;wreg free
  3386  0003D8  0E5A               	movlw	low (_objs+1)
  3387  0003DA  2401               	addwf	?i2___wmul^0,w,c
  3388  0003DC  6ED9               	movwf	fsr2l,c
  3389  0003DE  0E00               	movlw	high (_objs+1)
  3390  0003E0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3391  0003E2  6EDA               	movwf	fsr2h,c
  3392  0003E4  50DF               	movf	indf2,w,c
  3393  0003E6  6E36               	movwf	(??_highIsr+1)^0,c
  3394  0003E8  5036               	movf	(??_highIsr+1)^0,w,c
  3395  0003EA  6E10               	movwf	compute_frisbee_target_and_route@current_fisbee_y_position^0,c
  3396  0003EC  6A11               	clrf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,c
  3397  0003EE  EC9B  F005         	call	_compute_frisbee_target_and_route	;wreg free
  3398  0003F2  C00E  F04D         	movff	?_compute_frisbee_target_and_route,_frisbeeSteps
  3399  0003F6  C00F  F04E         	movff	?_compute_frisbee_target_and_route+1,_frisbeeSteps+1
  3400  0003FA                     
  3401                           ;main.c: 129:                 objs[4].active = 1;
  3402  0003FA  0E01               	movlw	1
  3403  0003FC  6E6F               	movwf	(_objs+22)^0,c
  3404  0003FE                     
  3405                           ;main.c: 130:                 objs[4].x = frisbee_steps[frisbeeSteps-1][0];
  3406  0003FE  0EFC               	movlw	252
  3407  000400  6E35               	movwf	??_highIsr^0,c
  3408  000402  0EFF               	movlw	255
  3409  000404  6E36               	movwf	(??_highIsr+1)^0,c
  3410  000406  0E80               	movlw	low _frisbee_steps
  3411  000408  6E37               	movwf	(??_highIsr+2)^0,c
  3412  00040A  0E01               	movlw	high _frisbee_steps
  3413  00040C  6E38               	movwf	(??_highIsr+3)^0,c
  3414  00040E  5035               	movf	??_highIsr^0,w,c
  3415  000410  2637               	addwf	(??_highIsr+2)^0,f,c
  3416  000412  5036               	movf	(??_highIsr+1)^0,w,c
  3417  000414  2238               	addwfc	(??_highIsr+3)^0,f,c
  3418  000416  90D8               	bcf	status,0,c
  3419  000418  344D               	rlcf	_frisbeeSteps^0,w,c
  3420  00041A  6ED9               	movwf	fsr2l,c
  3421  00041C  344E               	rlcf	(_frisbeeSteps+1)^0,w,c
  3422  00041E  6EDA               	movwf	fsr2h,c
  3423  000420  90D8               	bcf	status,0,c
  3424  000422  36D9               	rlcf	fsr2l,f,c
  3425  000424  36DA               	rlcf	fsr2h,f,c
  3426  000426  5037               	movf	(??_highIsr+2)^0,w,c
  3427  000428  26D9               	addwf	fsr2l,f,c
  3428  00042A  5038               	movf	(??_highIsr+3)^0,w,c
  3429  00042C  22DA               	addwfc	fsr2h,f,c
  3430  00042E  50DF               	movf	indf2,w,c
  3431  000430  6E6D               	movwf	(_objs+20)^0,c
  3432  000432                     
  3433                           ;main.c: 131:                 objs[4].y = frisbee_steps[frisbeeSteps-1][1];
  3434  000432  0EFE               	movlw	254
  3435  000434  6E35               	movwf	??_highIsr^0,c
  3436  000436  0EFF               	movlw	255
  3437  000438  6E36               	movwf	(??_highIsr+1)^0,c
  3438  00043A  0E80               	movlw	low _frisbee_steps
  3439  00043C  6E37               	movwf	(??_highIsr+2)^0,c
  3440  00043E  0E01               	movlw	high _frisbee_steps
  3441  000440  6E38               	movwf	(??_highIsr+3)^0,c
  3442  000442  5035               	movf	??_highIsr^0,w,c
  3443  000444  2637               	addwf	(??_highIsr+2)^0,f,c
  3444  000446  5036               	movf	(??_highIsr+1)^0,w,c
  3445  000448  2238               	addwfc	(??_highIsr+3)^0,f,c
  3446  00044A  90D8               	bcf	status,0,c
  3447  00044C  344D               	rlcf	_frisbeeSteps^0,w,c
  3448  00044E  6ED9               	movwf	fsr2l,c
  3449  000450  344E               	rlcf	(_frisbeeSteps+1)^0,w,c
  3450  000452  6EDA               	movwf	fsr2h,c
  3451  000454  90D8               	bcf	status,0,c
  3452  000456  36D9               	rlcf	fsr2l,f,c
  3453  000458  36DA               	rlcf	fsr2h,f,c
  3454  00045A  5037               	movf	(??_highIsr+2)^0,w,c
  3455  00045C  26D9               	addwf	fsr2l,f,c
  3456  00045E  5038               	movf	(??_highIsr+3)^0,w,c
  3457  000460  22DA               	addwfc	fsr2h,f,c
  3458  000462  50DF               	movf	indf2,w,c
  3459  000464  6E6E               	movwf	(_objs+21)^0,c
  3460  000466                     
  3461                           ;main.c: 133:                 objs[5].x = frisbee_steps[0][0];
  3462  000466  C180  F072         	movff	_frisbee_steps,_objs+25
  3463  00046A                     
  3464                           ;main.c: 134:                 objs[5].y = frisbee_steps[0][1];
  3465  00046A  C182  F073         	movff	_frisbee_steps+2,_objs+26
  3466  00046E                     
  3467                           ;main.c: 137:                 objs[5].active = 1;
  3468  00046E  0E01               	movlw	1
  3469  000470  6E74               	movwf	(_objs+27)^0,c
  3470  000472                     
  3471                           ;main.c: 138:                 objs[5].state = OS_FLYING;
  3472  000472  0E03               	movlw	3
  3473  000474  6E76               	movwf	(_objs+29)^0,c
  3474  000476                     
  3475                           ;main.c: 140:                 objs[selectedPlayer].state = OS_SELECTED;
  3476  000476  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3477  00047A  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3478  00047E  0E00               	movlw	0
  3479  000480  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3480  000482  0E05               	movlw	5
  3481  000484  6E03               	movwf	i2___wmul@multiplicand^0,c
  3482  000486  EC79  F018         	call	i2___wmul	;wreg free
  3483  00048A  0E5D               	movlw	low (_objs+4)
  3484  00048C  2401               	addwf	?i2___wmul^0,w,c
  3485  00048E  6ED9               	movwf	fsr2l,c
  3486  000490  0E00               	movlw	high (_objs+4)
  3487  000492  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3488  000494  6EDA               	movwf	fsr2h,c
  3489  000496  0E01               	movlw	1
  3490  000498  6EDF               	movwf	indf2,c
  3491                           
  3492                           ;main.c: 144:                 game_state = GS_ACTIVE;
  3493  00049A  0E00               	movlw	0
  3494  00049C  6E7B               	movwf	_game_state^0,c
  3495                           
  3496                           ;main.c: 146:                 pulseCounter = 0;
  3497  00049E  0E00               	movlw	0
  3498  0004A0  6E50               	movwf	(_pulseCounter+1)^0,c
  3499  0004A2  0E00               	movlw	0
  3500  0004A4  6E4F               	movwf	_pulseCounter^0,c
  3501  0004A6                     
  3502                           ;main.c: 147:                 gameSpeed = nextGameSpeed;
  3503  0004A6  C077  F079         	movff	_nextGameSpeed,_gameSpeed
  3504  0004AA  C078  F07A         	movff	_nextGameSpeed+1,_gameSpeed+1
  3505  0004AE                     
  3506                           ;main.c: 149:                 PIR1bits.TMR1IF = 0;
  3507  0004AE  909E               	bcf	158,0,c	;volatile
  3508  0004B0                     
  3509                           ;main.c: 150:                 T1CONbits.TMR1ON = 0;
  3510  0004B0  90CD               	bcf	205,0,c	;volatile
  3511                           
  3512                           ;main.c: 151:                 TMR1L = 0xED;
  3513  0004B2  0EED               	movlw	237
  3514  0004B4  6ECE               	movwf	206,c	;volatile
  3515                           
  3516                           ;main.c: 152:                 TMR1H = 0x85;
  3517  0004B6  0E85               	movlw	133
  3518  0004B8  6ECF               	movwf	207,c	;volatile
  3519  0004BA                     
  3520                           ;main.c: 153:                 T1CONbits.TMR1ON = 1;
  3521  0004BA  80CD               	bsf	205,0,c	;volatile
  3522  0004BC                     
  3523                           ;main.c: 155:                 CheckIfCaughtFrisbee();
  3524  0004BC  ECF8  F015         	call	_CheckIfCaughtFrisbee	;wreg free
  3525  0004C0                     i2l3032:
  3526                           
  3527                           ;main.c: 157:             SetupDebouncingTimer();
  3528  0004C0  ECB9  F018         	call	_SetupDebouncingTimer	;wreg free
  3529  0004C4  EF4D  F003         	goto	i2l3076
  3530  0004C8                     i2l256:
  3531  0004C8  A0F0               	btfss	240,0,c	;volatile
  3532  0004CA  EF69  F002         	goto	i2u312_41
  3533  0004CE  EF6B  F002         	goto	i2u312_40
  3534  0004D2                     i2u312_41:
  3535  0004D2  EFB8  F002         	goto	i2l260
  3536  0004D6                     i2u312_40:
  3537  0004D6                     
  3538                           ;main.c: 162:         if (acceptInterrupts) {
  3539  0004D6  5058               	movf	_acceptInterrupts^0,w,c
  3540  0004D8  B4D8               	btfsc	status,2,c
  3541  0004DA  EF71  F002         	goto	i2u313_41
  3542  0004DE  EF73  F002         	goto	i2u313_40
  3543  0004E2                     i2u313_41:
  3544  0004E2  EF4D  F003         	goto	i2l3076
  3545  0004E6                     i2u313_40:
  3546  0004E6                     
  3547                           ;main.c: 163:             if (objs[selectedPlayer].state != OS_SEL_W_FRISBEE) {
  3548  0004E6  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3549  0004EA  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3550  0004EE  0E00               	movlw	0
  3551  0004F0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3552  0004F2  0E05               	movlw	5
  3553  0004F4  6E03               	movwf	i2___wmul@multiplicand^0,c
  3554  0004F6  EC79  F018         	call	i2___wmul	;wreg free
  3555  0004FA  0E5D               	movlw	low (_objs+4)
  3556  0004FC  2401               	addwf	?i2___wmul^0,w,c
  3557  0004FE  6ED9               	movwf	fsr2l,c
  3558  000500  0E00               	movlw	high (_objs+4)
  3559  000502  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3560  000504  6EDA               	movwf	fsr2h,c
  3561  000506  0E02               	movlw	2
  3562  000508  18DE               	xorwf	postinc2,w,c
  3563  00050A  B4D8               	btfsc	status,2,c
  3564  00050C  EF8A  F002         	goto	i2u314_41
  3565  000510  EF8C  F002         	goto	i2u314_40
  3566  000514                     i2u314_41:
  3567  000514  EF60  F002         	goto	i2l3032
  3568  000518                     i2u314_40:
  3569  000518                     
  3570                           ;main.c: 164:                 objs[selectedPlayer].state = OS_DEFAULT;
  3571  000518  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3572  00051C  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3573  000520  0E00               	movlw	0
  3574  000522  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3575  000524  0E05               	movlw	5
  3576  000526  6E03               	movwf	i2___wmul@multiplicand^0,c
  3577  000528  EC79  F018         	call	i2___wmul	;wreg free
  3578  00052C  0E5D               	movlw	low (_objs+4)
  3579  00052E  2401               	addwf	?i2___wmul^0,w,c
  3580  000530  6ED9               	movwf	fsr2l,c
  3581  000532  0E00               	movlw	high (_objs+4)
  3582  000534  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3583  000536  6EDA               	movwf	fsr2h,c
  3584  000538  0E00               	movlw	0
  3585  00053A  6EDF               	movwf	indf2,c
  3586  00053C                     
  3587                           ;main.c: 165:                 selectedPlayer++;
  3588  00053C  4A55               	infsnz	_selectedPlayer^0,f,c
  3589  00053E  2A56               	incf	(_selectedPlayer+1)^0,f,c
  3590  000540                     
  3591                           ;main.c: 166:                 selectedPlayer = selectedPlayer % 4;
  3592  000540  0E03               	movlw	3
  3593  000542  1455               	andwf	_selectedPlayer^0,w,c
  3594  000544  6E55               	movwf	_selectedPlayer^0,c
  3595  000546  6A56               	clrf	(_selectedPlayer+1)^0,c
  3596  000548                     
  3597                           ;main.c: 167:                 objs[selectedPlayer].state = OS_SELECTED;
  3598  000548  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3599  00054C  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3600  000550  0E00               	movlw	0
  3601  000552  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3602  000554  0E05               	movlw	5
  3603  000556  6E03               	movwf	i2___wmul@multiplicand^0,c
  3604  000558  EC79  F018         	call	i2___wmul	;wreg free
  3605  00055C  0E5D               	movlw	low (_objs+4)
  3606  00055E  2401               	addwf	?i2___wmul^0,w,c
  3607  000560  6ED9               	movwf	fsr2l,c
  3608  000562  0E00               	movlw	high (_objs+4)
  3609  000564  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3610  000566  6EDA               	movwf	fsr2h,c
  3611  000568  0E01               	movlw	1
  3612  00056A  6EDF               	movwf	indf2,c
  3613  00056C  EF60  F002         	goto	i2l3032
  3614  000570                     i2l260:
  3615  000570  A0F2               	btfss	242,0,c	;volatile
  3616  000572  EFBD  F002         	goto	i2u315_41
  3617  000576  EFBF  F002         	goto	i2u315_40
  3618  00057A                     i2u315_41:
  3619  00057A  EF4D  F003         	goto	i2l3076
  3620  00057E                     i2u315_40:
  3621  00057E                     
  3622                           ;main.c: 176:         if (acceptInterrupts) {
  3623  00057E  5058               	movf	_acceptInterrupts^0,w,c
  3624  000580  B4D8               	btfsc	status,2,c
  3625  000582  EFC5  F002         	goto	i2u316_41
  3626  000586  EFC7  F002         	goto	i2u316_40
  3627  00058A                     i2u316_41:
  3628  00058A  EF4D  F003         	goto	i2l3076
  3629  00058E                     i2u316_40:
  3630  00058E                     
  3631                           ;main.c: 177:             portbVals = portbVals >> 4;
  3632  00058E  3857               	swapf	_portbVals^0,w,c
  3633  000590  0B0F               	andlw	15
  3634  000592  6E57               	movwf	_portbVals^0,c
  3635                           
  3636                           ;main.c: 178:             switch (portbVals) {
  3637  000594  EF30  F003         	goto	i2l3072
  3638  000598                     i2l3052:
  3639                           
  3640                           ;main.c: 180:                     up(&objs[selectedPlayer]);
  3641  000598  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3642  00059C  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3643  0005A0  0E00               	movlw	0
  3644  0005A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3645  0005A4  0E05               	movlw	5
  3646  0005A6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3647  0005A8  EC79  F018         	call	i2___wmul	;wreg free
  3648  0005AC  0E59               	movlw	low _objs
  3649  0005AE  2401               	addwf	?i2___wmul^0,w,c
  3650  0005B0  6E43               	movwf	_highIsr$1791^0,c
  3651  0005B2  0E00               	movlw	high _objs
  3652  0005B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3653  0005B6  6E44               	movwf	(_highIsr$1791+1)^0,c
  3654  0005B8                     
  3655                           ;main.c: 180:                     up(&objs[selectedPlayer]);
  3656  0005B8  C043  F013         	movff	_highIsr$1791,up@pl
  3657  0005BC  C044  F014         	movff	_highIsr$1791+1,up@pl+1
  3658  0005C0  EC5E  F00A         	call	_up	;wreg free
  3659                           
  3660                           ;main.c: 181:                     break;
  3661  0005C4  EF60  F002         	goto	i2l3032
  3662  0005C8                     i2l3056:
  3663                           
  3664                           ;main.c: 183:                     right(&objs[selectedPlayer]);
  3665  0005C8  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3666  0005CC  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3667  0005D0  0E00               	movlw	0
  3668  0005D2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3669  0005D4  0E05               	movlw	5
  3670  0005D6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3671  0005D8  EC79  F018         	call	i2___wmul	;wreg free
  3672  0005DC  0E59               	movlw	low _objs
  3673  0005DE  2401               	addwf	?i2___wmul^0,w,c
  3674  0005E0  6E45               	movwf	_highIsr$1792^0,c
  3675  0005E2  0E00               	movlw	high _objs
  3676  0005E4  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3677  0005E6  6E46               	movwf	(_highIsr$1792+1)^0,c
  3678  0005E8                     
  3679                           ;main.c: 183:                     right(&objs[selectedPlayer]);
  3680  0005E8  C045  F013         	movff	_highIsr$1792,right@pl
  3681  0005EC  C046  F014         	movff	_highIsr$1792+1,right@pl+1
  3682  0005F0  ECCE  F00E         	call	_right	;wreg free
  3683                           
  3684                           ;main.c: 184:                     break;
  3685  0005F4  EF60  F002         	goto	i2l3032
  3686  0005F8                     i2l3060:
  3687                           
  3688                           ;main.c: 186:                     down(&objs[selectedPlayer]);
  3689  0005F8  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3690  0005FC  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3691  000600  0E00               	movlw	0
  3692  000602  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3693  000604  0E05               	movlw	5
  3694  000606  6E03               	movwf	i2___wmul@multiplicand^0,c
  3695  000608  EC79  F018         	call	i2___wmul	;wreg free
  3696  00060C  0E59               	movlw	low _objs
  3697  00060E  2401               	addwf	?i2___wmul^0,w,c
  3698  000610  6E47               	movwf	_highIsr$1793^0,c
  3699  000612  0E00               	movlw	high _objs
  3700  000614  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3701  000616  6E48               	movwf	(_highIsr$1793+1)^0,c
  3702  000618                     
  3703                           ;main.c: 186:                     down(&objs[selectedPlayer]);
  3704  000618  C047  F013         	movff	_highIsr$1793,down@pl
  3705  00061C  C048  F014         	movff	_highIsr$1793+1,down@pl+1
  3706  000620  EC41  F010         	call	_down	;wreg free
  3707                           
  3708                           ;main.c: 187:                     break;
  3709  000624  EF60  F002         	goto	i2l3032
  3710  000628                     i2l3064:
  3711                           
  3712                           ;main.c: 189:                     left(&objs[selectedPlayer]);
  3713  000628  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3714  00062C  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3715  000630  0E00               	movlw	0
  3716  000632  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3717  000634  0E05               	movlw	5
  3718  000636  6E03               	movwf	i2___wmul@multiplicand^0,c
  3719  000638  EC79  F018         	call	i2___wmul	;wreg free
  3720  00063C  0E59               	movlw	low _objs
  3721  00063E  2401               	addwf	?i2___wmul^0,w,c
  3722  000640  6E49               	movwf	_highIsr$1794^0,c
  3723  000642  0E00               	movlw	high _objs
  3724  000644  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3725  000646  6E4A               	movwf	(_highIsr$1794+1)^0,c
  3726  000648                     
  3727                           ;main.c: 189:                     left(&objs[selectedPlayer]);
  3728  000648  C049  F013         	movff	_highIsr$1794,left@pl
  3729  00064C  C04A  F014         	movff	_highIsr$1794+1,left@pl+1
  3730  000650  ECDC  F00B         	call	_left	;wreg free
  3731                           
  3732                           ;main.c: 190:                     break;
  3733  000654  EF60  F002         	goto	i2l3032
  3734  000658                     i2l3068:
  3735                           
  3736                           ;main.c: 192:                     portbVals = 0;
  3737  000658  0E00               	movlw	0
  3738  00065A  6E57               	movwf	_portbVals^0,c
  3739                           
  3740                           ;main.c: 193:                     break;
  3741  00065C  EF60  F002         	goto	i2l3032
  3742  000660                     i2l3072:
  3743  000660  5057               	movf	_portbVals^0,w,c
  3744  000662  6E35               	movwf	??_highIsr^0,c
  3745  000664  6A36               	clrf	(??_highIsr+1)^0,c
  3746                           
  3747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3748                           ; Switch size 1, requested type "simple"
  3749                           ; Number of cases is 1, Range of values is 0 to 0
  3750                           ; switch strategies available:
  3751                           ; Name         Instructions Cycles
  3752                           ; simple_byte            4     3 (average)
  3753                           ;	Chosen strategy is simple_byte
  3754  000666  5036               	movf	(??_highIsr+1)^0,w,c
  3755  000668  0A00               	xorlw	0	; case 0
  3756  00066A  B4D8               	btfsc	status,2,c
  3757  00066C  EF3A  F003         	goto	i2l3256
  3758  000670  EF2C  F003         	goto	i2l3068
  3759  000674                     i2l3256:
  3760                           
  3761                           ; Switch size 1, requested type "simple"
  3762                           ; Number of cases is 4, Range of values is 7 to 14
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte           13     7 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767  000674  5035               	movf	??_highIsr^0,w,c
  3768  000676  0A07               	xorlw	7	; case 7
  3769  000678  B4D8               	btfsc	status,2,c
  3770  00067A  EF14  F003         	goto	i2l3064
  3771  00067E  0A0C               	xorlw	12	; case 11
  3772  000680  B4D8               	btfsc	status,2,c
  3773  000682  EFFC  F002         	goto	i2l3060
  3774  000686  0A06               	xorlw	6	; case 13
  3775  000688  B4D8               	btfsc	status,2,c
  3776  00068A  EFE4  F002         	goto	i2l3056
  3777  00068E  0A03               	xorlw	3	; case 14
  3778  000690  B4D8               	btfsc	status,2,c
  3779  000692  EFCC  F002         	goto	i2l3052
  3780  000696  EF2C  F003         	goto	i2l3068
  3781  00069A                     i2l3076:
  3782                           
  3783                           ;main.c: 199:     INTCON3bits.INT1IF = 0;
  3784  00069A  90F0               	bcf	240,0,c	;volatile
  3785  00069C                     
  3786                           ;main.c: 200:     INTCONbits.INT0IF = 0;
  3787  00069C  92F2               	bcf	242,1,c	;volatile
  3788  00069E                     
  3789                           ;main.c: 201:     INTCONbits.RBIF = 0;
  3790  00069E  90F2               	bcf	242,0,c	;volatile
  3791  0006A0                     
  3792                           ;main.c: 202:     PIR1bits.ADIF = 0;
  3793  0006A0  9C9E               	bcf	158,6,c	;volatile
  3794  0006A2  C042  FFF4         	movff	??_highIsr+13,prodh
  3795  0006A6  C041  FFF3         	movff	??_highIsr+12,prodl
  3796  0006AA  C040  FFDA         	movff	??_highIsr+11,fsr2h
  3797  0006AE  C03F  FFD9         	movff	??_highIsr+10,fsr2l
  3798  0006B2  C03E  FFE2         	movff	??_highIsr+9,fsr1h
  3799  0006B6  C03D  FFE1         	movff	??_highIsr+8,fsr1l
  3800  0006BA  927C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3801  0006BC  0011               	retfie		f
  3802  0006BE                     __end_of_highIsr:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _compute_frisbee_target_and_route *****************
  3806 ;; Defined at:
  3807 ;;		line 150 in file "./the3.h"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  current_fisb    2   13[COMRAM] unsigned short 
  3810 ;;  current_fisb    2   15[COMRAM] unsigned short 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  i               2   27[COMRAM] unsigned short 
  3813 ;;  i               2   25[COMRAM] unsigned short 
  3814 ;;  i               2   21[COMRAM] unsigned short 
  3815 ;;  i               2   19[COMRAM] unsigned short 
  3816 ;;  i               2   29[COMRAM] unsigned short 
  3817 ;;  i               2   23[COMRAM] unsigned short 
  3818 ;;  y_step_size     2   43[COMRAM] unsigned short 
  3819 ;;  x_step_size     2   41[COMRAM] unsigned short 
  3820 ;;  y               2   39[COMRAM] unsigned short 
  3821 ;;  x               2   37[COMRAM] unsigned short 
  3822 ;;  target_y        2   35[COMRAM] unsigned short 
  3823 ;;  target_x        2   33[COMRAM] unsigned short 
  3824 ;;  number_of_st    2   31[COMRAM] unsigned short 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  2   13[COMRAM] unsigned short 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;Total ram usage:       32 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    2
  3841 ;; This function calls:
  3842 ;;		_random_generator
  3843 ;; This function is called by:
  3844 ;;		_highIsr
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text13
  3849  000B36                     __ptext13:
  3850                           	callstack 0
  3851  000B36                     _compute_frisbee_target_and_route:
  3852                           	callstack 22
  3853  000B36                     i2l125:
  3854  000B36                     
  3855                           ;./the3.h: 164:         target_x = random_generator(16) + 1;
  3856  000B36  0E00               	movlw	0
  3857  000B38  6E07               	movwf	(random_generator@modulo+1)^0,c
  3858  000B3A  0E10               	movlw	16
  3859  000B3C  6E06               	movwf	random_generator@modulo^0,c
  3860  000B3E  EC99  F017         	call	_random_generator	;wreg free
  3861  000B42  0E01               	movlw	1
  3862  000B44  2406               	addwf	?_random_generator^0,w,c
  3863  000B46  6E22               	movwf	compute_frisbee_target_and_route@target_x^0,c
  3864  000B48  0E00               	movlw	0
  3865  000B4A  2007               	addwfc	(?_random_generator+1)^0,w,c
  3866  000B4C  6E23               	movwf	(compute_frisbee_target_and_route@target_x+1)^0,c
  3867                           
  3868                           ;./the3.h: 165:         target_y = random_generator(4) + 1;
  3869  000B4E  0E00               	movlw	0
  3870  000B50  6E07               	movwf	(random_generator@modulo+1)^0,c
  3871  000B52  0E04               	movlw	4
  3872  000B54  6E06               	movwf	random_generator@modulo^0,c
  3873  000B56  EC99  F017         	call	_random_generator	;wreg free
  3874  000B5A  0E01               	movlw	1
  3875  000B5C  2406               	addwf	?_random_generator^0,w,c
  3876  000B5E  6E24               	movwf	compute_frisbee_target_and_route@target_y^0,c
  3877  000B60  0E00               	movlw	0
  3878  000B62  2007               	addwfc	(?_random_generator+1)^0,w,c
  3879  000B64  6E25               	movwf	(compute_frisbee_target_and_route@target_y+1)^0,c
  3880  000B66                     
  3881                           ;./the3.h: 168:         if (target_x < current_fisbee_x_position)
  3882  000B66  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  3883  000B68  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  3884  000B6A  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  3885  000B6C  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  3886  000B6E  B0D8               	btfsc	status,0,c
  3887  000B70  EFBC  F005         	goto	i2u253_41
  3888  000B74  EFBE  F005         	goto	i2u253_40
  3889  000B78                     i2u253_41:
  3890  000B78  EFC6  F005         	goto	i2l2504
  3891  000B7C                     i2u253_40:
  3892  000B7C                     
  3893                           ;./the3.h: 169:             x_step_size = current_fisbee_x_position - target_x;
  3894  000B7C  5022               	movf	compute_frisbee_target_and_route@target_x^0,w,c
  3895  000B7E  5C0E               	subwf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  3896  000B80  6E2A               	movwf	compute_frisbee_target_and_route@x_step_size^0,c
  3897  000B82  5023               	movf	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  3898  000B84  580F               	subwfb	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  3899  000B86  6E2B               	movwf	(compute_frisbee_target_and_route@x_step_size+1)^0,c
  3900  000B88  EFCC  F005         	goto	i2l127
  3901  000B8C                     i2l2504:
  3902                           
  3903                           ;./the3.h: 171:             x_step_size = target_x - current_fisbee_x_position;
  3904  000B8C  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  3905  000B8E  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  3906  000B90  6E2A               	movwf	compute_frisbee_target_and_route@x_step_size^0,c
  3907  000B92  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  3908  000B94  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  3909  000B96  6E2B               	movwf	(compute_frisbee_target_and_route@x_step_size+1)^0,c
  3910  000B98                     i2l127:
  3911                           
  3912                           ;./the3.h: 174:         if (target_y < current_fisbee_y_position)
  3913  000B98  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  3914  000B9A  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  3915  000B9C  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  3916  000B9E  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  3917  000BA0  B0D8               	btfsc	status,0,c
  3918  000BA2  EFD5  F005         	goto	i2u254_41
  3919  000BA6  EFD7  F005         	goto	i2u254_40
  3920  000BAA                     i2u254_41:
  3921  000BAA  EFDF  F005         	goto	i2l2508
  3922  000BAE                     i2u254_40:
  3923  000BAE                     
  3924                           ;./the3.h: 175:             y_step_size = current_fisbee_y_position - target_y;
  3925  000BAE  5024               	movf	compute_frisbee_target_and_route@target_y^0,w,c
  3926  000BB0  5C10               	subwf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  3927  000BB2  6E2C               	movwf	compute_frisbee_target_and_route@y_step_size^0,c
  3928  000BB4  5025               	movf	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  3929  000BB6  5811               	subwfb	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  3930  000BB8  6E2D               	movwf	(compute_frisbee_target_and_route@y_step_size+1)^0,c
  3931  000BBA  EFE5  F005         	goto	i2l129
  3932  000BBE                     i2l2508:
  3933                           
  3934                           ;./the3.h: 177:             y_step_size = target_y - current_fisbee_y_position;
  3935  000BBE  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  3936  000BC0  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  3937  000BC2  6E2C               	movwf	compute_frisbee_target_and_route@y_step_size^0,c
  3938  000BC4  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  3939  000BC6  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  3940  000BC8  6E2D               	movwf	(compute_frisbee_target_and_route@y_step_size+1)^0,c
  3941  000BCA                     i2l129:
  3942                           
  3943                           ;./the3.h: 180:         if (x_step_size <= 2 && y_step_size <= 2)
  3944  000BCA  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  3945  000BCC  E107               	bnz	i2u255_41
  3946  000BCE  0E03               	movlw	3
  3947  000BD0  5C2A               	subwf	compute_frisbee_target_and_route@x_step_size^0,w,c
  3948  000BD2  B0D8               	btfsc	status,0,c
  3949  000BD4  EFEE  F005         	goto	i2u255_41
  3950  000BD8  EFF0  F005         	goto	i2u255_40
  3951  000BDC                     i2u255_41:
  3952  000BDC  EFFD  F005         	goto	i2l2514
  3953  000BE0                     i2u255_40:
  3954  000BE0  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  3955  000BE2  E107               	bnz	i2u256_41
  3956  000BE4  0E03               	movlw	3
  3957  000BE6  5C2C               	subwf	compute_frisbee_target_and_route@y_step_size^0,w,c
  3958  000BE8  B0D8               	btfsc	status,0,c
  3959  000BEA  EFF9  F005         	goto	i2u256_41
  3960  000BEE  EFFB  F005         	goto	i2u256_40
  3961  000BF2                     i2u256_41:
  3962  000BF2  EFFD  F005         	goto	i2l2514
  3963  000BF6                     i2u256_40:
  3964  000BF6  EF9B  F005         	goto	i2l125
  3965  000BFA                     i2l2514:
  3966                           
  3967                           ;./the3.h: 184:         if (x_step_size > y_step_size)
  3968  000BFA  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  3969  000BFC  5C2C               	subwf	compute_frisbee_target_and_route@y_step_size^0,w,c
  3970  000BFE  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  3971  000C00  582D               	subwfb	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  3972  000C02  B0D8               	btfsc	status,0,c
  3973  000C04  EF06  F006         	goto	i2u257_41
  3974  000C08  EF08  F006         	goto	i2u257_40
  3975  000C0C                     i2u257_41:
  3976  000C0C  EF0E  F006         	goto	i2l132
  3977  000C10                     i2u257_40:
  3978  000C10                     
  3979                           ;./the3.h: 185:             number_of_steps = x_step_size;
  3980  000C10  C02A  F020         	movff	compute_frisbee_target_and_route@x_step_size,compute_frisbee_target_and_route@num
      +                          ber_of_steps
  3981  000C14  C02B  F021         	movff	compute_frisbee_target_and_route@x_step_size+1,compute_frisbee_target_and_route@n
      +                          umber_of_steps+1
  3982  000C18  EF12  F006         	goto	i2l134
  3983  000C1C                     i2l132:
  3984                           
  3985                           ;./the3.h: 187:             number_of_steps = y_step_size;
  3986  000C1C  C02C  F020         	movff	compute_frisbee_target_and_route@y_step_size,compute_frisbee_target_and_route@num
      +                          ber_of_steps
  3987  000C20  C02D  F021         	movff	compute_frisbee_target_and_route@y_step_size+1,compute_frisbee_target_and_route@n
      +                          umber_of_steps+1
  3988  000C24                     i2l134:
  3989                           
  3990                           ;./the3.h: 200:     unsigned short x = current_fisbee_x_position;
  3991  000C24  C00E  F026         	movff	compute_frisbee_target_and_route@current_fisbee_x_position,compute_frisbee_target
      +                          _and_route@x
  3992  000C28  C00F  F027         	movff	compute_frisbee_target_and_route@current_fisbee_x_position+1,compute_frisbee_targ
      +                          et_and_route@x+1
  3993  000C2C                     
  3994                           ;./the3.h: 201:     if (target_x < current_fisbee_x_position) {
  3995  000C2C  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  3996  000C2E  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  3997  000C30  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  3998  000C32  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  3999  000C34  B0D8               	btfsc	status,0,c
  4000  000C36  EF1F  F006         	goto	i2u258_41
  4001  000C3A  EF21  F006         	goto	i2u258_40
  4002  000C3E                     i2u258_41:
  4003  000C3E  EF50  F006         	goto	i2l2530
  4004  000C42                     i2u258_40:
  4005  000C42                     
  4006                           ;./the3.h: 202:         for (unsigned short i = 0; i < x_step_size; i++) {
  4007  000C42  0E00               	movlw	0
  4008  000C44  6E15               	movwf	(compute_frisbee_target_and_route@i+1)^0,c
  4009  000C46  0E00               	movlw	0
  4010  000C48  6E14               	movwf	compute_frisbee_target_and_route@i^0,c
  4011  000C4A  EF43  F006         	goto	i2l2528
  4012  000C4E                     i2l2522:
  4013                           
  4014                           ;./the3.h: 203:             x = x - 1;
  4015  000C4E  0EFF               	movlw	255
  4016  000C50  2426               	addwf	compute_frisbee_target_and_route@x^0,w,c
  4017  000C52  6E26               	movwf	compute_frisbee_target_and_route@x^0,c
  4018  000C54  0EFF               	movlw	255
  4019  000C56  2027               	addwfc	(compute_frisbee_target_and_route@x+1)^0,w,c
  4020  000C58  6E27               	movwf	(compute_frisbee_target_and_route@x+1)^0,c
  4021  000C5A                     
  4022                           ;./the3.h: 204:             frisbee_steps[i][0] = x;
  4023  000C5A  0E80               	movlw	low _frisbee_steps
  4024  000C5C  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4025  000C5E  0E01               	movlw	high _frisbee_steps
  4026  000C60  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4027  000C62  90D8               	bcf	status,0,c
  4028  000C64  3414               	rlcf	compute_frisbee_target_and_route@i^0,w,c
  4029  000C66  6ED9               	movwf	fsr2l,c
  4030  000C68  3415               	rlcf	(compute_frisbee_target_and_route@i+1)^0,w,c
  4031  000C6A  6EDA               	movwf	fsr2h,c
  4032  000C6C  90D8               	bcf	status,0,c
  4033  000C6E  36D9               	rlcf	fsr2l,f,c
  4034  000C70  36DA               	rlcf	fsr2h,f,c
  4035  000C72  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4036  000C74  26D9               	addwf	fsr2l,f,c
  4037  000C76  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4038  000C78  22DA               	addwfc	fsr2h,f,c
  4039  000C7A  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  4040  000C7E  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  4041  000C82                     
  4042                           ;./the3.h: 205:         }
  4043  000C82  4A14               	infsnz	compute_frisbee_target_and_route@i^0,f,c
  4044  000C84  2A15               	incf	(compute_frisbee_target_and_route@i+1)^0,f,c
  4045  000C86                     i2l2528:
  4046  000C86  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  4047  000C88  5C14               	subwf	compute_frisbee_target_and_route@i^0,w,c
  4048  000C8A  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  4049  000C8C  5815               	subwfb	(compute_frisbee_target_and_route@i+1)^0,w,c
  4050  000C8E  A0D8               	btfss	status,0,c
  4051  000C90  EF4C  F006         	goto	i2u259_41
  4052  000C94  EF4E  F006         	goto	i2u259_40
  4053  000C98                     i2u259_41:
  4054  000C98  EF27  F006         	goto	i2l2522
  4055  000C9C                     i2u259_40:
  4056  000C9C  EF7D  F006         	goto	i2l139
  4057  000CA0                     i2l2530:
  4058                           
  4059                           ;./the3.h: 208:         for (unsigned short i = 0; i < x_step_size; i++) {
  4060  000CA0  0E00               	movlw	0
  4061  000CA2  6E17               	movwf	(compute_frisbee_target_and_route@i_840+1)^0,c
  4062  000CA4  0E00               	movlw	0
  4063  000CA6  6E16               	movwf	compute_frisbee_target_and_route@i_840^0,c
  4064  000CA8  EF72  F006         	goto	i2l2538
  4065  000CAC                     i2l2532:
  4066                           
  4067                           ;./the3.h: 209:             x = x + 1;
  4068  000CAC  0E01               	movlw	1
  4069  000CAE  2426               	addwf	compute_frisbee_target_and_route@x^0,w,c
  4070  000CB0  6E26               	movwf	compute_frisbee_target_and_route@x^0,c
  4071  000CB2  0E00               	movlw	0
  4072  000CB4  2027               	addwfc	(compute_frisbee_target_and_route@x+1)^0,w,c
  4073  000CB6  6E27               	movwf	(compute_frisbee_target_and_route@x+1)^0,c
  4074  000CB8                     
  4075                           ;./the3.h: 210:             frisbee_steps[i][0] = x;
  4076  000CB8  0E80               	movlw	low _frisbee_steps
  4077  000CBA  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4078  000CBC  0E01               	movlw	high _frisbee_steps
  4079  000CBE  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4080  000CC0  90D8               	bcf	status,0,c
  4081  000CC2  3416               	rlcf	compute_frisbee_target_and_route@i_840^0,w,c
  4082  000CC4  6ED9               	movwf	fsr2l,c
  4083  000CC6  3417               	rlcf	(compute_frisbee_target_and_route@i_840+1)^0,w,c
  4084  000CC8  6EDA               	movwf	fsr2h,c
  4085  000CCA  90D8               	bcf	status,0,c
  4086  000CCC  36D9               	rlcf	fsr2l,f,c
  4087  000CCE  36DA               	rlcf	fsr2h,f,c
  4088  000CD0  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4089  000CD2  26D9               	addwf	fsr2l,f,c
  4090  000CD4  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4091  000CD6  22DA               	addwfc	fsr2h,f,c
  4092  000CD8  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  4093  000CDC  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  4094  000CE0                     
  4095                           ;./the3.h: 211:         }
  4096  000CE0  4A16               	infsnz	compute_frisbee_target_and_route@i_840^0,f,c
  4097  000CE2  2A17               	incf	(compute_frisbee_target_and_route@i_840+1)^0,f,c
  4098  000CE4                     i2l2538:
  4099  000CE4  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  4100  000CE6  5C16               	subwf	compute_frisbee_target_and_route@i_840^0,w,c
  4101  000CE8  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  4102  000CEA  5817               	subwfb	(compute_frisbee_target_and_route@i_840+1)^0,w,c
  4103  000CEC  A0D8               	btfss	status,0,c
  4104  000CEE  EF7B  F006         	goto	i2u260_41
  4105  000CF2  EF7D  F006         	goto	i2u260_40
  4106  000CF6                     i2u260_41:
  4107  000CF6  EF56  F006         	goto	i2l2532
  4108  000CFA                     i2u260_40:
  4109  000CFA                     i2l139:
  4110                           
  4111                           ;./the3.h: 213:     for (unsigned short i = x_step_size; i < number_of_steps; i++)
  4112  000CFA  C02A  F018         	movff	compute_frisbee_target_and_route@x_step_size,compute_frisbee_target_and_route@i_8
      +                          41
  4113  000CFE  C02B  F019         	movff	compute_frisbee_target_and_route@x_step_size+1,compute_frisbee_target_and_route@i
      +                          _841+1
  4114  000D02  EF99  F006         	goto	i2l2544
  4115  000D06                     i2l2540:
  4116                           
  4117                           ;./the3.h: 214:         frisbee_steps[i][0] = x;
  4118  000D06  0E80               	movlw	low _frisbee_steps
  4119  000D08  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4120  000D0A  0E01               	movlw	high _frisbee_steps
  4121  000D0C  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4122  000D0E  90D8               	bcf	status,0,c
  4123  000D10  3418               	rlcf	compute_frisbee_target_and_route@i_841^0,w,c
  4124  000D12  6ED9               	movwf	fsr2l,c
  4125  000D14  3419               	rlcf	(compute_frisbee_target_and_route@i_841+1)^0,w,c
  4126  000D16  6EDA               	movwf	fsr2h,c
  4127  000D18  90D8               	bcf	status,0,c
  4128  000D1A  36D9               	rlcf	fsr2l,f,c
  4129  000D1C  36DA               	rlcf	fsr2h,f,c
  4130  000D1E  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4131  000D20  26D9               	addwf	fsr2l,f,c
  4132  000D22  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4133  000D24  22DA               	addwfc	fsr2h,f,c
  4134  000D26  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  4135  000D2A  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  4136  000D2E  4A18               	infsnz	compute_frisbee_target_and_route@i_841^0,f,c
  4137  000D30  2A19               	incf	(compute_frisbee_target_and_route@i_841+1)^0,f,c
  4138  000D32                     i2l2544:
  4139  000D32  5020               	movf	compute_frisbee_target_and_route@number_of_steps^0,w,c
  4140  000D34  5C18               	subwf	compute_frisbee_target_and_route@i_841^0,w,c
  4141  000D36  5021               	movf	(compute_frisbee_target_and_route@number_of_steps+1)^0,w,c
  4142  000D38  5819               	subwfb	(compute_frisbee_target_and_route@i_841+1)^0,w,c
  4143  000D3A  A0D8               	btfss	status,0,c
  4144  000D3C  EFA2  F006         	goto	i2u261_41
  4145  000D40  EFA4  F006         	goto	i2u261_40
  4146  000D44                     i2u261_41:
  4147  000D44  EF83  F006         	goto	i2l2540
  4148  000D48                     i2u261_40:
  4149  000D48                     
  4150                           ;./the3.h: 217:     unsigned short y = current_fisbee_y_position;
  4151  000D48  C010  F028         	movff	compute_frisbee_target_and_route@current_fisbee_y_position,compute_frisbee_target
      +                          _and_route@y
  4152  000D4C  C011  F029         	movff	compute_frisbee_target_and_route@current_fisbee_y_position+1,compute_frisbee_targ
      +                          et_and_route@y+1
  4153  000D50                     
  4154                           ;./the3.h: 218:     if (target_y < current_fisbee_y_position) {
  4155  000D50  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  4156  000D52  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  4157  000D54  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  4158  000D56  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  4159  000D58  B0D8               	btfsc	status,0,c
  4160  000D5A  EFB1  F006         	goto	i2u262_41
  4161  000D5E  EFB3  F006         	goto	i2u262_40
  4162  000D62                     i2u262_41:
  4163  000D62  EFE6  F006         	goto	i2l2558
  4164  000D66                     i2u262_40:
  4165  000D66                     
  4166                           ;./the3.h: 219:         for (unsigned short i = 0; i < y_step_size; i++) {
  4167  000D66  0E00               	movlw	0
  4168  000D68  6E1B               	movwf	(compute_frisbee_target_and_route@i_843+1)^0,c
  4169  000D6A  0E00               	movlw	0
  4170  000D6C  6E1A               	movwf	compute_frisbee_target_and_route@i_843^0,c
  4171  000D6E  EFD9  F006         	goto	i2l2556
  4172  000D72                     i2l2550:
  4173                           
  4174                           ;./the3.h: 220:             y = y - 1;
  4175  000D72  0EFF               	movlw	255
  4176  000D74  2428               	addwf	compute_frisbee_target_and_route@y^0,w,c
  4177  000D76  6E28               	movwf	compute_frisbee_target_and_route@y^0,c
  4178  000D78  0EFF               	movlw	255
  4179  000D7A  2029               	addwfc	(compute_frisbee_target_and_route@y+1)^0,w,c
  4180  000D7C  6E29               	movwf	(compute_frisbee_target_and_route@y+1)^0,c
  4181  000D7E                     
  4182                           ;./the3.h: 221:             frisbee_steps[i][1] = y;
  4183  000D7E  0E80               	movlw	low _frisbee_steps
  4184  000D80  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4185  000D82  0E01               	movlw	high _frisbee_steps
  4186  000D84  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4187  000D86  0E02               	movlw	2
  4188  000D88  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  4189  000D8A  0E00               	movlw	0
  4190  000D8C  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  4191  000D8E  90D8               	bcf	status,0,c
  4192  000D90  341A               	rlcf	compute_frisbee_target_and_route@i_843^0,w,c
  4193  000D92  6ED9               	movwf	fsr2l,c
  4194  000D94  341B               	rlcf	(compute_frisbee_target_and_route@i_843+1)^0,w,c
  4195  000D96  6EDA               	movwf	fsr2h,c
  4196  000D98  90D8               	bcf	status,0,c
  4197  000D9A  36D9               	rlcf	fsr2l,f,c
  4198  000D9C  36DA               	rlcf	fsr2h,f,c
  4199  000D9E  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4200  000DA0  26D9               	addwf	fsr2l,f,c
  4201  000DA2  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4202  000DA4  22DA               	addwfc	fsr2h,f,c
  4203  000DA6  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  4204  000DAA  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  4205  000DAE                     
  4206                           ;./the3.h: 222:         }
  4207  000DAE  4A1A               	infsnz	compute_frisbee_target_and_route@i_843^0,f,c
  4208  000DB0  2A1B               	incf	(compute_frisbee_target_and_route@i_843+1)^0,f,c
  4209  000DB2                     i2l2556:
  4210  000DB2  502C               	movf	compute_frisbee_target_and_route@y_step_size^0,w,c
  4211  000DB4  5C1A               	subwf	compute_frisbee_target_and_route@i_843^0,w,c
  4212  000DB6  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  4213  000DB8  581B               	subwfb	(compute_frisbee_target_and_route@i_843+1)^0,w,c
  4214  000DBA  A0D8               	btfss	status,0,c
  4215  000DBC  EFE2  F006         	goto	i2u263_41
  4216  000DC0  EFE4  F006         	goto	i2u263_40
  4217  000DC4                     i2u263_41:
  4218  000DC4  EFB9  F006         	goto	i2l2550
  4219  000DC8                     i2u263_40:
  4220  000DC8  EF17  F007         	goto	i2l150
  4221  000DCC                     i2l2558:
  4222                           
  4223                           ;./the3.h: 225:         for (unsigned short i = 0; i < y_step_size; i++) {
  4224  000DCC  0E00               	movlw	0
  4225  000DCE  6E1D               	movwf	(compute_frisbee_target_and_route@i_844+1)^0,c
  4226  000DD0  0E00               	movlw	0
  4227  000DD2  6E1C               	movwf	compute_frisbee_target_and_route@i_844^0,c
  4228  000DD4  EF0C  F007         	goto	i2l2566
  4229  000DD8                     i2l2560:
  4230                           
  4231                           ;./the3.h: 226:             y = y + 1;
  4232  000DD8  0E01               	movlw	1
  4233  000DDA  2428               	addwf	compute_frisbee_target_and_route@y^0,w,c
  4234  000DDC  6E28               	movwf	compute_frisbee_target_and_route@y^0,c
  4235  000DDE  0E00               	movlw	0
  4236  000DE0  2029               	addwfc	(compute_frisbee_target_and_route@y+1)^0,w,c
  4237  000DE2  6E29               	movwf	(compute_frisbee_target_and_route@y+1)^0,c
  4238  000DE4                     
  4239                           ;./the3.h: 227:             frisbee_steps[i][1] = y;
  4240  000DE4  0E80               	movlw	low _frisbee_steps
  4241  000DE6  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4242  000DE8  0E01               	movlw	high _frisbee_steps
  4243  000DEA  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4244  000DEC  0E02               	movlw	2
  4245  000DEE  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  4246  000DF0  0E00               	movlw	0
  4247  000DF2  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  4248  000DF4  90D8               	bcf	status,0,c
  4249  000DF6  341C               	rlcf	compute_frisbee_target_and_route@i_844^0,w,c
  4250  000DF8  6ED9               	movwf	fsr2l,c
  4251  000DFA  341D               	rlcf	(compute_frisbee_target_and_route@i_844+1)^0,w,c
  4252  000DFC  6EDA               	movwf	fsr2h,c
  4253  000DFE  90D8               	bcf	status,0,c
  4254  000E00  36D9               	rlcf	fsr2l,f,c
  4255  000E02  36DA               	rlcf	fsr2h,f,c
  4256  000E04  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4257  000E06  26D9               	addwf	fsr2l,f,c
  4258  000E08  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4259  000E0A  22DA               	addwfc	fsr2h,f,c
  4260  000E0C  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  4261  000E10  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  4262  000E14                     
  4263                           ;./the3.h: 228:         }
  4264  000E14  4A1C               	infsnz	compute_frisbee_target_and_route@i_844^0,f,c
  4265  000E16  2A1D               	incf	(compute_frisbee_target_and_route@i_844+1)^0,f,c
  4266  000E18                     i2l2566:
  4267  000E18  502C               	movf	compute_frisbee_target_and_route@y_step_size^0,w,c
  4268  000E1A  5C1C               	subwf	compute_frisbee_target_and_route@i_844^0,w,c
  4269  000E1C  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  4270  000E1E  581D               	subwfb	(compute_frisbee_target_and_route@i_844+1)^0,w,c
  4271  000E20  A0D8               	btfss	status,0,c
  4272  000E22  EF15  F007         	goto	i2u264_41
  4273  000E26  EF17  F007         	goto	i2u264_40
  4274  000E2A                     i2u264_41:
  4275  000E2A  EFEC  F006         	goto	i2l2560
  4276  000E2E                     i2u264_40:
  4277  000E2E                     i2l150:
  4278                           
  4279                           ;./the3.h: 230:     for (unsigned short i = y_step_size; i < number_of_steps; i++)
  4280  000E2E  C02C  F01E         	movff	compute_frisbee_target_and_route@y_step_size,compute_frisbee_target_and_route@i_8
      +                          45
  4281  000E32  C02D  F01F         	movff	compute_frisbee_target_and_route@y_step_size+1,compute_frisbee_target_and_route@i
      +                          _845+1
  4282  000E36  EF37  F007         	goto	i2l2572
  4283  000E3A                     i2l2568:
  4284                           
  4285                           ;./the3.h: 231:         frisbee_steps[i][1] = y;
  4286  000E3A  0E80               	movlw	low _frisbee_steps
  4287  000E3C  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4288  000E3E  0E01               	movlw	high _frisbee_steps
  4289  000E40  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4290  000E42  0E02               	movlw	2
  4291  000E44  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  4292  000E46  0E00               	movlw	0
  4293  000E48  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  4294  000E4A  90D8               	bcf	status,0,c
  4295  000E4C  341E               	rlcf	compute_frisbee_target_and_route@i_845^0,w,c
  4296  000E4E  6ED9               	movwf	fsr2l,c
  4297  000E50  341F               	rlcf	(compute_frisbee_target_and_route@i_845+1)^0,w,c
  4298  000E52  6EDA               	movwf	fsr2h,c
  4299  000E54  90D8               	bcf	status,0,c
  4300  000E56  36D9               	rlcf	fsr2l,f,c
  4301  000E58  36DA               	rlcf	fsr2h,f,c
  4302  000E5A  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4303  000E5C  26D9               	addwf	fsr2l,f,c
  4304  000E5E  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4305  000E60  22DA               	addwfc	fsr2h,f,c
  4306  000E62  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  4307  000E66  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  4308  000E6A  4A1E               	infsnz	compute_frisbee_target_and_route@i_845^0,f,c
  4309  000E6C  2A1F               	incf	(compute_frisbee_target_and_route@i_845+1)^0,f,c
  4310  000E6E                     i2l2572:
  4311  000E6E  5020               	movf	compute_frisbee_target_and_route@number_of_steps^0,w,c
  4312  000E70  5C1E               	subwf	compute_frisbee_target_and_route@i_845^0,w,c
  4313  000E72  5021               	movf	(compute_frisbee_target_and_route@number_of_steps+1)^0,w,c
  4314  000E74  581F               	subwfb	(compute_frisbee_target_and_route@i_845+1)^0,w,c
  4315  000E76  A0D8               	btfss	status,0,c
  4316  000E78  EF40  F007         	goto	i2u265_41
  4317  000E7C  EF42  F007         	goto	i2u265_40
  4318  000E80                     i2u265_41:
  4319  000E80  EF1D  F007         	goto	i2l2568
  4320  000E84                     i2u265_40:
  4321  000E84                     
  4322                           ;./the3.h: 233:     return number_of_steps;
  4323  000E84  C020  F00E         	movff	compute_frisbee_target_and_route@number_of_steps,?_compute_frisbee_target_and_rou
      +                          te
  4324  000E88  C021  F00F         	movff	compute_frisbee_target_and_route@number_of_steps+1,?_compute_frisbee_target_and_r
      +                          oute+1
  4325  000E8C  0012               	return		;funcret
  4326  000E8E                     __end_of_compute_frisbee_target_and_route:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _SetupDebouncingTimer *****************
  4330 ;; Defined at:
  4331 ;;		line 483 in file "main.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_highIsr
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text14
  4359  003172                     __ptext14:
  4360                           	callstack 0
  4361  003172                     _SetupDebouncingTimer:
  4362                           	callstack 24
  4363  003172                     
  4364                           ;main.c: 484:     acceptInterrupts = 0;
  4365  003172  0E00               	movlw	0
  4366  003174  6E58               	movwf	_acceptInterrupts^0,c
  4367                           
  4368                           ;main.c: 485:     TMR0L = 0;
  4369  003176  0E00               	movlw	0
  4370  003178  6ED6               	movwf	214,c	;volatile
  4371                           
  4372                           ;main.c: 486:     TMR0H = 0;
  4373  00317A  0E00               	movlw	0
  4374  00317C  6ED7               	movwf	215,c	;volatile
  4375  00317E                     
  4376                           ;main.c: 487:     T0CONbits.TMR0ON = 1;
  4377  00317E  8ED5               	bsf	213,7,c	;volatile
  4378  003180  0012               	return		;funcret
  4379  003182                     __end_of_SetupDebouncingTimer:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _MoveEveryone *****************
  4383 ;; Defined at:
  4384 ;;		line 253 in file "main.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  val             2   32[COMRAM] int 
  4389 ;;  i               2   50[COMRAM] int 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;Total ram usage:       22 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    3
  4406 ;; This function calls:
  4407 ;;		_down
  4408 ;;		_downleft
  4409 ;;		_downright
  4410 ;;		_left
  4411 ;;		_random_generator
  4412 ;;		_right
  4413 ;;		_up
  4414 ;;		_upleft
  4415 ;;		_upright
  4416 ;;		i2___wmul
  4417 ;; This function is called by:
  4418 ;;		_highIsr
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text15
  4423  002612                     __ptext15:
  4424                           	callstack 0
  4425  002612                     _MoveEveryone:
  4426                           	callstack 21
  4427  002612                     
  4428                           ;main.c: 254:     for (int i = 0; i < 4; i++) {
  4429  002612  0E00               	movlw	0
  4430  002614  6E34               	movwf	(MoveEveryone@i+1)^0,c
  4431  002616  0E00               	movlw	0
  4432  002618  6E33               	movwf	MoveEveryone@i^0,c
  4433  00261A                     i2l2602:
  4434                           
  4435                           ;main.c: 255:         if (i == selectedPlayer) continue;
  4436  00261A  5055               	movf	_selectedPlayer^0,w,c
  4437  00261C  1833               	xorwf	MoveEveryone@i^0,w,c
  4438  00261E  E107               	bnz	i2u266_41
  4439  002620  5056               	movf	(_selectedPlayer+1)^0,w,c
  4440  002622  1834               	xorwf	(MoveEveryone@i+1)^0,w,c
  4441  002624  A4D8               	btfss	status,2,c
  4442  002626  EF17  F013         	goto	i2u266_41
  4443  00262A  EF19  F013         	goto	i2u266_40
  4444  00262E                     i2u266_41:
  4445  00262E  EF1B  F013         	goto	i2l2606
  4446  002632                     i2u266_40:
  4447  002632  EF19  F014         	goto	i2l2644
  4448  002636                     i2l2606:
  4449                           
  4450                           ;main.c: 257:         int val = random_generator(9);
  4451  002636  0E00               	movlw	0
  4452  002638  6E07               	movwf	(random_generator@modulo+1)^0,c
  4453  00263A  0E09               	movlw	9
  4454  00263C  6E06               	movwf	random_generator@modulo^0,c
  4455  00263E  EC99  F017         	call	_random_generator	;wreg free
  4456  002642  C006  F021         	movff	?_random_generator,MoveEveryone@val
  4457  002646  C007  F022         	movff	?_random_generator+1,MoveEveryone@val+1
  4458                           
  4459                           ;main.c: 258:         switch(val) {
  4460  00264A  EFE7  F013         	goto	i2l2642
  4461  00264E                     i2l2608:
  4462                           
  4463                           ;main.c: 260:                 left(&objs[i]);
  4464  00264E  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4465  002652  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4466  002656  0E00               	movlw	0
  4467  002658  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4468  00265A  0E05               	movlw	5
  4469  00265C  6E03               	movwf	i2___wmul@multiplicand^0,c
  4470  00265E  EC79  F018         	call	i2___wmul	;wreg free
  4471  002662  0E59               	movlw	low _objs
  4472  002664  2401               	addwf	?i2___wmul^0,w,c
  4473  002666  6E23               	movwf	_MoveEveryone$1795^0,c
  4474  002668  0E00               	movlw	high _objs
  4475  00266A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4476  00266C  6E24               	movwf	(_MoveEveryone$1795+1)^0,c
  4477  00266E                     
  4478                           ;main.c: 260:                 left(&objs[i]);
  4479  00266E  C023  F013         	movff	_MoveEveryone$1795,left@pl
  4480  002672  C024  F014         	movff	_MoveEveryone$1795+1,left@pl+1
  4481  002676  ECDC  F00B         	call	_left	;wreg free
  4482                           
  4483                           ;main.c: 261:                 break;
  4484  00267A  EF19  F014         	goto	i2l2644
  4485  00267E                     i2l2612:
  4486                           
  4487                           ;main.c: 263:                 right(&objs[i]);
  4488  00267E  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4489  002682  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4490  002686  0E00               	movlw	0
  4491  002688  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4492  00268A  0E05               	movlw	5
  4493  00268C  6E03               	movwf	i2___wmul@multiplicand^0,c
  4494  00268E  EC79  F018         	call	i2___wmul	;wreg free
  4495  002692  0E59               	movlw	low _objs
  4496  002694  2401               	addwf	?i2___wmul^0,w,c
  4497  002696  6E25               	movwf	_MoveEveryone$1796^0,c
  4498  002698  0E00               	movlw	high _objs
  4499  00269A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4500  00269C  6E26               	movwf	(_MoveEveryone$1796+1)^0,c
  4501  00269E                     
  4502                           ;main.c: 263:                 right(&objs[i]);
  4503  00269E  C025  F013         	movff	_MoveEveryone$1796,right@pl
  4504  0026A2  C026  F014         	movff	_MoveEveryone$1796+1,right@pl+1
  4505  0026A6  ECCE  F00E         	call	_right	;wreg free
  4506                           
  4507                           ;main.c: 264:                 break;
  4508  0026AA  EF19  F014         	goto	i2l2644
  4509  0026AE                     i2l2616:
  4510                           
  4511                           ;main.c: 266:                 up(&objs[i]);
  4512  0026AE  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4513  0026B2  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4514  0026B6  0E00               	movlw	0
  4515  0026B8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4516  0026BA  0E05               	movlw	5
  4517  0026BC  6E03               	movwf	i2___wmul@multiplicand^0,c
  4518  0026BE  EC79  F018         	call	i2___wmul	;wreg free
  4519  0026C2  0E59               	movlw	low _objs
  4520  0026C4  2401               	addwf	?i2___wmul^0,w,c
  4521  0026C6  6E27               	movwf	_MoveEveryone$1797^0,c
  4522  0026C8  0E00               	movlw	high _objs
  4523  0026CA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4524  0026CC  6E28               	movwf	(_MoveEveryone$1797+1)^0,c
  4525  0026CE                     
  4526                           ;main.c: 266:                 up(&objs[i]);
  4527  0026CE  C027  F013         	movff	_MoveEveryone$1797,up@pl
  4528  0026D2  C028  F014         	movff	_MoveEveryone$1797+1,up@pl+1
  4529  0026D6  EC5E  F00A         	call	_up	;wreg free
  4530                           
  4531                           ;main.c: 267:                 break;
  4532  0026DA  EF19  F014         	goto	i2l2644
  4533  0026DE                     i2l2620:
  4534                           
  4535                           ;main.c: 269:                 down(&objs[i]);
  4536  0026DE  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4537  0026E2  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4538  0026E6  0E00               	movlw	0
  4539  0026E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4540  0026EA  0E05               	movlw	5
  4541  0026EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  4542  0026EE  EC79  F018         	call	i2___wmul	;wreg free
  4543  0026F2  0E59               	movlw	low _objs
  4544  0026F4  2401               	addwf	?i2___wmul^0,w,c
  4545  0026F6  6E29               	movwf	_MoveEveryone$1798^0,c
  4546  0026F8  0E00               	movlw	high _objs
  4547  0026FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4548  0026FC  6E2A               	movwf	(_MoveEveryone$1798+1)^0,c
  4549  0026FE                     
  4550                           ;main.c: 269:                 down(&objs[i]);
  4551  0026FE  C029  F013         	movff	_MoveEveryone$1798,down@pl
  4552  002702  C02A  F014         	movff	_MoveEveryone$1798+1,down@pl+1
  4553  002706  EC41  F010         	call	_down	;wreg free
  4554                           
  4555                           ;main.c: 270:                 break;
  4556  00270A  EF19  F014         	goto	i2l2644
  4557  00270E                     i2l2624:
  4558                           
  4559                           ;main.c: 272:                 upleft(&objs[i]);
  4560  00270E  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4561  002712  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4562  002716  0E00               	movlw	0
  4563  002718  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4564  00271A  0E05               	movlw	5
  4565  00271C  6E03               	movwf	i2___wmul@multiplicand^0,c
  4566  00271E  EC79  F018         	call	i2___wmul	;wreg free
  4567  002722  0E59               	movlw	low _objs
  4568  002724  2401               	addwf	?i2___wmul^0,w,c
  4569  002726  6E2B               	movwf	_MoveEveryone$1799^0,c
  4570  002728  0E00               	movlw	high _objs
  4571  00272A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4572  00272C  6E2C               	movwf	(_MoveEveryone$1799+1)^0,c
  4573  00272E                     
  4574                           ;main.c: 272:                 upleft(&objs[i]);
  4575  00272E  C02B  F013         	movff	_MoveEveryone$1799,upleft@pl
  4576  002732  C02C  F014         	movff	_MoveEveryone$1799+1,upleft@pl+1
  4577  002736  EC47  F007         	call	_upleft	;wreg free
  4578                           
  4579                           ;main.c: 273:                 break;
  4580  00273A  EF19  F014         	goto	i2l2644
  4581  00273E                     i2l2628:
  4582                           
  4583                           ;main.c: 275:                 upright(&objs[i]);
  4584  00273E  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4585  002742  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4586  002746  0E00               	movlw	0
  4587  002748  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4588  00274A  0E05               	movlw	5
  4589  00274C  6E03               	movwf	i2___wmul@multiplicand^0,c
  4590  00274E  EC79  F018         	call	i2___wmul	;wreg free
  4591  002752  0E59               	movlw	low _objs
  4592  002754  2401               	addwf	?i2___wmul^0,w,c
  4593  002756  6E2D               	movwf	_MoveEveryone$1800^0,c
  4594  002758  0E00               	movlw	high _objs
  4595  00275A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4596  00275C  6E2E               	movwf	(_MoveEveryone$1800+1)^0,c
  4597  00275E                     
  4598                           ;main.c: 275:                 upright(&objs[i]);
  4599  00275E  C02D  F013         	movff	_MoveEveryone$1800,upright@pl
  4600  002762  C02E  F014         	movff	_MoveEveryone$1800+1,upright@pl+1
  4601  002766  ECD6  F008         	call	_upright	;wreg free
  4602                           
  4603                           ;main.c: 276:                 break;
  4604  00276A  EF19  F014         	goto	i2l2644
  4605  00276E                     i2l2632:
  4606                           
  4607                           ;main.c: 278:                 downleft(&objs[i]);
  4608  00276E  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4609  002772  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4610  002776  0E00               	movlw	0
  4611  002778  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4612  00277A  0E05               	movlw	5
  4613  00277C  6E03               	movwf	i2___wmul@multiplicand^0,c
  4614  00277E  EC79  F018         	call	i2___wmul	;wreg free
  4615  002782  0E59               	movlw	low _objs
  4616  002784  2401               	addwf	?i2___wmul^0,w,c
  4617  002786  6E2F               	movwf	_MoveEveryone$1801^0,c
  4618  002788  0E00               	movlw	high _objs
  4619  00278A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4620  00278C  6E30               	movwf	(_MoveEveryone$1801+1)^0,c
  4621  00278E                     
  4622                           ;main.c: 278:                 downleft(&objs[i]);
  4623  00278E  C02F  F013         	movff	_MoveEveryone$1801,downleft@pl
  4624  002792  C030  F014         	movff	_MoveEveryone$1801+1,downleft@pl+1
  4625  002796  EC56  F00D         	call	_downleft	;wreg free
  4626                           
  4627                           ;main.c: 279:                 break;
  4628  00279A  EF19  F014         	goto	i2l2644
  4629  00279E                     i2l2636:
  4630                           
  4631                           ;main.c: 281:                 downright(&objs[i]);
  4632  00279E  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4633  0027A2  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4634  0027A6  0E00               	movlw	0
  4635  0027A8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4636  0027AA  0E05               	movlw	5
  4637  0027AC  6E03               	movwf	i2___wmul@multiplicand^0,c
  4638  0027AE  EC79  F018         	call	i2___wmul	;wreg free
  4639  0027B2  0E59               	movlw	low _objs
  4640  0027B4  2401               	addwf	?i2___wmul^0,w,c
  4641  0027B6  6E31               	movwf	_MoveEveryone$1802^0,c
  4642  0027B8  0E00               	movlw	high _objs
  4643  0027BA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4644  0027BC  6E32               	movwf	(_MoveEveryone$1802+1)^0,c
  4645  0027BE                     
  4646                           ;main.c: 281:                 downright(&objs[i]);
  4647  0027BE  C031  F013         	movff	_MoveEveryone$1802,downright@pl
  4648  0027C2  C032  F014         	movff	_MoveEveryone$1802+1,downright@pl+1
  4649  0027C6  ECA8  F011         	call	_downright	;wreg free
  4650                           
  4651                           ;main.c: 282:                 break;
  4652  0027CA  EF19  F014         	goto	i2l2644
  4653  0027CE                     i2l2642:
  4654  0027CE  C021  F01F         	movff	MoveEveryone@val,??_MoveEveryone
  4655  0027D2  C022  F020         	movff	MoveEveryone@val+1,??_MoveEveryone+1
  4656                           
  4657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4658                           ; Switch size 1, requested type "simple"
  4659                           ; Number of cases is 1, Range of values is 0 to 0
  4660                           ; switch strategies available:
  4661                           ; Name         Instructions Cycles
  4662                           ; simple_byte            4     3 (average)
  4663                           ;	Chosen strategy is simple_byte
  4664  0027D6  5020               	movf	(??_MoveEveryone+1)^0,w,c
  4665  0027D8  0A00               	xorlw	0	; case 0
  4666  0027DA  B4D8               	btfsc	status,2,c
  4667  0027DC  EFF2  F013         	goto	i2l3258
  4668  0027E0  EF19  F014         	goto	i2l2644
  4669  0027E4                     i2l3258:
  4670                           
  4671                           ; Switch size 1, requested type "simple"
  4672                           ; Number of cases is 9, Range of values is 0 to 8
  4673                           ; switch strategies available:
  4674                           ; Name         Instructions Cycles
  4675                           ; simple_byte           28    15 (average)
  4676                           ;	Chosen strategy is simple_byte
  4677  0027E4  501F               	movf	??_MoveEveryone^0,w,c
  4678  0027E6  0A00               	xorlw	0	; case 0
  4679  0027E8  B4D8               	btfsc	status,2,c
  4680  0027EA  EF27  F013         	goto	i2l2608
  4681  0027EE  0A01               	xorlw	1	; case 1
  4682  0027F0  B4D8               	btfsc	status,2,c
  4683  0027F2  EF3F  F013         	goto	i2l2612
  4684  0027F6  0A03               	xorlw	3	; case 2
  4685  0027F8  B4D8               	btfsc	status,2,c
  4686  0027FA  EF57  F013         	goto	i2l2616
  4687  0027FE  0A01               	xorlw	1	; case 3
  4688  002800  B4D8               	btfsc	status,2,c
  4689  002802  EF6F  F013         	goto	i2l2620
  4690  002806  0A07               	xorlw	7	; case 4
  4691  002808  B4D8               	btfsc	status,2,c
  4692  00280A  EF87  F013         	goto	i2l2624
  4693  00280E  0A01               	xorlw	1	; case 5
  4694  002810  B4D8               	btfsc	status,2,c
  4695  002812  EF9F  F013         	goto	i2l2628
  4696  002816  0A03               	xorlw	3	; case 6
  4697  002818  B4D8               	btfsc	status,2,c
  4698  00281A  EFB7  F013         	goto	i2l2632
  4699  00281E  0A01               	xorlw	1	; case 7
  4700  002820  B4D8               	btfsc	status,2,c
  4701  002822  EFCF  F013         	goto	i2l2636
  4702  002826  0A0F               	xorlw	15	; case 8
  4703  002828  B4D8               	btfsc	status,2,c
  4704  00282A  EF19  F014         	goto	i2l2644
  4705  00282E  EF19  F014         	goto	i2l2644
  4706  002832                     i2l2644:
  4707  002832  4A33               	infsnz	MoveEveryone@i^0,f,c
  4708  002834  2A34               	incf	(MoveEveryone@i+1)^0,f,c
  4709  002836  BE34               	btfsc	(MoveEveryone@i+1)^0,7,c
  4710  002838  EF27  F014         	goto	i2u267_41
  4711  00283C  5034               	movf	(MoveEveryone@i+1)^0,w,c
  4712  00283E  E109               	bnz	i2u267_40
  4713  002840  0E04               	movlw	4
  4714  002842  5C33               	subwf	MoveEveryone@i^0,w,c
  4715  002844  A0D8               	btfss	status,0,c
  4716  002846  EF27  F014         	goto	i2u267_41
  4717  00284A  EF29  F014         	goto	i2u267_40
  4718  00284E                     i2u267_41:
  4719  00284E  EF0D  F013         	goto	i2l2602
  4720  002852                     i2u267_40:
  4721  002852  0012               	return		;funcret
  4722  002854                     __end_of_MoveEveryone:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _upright *****************
  4726 ;; Defined at:
  4727 ;;		line 623 in file "main.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  pl              2   18[COMRAM] PTR struct GameElement
  4730 ;;		 -> objs(30), 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;Total ram usage:       11 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    2
  4749 ;; This function calls:
  4750 ;;		_CatchFrisbee
  4751 ;; This function is called by:
  4752 ;;		_MoveEveryone
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text16
  4757  0011AC                     __ptext16:
  4758                           	callstack 0
  4759  0011AC                     _upright:
  4760                           	callstack 21
  4761  0011AC                     
  4762                           ;main.c: 624:     if (pl->x == 16 || pl->y == 1) return;
  4763  0011AC  C013  FFD9         	movff	upright@pl,fsr2l
  4764  0011B0  C014  FFDA         	movff	upright@pl+1,fsr2h
  4765  0011B4  0E10               	movlw	16
  4766  0011B6  18DE               	xorwf	postinc2,w,c
  4767  0011B8  B4D8               	btfsc	status,2,c
  4768  0011BA  EFE1  F008         	goto	i2u225_41
  4769  0011BE  EFE3  F008         	goto	i2u225_40
  4770  0011C2                     i2u225_41:
  4771  0011C2  EF5D  F00A         	goto	i2l420
  4772  0011C6                     i2u225_40:
  4773  0011C6  EE20 F001          	lfsr	2,1
  4774  0011CA  5013               	movf	upright@pl^0,w,c
  4775  0011CC  26D9               	addwf	fsr2l,f,c
  4776  0011CE  5014               	movf	(upright@pl+1)^0,w,c
  4777  0011D0  22DA               	addwfc	fsr2h,f,c
  4778  0011D2  04DE               	decf	postinc2,w,c
  4779  0011D4  A4D8               	btfss	status,2,c
  4780  0011D6  EFEF  F008         	goto	i2u226_41
  4781  0011DA  EFF1  F008         	goto	i2u226_40
  4782  0011DE                     i2u226_41:
  4783  0011DE  EFF3  F008         	goto	i2l2412
  4784  0011E2                     i2u226_40:
  4785  0011E2  EF5D  F00A         	goto	i2l420
  4786  0011E6                     i2l2412:
  4787                           
  4788                           ;main.c: 625:     if (display[pl->y-2][pl->x] != ((void*)0)) {
  4789  0011E6  EE20 F001          	lfsr	2,1
  4790  0011EA  5013               	movf	upright@pl^0,w,c
  4791  0011EC  26D9               	addwf	fsr2l,f,c
  4792  0011EE  5014               	movf	(upright@pl+1)^0,w,c
  4793  0011F0  22DA               	addwfc	fsr2h,f,c
  4794  0011F2  50DF               	movf	indf2,w,c
  4795  0011F4  6E15               	movwf	??_upright^0,c
  4796  0011F6  6A16               	clrf	(??_upright+1)^0,c
  4797  0011F8  0E05               	movlw	5
  4798  0011FA                     i2u227_45:
  4799  0011FA  90D8               	bcf	status,0,c
  4800  0011FC  3615               	rlcf	??_upright^0,f,c
  4801  0011FE  3616               	rlcf	(??_upright+1)^0,f,c
  4802  001200  2EE8               	decfsz	wreg,f,c
  4803  001202  EFFD  F008         	goto	i2u227_45
  4804  001206  C013  FFD9         	movff	upright@pl,fsr2l
  4805  00120A  C014  FFDA         	movff	upright@pl+1,fsr2h
  4806  00120E  50DF               	movf	indf2,w,c
  4807  001210  6E17               	movwf	(??_upright+2)^0,c
  4808  001212  5017               	movf	(??_upright+2)^0,w,c
  4809  001214  0D02               	mullw	2
  4810  001216  0EC0               	movlw	192
  4811  001218  6E18               	movwf	(??_upright+3)^0,c
  4812  00121A  0EFF               	movlw	255
  4813  00121C  6E19               	movwf	(??_upright+4)^0,c
  4814  00121E  0E00               	movlw	low _display
  4815  001220  6E1A               	movwf	(??_upright+5)^0,c
  4816  001222  0E01               	movlw	high _display
  4817  001224  6E1B               	movwf	(??_upright+6)^0,c
  4818  001226  5018               	movf	(??_upright+3)^0,w,c
  4819  001228  261A               	addwf	(??_upright+5)^0,f,c
  4820  00122A  5019               	movf	(??_upright+4)^0,w,c
  4821  00122C  221B               	addwfc	(??_upright+6)^0,f,c
  4822  00122E  50F3               	movf	243,w,c
  4823  001230  261A               	addwf	(??_upright+5)^0,f,c
  4824  001232  50F4               	movf	244,w,c
  4825  001234  221B               	addwfc	(??_upright+6)^0,f,c
  4826  001236  5015               	movf	??_upright^0,w,c
  4827  001238  241A               	addwf	(??_upright+5)^0,w,c
  4828  00123A  6ED9               	movwf	fsr2l,c
  4829  00123C  5016               	movf	(??_upright+1)^0,w,c
  4830  00123E  201B               	addwfc	(??_upright+6)^0,w,c
  4831  001240  6EDA               	movwf	fsr2h,c
  4832  001242  50DE               	movf	postinc2,w,c
  4833  001244  10DE               	iorwf	postinc2,w,c
  4834  001246  B4D8               	btfsc	status,2,c
  4835  001248  EF28  F009         	goto	i2u228_41
  4836  00124C  EF2A  F009         	goto	i2u228_40
  4837  001250                     i2u228_41:
  4838  001250  EFE9  F009         	goto	i2l2426
  4839  001254                     i2u228_40:
  4840  001254                     
  4841                           ;main.c: 626:         if (display[pl->y-2][pl->x]->type == OT_PLAYERA) return;
  4842  001254  EE20 F001          	lfsr	2,1
  4843  001258  5013               	movf	upright@pl^0,w,c
  4844  00125A  26D9               	addwf	fsr2l,f,c
  4845  00125C  5014               	movf	(upright@pl+1)^0,w,c
  4846  00125E  22DA               	addwfc	fsr2h,f,c
  4847  001260  50DF               	movf	indf2,w,c
  4848  001262  6E15               	movwf	??_upright^0,c
  4849  001264  6A16               	clrf	(??_upright+1)^0,c
  4850  001266  0E05               	movlw	5
  4851  001268                     i2u229_45:
  4852  001268  90D8               	bcf	status,0,c
  4853  00126A  3615               	rlcf	??_upright^0,f,c
  4854  00126C  3616               	rlcf	(??_upright+1)^0,f,c
  4855  00126E  2EE8               	decfsz	wreg,f,c
  4856  001270  EF34  F009         	goto	i2u229_45
  4857  001274  C013  FFD9         	movff	upright@pl,fsr2l
  4858  001278  C014  FFDA         	movff	upright@pl+1,fsr2h
  4859  00127C  50DF               	movf	indf2,w,c
  4860  00127E  6E17               	movwf	(??_upright+2)^0,c
  4861  001280  5017               	movf	(??_upright+2)^0,w,c
  4862  001282  0D02               	mullw	2
  4863  001284  0EC0               	movlw	192
  4864  001286  6E18               	movwf	(??_upright+3)^0,c
  4865  001288  0EFF               	movlw	255
  4866  00128A  6E19               	movwf	(??_upright+4)^0,c
  4867  00128C  0E00               	movlw	low _display
  4868  00128E  6E1A               	movwf	(??_upright+5)^0,c
  4869  001290  0E01               	movlw	high _display
  4870  001292  6E1B               	movwf	(??_upright+6)^0,c
  4871  001294  5018               	movf	(??_upright+3)^0,w,c
  4872  001296  261A               	addwf	(??_upright+5)^0,f,c
  4873  001298  5019               	movf	(??_upright+4)^0,w,c
  4874  00129A  221B               	addwfc	(??_upright+6)^0,f,c
  4875  00129C  50F3               	movf	243,w,c
  4876  00129E  261A               	addwf	(??_upright+5)^0,f,c
  4877  0012A0  50F4               	movf	244,w,c
  4878  0012A2  221B               	addwfc	(??_upright+6)^0,f,c
  4879  0012A4  5015               	movf	??_upright^0,w,c
  4880  0012A6  241A               	addwf	(??_upright+5)^0,w,c
  4881  0012A8  6ED9               	movwf	fsr2l,c
  4882  0012AA  5016               	movf	(??_upright+1)^0,w,c
  4883  0012AC  201B               	addwfc	(??_upright+6)^0,w,c
  4884  0012AE  6EDA               	movwf	fsr2h,c
  4885  0012B0  EE10 F003          	lfsr	1,3
  4886  0012B4  50DE               	movf	postinc2,w,c
  4887  0012B6  26E1               	addwf	fsr1l,f,c
  4888  0012B8  50DD               	movf	postdec2,w,c
  4889  0012BA  22E2               	addwfc	fsr1h,f,c
  4890  0012BC  50E7               	movf	indf1,w,c
  4891  0012BE  A4D8               	btfss	status,2,c
  4892  0012C0  EF64  F009         	goto	i2u230_41
  4893  0012C4  EF66  F009         	goto	i2u230_40
  4894  0012C8                     i2u230_41:
  4895  0012C8  EF68  F009         	goto	i2l2418
  4896  0012CC                     i2u230_40:
  4897  0012CC  EF5D  F00A         	goto	i2l420
  4898  0012D0                     i2l2418:
  4899                           
  4900                           ;main.c: 627:         if (display[pl->y-2][pl->x]->type == OT_PLAYERB) return;
  4901  0012D0  EE20 F001          	lfsr	2,1
  4902  0012D4  5013               	movf	upright@pl^0,w,c
  4903  0012D6  26D9               	addwf	fsr2l,f,c
  4904  0012D8  5014               	movf	(upright@pl+1)^0,w,c
  4905  0012DA  22DA               	addwfc	fsr2h,f,c
  4906  0012DC  50DF               	movf	indf2,w,c
  4907  0012DE  6E15               	movwf	??_upright^0,c
  4908  0012E0  6A16               	clrf	(??_upright+1)^0,c
  4909  0012E2  0E05               	movlw	5
  4910  0012E4                     i2u231_45:
  4911  0012E4  90D8               	bcf	status,0,c
  4912  0012E6  3615               	rlcf	??_upright^0,f,c
  4913  0012E8  3616               	rlcf	(??_upright+1)^0,f,c
  4914  0012EA  2EE8               	decfsz	wreg,f,c
  4915  0012EC  EF72  F009         	goto	i2u231_45
  4916  0012F0  C013  FFD9         	movff	upright@pl,fsr2l
  4917  0012F4  C014  FFDA         	movff	upright@pl+1,fsr2h
  4918  0012F8  50DF               	movf	indf2,w,c
  4919  0012FA  6E17               	movwf	(??_upright+2)^0,c
  4920  0012FC  5017               	movf	(??_upright+2)^0,w,c
  4921  0012FE  0D02               	mullw	2
  4922  001300  0EC0               	movlw	192
  4923  001302  6E18               	movwf	(??_upright+3)^0,c
  4924  001304  0EFF               	movlw	255
  4925  001306  6E19               	movwf	(??_upright+4)^0,c
  4926  001308  0E00               	movlw	low _display
  4927  00130A  6E1A               	movwf	(??_upright+5)^0,c
  4928  00130C  0E01               	movlw	high _display
  4929  00130E  6E1B               	movwf	(??_upright+6)^0,c
  4930  001310  5018               	movf	(??_upright+3)^0,w,c
  4931  001312  261A               	addwf	(??_upright+5)^0,f,c
  4932  001314  5019               	movf	(??_upright+4)^0,w,c
  4933  001316  221B               	addwfc	(??_upright+6)^0,f,c
  4934  001318  50F3               	movf	243,w,c
  4935  00131A  261A               	addwf	(??_upright+5)^0,f,c
  4936  00131C  50F4               	movf	244,w,c
  4937  00131E  221B               	addwfc	(??_upright+6)^0,f,c
  4938  001320  5015               	movf	??_upright^0,w,c
  4939  001322  241A               	addwf	(??_upright+5)^0,w,c
  4940  001324  6ED9               	movwf	fsr2l,c
  4941  001326  5016               	movf	(??_upright+1)^0,w,c
  4942  001328  201B               	addwfc	(??_upright+6)^0,w,c
  4943  00132A  6EDA               	movwf	fsr2h,c
  4944  00132C  EE10 F003          	lfsr	1,3
  4945  001330  50DE               	movf	postinc2,w,c
  4946  001332  26E1               	addwf	fsr1l,f,c
  4947  001334  50DD               	movf	postdec2,w,c
  4948  001336  22E2               	addwfc	fsr1h,f,c
  4949  001338  04E6               	decf	postinc1,w,c
  4950  00133A  A4D8               	btfss	status,2,c
  4951  00133C  EFA2  F009         	goto	i2u232_41
  4952  001340  EFA4  F009         	goto	i2u232_40
  4953  001344                     i2u232_41:
  4954  001344  EFA6  F009         	goto	i2l2422
  4955  001348                     i2u232_40:
  4956  001348  EF5D  F00A         	goto	i2l420
  4957  00134C                     i2l2422:
  4958                           
  4959                           ;main.c: 628:         if (display[pl->y-2][pl->x]->type == OT_FRISBEE) {
  4960  00134C  EE20 F001          	lfsr	2,1
  4961  001350  5013               	movf	upright@pl^0,w,c
  4962  001352  26D9               	addwf	fsr2l,f,c
  4963  001354  5014               	movf	(upright@pl+1)^0,w,c
  4964  001356  22DA               	addwfc	fsr2h,f,c
  4965  001358  50DF               	movf	indf2,w,c
  4966  00135A  6E15               	movwf	??_upright^0,c
  4967  00135C  6A16               	clrf	(??_upright+1)^0,c
  4968  00135E  0E05               	movlw	5
  4969  001360                     i2u233_45:
  4970  001360  90D8               	bcf	status,0,c
  4971  001362  3615               	rlcf	??_upright^0,f,c
  4972  001364  3616               	rlcf	(??_upright+1)^0,f,c
  4973  001366  2EE8               	decfsz	wreg,f,c
  4974  001368  EFB0  F009         	goto	i2u233_45
  4975  00136C  C013  FFD9         	movff	upright@pl,fsr2l
  4976  001370  C014  FFDA         	movff	upright@pl+1,fsr2h
  4977  001374  50DF               	movf	indf2,w,c
  4978  001376  6E17               	movwf	(??_upright+2)^0,c
  4979  001378  5017               	movf	(??_upright+2)^0,w,c
  4980  00137A  0D02               	mullw	2
  4981  00137C  0EC0               	movlw	192
  4982  00137E  6E18               	movwf	(??_upright+3)^0,c
  4983  001380  0EFF               	movlw	255
  4984  001382  6E19               	movwf	(??_upright+4)^0,c
  4985  001384  0E00               	movlw	low _display
  4986  001386  6E1A               	movwf	(??_upright+5)^0,c
  4987  001388  0E01               	movlw	high _display
  4988  00138A  6E1B               	movwf	(??_upright+6)^0,c
  4989  00138C  5018               	movf	(??_upright+3)^0,w,c
  4990  00138E  261A               	addwf	(??_upright+5)^0,f,c
  4991  001390  5019               	movf	(??_upright+4)^0,w,c
  4992  001392  221B               	addwfc	(??_upright+6)^0,f,c
  4993  001394  50F3               	movf	243,w,c
  4994  001396  261A               	addwf	(??_upright+5)^0,f,c
  4995  001398  50F4               	movf	244,w,c
  4996  00139A  221B               	addwfc	(??_upright+6)^0,f,c
  4997  00139C  5015               	movf	??_upright^0,w,c
  4998  00139E  241A               	addwf	(??_upright+5)^0,w,c
  4999  0013A0  6ED9               	movwf	fsr2l,c
  5000  0013A2  5016               	movf	(??_upright+1)^0,w,c
  5001  0013A4  201B               	addwfc	(??_upright+6)^0,w,c
  5002  0013A6  6EDA               	movwf	fsr2h,c
  5003  0013A8  EE10 F003          	lfsr	1,3
  5004  0013AC  50DE               	movf	postinc2,w,c
  5005  0013AE  26E1               	addwf	fsr1l,f,c
  5006  0013B0  50DD               	movf	postdec2,w,c
  5007  0013B2  22E2               	addwfc	fsr1h,f,c
  5008  0013B4  0E02               	movlw	2
  5009  0013B6  18E6               	xorwf	postinc1,w,c
  5010  0013B8  A4D8               	btfss	status,2,c
  5011  0013BA  EFE1  F009         	goto	i2u234_41
  5012  0013BE  EFE3  F009         	goto	i2u234_40
  5013  0013C2                     i2u234_41:
  5014  0013C2  EFE9  F009         	goto	i2l2426
  5015  0013C6                     i2u234_40:
  5016  0013C6                     
  5017                           ;main.c: 629:             CatchFrisbee(pl);
  5018  0013C6  C013  F007         	movff	upright@pl,CatchFrisbee@pl
  5019  0013CA  C014  F008         	movff	upright@pl+1,CatchFrisbee@pl+1
  5020  0013CE  EC15  F015         	call	_CatchFrisbee	;wreg free
  5021  0013D2                     i2l2426:
  5022                           
  5023                           ;main.c: 632:     display[pl->y-1][pl->x-1] = ((void*)0);
  5024  0013D2  EE20 F001          	lfsr	2,1
  5025  0013D6  5013               	movf	upright@pl^0,w,c
  5026  0013D8  26D9               	addwf	fsr2l,f,c
  5027  0013DA  5014               	movf	(upright@pl+1)^0,w,c
  5028  0013DC  22DA               	addwfc	fsr2h,f,c
  5029  0013DE  50DF               	movf	indf2,w,c
  5030  0013E0  6E15               	movwf	??_upright^0,c
  5031  0013E2  6A16               	clrf	(??_upright+1)^0,c
  5032  0013E4  0E05               	movlw	5
  5033  0013E6                     i2u235_45:
  5034  0013E6  90D8               	bcf	status,0,c
  5035  0013E8  3615               	rlcf	??_upright^0,f,c
  5036  0013EA  3616               	rlcf	(??_upright+1)^0,f,c
  5037  0013EC  2EE8               	decfsz	wreg,f,c
  5038  0013EE  EFF3  F009         	goto	i2u235_45
  5039  0013F2  C013  FFD9         	movff	upright@pl,fsr2l
  5040  0013F6  C014  FFDA         	movff	upright@pl+1,fsr2h
  5041  0013FA  50DF               	movf	indf2,w,c
  5042  0013FC  6E17               	movwf	(??_upright+2)^0,c
  5043  0013FE  6A18               	clrf	(??_upright+3)^0,c
  5044  001400  90D8               	bcf	status,0,c
  5045  001402  3617               	rlcf	(??_upright+2)^0,f,c
  5046  001404  3618               	rlcf	(??_upright+3)^0,f,c
  5047  001406  0EDE               	movlw	222
  5048  001408  6E19               	movwf	(??_upright+4)^0,c
  5049  00140A  0EFF               	movlw	255
  5050  00140C  6E1A               	movwf	(??_upright+5)^0,c
  5051  00140E  0E00               	movlw	low _display
  5052  001410  6E1B               	movwf	(??_upright+6)^0,c
  5053  001412  0E01               	movlw	high _display
  5054  001414  6E1C               	movwf	(??_upright+7)^0,c
  5055  001416  5019               	movf	(??_upright+4)^0,w,c
  5056  001418  261B               	addwf	(??_upright+6)^0,f,c
  5057  00141A  501A               	movf	(??_upright+5)^0,w,c
  5058  00141C  221C               	addwfc	(??_upright+7)^0,f,c
  5059  00141E  5017               	movf	(??_upright+2)^0,w,c
  5060  001420  261B               	addwf	(??_upright+6)^0,f,c
  5061  001422  5018               	movf	(??_upright+3)^0,w,c
  5062  001424  221C               	addwfc	(??_upright+7)^0,f,c
  5063  001426  5015               	movf	??_upright^0,w,c
  5064  001428  241B               	addwf	(??_upright+6)^0,w,c
  5065  00142A  6ED9               	movwf	fsr2l,c
  5066  00142C  5016               	movf	(??_upright+1)^0,w,c
  5067  00142E  201C               	addwfc	(??_upright+7)^0,w,c
  5068  001430  6EDA               	movwf	fsr2h,c
  5069  001432  0E00               	movlw	0
  5070  001434  6EDE               	movwf	postinc2,c
  5071  001436  0E00               	movlw	0
  5072  001438  6EDD               	movwf	postdec2,c
  5073  00143A                     
  5074                           ;main.c: 633:     pl->x++;
  5075  00143A  C013  FFD9         	movff	upright@pl,fsr2l
  5076  00143E  C014  FFDA         	movff	upright@pl+1,fsr2h
  5077  001442  2ADF               	incf	indf2,f,c
  5078  001444                     
  5079                           ;main.c: 634:     pl->y--;
  5080  001444  EE20 F001          	lfsr	2,1
  5081  001448  5013               	movf	upright@pl^0,w,c
  5082  00144A  26D9               	addwf	fsr2l,f,c
  5083  00144C  5014               	movf	(upright@pl+1)^0,w,c
  5084  00144E  22DA               	addwfc	fsr2h,f,c
  5085  001450  06DF               	decf	indf2,f,c
  5086  001452                     
  5087                           ;main.c: 635:     display[pl->y-1][pl->x-1] = pl;
  5088  001452  EE20 F001          	lfsr	2,1
  5089  001456  5013               	movf	upright@pl^0,w,c
  5090  001458  26D9               	addwf	fsr2l,f,c
  5091  00145A  5014               	movf	(upright@pl+1)^0,w,c
  5092  00145C  22DA               	addwfc	fsr2h,f,c
  5093  00145E  50DF               	movf	indf2,w,c
  5094  001460  6E15               	movwf	??_upright^0,c
  5095  001462  6A16               	clrf	(??_upright+1)^0,c
  5096  001464  0E05               	movlw	5
  5097  001466                     i2u236_45:
  5098  001466  90D8               	bcf	status,0,c
  5099  001468  3615               	rlcf	??_upright^0,f,c
  5100  00146A  3616               	rlcf	(??_upright+1)^0,f,c
  5101  00146C  2EE8               	decfsz	wreg,f,c
  5102  00146E  EF33  F00A         	goto	i2u236_45
  5103  001472  C013  FFD9         	movff	upright@pl,fsr2l
  5104  001476  C014  FFDA         	movff	upright@pl+1,fsr2h
  5105  00147A  50DF               	movf	indf2,w,c
  5106  00147C  6E17               	movwf	(??_upright+2)^0,c
  5107  00147E  6A18               	clrf	(??_upright+3)^0,c
  5108  001480  90D8               	bcf	status,0,c
  5109  001482  3617               	rlcf	(??_upright+2)^0,f,c
  5110  001484  3618               	rlcf	(??_upright+3)^0,f,c
  5111  001486  0EDE               	movlw	222
  5112  001488  6E19               	movwf	(??_upright+4)^0,c
  5113  00148A  0EFF               	movlw	255
  5114  00148C  6E1A               	movwf	(??_upright+5)^0,c
  5115  00148E  0E00               	movlw	low _display
  5116  001490  6E1B               	movwf	(??_upright+6)^0,c
  5117  001492  0E01               	movlw	high _display
  5118  001494  6E1C               	movwf	(??_upright+7)^0,c
  5119  001496  5019               	movf	(??_upright+4)^0,w,c
  5120  001498  261B               	addwf	(??_upright+6)^0,f,c
  5121  00149A  501A               	movf	(??_upright+5)^0,w,c
  5122  00149C  221C               	addwfc	(??_upright+7)^0,f,c
  5123  00149E  5017               	movf	(??_upright+2)^0,w,c
  5124  0014A0  261B               	addwf	(??_upright+6)^0,f,c
  5125  0014A2  5018               	movf	(??_upright+3)^0,w,c
  5126  0014A4  221C               	addwfc	(??_upright+7)^0,f,c
  5127  0014A6  5015               	movf	??_upright^0,w,c
  5128  0014A8  241B               	addwf	(??_upright+6)^0,w,c
  5129  0014AA  6ED9               	movwf	fsr2l,c
  5130  0014AC  5016               	movf	(??_upright+1)^0,w,c
  5131  0014AE  201C               	addwfc	(??_upright+7)^0,w,c
  5132  0014B0  6EDA               	movwf	fsr2h,c
  5133  0014B2  C013  FFDE         	movff	upright@pl,postinc2
  5134  0014B6  C014  FFDD         	movff	upright@pl+1,postdec2
  5135  0014BA                     i2l420:
  5136  0014BA  0012               	return		;funcret
  5137  0014BC                     __end_of_upright:
  5138                           	callstack 0
  5139                           
  5140 ;; *************** function _upleft *****************
  5141 ;; Defined at:
  5142 ;;		line 608 in file "main.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  pl              2   18[COMRAM] PTR struct GameElement
  5145 ;;		 -> objs(30), 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;Total ram usage:       12 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    2
  5164 ;; This function calls:
  5165 ;;		_CatchFrisbee
  5166 ;; This function is called by:
  5167 ;;		_MoveEveryone
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text17
  5172  000E8E                     __ptext17:
  5173                           	callstack 0
  5174  000E8E                     _upleft:
  5175                           	callstack 21
  5176  000E8E                     
  5177                           ;main.c: 609:     if (pl->x == 1 || pl->y == 1) return;
  5178  000E8E  C013  FFD9         	movff	upleft@pl,fsr2l
  5179  000E92  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5180  000E96  04DE               	decf	postinc2,w,c
  5181  000E98  B4D8               	btfsc	status,2,c
  5182  000E9A  EF51  F007         	goto	i2u213_41
  5183  000E9E  EF53  F007         	goto	i2u213_40
  5184  000EA2                     i2u213_41:
  5185  000EA2  EFD5  F008         	goto	i2l410
  5186  000EA6                     i2u213_40:
  5187  000EA6  EE20 F001          	lfsr	2,1
  5188  000EAA  5013               	movf	upleft@pl^0,w,c
  5189  000EAC  26D9               	addwf	fsr2l,f,c
  5190  000EAE  5014               	movf	(upleft@pl+1)^0,w,c
  5191  000EB0  22DA               	addwfc	fsr2h,f,c
  5192  000EB2  04DE               	decf	postinc2,w,c
  5193  000EB4  A4D8               	btfss	status,2,c
  5194  000EB6  EF5F  F007         	goto	i2u214_41
  5195  000EBA  EF61  F007         	goto	i2u214_40
  5196  000EBE                     i2u214_41:
  5197  000EBE  EF63  F007         	goto	i2l2384
  5198  000EC2                     i2u214_40:
  5199  000EC2  EFD5  F008         	goto	i2l410
  5200  000EC6                     i2l2384:
  5201                           
  5202                           ;main.c: 610:     if (display[pl->y-2][pl->x-2] != ((void*)0)) {
  5203  000EC6  EE20 F001          	lfsr	2,1
  5204  000ECA  5013               	movf	upleft@pl^0,w,c
  5205  000ECC  26D9               	addwf	fsr2l,f,c
  5206  000ECE  5014               	movf	(upleft@pl+1)^0,w,c
  5207  000ED0  22DA               	addwfc	fsr2h,f,c
  5208  000ED2  50DF               	movf	indf2,w,c
  5209  000ED4  6E15               	movwf	??_upleft^0,c
  5210  000ED6  6A16               	clrf	(??_upleft+1)^0,c
  5211  000ED8  0E05               	movlw	5
  5212  000EDA                     i2u215_45:
  5213  000EDA  90D8               	bcf	status,0,c
  5214  000EDC  3615               	rlcf	??_upleft^0,f,c
  5215  000EDE  3616               	rlcf	(??_upleft+1)^0,f,c
  5216  000EE0  2EE8               	decfsz	wreg,f,c
  5217  000EE2  EF6D  F007         	goto	i2u215_45
  5218  000EE6  C013  FFD9         	movff	upleft@pl,fsr2l
  5219  000EEA  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5220  000EEE  50DF               	movf	indf2,w,c
  5221  000EF0  6E17               	movwf	(??_upleft+2)^0,c
  5222  000EF2  6A18               	clrf	(??_upleft+3)^0,c
  5223  000EF4  90D8               	bcf	status,0,c
  5224  000EF6  3617               	rlcf	(??_upleft+2)^0,f,c
  5225  000EF8  3618               	rlcf	(??_upleft+3)^0,f,c
  5226  000EFA  0EBC               	movlw	188
  5227  000EFC  6E19               	movwf	(??_upleft+4)^0,c
  5228  000EFE  0EFF               	movlw	255
  5229  000F00  6E1A               	movwf	(??_upleft+5)^0,c
  5230  000F02  0E00               	movlw	low _display
  5231  000F04  6E1B               	movwf	(??_upleft+6)^0,c
  5232  000F06  0E01               	movlw	high _display
  5233  000F08  6E1C               	movwf	(??_upleft+7)^0,c
  5234  000F0A  5019               	movf	(??_upleft+4)^0,w,c
  5235  000F0C  261B               	addwf	(??_upleft+6)^0,f,c
  5236  000F0E  501A               	movf	(??_upleft+5)^0,w,c
  5237  000F10  221C               	addwfc	(??_upleft+7)^0,f,c
  5238  000F12  5017               	movf	(??_upleft+2)^0,w,c
  5239  000F14  261B               	addwf	(??_upleft+6)^0,f,c
  5240  000F16  5018               	movf	(??_upleft+3)^0,w,c
  5241  000F18  221C               	addwfc	(??_upleft+7)^0,f,c
  5242  000F1A  5015               	movf	??_upleft^0,w,c
  5243  000F1C  241B               	addwf	(??_upleft+6)^0,w,c
  5244  000F1E  6ED9               	movwf	fsr2l,c
  5245  000F20  5016               	movf	(??_upleft+1)^0,w,c
  5246  000F22  201C               	addwfc	(??_upleft+7)^0,w,c
  5247  000F24  6EDA               	movwf	fsr2h,c
  5248  000F26  50DE               	movf	postinc2,w,c
  5249  000F28  10DE               	iorwf	postinc2,w,c
  5250  000F2A  B4D8               	btfsc	status,2,c
  5251  000F2C  EF9A  F007         	goto	i2u216_41
  5252  000F30  EF9C  F007         	goto	i2u216_40
  5253  000F34                     i2u216_41:
  5254  000F34  EF61  F008         	goto	i2l2398
  5255  000F38                     i2u216_40:
  5256  000F38                     
  5257                           ;main.c: 611:         if (display[pl->y-2][pl->x-2]->type == OT_PLAYERA) return;
  5258  000F38  EE20 F001          	lfsr	2,1
  5259  000F3C  5013               	movf	upleft@pl^0,w,c
  5260  000F3E  26D9               	addwf	fsr2l,f,c
  5261  000F40  5014               	movf	(upleft@pl+1)^0,w,c
  5262  000F42  22DA               	addwfc	fsr2h,f,c
  5263  000F44  50DF               	movf	indf2,w,c
  5264  000F46  6E15               	movwf	??_upleft^0,c
  5265  000F48  6A16               	clrf	(??_upleft+1)^0,c
  5266  000F4A  0E05               	movlw	5
  5267  000F4C                     i2u217_45:
  5268  000F4C  90D8               	bcf	status,0,c
  5269  000F4E  3615               	rlcf	??_upleft^0,f,c
  5270  000F50  3616               	rlcf	(??_upleft+1)^0,f,c
  5271  000F52  2EE8               	decfsz	wreg,f,c
  5272  000F54  EFA6  F007         	goto	i2u217_45
  5273  000F58  C013  FFD9         	movff	upleft@pl,fsr2l
  5274  000F5C  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5275  000F60  50DF               	movf	indf2,w,c
  5276  000F62  6E17               	movwf	(??_upleft+2)^0,c
  5277  000F64  6A18               	clrf	(??_upleft+3)^0,c
  5278  000F66  90D8               	bcf	status,0,c
  5279  000F68  3617               	rlcf	(??_upleft+2)^0,f,c
  5280  000F6A  3618               	rlcf	(??_upleft+3)^0,f,c
  5281  000F6C  0EBC               	movlw	188
  5282  000F6E  6E19               	movwf	(??_upleft+4)^0,c
  5283  000F70  0EFF               	movlw	255
  5284  000F72  6E1A               	movwf	(??_upleft+5)^0,c
  5285  000F74  0E00               	movlw	low _display
  5286  000F76  6E1B               	movwf	(??_upleft+6)^0,c
  5287  000F78  0E01               	movlw	high _display
  5288  000F7A  6E1C               	movwf	(??_upleft+7)^0,c
  5289  000F7C  5019               	movf	(??_upleft+4)^0,w,c
  5290  000F7E  261B               	addwf	(??_upleft+6)^0,f,c
  5291  000F80  501A               	movf	(??_upleft+5)^0,w,c
  5292  000F82  221C               	addwfc	(??_upleft+7)^0,f,c
  5293  000F84  5017               	movf	(??_upleft+2)^0,w,c
  5294  000F86  261B               	addwf	(??_upleft+6)^0,f,c
  5295  000F88  5018               	movf	(??_upleft+3)^0,w,c
  5296  000F8A  221C               	addwfc	(??_upleft+7)^0,f,c
  5297  000F8C  5015               	movf	??_upleft^0,w,c
  5298  000F8E  241B               	addwf	(??_upleft+6)^0,w,c
  5299  000F90  6ED9               	movwf	fsr2l,c
  5300  000F92  5016               	movf	(??_upleft+1)^0,w,c
  5301  000F94  201C               	addwfc	(??_upleft+7)^0,w,c
  5302  000F96  6EDA               	movwf	fsr2h,c
  5303  000F98  EE10 F003          	lfsr	1,3
  5304  000F9C  50DE               	movf	postinc2,w,c
  5305  000F9E  26E1               	addwf	fsr1l,f,c
  5306  000FA0  50DD               	movf	postdec2,w,c
  5307  000FA2  22E2               	addwfc	fsr1h,f,c
  5308  000FA4  50E7               	movf	indf1,w,c
  5309  000FA6  A4D8               	btfss	status,2,c
  5310  000FA8  EFD8  F007         	goto	i2u218_41
  5311  000FAC  EFDA  F007         	goto	i2u218_40
  5312  000FB0                     i2u218_41:
  5313  000FB0  EFDC  F007         	goto	i2l2390
  5314  000FB4                     i2u218_40:
  5315  000FB4  EFD5  F008         	goto	i2l410
  5316  000FB8                     i2l2390:
  5317                           
  5318                           ;main.c: 612:         if (display[pl->y-2][pl->x-2]->type == OT_PLAYERB) return;
  5319  000FB8  EE20 F001          	lfsr	2,1
  5320  000FBC  5013               	movf	upleft@pl^0,w,c
  5321  000FBE  26D9               	addwf	fsr2l,f,c
  5322  000FC0  5014               	movf	(upleft@pl+1)^0,w,c
  5323  000FC2  22DA               	addwfc	fsr2h,f,c
  5324  000FC4  50DF               	movf	indf2,w,c
  5325  000FC6  6E15               	movwf	??_upleft^0,c
  5326  000FC8  6A16               	clrf	(??_upleft+1)^0,c
  5327  000FCA  0E05               	movlw	5
  5328  000FCC                     i2u219_45:
  5329  000FCC  90D8               	bcf	status,0,c
  5330  000FCE  3615               	rlcf	??_upleft^0,f,c
  5331  000FD0  3616               	rlcf	(??_upleft+1)^0,f,c
  5332  000FD2  2EE8               	decfsz	wreg,f,c
  5333  000FD4  EFE6  F007         	goto	i2u219_45
  5334  000FD8  C013  FFD9         	movff	upleft@pl,fsr2l
  5335  000FDC  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5336  000FE0  50DF               	movf	indf2,w,c
  5337  000FE2  6E17               	movwf	(??_upleft+2)^0,c
  5338  000FE4  6A18               	clrf	(??_upleft+3)^0,c
  5339  000FE6  90D8               	bcf	status,0,c
  5340  000FE8  3617               	rlcf	(??_upleft+2)^0,f,c
  5341  000FEA  3618               	rlcf	(??_upleft+3)^0,f,c
  5342  000FEC  0EBC               	movlw	188
  5343  000FEE  6E19               	movwf	(??_upleft+4)^0,c
  5344  000FF0  0EFF               	movlw	255
  5345  000FF2  6E1A               	movwf	(??_upleft+5)^0,c
  5346  000FF4  0E00               	movlw	low _display
  5347  000FF6  6E1B               	movwf	(??_upleft+6)^0,c
  5348  000FF8  0E01               	movlw	high _display
  5349  000FFA  6E1C               	movwf	(??_upleft+7)^0,c
  5350  000FFC  5019               	movf	(??_upleft+4)^0,w,c
  5351  000FFE  261B               	addwf	(??_upleft+6)^0,f,c
  5352  001000  501A               	movf	(??_upleft+5)^0,w,c
  5353  001002  221C               	addwfc	(??_upleft+7)^0,f,c
  5354  001004  5017               	movf	(??_upleft+2)^0,w,c
  5355  001006  261B               	addwf	(??_upleft+6)^0,f,c
  5356  001008  5018               	movf	(??_upleft+3)^0,w,c
  5357  00100A  221C               	addwfc	(??_upleft+7)^0,f,c
  5358  00100C  5015               	movf	??_upleft^0,w,c
  5359  00100E  241B               	addwf	(??_upleft+6)^0,w,c
  5360  001010  6ED9               	movwf	fsr2l,c
  5361  001012  5016               	movf	(??_upleft+1)^0,w,c
  5362  001014  201C               	addwfc	(??_upleft+7)^0,w,c
  5363  001016  6EDA               	movwf	fsr2h,c
  5364  001018  EE10 F003          	lfsr	1,3
  5365  00101C  50DE               	movf	postinc2,w,c
  5366  00101E  26E1               	addwf	fsr1l,f,c
  5367  001020  50DD               	movf	postdec2,w,c
  5368  001022  22E2               	addwfc	fsr1h,f,c
  5369  001024  04E6               	decf	postinc1,w,c
  5370  001026  A4D8               	btfss	status,2,c
  5371  001028  EF18  F008         	goto	i2u220_41
  5372  00102C  EF1A  F008         	goto	i2u220_40
  5373  001030                     i2u220_41:
  5374  001030  EF1C  F008         	goto	i2l2394
  5375  001034                     i2u220_40:
  5376  001034  EFD5  F008         	goto	i2l410
  5377  001038                     i2l2394:
  5378                           
  5379                           ;main.c: 613:         if (display[pl->y-2][pl->x-2]->type == OT_FRISBEE) {
  5380  001038  EE20 F001          	lfsr	2,1
  5381  00103C  5013               	movf	upleft@pl^0,w,c
  5382  00103E  26D9               	addwf	fsr2l,f,c
  5383  001040  5014               	movf	(upleft@pl+1)^0,w,c
  5384  001042  22DA               	addwfc	fsr2h,f,c
  5385  001044  50DF               	movf	indf2,w,c
  5386  001046  6E15               	movwf	??_upleft^0,c
  5387  001048  6A16               	clrf	(??_upleft+1)^0,c
  5388  00104A  0E05               	movlw	5
  5389  00104C                     i2u221_45:
  5390  00104C  90D8               	bcf	status,0,c
  5391  00104E  3615               	rlcf	??_upleft^0,f,c
  5392  001050  3616               	rlcf	(??_upleft+1)^0,f,c
  5393  001052  2EE8               	decfsz	wreg,f,c
  5394  001054  EF26  F008         	goto	i2u221_45
  5395  001058  C013  FFD9         	movff	upleft@pl,fsr2l
  5396  00105C  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5397  001060  50DF               	movf	indf2,w,c
  5398  001062  6E17               	movwf	(??_upleft+2)^0,c
  5399  001064  6A18               	clrf	(??_upleft+3)^0,c
  5400  001066  90D8               	bcf	status,0,c
  5401  001068  3617               	rlcf	(??_upleft+2)^0,f,c
  5402  00106A  3618               	rlcf	(??_upleft+3)^0,f,c
  5403  00106C  0EBC               	movlw	188
  5404  00106E  6E19               	movwf	(??_upleft+4)^0,c
  5405  001070  0EFF               	movlw	255
  5406  001072  6E1A               	movwf	(??_upleft+5)^0,c
  5407  001074  0E00               	movlw	low _display
  5408  001076  6E1B               	movwf	(??_upleft+6)^0,c
  5409  001078  0E01               	movlw	high _display
  5410  00107A  6E1C               	movwf	(??_upleft+7)^0,c
  5411  00107C  5019               	movf	(??_upleft+4)^0,w,c
  5412  00107E  261B               	addwf	(??_upleft+6)^0,f,c
  5413  001080  501A               	movf	(??_upleft+5)^0,w,c
  5414  001082  221C               	addwfc	(??_upleft+7)^0,f,c
  5415  001084  5017               	movf	(??_upleft+2)^0,w,c
  5416  001086  261B               	addwf	(??_upleft+6)^0,f,c
  5417  001088  5018               	movf	(??_upleft+3)^0,w,c
  5418  00108A  221C               	addwfc	(??_upleft+7)^0,f,c
  5419  00108C  5015               	movf	??_upleft^0,w,c
  5420  00108E  241B               	addwf	(??_upleft+6)^0,w,c
  5421  001090  6ED9               	movwf	fsr2l,c
  5422  001092  5016               	movf	(??_upleft+1)^0,w,c
  5423  001094  201C               	addwfc	(??_upleft+7)^0,w,c
  5424  001096  6EDA               	movwf	fsr2h,c
  5425  001098  EE10 F003          	lfsr	1,3
  5426  00109C  50DE               	movf	postinc2,w,c
  5427  00109E  26E1               	addwf	fsr1l,f,c
  5428  0010A0  50DD               	movf	postdec2,w,c
  5429  0010A2  22E2               	addwfc	fsr1h,f,c
  5430  0010A4  0E02               	movlw	2
  5431  0010A6  18E6               	xorwf	postinc1,w,c
  5432  0010A8  A4D8               	btfss	status,2,c
  5433  0010AA  EF59  F008         	goto	i2u222_41
  5434  0010AE  EF5B  F008         	goto	i2u222_40
  5435  0010B2                     i2u222_41:
  5436  0010B2  EF61  F008         	goto	i2l2398
  5437  0010B6                     i2u222_40:
  5438  0010B6                     
  5439                           ;main.c: 614:             CatchFrisbee(pl);
  5440  0010B6  C013  F007         	movff	upleft@pl,CatchFrisbee@pl
  5441  0010BA  C014  F008         	movff	upleft@pl+1,CatchFrisbee@pl+1
  5442  0010BE  EC15  F015         	call	_CatchFrisbee	;wreg free
  5443  0010C2                     i2l2398:
  5444                           
  5445                           ;main.c: 617:     display[pl->y-1][pl->x-1] = ((void*)0);
  5446  0010C2  EE20 F001          	lfsr	2,1
  5447  0010C6  5013               	movf	upleft@pl^0,w,c
  5448  0010C8  26D9               	addwf	fsr2l,f,c
  5449  0010CA  5014               	movf	(upleft@pl+1)^0,w,c
  5450  0010CC  22DA               	addwfc	fsr2h,f,c
  5451  0010CE  50DF               	movf	indf2,w,c
  5452  0010D0  6E15               	movwf	??_upleft^0,c
  5453  0010D2  6A16               	clrf	(??_upleft+1)^0,c
  5454  0010D4  0E05               	movlw	5
  5455  0010D6                     i2u223_45:
  5456  0010D6  90D8               	bcf	status,0,c
  5457  0010D8  3615               	rlcf	??_upleft^0,f,c
  5458  0010DA  3616               	rlcf	(??_upleft+1)^0,f,c
  5459  0010DC  2EE8               	decfsz	wreg,f,c
  5460  0010DE  EF6B  F008         	goto	i2u223_45
  5461  0010E2  C013  FFD9         	movff	upleft@pl,fsr2l
  5462  0010E6  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5463  0010EA  50DF               	movf	indf2,w,c
  5464  0010EC  6E17               	movwf	(??_upleft+2)^0,c
  5465  0010EE  6A18               	clrf	(??_upleft+3)^0,c
  5466  0010F0  90D8               	bcf	status,0,c
  5467  0010F2  3617               	rlcf	(??_upleft+2)^0,f,c
  5468  0010F4  3618               	rlcf	(??_upleft+3)^0,f,c
  5469  0010F6  0EDE               	movlw	222
  5470  0010F8  6E19               	movwf	(??_upleft+4)^0,c
  5471  0010FA  0EFF               	movlw	255
  5472  0010FC  6E1A               	movwf	(??_upleft+5)^0,c
  5473  0010FE  0E00               	movlw	low _display
  5474  001100  6E1B               	movwf	(??_upleft+6)^0,c
  5475  001102  0E01               	movlw	high _display
  5476  001104  6E1C               	movwf	(??_upleft+7)^0,c
  5477  001106  5019               	movf	(??_upleft+4)^0,w,c
  5478  001108  261B               	addwf	(??_upleft+6)^0,f,c
  5479  00110A  501A               	movf	(??_upleft+5)^0,w,c
  5480  00110C  221C               	addwfc	(??_upleft+7)^0,f,c
  5481  00110E  5017               	movf	(??_upleft+2)^0,w,c
  5482  001110  261B               	addwf	(??_upleft+6)^0,f,c
  5483  001112  5018               	movf	(??_upleft+3)^0,w,c
  5484  001114  221C               	addwfc	(??_upleft+7)^0,f,c
  5485  001116  5015               	movf	??_upleft^0,w,c
  5486  001118  241B               	addwf	(??_upleft+6)^0,w,c
  5487  00111A  6ED9               	movwf	fsr2l,c
  5488  00111C  5016               	movf	(??_upleft+1)^0,w,c
  5489  00111E  201C               	addwfc	(??_upleft+7)^0,w,c
  5490  001120  6EDA               	movwf	fsr2h,c
  5491  001122  0E00               	movlw	0
  5492  001124  6EDE               	movwf	postinc2,c
  5493  001126  0E00               	movlw	0
  5494  001128  6EDD               	movwf	postdec2,c
  5495  00112A                     
  5496                           ;main.c: 618:     pl->x--;
  5497  00112A  C013  FFD9         	movff	upleft@pl,fsr2l
  5498  00112E  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5499  001132  06DF               	decf	indf2,f,c
  5500  001134                     
  5501                           ;main.c: 619:     pl->y--;
  5502  001134  EE20 F001          	lfsr	2,1
  5503  001138  5013               	movf	upleft@pl^0,w,c
  5504  00113A  26D9               	addwf	fsr2l,f,c
  5505  00113C  5014               	movf	(upleft@pl+1)^0,w,c
  5506  00113E  22DA               	addwfc	fsr2h,f,c
  5507  001140  06DF               	decf	indf2,f,c
  5508  001142                     
  5509                           ;main.c: 620:     display[pl->y-1][pl->x-1] = pl;
  5510  001142  EE20 F001          	lfsr	2,1
  5511  001146  5013               	movf	upleft@pl^0,w,c
  5512  001148  26D9               	addwf	fsr2l,f,c
  5513  00114A  5014               	movf	(upleft@pl+1)^0,w,c
  5514  00114C  22DA               	addwfc	fsr2h,f,c
  5515  00114E  50DF               	movf	indf2,w,c
  5516  001150  6E15               	movwf	??_upleft^0,c
  5517  001152  6A16               	clrf	(??_upleft+1)^0,c
  5518  001154  0E05               	movlw	5
  5519  001156                     i2u224_45:
  5520  001156  90D8               	bcf	status,0,c
  5521  001158  3615               	rlcf	??_upleft^0,f,c
  5522  00115A  3616               	rlcf	(??_upleft+1)^0,f,c
  5523  00115C  2EE8               	decfsz	wreg,f,c
  5524  00115E  EFAB  F008         	goto	i2u224_45
  5525  001162  C013  FFD9         	movff	upleft@pl,fsr2l
  5526  001166  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5527  00116A  50DF               	movf	indf2,w,c
  5528  00116C  6E17               	movwf	(??_upleft+2)^0,c
  5529  00116E  6A18               	clrf	(??_upleft+3)^0,c
  5530  001170  90D8               	bcf	status,0,c
  5531  001172  3617               	rlcf	(??_upleft+2)^0,f,c
  5532  001174  3618               	rlcf	(??_upleft+3)^0,f,c
  5533  001176  0EDE               	movlw	222
  5534  001178  6E19               	movwf	(??_upleft+4)^0,c
  5535  00117A  0EFF               	movlw	255
  5536  00117C  6E1A               	movwf	(??_upleft+5)^0,c
  5537  00117E  0E00               	movlw	low _display
  5538  001180  6E1B               	movwf	(??_upleft+6)^0,c
  5539  001182  0E01               	movlw	high _display
  5540  001184  6E1C               	movwf	(??_upleft+7)^0,c
  5541  001186  5019               	movf	(??_upleft+4)^0,w,c
  5542  001188  261B               	addwf	(??_upleft+6)^0,f,c
  5543  00118A  501A               	movf	(??_upleft+5)^0,w,c
  5544  00118C  221C               	addwfc	(??_upleft+7)^0,f,c
  5545  00118E  5017               	movf	(??_upleft+2)^0,w,c
  5546  001190  261B               	addwf	(??_upleft+6)^0,f,c
  5547  001192  5018               	movf	(??_upleft+3)^0,w,c
  5548  001194  221C               	addwfc	(??_upleft+7)^0,f,c
  5549  001196  5015               	movf	??_upleft^0,w,c
  5550  001198  241B               	addwf	(??_upleft+6)^0,w,c
  5551  00119A  6ED9               	movwf	fsr2l,c
  5552  00119C  5016               	movf	(??_upleft+1)^0,w,c
  5553  00119E  201C               	addwfc	(??_upleft+7)^0,w,c
  5554  0011A0  6EDA               	movwf	fsr2h,c
  5555  0011A2  C013  FFDE         	movff	upleft@pl,postinc2
  5556  0011A6  C014  FFDD         	movff	upleft@pl+1,postdec2
  5557  0011AA                     i2l410:
  5558  0011AA  0012               	return		;funcret
  5559  0011AC                     __end_of_upleft:
  5560                           	callstack 0
  5561                           
  5562 ;; *************** function _up *****************
  5563 ;; Defined at:
  5564 ;;		line 578 in file "main.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  pl              2   18[COMRAM] PTR struct GameElement
  5567 ;;		 -> objs(30), 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;Total ram usage:       12 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    2
  5586 ;; This function calls:
  5587 ;;		_CatchFrisbee
  5588 ;; This function is called by:
  5589 ;;		_highIsr
  5590 ;;		_MoveEveryone
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text18
  5595  0014BC                     __ptext18:
  5596                           	callstack 0
  5597  0014BC                     _up:
  5598                           	callstack 22
  5599  0014BC                     
  5600                           ;main.c: 579:     if (pl->y == 1) return;
  5601  0014BC  EE20 F001          	lfsr	2,1
  5602  0014C0  5013               	movf	up@pl^0,w,c
  5603  0014C2  26D9               	addwf	fsr2l,f,c
  5604  0014C4  5014               	movf	(up@pl+1)^0,w,c
  5605  0014C6  22DA               	addwfc	fsr2h,f,c
  5606  0014C8  04DE               	decf	postinc2,w,c
  5607  0014CA  A4D8               	btfss	status,2,c
  5608  0014CC  EF6A  F00A         	goto	i2u173_41
  5609  0014D0  EF6C  F00A         	goto	i2u173_40
  5610  0014D4                     i2u173_41:
  5611  0014D4  EF6E  F00A         	goto	i2l2280
  5612  0014D8                     i2u173_40:
  5613  0014D8  EFDB  F00B         	goto	i2l392
  5614  0014DC                     i2l2280:
  5615                           
  5616                           ;main.c: 580:     if (display[pl->y-2][pl->x-1] != ((void*)0)) {
  5617  0014DC  EE20 F001          	lfsr	2,1
  5618  0014E0  5013               	movf	up@pl^0,w,c
  5619  0014E2  26D9               	addwf	fsr2l,f,c
  5620  0014E4  5014               	movf	(up@pl+1)^0,w,c
  5621  0014E6  22DA               	addwfc	fsr2h,f,c
  5622  0014E8  50DF               	movf	indf2,w,c
  5623  0014EA  6E15               	movwf	??_up^0,c
  5624  0014EC  6A16               	clrf	(??_up+1)^0,c
  5625  0014EE  0E05               	movlw	5
  5626  0014F0                     i2u174_45:
  5627  0014F0  90D8               	bcf	status,0,c
  5628  0014F2  3615               	rlcf	??_up^0,f,c
  5629  0014F4  3616               	rlcf	(??_up+1)^0,f,c
  5630  0014F6  2EE8               	decfsz	wreg,f,c
  5631  0014F8  EF78  F00A         	goto	i2u174_45
  5632  0014FC  C013  FFD9         	movff	up@pl,fsr2l
  5633  001500  C014  FFDA         	movff	up@pl+1,fsr2h
  5634  001504  50DF               	movf	indf2,w,c
  5635  001506  6E17               	movwf	(??_up+2)^0,c
  5636  001508  6A18               	clrf	(??_up+3)^0,c
  5637  00150A  90D8               	bcf	status,0,c
  5638  00150C  3617               	rlcf	(??_up+2)^0,f,c
  5639  00150E  3618               	rlcf	(??_up+3)^0,f,c
  5640  001510  0EBE               	movlw	190
  5641  001512  6E19               	movwf	(??_up+4)^0,c
  5642  001514  0EFF               	movlw	255
  5643  001516  6E1A               	movwf	(??_up+5)^0,c
  5644  001518  0E00               	movlw	low _display
  5645  00151A  6E1B               	movwf	(??_up+6)^0,c
  5646  00151C  0E01               	movlw	high _display
  5647  00151E  6E1C               	movwf	(??_up+7)^0,c
  5648  001520  5019               	movf	(??_up+4)^0,w,c
  5649  001522  261B               	addwf	(??_up+6)^0,f,c
  5650  001524  501A               	movf	(??_up+5)^0,w,c
  5651  001526  221C               	addwfc	(??_up+7)^0,f,c
  5652  001528  5017               	movf	(??_up+2)^0,w,c
  5653  00152A  261B               	addwf	(??_up+6)^0,f,c
  5654  00152C  5018               	movf	(??_up+3)^0,w,c
  5655  00152E  221C               	addwfc	(??_up+7)^0,f,c
  5656  001530  5015               	movf	??_up^0,w,c
  5657  001532  241B               	addwf	(??_up+6)^0,w,c
  5658  001534  6ED9               	movwf	fsr2l,c
  5659  001536  5016               	movf	(??_up+1)^0,w,c
  5660  001538  201C               	addwfc	(??_up+7)^0,w,c
  5661  00153A  6EDA               	movwf	fsr2h,c
  5662  00153C  50DE               	movf	postinc2,w,c
  5663  00153E  10DE               	iorwf	postinc2,w,c
  5664  001540  B4D8               	btfsc	status,2,c
  5665  001542  EFA5  F00A         	goto	i2u175_41
  5666  001546  EFA7  F00A         	goto	i2u175_40
  5667  00154A                     i2u175_41:
  5668  00154A  EF6C  F00B         	goto	i2l2294
  5669  00154E                     i2u175_40:
  5670  00154E                     
  5671                           ;main.c: 581:         if (display[pl->y-2][pl->x-1]->type == OT_PLAYERA) return;
  5672  00154E  EE20 F001          	lfsr	2,1
  5673  001552  5013               	movf	up@pl^0,w,c
  5674  001554  26D9               	addwf	fsr2l,f,c
  5675  001556  5014               	movf	(up@pl+1)^0,w,c
  5676  001558  22DA               	addwfc	fsr2h,f,c
  5677  00155A  50DF               	movf	indf2,w,c
  5678  00155C  6E15               	movwf	??_up^0,c
  5679  00155E  6A16               	clrf	(??_up+1)^0,c
  5680  001560  0E05               	movlw	5
  5681  001562                     i2u176_45:
  5682  001562  90D8               	bcf	status,0,c
  5683  001564  3615               	rlcf	??_up^0,f,c
  5684  001566  3616               	rlcf	(??_up+1)^0,f,c
  5685  001568  2EE8               	decfsz	wreg,f,c
  5686  00156A  EFB1  F00A         	goto	i2u176_45
  5687  00156E  C013  FFD9         	movff	up@pl,fsr2l
  5688  001572  C014  FFDA         	movff	up@pl+1,fsr2h
  5689  001576  50DF               	movf	indf2,w,c
  5690  001578  6E17               	movwf	(??_up+2)^0,c
  5691  00157A  6A18               	clrf	(??_up+3)^0,c
  5692  00157C  90D8               	bcf	status,0,c
  5693  00157E  3617               	rlcf	(??_up+2)^0,f,c
  5694  001580  3618               	rlcf	(??_up+3)^0,f,c
  5695  001582  0EBE               	movlw	190
  5696  001584  6E19               	movwf	(??_up+4)^0,c
  5697  001586  0EFF               	movlw	255
  5698  001588  6E1A               	movwf	(??_up+5)^0,c
  5699  00158A  0E00               	movlw	low _display
  5700  00158C  6E1B               	movwf	(??_up+6)^0,c
  5701  00158E  0E01               	movlw	high _display
  5702  001590  6E1C               	movwf	(??_up+7)^0,c
  5703  001592  5019               	movf	(??_up+4)^0,w,c
  5704  001594  261B               	addwf	(??_up+6)^0,f,c
  5705  001596  501A               	movf	(??_up+5)^0,w,c
  5706  001598  221C               	addwfc	(??_up+7)^0,f,c
  5707  00159A  5017               	movf	(??_up+2)^0,w,c
  5708  00159C  261B               	addwf	(??_up+6)^0,f,c
  5709  00159E  5018               	movf	(??_up+3)^0,w,c
  5710  0015A0  221C               	addwfc	(??_up+7)^0,f,c
  5711  0015A2  5015               	movf	??_up^0,w,c
  5712  0015A4  241B               	addwf	(??_up+6)^0,w,c
  5713  0015A6  6ED9               	movwf	fsr2l,c
  5714  0015A8  5016               	movf	(??_up+1)^0,w,c
  5715  0015AA  201C               	addwfc	(??_up+7)^0,w,c
  5716  0015AC  6EDA               	movwf	fsr2h,c
  5717  0015AE  EE10 F003          	lfsr	1,3
  5718  0015B2  50DE               	movf	postinc2,w,c
  5719  0015B4  26E1               	addwf	fsr1l,f,c
  5720  0015B6  50DD               	movf	postdec2,w,c
  5721  0015B8  22E2               	addwfc	fsr1h,f,c
  5722  0015BA  50E7               	movf	indf1,w,c
  5723  0015BC  A4D8               	btfss	status,2,c
  5724  0015BE  EFE3  F00A         	goto	i2u177_41
  5725  0015C2  EFE5  F00A         	goto	i2u177_40
  5726  0015C6                     i2u177_41:
  5727  0015C6  EFE7  F00A         	goto	i2l2286
  5728  0015CA                     i2u177_40:
  5729  0015CA  EFDB  F00B         	goto	i2l392
  5730  0015CE                     i2l2286:
  5731                           
  5732                           ;main.c: 582:         if (display[pl->y-2][pl->x-1]->type == OT_PLAYERB) return;
  5733  0015CE  EE20 F001          	lfsr	2,1
  5734  0015D2  5013               	movf	up@pl^0,w,c
  5735  0015D4  26D9               	addwf	fsr2l,f,c
  5736  0015D6  5014               	movf	(up@pl+1)^0,w,c
  5737  0015D8  22DA               	addwfc	fsr2h,f,c
  5738  0015DA  50DF               	movf	indf2,w,c
  5739  0015DC  6E15               	movwf	??_up^0,c
  5740  0015DE  6A16               	clrf	(??_up+1)^0,c
  5741  0015E0  0E05               	movlw	5
  5742  0015E2                     i2u178_45:
  5743  0015E2  90D8               	bcf	status,0,c
  5744  0015E4  3615               	rlcf	??_up^0,f,c
  5745  0015E6  3616               	rlcf	(??_up+1)^0,f,c
  5746  0015E8  2EE8               	decfsz	wreg,f,c
  5747  0015EA  EFF1  F00A         	goto	i2u178_45
  5748  0015EE  C013  FFD9         	movff	up@pl,fsr2l
  5749  0015F2  C014  FFDA         	movff	up@pl+1,fsr2h
  5750  0015F6  50DF               	movf	indf2,w,c
  5751  0015F8  6E17               	movwf	(??_up+2)^0,c
  5752  0015FA  6A18               	clrf	(??_up+3)^0,c
  5753  0015FC  90D8               	bcf	status,0,c
  5754  0015FE  3617               	rlcf	(??_up+2)^0,f,c
  5755  001600  3618               	rlcf	(??_up+3)^0,f,c
  5756  001602  0EBE               	movlw	190
  5757  001604  6E19               	movwf	(??_up+4)^0,c
  5758  001606  0EFF               	movlw	255
  5759  001608  6E1A               	movwf	(??_up+5)^0,c
  5760  00160A  0E00               	movlw	low _display
  5761  00160C  6E1B               	movwf	(??_up+6)^0,c
  5762  00160E  0E01               	movlw	high _display
  5763  001610  6E1C               	movwf	(??_up+7)^0,c
  5764  001612  5019               	movf	(??_up+4)^0,w,c
  5765  001614  261B               	addwf	(??_up+6)^0,f,c
  5766  001616  501A               	movf	(??_up+5)^0,w,c
  5767  001618  221C               	addwfc	(??_up+7)^0,f,c
  5768  00161A  5017               	movf	(??_up+2)^0,w,c
  5769  00161C  261B               	addwf	(??_up+6)^0,f,c
  5770  00161E  5018               	movf	(??_up+3)^0,w,c
  5771  001620  221C               	addwfc	(??_up+7)^0,f,c
  5772  001622  5015               	movf	??_up^0,w,c
  5773  001624  241B               	addwf	(??_up+6)^0,w,c
  5774  001626  6ED9               	movwf	fsr2l,c
  5775  001628  5016               	movf	(??_up+1)^0,w,c
  5776  00162A  201C               	addwfc	(??_up+7)^0,w,c
  5777  00162C  6EDA               	movwf	fsr2h,c
  5778  00162E  EE10 F003          	lfsr	1,3
  5779  001632  50DE               	movf	postinc2,w,c
  5780  001634  26E1               	addwf	fsr1l,f,c
  5781  001636  50DD               	movf	postdec2,w,c
  5782  001638  22E2               	addwfc	fsr1h,f,c
  5783  00163A  04E6               	decf	postinc1,w,c
  5784  00163C  A4D8               	btfss	status,2,c
  5785  00163E  EF23  F00B         	goto	i2u179_41
  5786  001642  EF25  F00B         	goto	i2u179_40
  5787  001646                     i2u179_41:
  5788  001646  EF27  F00B         	goto	i2l2290
  5789  00164A                     i2u179_40:
  5790  00164A  EFDB  F00B         	goto	i2l392
  5791  00164E                     i2l2290:
  5792                           
  5793                           ;main.c: 583:         if (display[pl->y-2][pl->x-1]->type == OT_FRISBEE) {
  5794  00164E  EE20 F001          	lfsr	2,1
  5795  001652  5013               	movf	up@pl^0,w,c
  5796  001654  26D9               	addwf	fsr2l,f,c
  5797  001656  5014               	movf	(up@pl+1)^0,w,c
  5798  001658  22DA               	addwfc	fsr2h,f,c
  5799  00165A  50DF               	movf	indf2,w,c
  5800  00165C  6E15               	movwf	??_up^0,c
  5801  00165E  6A16               	clrf	(??_up+1)^0,c
  5802  001660  0E05               	movlw	5
  5803  001662                     i2u180_45:
  5804  001662  90D8               	bcf	status,0,c
  5805  001664  3615               	rlcf	??_up^0,f,c
  5806  001666  3616               	rlcf	(??_up+1)^0,f,c
  5807  001668  2EE8               	decfsz	wreg,f,c
  5808  00166A  EF31  F00B         	goto	i2u180_45
  5809  00166E  C013  FFD9         	movff	up@pl,fsr2l
  5810  001672  C014  FFDA         	movff	up@pl+1,fsr2h
  5811  001676  50DF               	movf	indf2,w,c
  5812  001678  6E17               	movwf	(??_up+2)^0,c
  5813  00167A  6A18               	clrf	(??_up+3)^0,c
  5814  00167C  90D8               	bcf	status,0,c
  5815  00167E  3617               	rlcf	(??_up+2)^0,f,c
  5816  001680  3618               	rlcf	(??_up+3)^0,f,c
  5817  001682  0EBE               	movlw	190
  5818  001684  6E19               	movwf	(??_up+4)^0,c
  5819  001686  0EFF               	movlw	255
  5820  001688  6E1A               	movwf	(??_up+5)^0,c
  5821  00168A  0E00               	movlw	low _display
  5822  00168C  6E1B               	movwf	(??_up+6)^0,c
  5823  00168E  0E01               	movlw	high _display
  5824  001690  6E1C               	movwf	(??_up+7)^0,c
  5825  001692  5019               	movf	(??_up+4)^0,w,c
  5826  001694  261B               	addwf	(??_up+6)^0,f,c
  5827  001696  501A               	movf	(??_up+5)^0,w,c
  5828  001698  221C               	addwfc	(??_up+7)^0,f,c
  5829  00169A  5017               	movf	(??_up+2)^0,w,c
  5830  00169C  261B               	addwf	(??_up+6)^0,f,c
  5831  00169E  5018               	movf	(??_up+3)^0,w,c
  5832  0016A0  221C               	addwfc	(??_up+7)^0,f,c
  5833  0016A2  5015               	movf	??_up^0,w,c
  5834  0016A4  241B               	addwf	(??_up+6)^0,w,c
  5835  0016A6  6ED9               	movwf	fsr2l,c
  5836  0016A8  5016               	movf	(??_up+1)^0,w,c
  5837  0016AA  201C               	addwfc	(??_up+7)^0,w,c
  5838  0016AC  6EDA               	movwf	fsr2h,c
  5839  0016AE  EE10 F003          	lfsr	1,3
  5840  0016B2  50DE               	movf	postinc2,w,c
  5841  0016B4  26E1               	addwf	fsr1l,f,c
  5842  0016B6  50DD               	movf	postdec2,w,c
  5843  0016B8  22E2               	addwfc	fsr1h,f,c
  5844  0016BA  0E02               	movlw	2
  5845  0016BC  18E6               	xorwf	postinc1,w,c
  5846  0016BE  A4D8               	btfss	status,2,c
  5847  0016C0  EF64  F00B         	goto	i2u181_41
  5848  0016C4  EF66  F00B         	goto	i2u181_40
  5849  0016C8                     i2u181_41:
  5850  0016C8  EF6C  F00B         	goto	i2l2294
  5851  0016CC                     i2u181_40:
  5852  0016CC                     
  5853                           ;main.c: 584:             CatchFrisbee(pl);
  5854  0016CC  C013  F007         	movff	up@pl,CatchFrisbee@pl
  5855  0016D0  C014  F008         	movff	up@pl+1,CatchFrisbee@pl+1
  5856  0016D4  EC15  F015         	call	_CatchFrisbee	;wreg free
  5857  0016D8                     i2l2294:
  5858                           
  5859                           ;main.c: 587:     display[pl->y-1][pl->x-1] = ((void*)0);
  5860  0016D8  EE20 F001          	lfsr	2,1
  5861  0016DC  5013               	movf	up@pl^0,w,c
  5862  0016DE  26D9               	addwf	fsr2l,f,c
  5863  0016E0  5014               	movf	(up@pl+1)^0,w,c
  5864  0016E2  22DA               	addwfc	fsr2h,f,c
  5865  0016E4  50DF               	movf	indf2,w,c
  5866  0016E6  6E15               	movwf	??_up^0,c
  5867  0016E8  6A16               	clrf	(??_up+1)^0,c
  5868  0016EA  0E05               	movlw	5
  5869  0016EC                     i2u182_45:
  5870  0016EC  90D8               	bcf	status,0,c
  5871  0016EE  3615               	rlcf	??_up^0,f,c
  5872  0016F0  3616               	rlcf	(??_up+1)^0,f,c
  5873  0016F2  2EE8               	decfsz	wreg,f,c
  5874  0016F4  EF76  F00B         	goto	i2u182_45
  5875  0016F8  C013  FFD9         	movff	up@pl,fsr2l
  5876  0016FC  C014  FFDA         	movff	up@pl+1,fsr2h
  5877  001700  50DF               	movf	indf2,w,c
  5878  001702  6E17               	movwf	(??_up+2)^0,c
  5879  001704  6A18               	clrf	(??_up+3)^0,c
  5880  001706  90D8               	bcf	status,0,c
  5881  001708  3617               	rlcf	(??_up+2)^0,f,c
  5882  00170A  3618               	rlcf	(??_up+3)^0,f,c
  5883  00170C  0EDE               	movlw	222
  5884  00170E  6E19               	movwf	(??_up+4)^0,c
  5885  001710  0EFF               	movlw	255
  5886  001712  6E1A               	movwf	(??_up+5)^0,c
  5887  001714  0E00               	movlw	low _display
  5888  001716  6E1B               	movwf	(??_up+6)^0,c
  5889  001718  0E01               	movlw	high _display
  5890  00171A  6E1C               	movwf	(??_up+7)^0,c
  5891  00171C  5019               	movf	(??_up+4)^0,w,c
  5892  00171E  261B               	addwf	(??_up+6)^0,f,c
  5893  001720  501A               	movf	(??_up+5)^0,w,c
  5894  001722  221C               	addwfc	(??_up+7)^0,f,c
  5895  001724  5017               	movf	(??_up+2)^0,w,c
  5896  001726  261B               	addwf	(??_up+6)^0,f,c
  5897  001728  5018               	movf	(??_up+3)^0,w,c
  5898  00172A  221C               	addwfc	(??_up+7)^0,f,c
  5899  00172C  5015               	movf	??_up^0,w,c
  5900  00172E  241B               	addwf	(??_up+6)^0,w,c
  5901  001730  6ED9               	movwf	fsr2l,c
  5902  001732  5016               	movf	(??_up+1)^0,w,c
  5903  001734  201C               	addwfc	(??_up+7)^0,w,c
  5904  001736  6EDA               	movwf	fsr2h,c
  5905  001738  0E00               	movlw	0
  5906  00173A  6EDE               	movwf	postinc2,c
  5907  00173C  0E00               	movlw	0
  5908  00173E  6EDD               	movwf	postdec2,c
  5909  001740                     
  5910                           ;main.c: 588:     pl->y--;
  5911  001740  EE20 F001          	lfsr	2,1
  5912  001744  5013               	movf	up@pl^0,w,c
  5913  001746  26D9               	addwf	fsr2l,f,c
  5914  001748  5014               	movf	(up@pl+1)^0,w,c
  5915  00174A  22DA               	addwfc	fsr2h,f,c
  5916  00174C  06DF               	decf	indf2,f,c
  5917  00174E                     
  5918                           ;main.c: 589:     display[pl->y-1][pl->x-1] = pl;
  5919  00174E  EE20 F001          	lfsr	2,1
  5920  001752  5013               	movf	up@pl^0,w,c
  5921  001754  26D9               	addwf	fsr2l,f,c
  5922  001756  5014               	movf	(up@pl+1)^0,w,c
  5923  001758  22DA               	addwfc	fsr2h,f,c
  5924  00175A  50DF               	movf	indf2,w,c
  5925  00175C  6E15               	movwf	??_up^0,c
  5926  00175E  6A16               	clrf	(??_up+1)^0,c
  5927  001760  0E05               	movlw	5
  5928  001762                     i2u183_45:
  5929  001762  90D8               	bcf	status,0,c
  5930  001764  3615               	rlcf	??_up^0,f,c
  5931  001766  3616               	rlcf	(??_up+1)^0,f,c
  5932  001768  2EE8               	decfsz	wreg,f,c
  5933  00176A  EFB1  F00B         	goto	i2u183_45
  5934  00176E  C013  FFD9         	movff	up@pl,fsr2l
  5935  001772  C014  FFDA         	movff	up@pl+1,fsr2h
  5936  001776  50DF               	movf	indf2,w,c
  5937  001778  6E17               	movwf	(??_up+2)^0,c
  5938  00177A  6A18               	clrf	(??_up+3)^0,c
  5939  00177C  90D8               	bcf	status,0,c
  5940  00177E  3617               	rlcf	(??_up+2)^0,f,c
  5941  001780  3618               	rlcf	(??_up+3)^0,f,c
  5942  001782  0EDE               	movlw	222
  5943  001784  6E19               	movwf	(??_up+4)^0,c
  5944  001786  0EFF               	movlw	255
  5945  001788  6E1A               	movwf	(??_up+5)^0,c
  5946  00178A  0E00               	movlw	low _display
  5947  00178C  6E1B               	movwf	(??_up+6)^0,c
  5948  00178E  0E01               	movlw	high _display
  5949  001790  6E1C               	movwf	(??_up+7)^0,c
  5950  001792  5019               	movf	(??_up+4)^0,w,c
  5951  001794  261B               	addwf	(??_up+6)^0,f,c
  5952  001796  501A               	movf	(??_up+5)^0,w,c
  5953  001798  221C               	addwfc	(??_up+7)^0,f,c
  5954  00179A  5017               	movf	(??_up+2)^0,w,c
  5955  00179C  261B               	addwf	(??_up+6)^0,f,c
  5956  00179E  5018               	movf	(??_up+3)^0,w,c
  5957  0017A0  221C               	addwfc	(??_up+7)^0,f,c
  5958  0017A2  5015               	movf	??_up^0,w,c
  5959  0017A4  241B               	addwf	(??_up+6)^0,w,c
  5960  0017A6  6ED9               	movwf	fsr2l,c
  5961  0017A8  5016               	movf	(??_up+1)^0,w,c
  5962  0017AA  201C               	addwfc	(??_up+7)^0,w,c
  5963  0017AC  6EDA               	movwf	fsr2h,c
  5964  0017AE  C013  FFDE         	movff	up@pl,postinc2
  5965  0017B2  C014  FFDD         	movff	up@pl+1,postdec2
  5966  0017B6                     i2l392:
  5967  0017B6  0012               	return		;funcret
  5968  0017B8                     __end_of_up:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function _right *****************
  5972 ;; Defined at:
  5973 ;;		line 564 in file "main.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  pl              2   18[COMRAM] PTR struct GameElement
  5976 ;;		 -> objs(30), 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      void 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;Total ram usage:       11 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    2
  5995 ;; This function calls:
  5996 ;;		_CatchFrisbee
  5997 ;; This function is called by:
  5998 ;;		_highIsr
  5999 ;;		_MoveEveryone
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text19
  6004  001D9C                     __ptext19:
  6005                           	callstack 0
  6006  001D9C                     _right:
  6007                           	callstack 22
  6008  001D9C                     
  6009                           ;main.c: 565:     if (pl->x == 16) return;
  6010  001D9C  C013  FFD9         	movff	right@pl,fsr2l
  6011  001DA0  C014  FFDA         	movff	right@pl+1,fsr2h
  6012  001DA4  0E10               	movlw	16
  6013  001DA6  18DE               	xorwf	postinc2,w,c
  6014  001DA8  A4D8               	btfss	status,2,c
  6015  001DAA  EFD9  F00E         	goto	i2u184_41
  6016  001DAE  EFDB  F00E         	goto	i2u184_40
  6017  001DB2                     i2u184_41:
  6018  001DB2  EFDD  F00E         	goto	i2l2306
  6019  001DB6                     i2u184_40:
  6020  001DB6  EF40  F010         	goto	i2l384
  6021  001DBA                     i2l2306:
  6022                           
  6023                           ;main.c: 566:     if (display[pl->y-1][pl->x] != ((void*)0)) {
  6024  001DBA  EE20 F001          	lfsr	2,1
  6025  001DBE  5013               	movf	right@pl^0,w,c
  6026  001DC0  26D9               	addwf	fsr2l,f,c
  6027  001DC2  5014               	movf	(right@pl+1)^0,w,c
  6028  001DC4  22DA               	addwfc	fsr2h,f,c
  6029  001DC6  50DF               	movf	indf2,w,c
  6030  001DC8  6E15               	movwf	??_right^0,c
  6031  001DCA  6A16               	clrf	(??_right+1)^0,c
  6032  001DCC  0E05               	movlw	5
  6033  001DCE                     i2u185_45:
  6034  001DCE  90D8               	bcf	status,0,c
  6035  001DD0  3615               	rlcf	??_right^0,f,c
  6036  001DD2  3616               	rlcf	(??_right+1)^0,f,c
  6037  001DD4  2EE8               	decfsz	wreg,f,c
  6038  001DD6  EFE7  F00E         	goto	i2u185_45
  6039  001DDA  C013  FFD9         	movff	right@pl,fsr2l
  6040  001DDE  C014  FFDA         	movff	right@pl+1,fsr2h
  6041  001DE2  50DF               	movf	indf2,w,c
  6042  001DE4  6E17               	movwf	(??_right+2)^0,c
  6043  001DE6  5017               	movf	(??_right+2)^0,w,c
  6044  001DE8  0D02               	mullw	2
  6045  001DEA  0EE0               	movlw	224
  6046  001DEC  6E18               	movwf	(??_right+3)^0,c
  6047  001DEE  0EFF               	movlw	255
  6048  001DF0  6E19               	movwf	(??_right+4)^0,c
  6049  001DF2  0E00               	movlw	low _display
  6050  001DF4  6E1A               	movwf	(??_right+5)^0,c
  6051  001DF6  0E01               	movlw	high _display
  6052  001DF8  6E1B               	movwf	(??_right+6)^0,c
  6053  001DFA  5018               	movf	(??_right+3)^0,w,c
  6054  001DFC  261A               	addwf	(??_right+5)^0,f,c
  6055  001DFE  5019               	movf	(??_right+4)^0,w,c
  6056  001E00  221B               	addwfc	(??_right+6)^0,f,c
  6057  001E02  50F3               	movf	243,w,c
  6058  001E04  261A               	addwf	(??_right+5)^0,f,c
  6059  001E06  50F4               	movf	244,w,c
  6060  001E08  221B               	addwfc	(??_right+6)^0,f,c
  6061  001E0A  5015               	movf	??_right^0,w,c
  6062  001E0C  241A               	addwf	(??_right+5)^0,w,c
  6063  001E0E  6ED9               	movwf	fsr2l,c
  6064  001E10  5016               	movf	(??_right+1)^0,w,c
  6065  001E12  201B               	addwfc	(??_right+6)^0,w,c
  6066  001E14  6EDA               	movwf	fsr2h,c
  6067  001E16  50DE               	movf	postinc2,w,c
  6068  001E18  10DE               	iorwf	postinc2,w,c
  6069  001E1A  B4D8               	btfsc	status,2,c
  6070  001E1C  EF12  F00F         	goto	i2u186_41
  6071  001E20  EF14  F00F         	goto	i2u186_40
  6072  001E24                     i2u186_41:
  6073  001E24  EFD3  F00F         	goto	i2l2320
  6074  001E28                     i2u186_40:
  6075  001E28                     
  6076                           ;main.c: 567:         if (display[pl->y-1][pl->x]->type == OT_PLAYERA) return;
  6077  001E28  EE20 F001          	lfsr	2,1
  6078  001E2C  5013               	movf	right@pl^0,w,c
  6079  001E2E  26D9               	addwf	fsr2l,f,c
  6080  001E30  5014               	movf	(right@pl+1)^0,w,c
  6081  001E32  22DA               	addwfc	fsr2h,f,c
  6082  001E34  50DF               	movf	indf2,w,c
  6083  001E36  6E15               	movwf	??_right^0,c
  6084  001E38  6A16               	clrf	(??_right+1)^0,c
  6085  001E3A  0E05               	movlw	5
  6086  001E3C                     i2u187_45:
  6087  001E3C  90D8               	bcf	status,0,c
  6088  001E3E  3615               	rlcf	??_right^0,f,c
  6089  001E40  3616               	rlcf	(??_right+1)^0,f,c
  6090  001E42  2EE8               	decfsz	wreg,f,c
  6091  001E44  EF1E  F00F         	goto	i2u187_45
  6092  001E48  C013  FFD9         	movff	right@pl,fsr2l
  6093  001E4C  C014  FFDA         	movff	right@pl+1,fsr2h
  6094  001E50  50DF               	movf	indf2,w,c
  6095  001E52  6E17               	movwf	(??_right+2)^0,c
  6096  001E54  5017               	movf	(??_right+2)^0,w,c
  6097  001E56  0D02               	mullw	2
  6098  001E58  0EE0               	movlw	224
  6099  001E5A  6E18               	movwf	(??_right+3)^0,c
  6100  001E5C  0EFF               	movlw	255
  6101  001E5E  6E19               	movwf	(??_right+4)^0,c
  6102  001E60  0E00               	movlw	low _display
  6103  001E62  6E1A               	movwf	(??_right+5)^0,c
  6104  001E64  0E01               	movlw	high _display
  6105  001E66  6E1B               	movwf	(??_right+6)^0,c
  6106  001E68  5018               	movf	(??_right+3)^0,w,c
  6107  001E6A  261A               	addwf	(??_right+5)^0,f,c
  6108  001E6C  5019               	movf	(??_right+4)^0,w,c
  6109  001E6E  221B               	addwfc	(??_right+6)^0,f,c
  6110  001E70  50F3               	movf	243,w,c
  6111  001E72  261A               	addwf	(??_right+5)^0,f,c
  6112  001E74  50F4               	movf	244,w,c
  6113  001E76  221B               	addwfc	(??_right+6)^0,f,c
  6114  001E78  5015               	movf	??_right^0,w,c
  6115  001E7A  241A               	addwf	(??_right+5)^0,w,c
  6116  001E7C  6ED9               	movwf	fsr2l,c
  6117  001E7E  5016               	movf	(??_right+1)^0,w,c
  6118  001E80  201B               	addwfc	(??_right+6)^0,w,c
  6119  001E82  6EDA               	movwf	fsr2h,c
  6120  001E84  EE10 F003          	lfsr	1,3
  6121  001E88  50DE               	movf	postinc2,w,c
  6122  001E8A  26E1               	addwf	fsr1l,f,c
  6123  001E8C  50DD               	movf	postdec2,w,c
  6124  001E8E  22E2               	addwfc	fsr1h,f,c
  6125  001E90  50E7               	movf	indf1,w,c
  6126  001E92  A4D8               	btfss	status,2,c
  6127  001E94  EF4E  F00F         	goto	i2u188_41
  6128  001E98  EF50  F00F         	goto	i2u188_40
  6129  001E9C                     i2u188_41:
  6130  001E9C  EF52  F00F         	goto	i2l2312
  6131  001EA0                     i2u188_40:
  6132  001EA0  EF40  F010         	goto	i2l384
  6133  001EA4                     i2l2312:
  6134                           
  6135                           ;main.c: 568:         if (display[pl->y-1][pl->x]->type == OT_PLAYERB) return;
  6136  001EA4  EE20 F001          	lfsr	2,1
  6137  001EA8  5013               	movf	right@pl^0,w,c
  6138  001EAA  26D9               	addwf	fsr2l,f,c
  6139  001EAC  5014               	movf	(right@pl+1)^0,w,c
  6140  001EAE  22DA               	addwfc	fsr2h,f,c
  6141  001EB0  50DF               	movf	indf2,w,c
  6142  001EB2  6E15               	movwf	??_right^0,c
  6143  001EB4  6A16               	clrf	(??_right+1)^0,c
  6144  001EB6  0E05               	movlw	5
  6145  001EB8                     i2u189_45:
  6146  001EB8  90D8               	bcf	status,0,c
  6147  001EBA  3615               	rlcf	??_right^0,f,c
  6148  001EBC  3616               	rlcf	(??_right+1)^0,f,c
  6149  001EBE  2EE8               	decfsz	wreg,f,c
  6150  001EC0  EF5C  F00F         	goto	i2u189_45
  6151  001EC4  C013  FFD9         	movff	right@pl,fsr2l
  6152  001EC8  C014  FFDA         	movff	right@pl+1,fsr2h
  6153  001ECC  50DF               	movf	indf2,w,c
  6154  001ECE  6E17               	movwf	(??_right+2)^0,c
  6155  001ED0  5017               	movf	(??_right+2)^0,w,c
  6156  001ED2  0D02               	mullw	2
  6157  001ED4  0EE0               	movlw	224
  6158  001ED6  6E18               	movwf	(??_right+3)^0,c
  6159  001ED8  0EFF               	movlw	255
  6160  001EDA  6E19               	movwf	(??_right+4)^0,c
  6161  001EDC  0E00               	movlw	low _display
  6162  001EDE  6E1A               	movwf	(??_right+5)^0,c
  6163  001EE0  0E01               	movlw	high _display
  6164  001EE2  6E1B               	movwf	(??_right+6)^0,c
  6165  001EE4  5018               	movf	(??_right+3)^0,w,c
  6166  001EE6  261A               	addwf	(??_right+5)^0,f,c
  6167  001EE8  5019               	movf	(??_right+4)^0,w,c
  6168  001EEA  221B               	addwfc	(??_right+6)^0,f,c
  6169  001EEC  50F3               	movf	243,w,c
  6170  001EEE  261A               	addwf	(??_right+5)^0,f,c
  6171  001EF0  50F4               	movf	244,w,c
  6172  001EF2  221B               	addwfc	(??_right+6)^0,f,c
  6173  001EF4  5015               	movf	??_right^0,w,c
  6174  001EF6  241A               	addwf	(??_right+5)^0,w,c
  6175  001EF8  6ED9               	movwf	fsr2l,c
  6176  001EFA  5016               	movf	(??_right+1)^0,w,c
  6177  001EFC  201B               	addwfc	(??_right+6)^0,w,c
  6178  001EFE  6EDA               	movwf	fsr2h,c
  6179  001F00  EE10 F003          	lfsr	1,3
  6180  001F04  50DE               	movf	postinc2,w,c
  6181  001F06  26E1               	addwf	fsr1l,f,c
  6182  001F08  50DD               	movf	postdec2,w,c
  6183  001F0A  22E2               	addwfc	fsr1h,f,c
  6184  001F0C  04E6               	decf	postinc1,w,c
  6185  001F0E  A4D8               	btfss	status,2,c
  6186  001F10  EF8C  F00F         	goto	i2u190_41
  6187  001F14  EF8E  F00F         	goto	i2u190_40
  6188  001F18                     i2u190_41:
  6189  001F18  EF90  F00F         	goto	i2l2316
  6190  001F1C                     i2u190_40:
  6191  001F1C  EF40  F010         	goto	i2l384
  6192  001F20                     i2l2316:
  6193                           
  6194                           ;main.c: 569:         if (display[pl->y-1][pl->x]->type == OT_FRISBEE) {
  6195  001F20  EE20 F001          	lfsr	2,1
  6196  001F24  5013               	movf	right@pl^0,w,c
  6197  001F26  26D9               	addwf	fsr2l,f,c
  6198  001F28  5014               	movf	(right@pl+1)^0,w,c
  6199  001F2A  22DA               	addwfc	fsr2h,f,c
  6200  001F2C  50DF               	movf	indf2,w,c
  6201  001F2E  6E15               	movwf	??_right^0,c
  6202  001F30  6A16               	clrf	(??_right+1)^0,c
  6203  001F32  0E05               	movlw	5
  6204  001F34                     i2u191_45:
  6205  001F34  90D8               	bcf	status,0,c
  6206  001F36  3615               	rlcf	??_right^0,f,c
  6207  001F38  3616               	rlcf	(??_right+1)^0,f,c
  6208  001F3A  2EE8               	decfsz	wreg,f,c
  6209  001F3C  EF9A  F00F         	goto	i2u191_45
  6210  001F40  C013  FFD9         	movff	right@pl,fsr2l
  6211  001F44  C014  FFDA         	movff	right@pl+1,fsr2h
  6212  001F48  50DF               	movf	indf2,w,c
  6213  001F4A  6E17               	movwf	(??_right+2)^0,c
  6214  001F4C  5017               	movf	(??_right+2)^0,w,c
  6215  001F4E  0D02               	mullw	2
  6216  001F50  0EE0               	movlw	224
  6217  001F52  6E18               	movwf	(??_right+3)^0,c
  6218  001F54  0EFF               	movlw	255
  6219  001F56  6E19               	movwf	(??_right+4)^0,c
  6220  001F58  0E00               	movlw	low _display
  6221  001F5A  6E1A               	movwf	(??_right+5)^0,c
  6222  001F5C  0E01               	movlw	high _display
  6223  001F5E  6E1B               	movwf	(??_right+6)^0,c
  6224  001F60  5018               	movf	(??_right+3)^0,w,c
  6225  001F62  261A               	addwf	(??_right+5)^0,f,c
  6226  001F64  5019               	movf	(??_right+4)^0,w,c
  6227  001F66  221B               	addwfc	(??_right+6)^0,f,c
  6228  001F68  50F3               	movf	243,w,c
  6229  001F6A  261A               	addwf	(??_right+5)^0,f,c
  6230  001F6C  50F4               	movf	244,w,c
  6231  001F6E  221B               	addwfc	(??_right+6)^0,f,c
  6232  001F70  5015               	movf	??_right^0,w,c
  6233  001F72  241A               	addwf	(??_right+5)^0,w,c
  6234  001F74  6ED9               	movwf	fsr2l,c
  6235  001F76  5016               	movf	(??_right+1)^0,w,c
  6236  001F78  201B               	addwfc	(??_right+6)^0,w,c
  6237  001F7A  6EDA               	movwf	fsr2h,c
  6238  001F7C  EE10 F003          	lfsr	1,3
  6239  001F80  50DE               	movf	postinc2,w,c
  6240  001F82  26E1               	addwf	fsr1l,f,c
  6241  001F84  50DD               	movf	postdec2,w,c
  6242  001F86  22E2               	addwfc	fsr1h,f,c
  6243  001F88  0E02               	movlw	2
  6244  001F8A  18E6               	xorwf	postinc1,w,c
  6245  001F8C  A4D8               	btfss	status,2,c
  6246  001F8E  EFCB  F00F         	goto	i2u192_41
  6247  001F92  EFCD  F00F         	goto	i2u192_40
  6248  001F96                     i2u192_41:
  6249  001F96  EFD3  F00F         	goto	i2l2320
  6250  001F9A                     i2u192_40:
  6251  001F9A                     
  6252                           ;main.c: 570:             CatchFrisbee(pl);
  6253  001F9A  C013  F007         	movff	right@pl,CatchFrisbee@pl
  6254  001F9E  C014  F008         	movff	right@pl+1,CatchFrisbee@pl+1
  6255  001FA2  EC15  F015         	call	_CatchFrisbee	;wreg free
  6256  001FA6                     i2l2320:
  6257                           
  6258                           ;main.c: 573:     display[pl->y-1][pl->x-1] = ((void*)0);
  6259  001FA6  EE20 F001          	lfsr	2,1
  6260  001FAA  5013               	movf	right@pl^0,w,c
  6261  001FAC  26D9               	addwf	fsr2l,f,c
  6262  001FAE  5014               	movf	(right@pl+1)^0,w,c
  6263  001FB0  22DA               	addwfc	fsr2h,f,c
  6264  001FB2  50DF               	movf	indf2,w,c
  6265  001FB4  6E15               	movwf	??_right^0,c
  6266  001FB6  6A16               	clrf	(??_right+1)^0,c
  6267  001FB8  0E05               	movlw	5
  6268  001FBA                     i2u193_45:
  6269  001FBA  90D8               	bcf	status,0,c
  6270  001FBC  3615               	rlcf	??_right^0,f,c
  6271  001FBE  3616               	rlcf	(??_right+1)^0,f,c
  6272  001FC0  2EE8               	decfsz	wreg,f,c
  6273  001FC2  EFDD  F00F         	goto	i2u193_45
  6274  001FC6  C013  FFD9         	movff	right@pl,fsr2l
  6275  001FCA  C014  FFDA         	movff	right@pl+1,fsr2h
  6276  001FCE  50DF               	movf	indf2,w,c
  6277  001FD0  6E17               	movwf	(??_right+2)^0,c
  6278  001FD2  6A18               	clrf	(??_right+3)^0,c
  6279  001FD4  90D8               	bcf	status,0,c
  6280  001FD6  3617               	rlcf	(??_right+2)^0,f,c
  6281  001FD8  3618               	rlcf	(??_right+3)^0,f,c
  6282  001FDA  0EDE               	movlw	222
  6283  001FDC  6E19               	movwf	(??_right+4)^0,c
  6284  001FDE  0EFF               	movlw	255
  6285  001FE0  6E1A               	movwf	(??_right+5)^0,c
  6286  001FE2  0E00               	movlw	low _display
  6287  001FE4  6E1B               	movwf	(??_right+6)^0,c
  6288  001FE6  0E01               	movlw	high _display
  6289  001FE8  6E1C               	movwf	(??_right+7)^0,c
  6290  001FEA  5019               	movf	(??_right+4)^0,w,c
  6291  001FEC  261B               	addwf	(??_right+6)^0,f,c
  6292  001FEE  501A               	movf	(??_right+5)^0,w,c
  6293  001FF0  221C               	addwfc	(??_right+7)^0,f,c
  6294  001FF2  5017               	movf	(??_right+2)^0,w,c
  6295  001FF4  261B               	addwf	(??_right+6)^0,f,c
  6296  001FF6  5018               	movf	(??_right+3)^0,w,c
  6297  001FF8  221C               	addwfc	(??_right+7)^0,f,c
  6298  001FFA  5015               	movf	??_right^0,w,c
  6299  001FFC  241B               	addwf	(??_right+6)^0,w,c
  6300  001FFE  6ED9               	movwf	fsr2l,c
  6301  002000  5016               	movf	(??_right+1)^0,w,c
  6302  002002  201C               	addwfc	(??_right+7)^0,w,c
  6303  002004  6EDA               	movwf	fsr2h,c
  6304  002006  0E00               	movlw	0
  6305  002008  6EDE               	movwf	postinc2,c
  6306  00200A  0E00               	movlw	0
  6307  00200C  6EDD               	movwf	postdec2,c
  6308  00200E                     
  6309                           ;main.c: 574:     pl->x++;
  6310  00200E  C013  FFD9         	movff	right@pl,fsr2l
  6311  002012  C014  FFDA         	movff	right@pl+1,fsr2h
  6312  002016  2ADF               	incf	indf2,f,c
  6313  002018                     
  6314                           ;main.c: 575:     display[pl->y-1][pl->x-1] = pl;
  6315  002018  EE20 F001          	lfsr	2,1
  6316  00201C  5013               	movf	right@pl^0,w,c
  6317  00201E  26D9               	addwf	fsr2l,f,c
  6318  002020  5014               	movf	(right@pl+1)^0,w,c
  6319  002022  22DA               	addwfc	fsr2h,f,c
  6320  002024  50DF               	movf	indf2,w,c
  6321  002026  6E15               	movwf	??_right^0,c
  6322  002028  6A16               	clrf	(??_right+1)^0,c
  6323  00202A  0E05               	movlw	5
  6324  00202C                     i2u194_45:
  6325  00202C  90D8               	bcf	status,0,c
  6326  00202E  3615               	rlcf	??_right^0,f,c
  6327  002030  3616               	rlcf	(??_right+1)^0,f,c
  6328  002032  2EE8               	decfsz	wreg,f,c
  6329  002034  EF16  F010         	goto	i2u194_45
  6330  002038  C013  FFD9         	movff	right@pl,fsr2l
  6331  00203C  C014  FFDA         	movff	right@pl+1,fsr2h
  6332  002040  50DF               	movf	indf2,w,c
  6333  002042  6E17               	movwf	(??_right+2)^0,c
  6334  002044  6A18               	clrf	(??_right+3)^0,c
  6335  002046  90D8               	bcf	status,0,c
  6336  002048  3617               	rlcf	(??_right+2)^0,f,c
  6337  00204A  3618               	rlcf	(??_right+3)^0,f,c
  6338  00204C  0EDE               	movlw	222
  6339  00204E  6E19               	movwf	(??_right+4)^0,c
  6340  002050  0EFF               	movlw	255
  6341  002052  6E1A               	movwf	(??_right+5)^0,c
  6342  002054  0E00               	movlw	low _display
  6343  002056  6E1B               	movwf	(??_right+6)^0,c
  6344  002058  0E01               	movlw	high _display
  6345  00205A  6E1C               	movwf	(??_right+7)^0,c
  6346  00205C  5019               	movf	(??_right+4)^0,w,c
  6347  00205E  261B               	addwf	(??_right+6)^0,f,c
  6348  002060  501A               	movf	(??_right+5)^0,w,c
  6349  002062  221C               	addwfc	(??_right+7)^0,f,c
  6350  002064  5017               	movf	(??_right+2)^0,w,c
  6351  002066  261B               	addwf	(??_right+6)^0,f,c
  6352  002068  5018               	movf	(??_right+3)^0,w,c
  6353  00206A  221C               	addwfc	(??_right+7)^0,f,c
  6354  00206C  5015               	movf	??_right^0,w,c
  6355  00206E  241B               	addwf	(??_right+6)^0,w,c
  6356  002070  6ED9               	movwf	fsr2l,c
  6357  002072  5016               	movf	(??_right+1)^0,w,c
  6358  002074  201C               	addwfc	(??_right+7)^0,w,c
  6359  002076  6EDA               	movwf	fsr2h,c
  6360  002078  C013  FFDE         	movff	right@pl,postinc2
  6361  00207C  C014  FFDD         	movff	right@pl+1,postdec2
  6362  002080                     i2l384:
  6363  002080  0012               	return		;funcret
  6364  002082                     __end_of_right:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _random_generator *****************
  6368 ;; Defined at:
  6369 ;;		line 236 in file "./the3.h"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  modulo          2    5[COMRAM] unsigned short 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  i               2    9[COMRAM] unsigned short 
  6374 ;;  res             1   12[COMRAM] unsigned char 
  6375 ;;  temp            1   11[COMRAM] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  2    5[COMRAM] unsigned short 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2, status,0, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;Total ram usage:        8 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    1
  6392 ;; This function calls:
  6393 ;;		___lwmod
  6394 ;; This function is called by:
  6395 ;;		_compute_frisbee_target_and_route
  6396 ;;		_MoveEveryone
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text20
  6401  002F32                     __ptext20:
  6402                           	callstack 0
  6403  002F32                     _random_generator:
  6404                           	callstack 22
  6405  002F32                     
  6406                           ;./the3.h: 240:     byte temp;;./the3.h: 241:     byte res;;./the3.h: 243:     T3CONbits
      +                          .TMR3ON = 0;
  6407  002F32  90B1               	bcf	177,0,c	;volatile
  6408  002F34                     
  6409                           ;./the3.h: 245:     res = TMR3L % modulo;
  6410  002F34  CFB2 F001          	movff	4018,___lwmod@dividend	;volatile
  6411  002F38  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6412  002F3A  C006  F003         	movff	random_generator@modulo,___lwmod@divisor
  6413  002F3E  C007  F004         	movff	random_generator@modulo+1,___lwmod@divisor+1
  6414  002F42  ECCE  F017         	call	___lwmod	;wreg free
  6415  002F46  5001               	movf	?___lwmod^0,w,c
  6416  002F48  6E0D               	movwf	random_generator@res^0,c
  6417  002F4A                     
  6418                           ;./the3.h: 246:     TMR3H = TMR3L;
  6419  002F4A  CFB2 FFB3          	movff	4018,4019	;volatile
  6420  002F4E                     
  6421                           ;./the3.h: 248:     for (unsigned short i = 0; i < (modulo & 0b111); i++) {
  6422  002F4E  0E00               	movlw	0
  6423  002F50  6E0B               	movwf	(random_generator@i+1)^0,c
  6424  002F52  0E00               	movlw	0
  6425  002F54  6E0A               	movwf	random_generator@i^0,c
  6426  002F56  EFB8  F017         	goto	i2l2258
  6427  002F5A                     i2l2254:
  6428                           
  6429                           ;./the3.h: 249:         temp = TMR3L & 0b10000000;
  6430  002F5A  50B2               	movf	178,w,c	;volatile
  6431  002F5C  0B80               	andlw	128
  6432  002F5E  6E0C               	movwf	random_generator@temp^0,c
  6433                           
  6434                           ;./the3.h: 250:         TMR3L <<= 1;
  6435  002F60  90D8               	bcf	status,0,c
  6436  002F62  36B2               	rlcf	178,f,c
  6437                           
  6438                           ;volatile
  6439                           ;./the3.h: 251:         TMR3L = TMR3L | (temp >> 7);
  6440  002F64  440C               	rlncf	random_generator@temp^0,w,c
  6441  002F66  0B01               	andlw	1
  6442  002F68  10B2               	iorwf	178,w,c	;volatile
  6443  002F6A  6EB2               	movwf	178,c	;volatile
  6444  002F6C                     
  6445                           ;./the3.h: 252:     }
  6446  002F6C  4A0A               	infsnz	random_generator@i^0,f,c
  6447  002F6E  2A0B               	incf	(random_generator@i+1)^0,f,c
  6448  002F70                     i2l2258:
  6449  002F70  0E07               	movlw	7
  6450  002F72  1406               	andwf	random_generator@modulo^0,w,c
  6451  002F74  6E08               	movwf	??_random_generator^0,c
  6452  002F76  0E00               	movlw	0
  6453  002F78  1407               	andwf	(random_generator@modulo+1)^0,w,c
  6454  002F7A  6E09               	movwf	(??_random_generator+1)^0,c
  6455  002F7C  5008               	movf	??_random_generator^0,w,c
  6456  002F7E  5C0A               	subwf	random_generator@i^0,w,c
  6457  002F80  5009               	movf	(??_random_generator+1)^0,w,c
  6458  002F82  580B               	subwfb	(random_generator@i+1)^0,w,c
  6459  002F84  A0D8               	btfss	status,0,c
  6460  002F86  EFC7  F017         	goto	i2u171_41
  6461  002F8A  EFC9  F017         	goto	i2u171_40
  6462  002F8E                     i2u171_41:
  6463  002F8E  EFAD  F017         	goto	i2l2254
  6464  002F92                     i2u171_40:
  6465  002F92                     
  6466                           ;./the3.h: 255:     T3CONbits.TMR3ON = 1;
  6467  002F92  80B1               	bsf	177,0,c	;volatile
  6468                           
  6469                           ;./the3.h: 256:     return res;
  6470  002F94  C00D  F006         	movff	random_generator@res,?_random_generator
  6471  002F98  6A07               	clrf	(?_random_generator+1)^0,c
  6472  002F9A  0012               	return		;funcret
  6473  002F9C                     __end_of_random_generator:
  6474                           	callstack 0
  6475                           
  6476 ;; *************** function ___lwmod *****************
  6477 ;; Defined at:
  6478 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/lwmod.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  dividend        2    0[COMRAM] unsigned int 
  6481 ;;  divisor         2    2[COMRAM] unsigned int 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;  counter         1    4[COMRAM] unsigned char 
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  2    0[COMRAM] unsigned int 
  6486 ;; Registers used:
  6487 ;;		wreg, status,2, status,0
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;Total ram usage:        5 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_random_generator
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text21
  6507  002F9C                     __ptext21:
  6508                           	callstack 0
  6509  002F9C                     ___lwmod:
  6510                           	callstack 22
  6511  002F9C  5003               	movf	___lwmod@divisor^0,w,c
  6512  002F9E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6513  002FA0  B4D8               	btfsc	status,2,c
  6514  002FA2  EFD5  F017         	goto	i2u168_41
  6515  002FA6  EFD7  F017         	goto	i2u168_40
  6516  002FAA                     i2u168_41:
  6517  002FAA  EFFB  F017         	goto	i2l948
  6518  002FAE                     i2u168_40:
  6519  002FAE  0E01               	movlw	1
  6520  002FB0  6E05               	movwf	___lwmod@counter^0,c
  6521  002FB2  EFDF  F017         	goto	i2l2236
  6522  002FB6                     i2l2234:
  6523  002FB6  90D8               	bcf	status,0,c
  6524  002FB8  3603               	rlcf	___lwmod@divisor^0,f,c
  6525  002FBA  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6526  002FBC  2A05               	incf	___lwmod@counter^0,f,c
  6527  002FBE                     i2l2236:
  6528  002FBE  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6529  002FC0  EFE4  F017         	goto	i2u169_41
  6530  002FC4  EFE6  F017         	goto	i2u169_40
  6531  002FC8                     i2u169_41:
  6532  002FC8  EFDB  F017         	goto	i2l2234
  6533  002FCC                     i2u169_40:
  6534  002FCC                     i2l2238:
  6535  002FCC  5003               	movf	___lwmod@divisor^0,w,c
  6536  002FCE  5C01               	subwf	___lwmod@dividend^0,w,c
  6537  002FD0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6538  002FD2  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6539  002FD4  A0D8               	btfss	status,0,c
  6540  002FD6  EFEF  F017         	goto	i2u170_41
  6541  002FDA  EFF1  F017         	goto	i2u170_40
  6542  002FDE                     i2u170_41:
  6543  002FDE  EFF5  F017         	goto	i2l2242
  6544  002FE2                     i2u170_40:
  6545  002FE2  5003               	movf	___lwmod@divisor^0,w,c
  6546  002FE4  5E01               	subwf	___lwmod@dividend^0,f,c
  6547  002FE6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6548  002FE8  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6549  002FEA                     i2l2242:
  6550  002FEA  90D8               	bcf	status,0,c
  6551  002FEC  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6552  002FEE  3203               	rrcf	___lwmod@divisor^0,f,c
  6553  002FF0  2E05               	decfsz	___lwmod@counter^0,f,c
  6554  002FF2  EFE6  F017         	goto	i2l2238
  6555  002FF6                     i2l948:
  6556  002FF6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6557  002FFA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6558  002FFE  0012               	return		;funcret
  6559  003000                     __end_of___lwmod:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function _left *****************
  6563 ;; Defined at:
  6564 ;;		line 550 in file "main.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  pl              2   18[COMRAM] PTR struct GameElement
  6567 ;;		 -> objs(30), 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;Total ram usage:       12 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    2
  6586 ;; This function calls:
  6587 ;;		_CatchFrisbee
  6588 ;; This function is called by:
  6589 ;;		_highIsr
  6590 ;;		_MoveEveryone
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text22
  6595  0017B8                     __ptext22:
  6596                           	callstack 0
  6597  0017B8                     _left:
  6598                           	callstack 22
  6599  0017B8                     
  6600                           ;main.c: 551:     if (pl->x == 1) return;
  6601  0017B8  C013  FFD9         	movff	left@pl,fsr2l
  6602  0017BC  C014  FFDA         	movff	left@pl+1,fsr2h
  6603  0017C0  04DE               	decf	postinc2,w,c
  6604  0017C2  A4D8               	btfss	status,2,c
  6605  0017C4  EFE6  F00B         	goto	i2u202_41
  6606  0017C8  EFE8  F00B         	goto	i2u202_40
  6607  0017CC                     i2u202_41:
  6608  0017CC  EFEA  F00B         	goto	i2l2358
  6609  0017D0                     i2u202_40:
  6610  0017D0  EF55  F00D         	goto	i2l376
  6611  0017D4                     i2l2358:
  6612                           
  6613                           ;main.c: 552:     if (display[pl->y-1][pl->x-2] != ((void*)0)) {
  6614  0017D4  EE20 F001          	lfsr	2,1
  6615  0017D8  5013               	movf	left@pl^0,w,c
  6616  0017DA  26D9               	addwf	fsr2l,f,c
  6617  0017DC  5014               	movf	(left@pl+1)^0,w,c
  6618  0017DE  22DA               	addwfc	fsr2h,f,c
  6619  0017E0  50DF               	movf	indf2,w,c
  6620  0017E2  6E15               	movwf	??_left^0,c
  6621  0017E4  6A16               	clrf	(??_left+1)^0,c
  6622  0017E6  0E05               	movlw	5
  6623  0017E8                     i2u203_45:
  6624  0017E8  90D8               	bcf	status,0,c
  6625  0017EA  3615               	rlcf	??_left^0,f,c
  6626  0017EC  3616               	rlcf	(??_left+1)^0,f,c
  6627  0017EE  2EE8               	decfsz	wreg,f,c
  6628  0017F0  EFF4  F00B         	goto	i2u203_45
  6629  0017F4  C013  FFD9         	movff	left@pl,fsr2l
  6630  0017F8  C014  FFDA         	movff	left@pl+1,fsr2h
  6631  0017FC  50DF               	movf	indf2,w,c
  6632  0017FE  6E17               	movwf	(??_left+2)^0,c
  6633  001800  6A18               	clrf	(??_left+3)^0,c
  6634  001802  90D8               	bcf	status,0,c
  6635  001804  3617               	rlcf	(??_left+2)^0,f,c
  6636  001806  3618               	rlcf	(??_left+3)^0,f,c
  6637  001808  0EDC               	movlw	220
  6638  00180A  6E19               	movwf	(??_left+4)^0,c
  6639  00180C  0EFF               	movlw	255
  6640  00180E  6E1A               	movwf	(??_left+5)^0,c
  6641  001810  0E00               	movlw	low _display
  6642  001812  6E1B               	movwf	(??_left+6)^0,c
  6643  001814  0E01               	movlw	high _display
  6644  001816  6E1C               	movwf	(??_left+7)^0,c
  6645  001818  5019               	movf	(??_left+4)^0,w,c
  6646  00181A  261B               	addwf	(??_left+6)^0,f,c
  6647  00181C  501A               	movf	(??_left+5)^0,w,c
  6648  00181E  221C               	addwfc	(??_left+7)^0,f,c
  6649  001820  5017               	movf	(??_left+2)^0,w,c
  6650  001822  261B               	addwf	(??_left+6)^0,f,c
  6651  001824  5018               	movf	(??_left+3)^0,w,c
  6652  001826  221C               	addwfc	(??_left+7)^0,f,c
  6653  001828  5015               	movf	??_left^0,w,c
  6654  00182A  241B               	addwf	(??_left+6)^0,w,c
  6655  00182C  6ED9               	movwf	fsr2l,c
  6656  00182E  5016               	movf	(??_left+1)^0,w,c
  6657  001830  201C               	addwfc	(??_left+7)^0,w,c
  6658  001832  6EDA               	movwf	fsr2h,c
  6659  001834  50DE               	movf	postinc2,w,c
  6660  001836  10DE               	iorwf	postinc2,w,c
  6661  001838  B4D8               	btfsc	status,2,c
  6662  00183A  EF21  F00C         	goto	i2u204_41
  6663  00183E  EF23  F00C         	goto	i2u204_40
  6664  001842                     i2u204_41:
  6665  001842  EFE8  F00C         	goto	i2l2372
  6666  001846                     i2u204_40:
  6667  001846                     
  6668                           ;main.c: 553:         if (display[pl->y-1][pl->x-2]->type == OT_PLAYERA) return;
  6669  001846  EE20 F001          	lfsr	2,1
  6670  00184A  5013               	movf	left@pl^0,w,c
  6671  00184C  26D9               	addwf	fsr2l,f,c
  6672  00184E  5014               	movf	(left@pl+1)^0,w,c
  6673  001850  22DA               	addwfc	fsr2h,f,c
  6674  001852  50DF               	movf	indf2,w,c
  6675  001854  6E15               	movwf	??_left^0,c
  6676  001856  6A16               	clrf	(??_left+1)^0,c
  6677  001858  0E05               	movlw	5
  6678  00185A                     i2u205_45:
  6679  00185A  90D8               	bcf	status,0,c
  6680  00185C  3615               	rlcf	??_left^0,f,c
  6681  00185E  3616               	rlcf	(??_left+1)^0,f,c
  6682  001860  2EE8               	decfsz	wreg,f,c
  6683  001862  EF2D  F00C         	goto	i2u205_45
  6684  001866  C013  FFD9         	movff	left@pl,fsr2l
  6685  00186A  C014  FFDA         	movff	left@pl+1,fsr2h
  6686  00186E  50DF               	movf	indf2,w,c
  6687  001870  6E17               	movwf	(??_left+2)^0,c
  6688  001872  6A18               	clrf	(??_left+3)^0,c
  6689  001874  90D8               	bcf	status,0,c
  6690  001876  3617               	rlcf	(??_left+2)^0,f,c
  6691  001878  3618               	rlcf	(??_left+3)^0,f,c
  6692  00187A  0EDC               	movlw	220
  6693  00187C  6E19               	movwf	(??_left+4)^0,c
  6694  00187E  0EFF               	movlw	255
  6695  001880  6E1A               	movwf	(??_left+5)^0,c
  6696  001882  0E00               	movlw	low _display
  6697  001884  6E1B               	movwf	(??_left+6)^0,c
  6698  001886  0E01               	movlw	high _display
  6699  001888  6E1C               	movwf	(??_left+7)^0,c
  6700  00188A  5019               	movf	(??_left+4)^0,w,c
  6701  00188C  261B               	addwf	(??_left+6)^0,f,c
  6702  00188E  501A               	movf	(??_left+5)^0,w,c
  6703  001890  221C               	addwfc	(??_left+7)^0,f,c
  6704  001892  5017               	movf	(??_left+2)^0,w,c
  6705  001894  261B               	addwf	(??_left+6)^0,f,c
  6706  001896  5018               	movf	(??_left+3)^0,w,c
  6707  001898  221C               	addwfc	(??_left+7)^0,f,c
  6708  00189A  5015               	movf	??_left^0,w,c
  6709  00189C  241B               	addwf	(??_left+6)^0,w,c
  6710  00189E  6ED9               	movwf	fsr2l,c
  6711  0018A0  5016               	movf	(??_left+1)^0,w,c
  6712  0018A2  201C               	addwfc	(??_left+7)^0,w,c
  6713  0018A4  6EDA               	movwf	fsr2h,c
  6714  0018A6  EE10 F003          	lfsr	1,3
  6715  0018AA  50DE               	movf	postinc2,w,c
  6716  0018AC  26E1               	addwf	fsr1l,f,c
  6717  0018AE  50DD               	movf	postdec2,w,c
  6718  0018B0  22E2               	addwfc	fsr1h,f,c
  6719  0018B2  50E7               	movf	indf1,w,c
  6720  0018B4  A4D8               	btfss	status,2,c
  6721  0018B6  EF5F  F00C         	goto	i2u206_41
  6722  0018BA  EF61  F00C         	goto	i2u206_40
  6723  0018BE                     i2u206_41:
  6724  0018BE  EF63  F00C         	goto	i2l2364
  6725  0018C2                     i2u206_40:
  6726  0018C2  EF55  F00D         	goto	i2l376
  6727  0018C6                     i2l2364:
  6728                           
  6729                           ;main.c: 554:         if (display[pl->y-1][pl->x-2]->type == OT_PLAYERB) return;
  6730  0018C6  EE20 F001          	lfsr	2,1
  6731  0018CA  5013               	movf	left@pl^0,w,c
  6732  0018CC  26D9               	addwf	fsr2l,f,c
  6733  0018CE  5014               	movf	(left@pl+1)^0,w,c
  6734  0018D0  22DA               	addwfc	fsr2h,f,c
  6735  0018D2  50DF               	movf	indf2,w,c
  6736  0018D4  6E15               	movwf	??_left^0,c
  6737  0018D6  6A16               	clrf	(??_left+1)^0,c
  6738  0018D8  0E05               	movlw	5
  6739  0018DA                     i2u207_45:
  6740  0018DA  90D8               	bcf	status,0,c
  6741  0018DC  3615               	rlcf	??_left^0,f,c
  6742  0018DE  3616               	rlcf	(??_left+1)^0,f,c
  6743  0018E0  2EE8               	decfsz	wreg,f,c
  6744  0018E2  EF6D  F00C         	goto	i2u207_45
  6745  0018E6  C013  FFD9         	movff	left@pl,fsr2l
  6746  0018EA  C014  FFDA         	movff	left@pl+1,fsr2h
  6747  0018EE  50DF               	movf	indf2,w,c
  6748  0018F0  6E17               	movwf	(??_left+2)^0,c
  6749  0018F2  6A18               	clrf	(??_left+3)^0,c
  6750  0018F4  90D8               	bcf	status,0,c
  6751  0018F6  3617               	rlcf	(??_left+2)^0,f,c
  6752  0018F8  3618               	rlcf	(??_left+3)^0,f,c
  6753  0018FA  0EDC               	movlw	220
  6754  0018FC  6E19               	movwf	(??_left+4)^0,c
  6755  0018FE  0EFF               	movlw	255
  6756  001900  6E1A               	movwf	(??_left+5)^0,c
  6757  001902  0E00               	movlw	low _display
  6758  001904  6E1B               	movwf	(??_left+6)^0,c
  6759  001906  0E01               	movlw	high _display
  6760  001908  6E1C               	movwf	(??_left+7)^0,c
  6761  00190A  5019               	movf	(??_left+4)^0,w,c
  6762  00190C  261B               	addwf	(??_left+6)^0,f,c
  6763  00190E  501A               	movf	(??_left+5)^0,w,c
  6764  001910  221C               	addwfc	(??_left+7)^0,f,c
  6765  001912  5017               	movf	(??_left+2)^0,w,c
  6766  001914  261B               	addwf	(??_left+6)^0,f,c
  6767  001916  5018               	movf	(??_left+3)^0,w,c
  6768  001918  221C               	addwfc	(??_left+7)^0,f,c
  6769  00191A  5015               	movf	??_left^0,w,c
  6770  00191C  241B               	addwf	(??_left+6)^0,w,c
  6771  00191E  6ED9               	movwf	fsr2l,c
  6772  001920  5016               	movf	(??_left+1)^0,w,c
  6773  001922  201C               	addwfc	(??_left+7)^0,w,c
  6774  001924  6EDA               	movwf	fsr2h,c
  6775  001926  EE10 F003          	lfsr	1,3
  6776  00192A  50DE               	movf	postinc2,w,c
  6777  00192C  26E1               	addwf	fsr1l,f,c
  6778  00192E  50DD               	movf	postdec2,w,c
  6779  001930  22E2               	addwfc	fsr1h,f,c
  6780  001932  04E6               	decf	postinc1,w,c
  6781  001934  A4D8               	btfss	status,2,c
  6782  001936  EF9F  F00C         	goto	i2u208_41
  6783  00193A  EFA1  F00C         	goto	i2u208_40
  6784  00193E                     i2u208_41:
  6785  00193E  EFA3  F00C         	goto	i2l2368
  6786  001942                     i2u208_40:
  6787  001942  EF55  F00D         	goto	i2l376
  6788  001946                     i2l2368:
  6789                           
  6790                           ;main.c: 555:         if (display[pl->y-1][pl->x-2]->type == OT_FRISBEE) {
  6791  001946  EE20 F001          	lfsr	2,1
  6792  00194A  5013               	movf	left@pl^0,w,c
  6793  00194C  26D9               	addwf	fsr2l,f,c
  6794  00194E  5014               	movf	(left@pl+1)^0,w,c
  6795  001950  22DA               	addwfc	fsr2h,f,c
  6796  001952  50DF               	movf	indf2,w,c
  6797  001954  6E15               	movwf	??_left^0,c
  6798  001956  6A16               	clrf	(??_left+1)^0,c
  6799  001958  0E05               	movlw	5
  6800  00195A                     i2u209_45:
  6801  00195A  90D8               	bcf	status,0,c
  6802  00195C  3615               	rlcf	??_left^0,f,c
  6803  00195E  3616               	rlcf	(??_left+1)^0,f,c
  6804  001960  2EE8               	decfsz	wreg,f,c
  6805  001962  EFAD  F00C         	goto	i2u209_45
  6806  001966  C013  FFD9         	movff	left@pl,fsr2l
  6807  00196A  C014  FFDA         	movff	left@pl+1,fsr2h
  6808  00196E  50DF               	movf	indf2,w,c
  6809  001970  6E17               	movwf	(??_left+2)^0,c
  6810  001972  6A18               	clrf	(??_left+3)^0,c
  6811  001974  90D8               	bcf	status,0,c
  6812  001976  3617               	rlcf	(??_left+2)^0,f,c
  6813  001978  3618               	rlcf	(??_left+3)^0,f,c
  6814  00197A  0EDC               	movlw	220
  6815  00197C  6E19               	movwf	(??_left+4)^0,c
  6816  00197E  0EFF               	movlw	255
  6817  001980  6E1A               	movwf	(??_left+5)^0,c
  6818  001982  0E00               	movlw	low _display
  6819  001984  6E1B               	movwf	(??_left+6)^0,c
  6820  001986  0E01               	movlw	high _display
  6821  001988  6E1C               	movwf	(??_left+7)^0,c
  6822  00198A  5019               	movf	(??_left+4)^0,w,c
  6823  00198C  261B               	addwf	(??_left+6)^0,f,c
  6824  00198E  501A               	movf	(??_left+5)^0,w,c
  6825  001990  221C               	addwfc	(??_left+7)^0,f,c
  6826  001992  5017               	movf	(??_left+2)^0,w,c
  6827  001994  261B               	addwf	(??_left+6)^0,f,c
  6828  001996  5018               	movf	(??_left+3)^0,w,c
  6829  001998  221C               	addwfc	(??_left+7)^0,f,c
  6830  00199A  5015               	movf	??_left^0,w,c
  6831  00199C  241B               	addwf	(??_left+6)^0,w,c
  6832  00199E  6ED9               	movwf	fsr2l,c
  6833  0019A0  5016               	movf	(??_left+1)^0,w,c
  6834  0019A2  201C               	addwfc	(??_left+7)^0,w,c
  6835  0019A4  6EDA               	movwf	fsr2h,c
  6836  0019A6  EE10 F003          	lfsr	1,3
  6837  0019AA  50DE               	movf	postinc2,w,c
  6838  0019AC  26E1               	addwf	fsr1l,f,c
  6839  0019AE  50DD               	movf	postdec2,w,c
  6840  0019B0  22E2               	addwfc	fsr1h,f,c
  6841  0019B2  0E02               	movlw	2
  6842  0019B4  18E6               	xorwf	postinc1,w,c
  6843  0019B6  A4D8               	btfss	status,2,c
  6844  0019B8  EFE0  F00C         	goto	i2u210_41
  6845  0019BC  EFE2  F00C         	goto	i2u210_40
  6846  0019C0                     i2u210_41:
  6847  0019C0  EFE8  F00C         	goto	i2l2372
  6848  0019C4                     i2u210_40:
  6849  0019C4                     
  6850                           ;main.c: 556:             CatchFrisbee(pl);
  6851  0019C4  C013  F007         	movff	left@pl,CatchFrisbee@pl
  6852  0019C8  C014  F008         	movff	left@pl+1,CatchFrisbee@pl+1
  6853  0019CC  EC15  F015         	call	_CatchFrisbee	;wreg free
  6854  0019D0                     i2l2372:
  6855                           
  6856                           ;main.c: 559:     display[pl->y-1][pl->x-1] = ((void*)0);
  6857  0019D0  EE20 F001          	lfsr	2,1
  6858  0019D4  5013               	movf	left@pl^0,w,c
  6859  0019D6  26D9               	addwf	fsr2l,f,c
  6860  0019D8  5014               	movf	(left@pl+1)^0,w,c
  6861  0019DA  22DA               	addwfc	fsr2h,f,c
  6862  0019DC  50DF               	movf	indf2,w,c
  6863  0019DE  6E15               	movwf	??_left^0,c
  6864  0019E0  6A16               	clrf	(??_left+1)^0,c
  6865  0019E2  0E05               	movlw	5
  6866  0019E4                     i2u211_45:
  6867  0019E4  90D8               	bcf	status,0,c
  6868  0019E6  3615               	rlcf	??_left^0,f,c
  6869  0019E8  3616               	rlcf	(??_left+1)^0,f,c
  6870  0019EA  2EE8               	decfsz	wreg,f,c
  6871  0019EC  EFF2  F00C         	goto	i2u211_45
  6872  0019F0  C013  FFD9         	movff	left@pl,fsr2l
  6873  0019F4  C014  FFDA         	movff	left@pl+1,fsr2h
  6874  0019F8  50DF               	movf	indf2,w,c
  6875  0019FA  6E17               	movwf	(??_left+2)^0,c
  6876  0019FC  6A18               	clrf	(??_left+3)^0,c
  6877  0019FE  90D8               	bcf	status,0,c
  6878  001A00  3617               	rlcf	(??_left+2)^0,f,c
  6879  001A02  3618               	rlcf	(??_left+3)^0,f,c
  6880  001A04  0EDE               	movlw	222
  6881  001A06  6E19               	movwf	(??_left+4)^0,c
  6882  001A08  0EFF               	movlw	255
  6883  001A0A  6E1A               	movwf	(??_left+5)^0,c
  6884  001A0C  0E00               	movlw	low _display
  6885  001A0E  6E1B               	movwf	(??_left+6)^0,c
  6886  001A10  0E01               	movlw	high _display
  6887  001A12  6E1C               	movwf	(??_left+7)^0,c
  6888  001A14  5019               	movf	(??_left+4)^0,w,c
  6889  001A16  261B               	addwf	(??_left+6)^0,f,c
  6890  001A18  501A               	movf	(??_left+5)^0,w,c
  6891  001A1A  221C               	addwfc	(??_left+7)^0,f,c
  6892  001A1C  5017               	movf	(??_left+2)^0,w,c
  6893  001A1E  261B               	addwf	(??_left+6)^0,f,c
  6894  001A20  5018               	movf	(??_left+3)^0,w,c
  6895  001A22  221C               	addwfc	(??_left+7)^0,f,c
  6896  001A24  5015               	movf	??_left^0,w,c
  6897  001A26  241B               	addwf	(??_left+6)^0,w,c
  6898  001A28  6ED9               	movwf	fsr2l,c
  6899  001A2A  5016               	movf	(??_left+1)^0,w,c
  6900  001A2C  201C               	addwfc	(??_left+7)^0,w,c
  6901  001A2E  6EDA               	movwf	fsr2h,c
  6902  001A30  0E00               	movlw	0
  6903  001A32  6EDE               	movwf	postinc2,c
  6904  001A34  0E00               	movlw	0
  6905  001A36  6EDD               	movwf	postdec2,c
  6906  001A38                     
  6907                           ;main.c: 560:     pl->x--;
  6908  001A38  C013  FFD9         	movff	left@pl,fsr2l
  6909  001A3C  C014  FFDA         	movff	left@pl+1,fsr2h
  6910  001A40  06DF               	decf	indf2,f,c
  6911  001A42                     
  6912                           ;main.c: 561:     display[pl->y-1][pl->x-1] = pl;
  6913  001A42  EE20 F001          	lfsr	2,1
  6914  001A46  5013               	movf	left@pl^0,w,c
  6915  001A48  26D9               	addwf	fsr2l,f,c
  6916  001A4A  5014               	movf	(left@pl+1)^0,w,c
  6917  001A4C  22DA               	addwfc	fsr2h,f,c
  6918  001A4E  50DF               	movf	indf2,w,c
  6919  001A50  6E15               	movwf	??_left^0,c
  6920  001A52  6A16               	clrf	(??_left+1)^0,c
  6921  001A54  0E05               	movlw	5
  6922  001A56                     i2u212_45:
  6923  001A56  90D8               	bcf	status,0,c
  6924  001A58  3615               	rlcf	??_left^0,f,c
  6925  001A5A  3616               	rlcf	(??_left+1)^0,f,c
  6926  001A5C  2EE8               	decfsz	wreg,f,c
  6927  001A5E  EF2B  F00D         	goto	i2u212_45
  6928  001A62  C013  FFD9         	movff	left@pl,fsr2l
  6929  001A66  C014  FFDA         	movff	left@pl+1,fsr2h
  6930  001A6A  50DF               	movf	indf2,w,c
  6931  001A6C  6E17               	movwf	(??_left+2)^0,c
  6932  001A6E  6A18               	clrf	(??_left+3)^0,c
  6933  001A70  90D8               	bcf	status,0,c
  6934  001A72  3617               	rlcf	(??_left+2)^0,f,c
  6935  001A74  3618               	rlcf	(??_left+3)^0,f,c
  6936  001A76  0EDE               	movlw	222
  6937  001A78  6E19               	movwf	(??_left+4)^0,c
  6938  001A7A  0EFF               	movlw	255
  6939  001A7C  6E1A               	movwf	(??_left+5)^0,c
  6940  001A7E  0E00               	movlw	low _display
  6941  001A80  6E1B               	movwf	(??_left+6)^0,c
  6942  001A82  0E01               	movlw	high _display
  6943  001A84  6E1C               	movwf	(??_left+7)^0,c
  6944  001A86  5019               	movf	(??_left+4)^0,w,c
  6945  001A88  261B               	addwf	(??_left+6)^0,f,c
  6946  001A8A  501A               	movf	(??_left+5)^0,w,c
  6947  001A8C  221C               	addwfc	(??_left+7)^0,f,c
  6948  001A8E  5017               	movf	(??_left+2)^0,w,c
  6949  001A90  261B               	addwf	(??_left+6)^0,f,c
  6950  001A92  5018               	movf	(??_left+3)^0,w,c
  6951  001A94  221C               	addwfc	(??_left+7)^0,f,c
  6952  001A96  5015               	movf	??_left^0,w,c
  6953  001A98  241B               	addwf	(??_left+6)^0,w,c
  6954  001A9A  6ED9               	movwf	fsr2l,c
  6955  001A9C  5016               	movf	(??_left+1)^0,w,c
  6956  001A9E  201C               	addwfc	(??_left+7)^0,w,c
  6957  001AA0  6EDA               	movwf	fsr2h,c
  6958  001AA2  C013  FFDE         	movff	left@pl,postinc2
  6959  001AA6  C014  FFDD         	movff	left@pl+1,postdec2
  6960  001AAA                     i2l376:
  6961  001AAA  0012               	return		;funcret
  6962  001AAC                     __end_of_left:
  6963                           	callstack 0
  6964                           
  6965 ;; *************** function _downright *****************
  6966 ;; Defined at:
  6967 ;;		line 654 in file "main.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  pl              2   18[COMRAM] PTR struct GameElement
  6970 ;;		 -> objs(30), 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;Total ram usage:       10 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    2
  6989 ;; This function calls:
  6990 ;;		_CatchFrisbee
  6991 ;; This function is called by:
  6992 ;;		_MoveEveryone
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text23
  6997  002350                     __ptext23:
  6998                           	callstack 0
  6999  002350                     _downright:
  7000                           	callstack 21
  7001  002350                     
  7002                           ;main.c: 655:     if (pl->x == 16 || pl->y == 4) return;
  7003  002350  C013  FFD9         	movff	downright@pl,fsr2l
  7004  002354  C014  FFDA         	movff	downright@pl+1,fsr2h
  7005  002358  0E10               	movlw	16
  7006  00235A  18DE               	xorwf	postinc2,w,c
  7007  00235C  B4D8               	btfsc	status,2,c
  7008  00235E  EFB3  F011         	goto	i2u245_41
  7009  002362  EFB5  F011         	goto	i2u245_40
  7010  002366                     i2u245_41:
  7011  002366  EF08  F013         	goto	i2l440
  7012  00236A                     i2u245_40:
  7013  00236A  EE20 F001          	lfsr	2,1
  7014  00236E  5013               	movf	downright@pl^0,w,c
  7015  002370  26D9               	addwf	fsr2l,f,c
  7016  002372  5014               	movf	(downright@pl+1)^0,w,c
  7017  002374  22DA               	addwfc	fsr2h,f,c
  7018  002376  0E04               	movlw	4
  7019  002378  18DE               	xorwf	postinc2,w,c
  7020  00237A  A4D8               	btfss	status,2,c
  7021  00237C  EFC2  F011         	goto	i2u246_41
  7022  002380  EFC4  F011         	goto	i2u246_40
  7023  002384                     i2u246_41:
  7024  002384  EFC6  F011         	goto	i2l2468
  7025  002388                     i2u246_40:
  7026  002388  EF08  F013         	goto	i2l440
  7027  00238C                     i2l2468:
  7028                           
  7029                           ;main.c: 656:     if (display[pl->y][pl->x] != ((void*)0)) {
  7030  00238C  C013  FFD9         	movff	downright@pl,fsr2l
  7031  002390  C014  FFDA         	movff	downright@pl+1,fsr2h
  7032  002394  50DF               	movf	indf2,w,c
  7033  002396  6E15               	movwf	??_downright^0,c
  7034  002398  5015               	movf	??_downright^0,w,c
  7035  00239A  0D02               	mullw	2
  7036  00239C  CFF3 F016          	movff	prodl,??_downright+1
  7037  0023A0  CFF4 F017          	movff	prodh,??_downright+2
  7038  0023A4  EE20 F001          	lfsr	2,1
  7039  0023A8  5013               	movf	downright@pl^0,w,c
  7040  0023AA  26D9               	addwf	fsr2l,f,c
  7041  0023AC  5014               	movf	(downright@pl+1)^0,w,c
  7042  0023AE  22DA               	addwfc	fsr2h,f,c
  7043  0023B0  50DF               	movf	indf2,w,c
  7044  0023B2  6E18               	movwf	(??_downright+3)^0,c
  7045  0023B4  5018               	movf	(??_downright+3)^0,w,c
  7046  0023B6  0D20               	mullw	32
  7047  0023B8  0E00               	movlw	low _display
  7048  0023BA  6E19               	movwf	(??_downright+4)^0,c
  7049  0023BC  0E01               	movlw	high _display
  7050  0023BE  6E1A               	movwf	(??_downright+5)^0,c
  7051  0023C0  50F3               	movf	243,w,c
  7052  0023C2  2619               	addwf	(??_downright+4)^0,f,c
  7053  0023C4  50F4               	movf	244,w,c
  7054  0023C6  221A               	addwfc	(??_downright+5)^0,f,c
  7055  0023C8  5016               	movf	(??_downright+1)^0,w,c
  7056  0023CA  2419               	addwf	(??_downright+4)^0,w,c
  7057  0023CC  6ED9               	movwf	fsr2l,c
  7058  0023CE  5017               	movf	(??_downright+2)^0,w,c
  7059  0023D0  201A               	addwfc	(??_downright+5)^0,w,c
  7060  0023D2  6EDA               	movwf	fsr2h,c
  7061  0023D4  50DE               	movf	postinc2,w,c
  7062  0023D6  10DE               	iorwf	postinc2,w,c
  7063  0023D8  B4D8               	btfsc	status,2,c
  7064  0023DA  EFF1  F011         	goto	i2u247_41
  7065  0023DE  EFF3  F011         	goto	i2u247_40
  7066  0023E2                     i2u247_41:
  7067  0023E2  EF94  F012         	goto	i2l2482
  7068  0023E6                     i2u247_40:
  7069  0023E6                     
  7070                           ;main.c: 657:         if (display[pl->y][pl->x]->type == OT_PLAYERA) return;
  7071  0023E6  C013  FFD9         	movff	downright@pl,fsr2l
  7072  0023EA  C014  FFDA         	movff	downright@pl+1,fsr2h
  7073  0023EE  50DF               	movf	indf2,w,c
  7074  0023F0  6E15               	movwf	??_downright^0,c
  7075  0023F2  5015               	movf	??_downright^0,w,c
  7076  0023F4  0D02               	mullw	2
  7077  0023F6  CFF3 F016          	movff	prodl,??_downright+1
  7078  0023FA  CFF4 F017          	movff	prodh,??_downright+2
  7079  0023FE  EE20 F001          	lfsr	2,1
  7080  002402  5013               	movf	downright@pl^0,w,c
  7081  002404  26D9               	addwf	fsr2l,f,c
  7082  002406  5014               	movf	(downright@pl+1)^0,w,c
  7083  002408  22DA               	addwfc	fsr2h,f,c
  7084  00240A  50DF               	movf	indf2,w,c
  7085  00240C  6E18               	movwf	(??_downright+3)^0,c
  7086  00240E  5018               	movf	(??_downright+3)^0,w,c
  7087  002410  0D20               	mullw	32
  7088  002412  0E00               	movlw	low _display
  7089  002414  6E19               	movwf	(??_downright+4)^0,c
  7090  002416  0E01               	movlw	high _display
  7091  002418  6E1A               	movwf	(??_downright+5)^0,c
  7092  00241A  50F3               	movf	243,w,c
  7093  00241C  2619               	addwf	(??_downright+4)^0,f,c
  7094  00241E  50F4               	movf	244,w,c
  7095  002420  221A               	addwfc	(??_downright+5)^0,f,c
  7096  002422  5016               	movf	(??_downright+1)^0,w,c
  7097  002424  2419               	addwf	(??_downright+4)^0,w,c
  7098  002426  6ED9               	movwf	fsr2l,c
  7099  002428  5017               	movf	(??_downright+2)^0,w,c
  7100  00242A  201A               	addwfc	(??_downright+5)^0,w,c
  7101  00242C  6EDA               	movwf	fsr2h,c
  7102  00242E  EE10 F003          	lfsr	1,3
  7103  002432  50DE               	movf	postinc2,w,c
  7104  002434  26E1               	addwf	fsr1l,f,c
  7105  002436  50DD               	movf	postdec2,w,c
  7106  002438  22E2               	addwfc	fsr1h,f,c
  7107  00243A  50E7               	movf	indf1,w,c
  7108  00243C  A4D8               	btfss	status,2,c
  7109  00243E  EF23  F012         	goto	i2u248_41
  7110  002442  EF25  F012         	goto	i2u248_40
  7111  002446                     i2u248_41:
  7112  002446  EF27  F012         	goto	i2l2474
  7113  00244A                     i2u248_40:
  7114  00244A  EF08  F013         	goto	i2l440
  7115  00244E                     i2l2474:
  7116                           
  7117                           ;main.c: 658:         if (display[pl->y][pl->x]->type == OT_PLAYERB) return;
  7118  00244E  C013  FFD9         	movff	downright@pl,fsr2l
  7119  002452  C014  FFDA         	movff	downright@pl+1,fsr2h
  7120  002456  50DF               	movf	indf2,w,c
  7121  002458  6E15               	movwf	??_downright^0,c
  7122  00245A  5015               	movf	??_downright^0,w,c
  7123  00245C  0D02               	mullw	2
  7124  00245E  CFF3 F016          	movff	prodl,??_downright+1
  7125  002462  CFF4 F017          	movff	prodh,??_downright+2
  7126  002466  EE20 F001          	lfsr	2,1
  7127  00246A  5013               	movf	downright@pl^0,w,c
  7128  00246C  26D9               	addwf	fsr2l,f,c
  7129  00246E  5014               	movf	(downright@pl+1)^0,w,c
  7130  002470  22DA               	addwfc	fsr2h,f,c
  7131  002472  50DF               	movf	indf2,w,c
  7132  002474  6E18               	movwf	(??_downright+3)^0,c
  7133  002476  5018               	movf	(??_downright+3)^0,w,c
  7134  002478  0D20               	mullw	32
  7135  00247A  0E00               	movlw	low _display
  7136  00247C  6E19               	movwf	(??_downright+4)^0,c
  7137  00247E  0E01               	movlw	high _display
  7138  002480  6E1A               	movwf	(??_downright+5)^0,c
  7139  002482  50F3               	movf	243,w,c
  7140  002484  2619               	addwf	(??_downright+4)^0,f,c
  7141  002486  50F4               	movf	244,w,c
  7142  002488  221A               	addwfc	(??_downright+5)^0,f,c
  7143  00248A  5016               	movf	(??_downright+1)^0,w,c
  7144  00248C  2419               	addwf	(??_downright+4)^0,w,c
  7145  00248E  6ED9               	movwf	fsr2l,c
  7146  002490  5017               	movf	(??_downright+2)^0,w,c
  7147  002492  201A               	addwfc	(??_downright+5)^0,w,c
  7148  002494  6EDA               	movwf	fsr2h,c
  7149  002496  EE10 F003          	lfsr	1,3
  7150  00249A  50DE               	movf	postinc2,w,c
  7151  00249C  26E1               	addwf	fsr1l,f,c
  7152  00249E  50DD               	movf	postdec2,w,c
  7153  0024A0  22E2               	addwfc	fsr1h,f,c
  7154  0024A2  04E6               	decf	postinc1,w,c
  7155  0024A4  A4D8               	btfss	status,2,c
  7156  0024A6  EF57  F012         	goto	i2u249_41
  7157  0024AA  EF59  F012         	goto	i2u249_40
  7158  0024AE                     i2u249_41:
  7159  0024AE  EF5B  F012         	goto	i2l2478
  7160  0024B2                     i2u249_40:
  7161  0024B2  EF08  F013         	goto	i2l440
  7162  0024B6                     i2l2478:
  7163                           
  7164                           ;main.c: 659:         if (display[pl->y][pl->x]->type == OT_FRISBEE) {
  7165  0024B6  C013  FFD9         	movff	downright@pl,fsr2l
  7166  0024BA  C014  FFDA         	movff	downright@pl+1,fsr2h
  7167  0024BE  50DF               	movf	indf2,w,c
  7168  0024C0  6E15               	movwf	??_downright^0,c
  7169  0024C2  5015               	movf	??_downright^0,w,c
  7170  0024C4  0D02               	mullw	2
  7171  0024C6  CFF3 F016          	movff	prodl,??_downright+1
  7172  0024CA  CFF4 F017          	movff	prodh,??_downright+2
  7173  0024CE  EE20 F001          	lfsr	2,1
  7174  0024D2  5013               	movf	downright@pl^0,w,c
  7175  0024D4  26D9               	addwf	fsr2l,f,c
  7176  0024D6  5014               	movf	(downright@pl+1)^0,w,c
  7177  0024D8  22DA               	addwfc	fsr2h,f,c
  7178  0024DA  50DF               	movf	indf2,w,c
  7179  0024DC  6E18               	movwf	(??_downright+3)^0,c
  7180  0024DE  5018               	movf	(??_downright+3)^0,w,c
  7181  0024E0  0D20               	mullw	32
  7182  0024E2  0E00               	movlw	low _display
  7183  0024E4  6E19               	movwf	(??_downright+4)^0,c
  7184  0024E6  0E01               	movlw	high _display
  7185  0024E8  6E1A               	movwf	(??_downright+5)^0,c
  7186  0024EA  50F3               	movf	243,w,c
  7187  0024EC  2619               	addwf	(??_downright+4)^0,f,c
  7188  0024EE  50F4               	movf	244,w,c
  7189  0024F0  221A               	addwfc	(??_downright+5)^0,f,c
  7190  0024F2  5016               	movf	(??_downright+1)^0,w,c
  7191  0024F4  2419               	addwf	(??_downright+4)^0,w,c
  7192  0024F6  6ED9               	movwf	fsr2l,c
  7193  0024F8  5017               	movf	(??_downright+2)^0,w,c
  7194  0024FA  201A               	addwfc	(??_downright+5)^0,w,c
  7195  0024FC  6EDA               	movwf	fsr2h,c
  7196  0024FE  EE10 F003          	lfsr	1,3
  7197  002502  50DE               	movf	postinc2,w,c
  7198  002504  26E1               	addwf	fsr1l,f,c
  7199  002506  50DD               	movf	postdec2,w,c
  7200  002508  22E2               	addwfc	fsr1h,f,c
  7201  00250A  0E02               	movlw	2
  7202  00250C  18E6               	xorwf	postinc1,w,c
  7203  00250E  A4D8               	btfss	status,2,c
  7204  002510  EF8C  F012         	goto	i2u250_41
  7205  002514  EF8E  F012         	goto	i2u250_40
  7206  002518                     i2u250_41:
  7207  002518  EF94  F012         	goto	i2l2482
  7208  00251C                     i2u250_40:
  7209  00251C                     
  7210                           ;main.c: 660:             CatchFrisbee(pl);
  7211  00251C  C013  F007         	movff	downright@pl,CatchFrisbee@pl
  7212  002520  C014  F008         	movff	downright@pl+1,CatchFrisbee@pl+1
  7213  002524  EC15  F015         	call	_CatchFrisbee	;wreg free
  7214  002528                     i2l2482:
  7215                           
  7216                           ;main.c: 663:     display[pl->y-1][pl->x-1] = ((void*)0);
  7217  002528  EE20 F001          	lfsr	2,1
  7218  00252C  5013               	movf	downright@pl^0,w,c
  7219  00252E  26D9               	addwf	fsr2l,f,c
  7220  002530  5014               	movf	(downright@pl+1)^0,w,c
  7221  002532  22DA               	addwfc	fsr2h,f,c
  7222  002534  50DF               	movf	indf2,w,c
  7223  002536  6E15               	movwf	??_downright^0,c
  7224  002538  6A16               	clrf	(??_downright+1)^0,c
  7225  00253A  0E05               	movlw	5
  7226  00253C                     i2u251_45:
  7227  00253C  90D8               	bcf	status,0,c
  7228  00253E  3615               	rlcf	??_downright^0,f,c
  7229  002540  3616               	rlcf	(??_downright+1)^0,f,c
  7230  002542  2EE8               	decfsz	wreg,f,c
  7231  002544  EF9E  F012         	goto	i2u251_45
  7232  002548  C013  FFD9         	movff	downright@pl,fsr2l
  7233  00254C  C014  FFDA         	movff	downright@pl+1,fsr2h
  7234  002550  50DF               	movf	indf2,w,c
  7235  002552  6E17               	movwf	(??_downright+2)^0,c
  7236  002554  6A18               	clrf	(??_downright+3)^0,c
  7237  002556  90D8               	bcf	status,0,c
  7238  002558  3617               	rlcf	(??_downright+2)^0,f,c
  7239  00255A  3618               	rlcf	(??_downright+3)^0,f,c
  7240  00255C  0EDE               	movlw	222
  7241  00255E  6E19               	movwf	(??_downright+4)^0,c
  7242  002560  0EFF               	movlw	255
  7243  002562  6E1A               	movwf	(??_downright+5)^0,c
  7244  002564  0E00               	movlw	low _display
  7245  002566  6E1B               	movwf	(??_downright+6)^0,c
  7246  002568  0E01               	movlw	high _display
  7247  00256A  6E1C               	movwf	(??_downright+7)^0,c
  7248  00256C  5019               	movf	(??_downright+4)^0,w,c
  7249  00256E  261B               	addwf	(??_downright+6)^0,f,c
  7250  002570  501A               	movf	(??_downright+5)^0,w,c
  7251  002572  221C               	addwfc	(??_downright+7)^0,f,c
  7252  002574  5017               	movf	(??_downright+2)^0,w,c
  7253  002576  261B               	addwf	(??_downright+6)^0,f,c
  7254  002578  5018               	movf	(??_downright+3)^0,w,c
  7255  00257A  221C               	addwfc	(??_downright+7)^0,f,c
  7256  00257C  5015               	movf	??_downright^0,w,c
  7257  00257E  241B               	addwf	(??_downright+6)^0,w,c
  7258  002580  6ED9               	movwf	fsr2l,c
  7259  002582  5016               	movf	(??_downright+1)^0,w,c
  7260  002584  201C               	addwfc	(??_downright+7)^0,w,c
  7261  002586  6EDA               	movwf	fsr2h,c
  7262  002588  0E00               	movlw	0
  7263  00258A  6EDE               	movwf	postinc2,c
  7264  00258C  0E00               	movlw	0
  7265  00258E  6EDD               	movwf	postdec2,c
  7266  002590                     
  7267                           ;main.c: 664:     pl->x++;
  7268  002590  C013  FFD9         	movff	downright@pl,fsr2l
  7269  002594  C014  FFDA         	movff	downright@pl+1,fsr2h
  7270  002598  2ADF               	incf	indf2,f,c
  7271  00259A                     
  7272                           ;main.c: 665:     pl->y++;
  7273  00259A  EE20 F001          	lfsr	2,1
  7274  00259E  5013               	movf	downright@pl^0,w,c
  7275  0025A0  26D9               	addwf	fsr2l,f,c
  7276  0025A2  5014               	movf	(downright@pl+1)^0,w,c
  7277  0025A4  22DA               	addwfc	fsr2h,f,c
  7278  0025A6  2ADF               	incf	indf2,f,c
  7279  0025A8                     
  7280                           ;main.c: 666:     display[pl->y-1][pl->x-1] = pl;
  7281  0025A8  EE20 F001          	lfsr	2,1
  7282  0025AC  5013               	movf	downright@pl^0,w,c
  7283  0025AE  26D9               	addwf	fsr2l,f,c
  7284  0025B0  5014               	movf	(downright@pl+1)^0,w,c
  7285  0025B2  22DA               	addwfc	fsr2h,f,c
  7286  0025B4  50DF               	movf	indf2,w,c
  7287  0025B6  6E15               	movwf	??_downright^0,c
  7288  0025B8  6A16               	clrf	(??_downright+1)^0,c
  7289  0025BA  0E05               	movlw	5
  7290  0025BC                     i2u252_45:
  7291  0025BC  90D8               	bcf	status,0,c
  7292  0025BE  3615               	rlcf	??_downright^0,f,c
  7293  0025C0  3616               	rlcf	(??_downright+1)^0,f,c
  7294  0025C2  2EE8               	decfsz	wreg,f,c
  7295  0025C4  EFDE  F012         	goto	i2u252_45
  7296  0025C8  C013  FFD9         	movff	downright@pl,fsr2l
  7297  0025CC  C014  FFDA         	movff	downright@pl+1,fsr2h
  7298  0025D0  50DF               	movf	indf2,w,c
  7299  0025D2  6E17               	movwf	(??_downright+2)^0,c
  7300  0025D4  6A18               	clrf	(??_downright+3)^0,c
  7301  0025D6  90D8               	bcf	status,0,c
  7302  0025D8  3617               	rlcf	(??_downright+2)^0,f,c
  7303  0025DA  3618               	rlcf	(??_downright+3)^0,f,c
  7304  0025DC  0EDE               	movlw	222
  7305  0025DE  6E19               	movwf	(??_downright+4)^0,c
  7306  0025E0  0EFF               	movlw	255
  7307  0025E2  6E1A               	movwf	(??_downright+5)^0,c
  7308  0025E4  0E00               	movlw	low _display
  7309  0025E6  6E1B               	movwf	(??_downright+6)^0,c
  7310  0025E8  0E01               	movlw	high _display
  7311  0025EA  6E1C               	movwf	(??_downright+7)^0,c
  7312  0025EC  5019               	movf	(??_downright+4)^0,w,c
  7313  0025EE  261B               	addwf	(??_downright+6)^0,f,c
  7314  0025F0  501A               	movf	(??_downright+5)^0,w,c
  7315  0025F2  221C               	addwfc	(??_downright+7)^0,f,c
  7316  0025F4  5017               	movf	(??_downright+2)^0,w,c
  7317  0025F6  261B               	addwf	(??_downright+6)^0,f,c
  7318  0025F8  5018               	movf	(??_downright+3)^0,w,c
  7319  0025FA  221C               	addwfc	(??_downright+7)^0,f,c
  7320  0025FC  5015               	movf	??_downright^0,w,c
  7321  0025FE  241B               	addwf	(??_downright+6)^0,w,c
  7322  002600  6ED9               	movwf	fsr2l,c
  7323  002602  5016               	movf	(??_downright+1)^0,w,c
  7324  002604  201C               	addwfc	(??_downright+7)^0,w,c
  7325  002606  6EDA               	movwf	fsr2h,c
  7326  002608  C013  FFDE         	movff	downright@pl,postinc2
  7327  00260C  C014  FFDD         	movff	downright@pl+1,postdec2
  7328  002610                     i2l440:
  7329  002610  0012               	return		;funcret
  7330  002612                     __end_of_downright:
  7331                           	callstack 0
  7332                           
  7333 ;; *************** function _downleft *****************
  7334 ;; Defined at:
  7335 ;;		line 639 in file "main.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  pl              2   18[COMRAM] PTR struct GameElement
  7338 ;;		 -> objs(30), 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;Total ram usage:       11 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    2
  7357 ;; This function calls:
  7358 ;;		_CatchFrisbee
  7359 ;; This function is called by:
  7360 ;;		_MoveEveryone
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text24
  7365  001AAC                     __ptext24:
  7366                           	callstack 0
  7367  001AAC                     _downleft:
  7368                           	callstack 21
  7369  001AAC                     
  7370                           ;main.c: 640:     if (pl->x == 1 || pl->y == 4) return;
  7371  001AAC  C013  FFD9         	movff	downleft@pl,fsr2l
  7372  001AB0  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7373  001AB4  04DE               	decf	postinc2,w,c
  7374  001AB6  B4D8               	btfsc	status,2,c
  7375  001AB8  EF60  F00D         	goto	i2u237_41
  7376  001ABC  EF62  F00D         	goto	i2u237_40
  7377  001AC0                     i2u237_41:
  7378  001AC0  EFCD  F00E         	goto	i2l430
  7379  001AC4                     i2u237_40:
  7380  001AC4  EE20 F001          	lfsr	2,1
  7381  001AC8  5013               	movf	downleft@pl^0,w,c
  7382  001ACA  26D9               	addwf	fsr2l,f,c
  7383  001ACC  5014               	movf	(downleft@pl+1)^0,w,c
  7384  001ACE  22DA               	addwfc	fsr2h,f,c
  7385  001AD0  0E04               	movlw	4
  7386  001AD2  18DE               	xorwf	postinc2,w,c
  7387  001AD4  A4D8               	btfss	status,2,c
  7388  001AD6  EF6F  F00D         	goto	i2u238_41
  7389  001ADA  EF71  F00D         	goto	i2u238_40
  7390  001ADE                     i2u238_41:
  7391  001ADE  EF73  F00D         	goto	i2l2440
  7392  001AE2                     i2u238_40:
  7393  001AE2  EFCD  F00E         	goto	i2l430
  7394  001AE6                     i2l2440:
  7395                           
  7396                           ;main.c: 641:     if (display[pl->y][pl->x-2] != ((void*)0)) {
  7397  001AE6  C013  FFD9         	movff	downleft@pl,fsr2l
  7398  001AEA  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7399  001AEE  50DF               	movf	indf2,w,c
  7400  001AF0  6E15               	movwf	??_downleft^0,c
  7401  001AF2  6A16               	clrf	(??_downleft+1)^0,c
  7402  001AF4  90D8               	bcf	status,0,c
  7403  001AF6  3615               	rlcf	??_downleft^0,f,c
  7404  001AF8  3616               	rlcf	(??_downleft+1)^0,f,c
  7405  001AFA  EE20 F001          	lfsr	2,1
  7406  001AFE  5013               	movf	downleft@pl^0,w,c
  7407  001B00  26D9               	addwf	fsr2l,f,c
  7408  001B02  5014               	movf	(downleft@pl+1)^0,w,c
  7409  001B04  22DA               	addwfc	fsr2h,f,c
  7410  001B06  50DF               	movf	indf2,w,c
  7411  001B08  6E17               	movwf	(??_downleft+2)^0,c
  7412  001B0A  5017               	movf	(??_downleft+2)^0,w,c
  7413  001B0C  0D20               	mullw	32
  7414  001B0E  0EFC               	movlw	252
  7415  001B10  6E18               	movwf	(??_downleft+3)^0,c
  7416  001B12  0EFF               	movlw	255
  7417  001B14  6E19               	movwf	(??_downleft+4)^0,c
  7418  001B16  0E00               	movlw	low _display
  7419  001B18  6E1A               	movwf	(??_downleft+5)^0,c
  7420  001B1A  0E01               	movlw	high _display
  7421  001B1C  6E1B               	movwf	(??_downleft+6)^0,c
  7422  001B1E  5018               	movf	(??_downleft+3)^0,w,c
  7423  001B20  261A               	addwf	(??_downleft+5)^0,f,c
  7424  001B22  5019               	movf	(??_downleft+4)^0,w,c
  7425  001B24  221B               	addwfc	(??_downleft+6)^0,f,c
  7426  001B26  50F3               	movf	243,w,c
  7427  001B28  261A               	addwf	(??_downleft+5)^0,f,c
  7428  001B2A  50F4               	movf	244,w,c
  7429  001B2C  221B               	addwfc	(??_downleft+6)^0,f,c
  7430  001B2E  5015               	movf	??_downleft^0,w,c
  7431  001B30  241A               	addwf	(??_downleft+5)^0,w,c
  7432  001B32  6ED9               	movwf	fsr2l,c
  7433  001B34  5016               	movf	(??_downleft+1)^0,w,c
  7434  001B36  201B               	addwfc	(??_downleft+6)^0,w,c
  7435  001B38  6EDA               	movwf	fsr2h,c
  7436  001B3A  50DE               	movf	postinc2,w,c
  7437  001B3C  10DE               	iorwf	postinc2,w,c
  7438  001B3E  B4D8               	btfsc	status,2,c
  7439  001B40  EFA4  F00D         	goto	i2u239_41
  7440  001B44  EFA6  F00D         	goto	i2u239_40
  7441  001B48                     i2u239_41:
  7442  001B48  EF59  F00E         	goto	i2l2454
  7443  001B4C                     i2u239_40:
  7444  001B4C                     
  7445                           ;main.c: 642:         if (display[pl->y][pl->x-2]->type == OT_PLAYERA) return;
  7446  001B4C  C013  FFD9         	movff	downleft@pl,fsr2l
  7447  001B50  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7448  001B54  50DF               	movf	indf2,w,c
  7449  001B56  6E15               	movwf	??_downleft^0,c
  7450  001B58  6A16               	clrf	(??_downleft+1)^0,c
  7451  001B5A  90D8               	bcf	status,0,c
  7452  001B5C  3615               	rlcf	??_downleft^0,f,c
  7453  001B5E  3616               	rlcf	(??_downleft+1)^0,f,c
  7454  001B60  EE20 F001          	lfsr	2,1
  7455  001B64  5013               	movf	downleft@pl^0,w,c
  7456  001B66  26D9               	addwf	fsr2l,f,c
  7457  001B68  5014               	movf	(downleft@pl+1)^0,w,c
  7458  001B6A  22DA               	addwfc	fsr2h,f,c
  7459  001B6C  50DF               	movf	indf2,w,c
  7460  001B6E  6E17               	movwf	(??_downleft+2)^0,c
  7461  001B70  5017               	movf	(??_downleft+2)^0,w,c
  7462  001B72  0D20               	mullw	32
  7463  001B74  0EFC               	movlw	252
  7464  001B76  6E18               	movwf	(??_downleft+3)^0,c
  7465  001B78  0EFF               	movlw	255
  7466  001B7A  6E19               	movwf	(??_downleft+4)^0,c
  7467  001B7C  0E00               	movlw	low _display
  7468  001B7E  6E1A               	movwf	(??_downleft+5)^0,c
  7469  001B80  0E01               	movlw	high _display
  7470  001B82  6E1B               	movwf	(??_downleft+6)^0,c
  7471  001B84  5018               	movf	(??_downleft+3)^0,w,c
  7472  001B86  261A               	addwf	(??_downleft+5)^0,f,c
  7473  001B88  5019               	movf	(??_downleft+4)^0,w,c
  7474  001B8A  221B               	addwfc	(??_downleft+6)^0,f,c
  7475  001B8C  50F3               	movf	243,w,c
  7476  001B8E  261A               	addwf	(??_downleft+5)^0,f,c
  7477  001B90  50F4               	movf	244,w,c
  7478  001B92  221B               	addwfc	(??_downleft+6)^0,f,c
  7479  001B94  5015               	movf	??_downleft^0,w,c
  7480  001B96  241A               	addwf	(??_downleft+5)^0,w,c
  7481  001B98  6ED9               	movwf	fsr2l,c
  7482  001B9A  5016               	movf	(??_downleft+1)^0,w,c
  7483  001B9C  201B               	addwfc	(??_downleft+6)^0,w,c
  7484  001B9E  6EDA               	movwf	fsr2h,c
  7485  001BA0  EE10 F003          	lfsr	1,3
  7486  001BA4  50DE               	movf	postinc2,w,c
  7487  001BA6  26E1               	addwf	fsr1l,f,c
  7488  001BA8  50DD               	movf	postdec2,w,c
  7489  001BAA  22E2               	addwfc	fsr1h,f,c
  7490  001BAC  50E7               	movf	indf1,w,c
  7491  001BAE  A4D8               	btfss	status,2,c
  7492  001BB0  EFDC  F00D         	goto	i2u240_41
  7493  001BB4  EFDE  F00D         	goto	i2u240_40
  7494  001BB8                     i2u240_41:
  7495  001BB8  EFE0  F00D         	goto	i2l2446
  7496  001BBC                     i2u240_40:
  7497  001BBC  EFCD  F00E         	goto	i2l430
  7498  001BC0                     i2l2446:
  7499                           
  7500                           ;main.c: 643:         if (display[pl->y][pl->x-2]->type == OT_PLAYERB) return;
  7501  001BC0  C013  FFD9         	movff	downleft@pl,fsr2l
  7502  001BC4  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7503  001BC8  50DF               	movf	indf2,w,c
  7504  001BCA  6E15               	movwf	??_downleft^0,c
  7505  001BCC  6A16               	clrf	(??_downleft+1)^0,c
  7506  001BCE  90D8               	bcf	status,0,c
  7507  001BD0  3615               	rlcf	??_downleft^0,f,c
  7508  001BD2  3616               	rlcf	(??_downleft+1)^0,f,c
  7509  001BD4  EE20 F001          	lfsr	2,1
  7510  001BD8  5013               	movf	downleft@pl^0,w,c
  7511  001BDA  26D9               	addwf	fsr2l,f,c
  7512  001BDC  5014               	movf	(downleft@pl+1)^0,w,c
  7513  001BDE  22DA               	addwfc	fsr2h,f,c
  7514  001BE0  50DF               	movf	indf2,w,c
  7515  001BE2  6E17               	movwf	(??_downleft+2)^0,c
  7516  001BE4  5017               	movf	(??_downleft+2)^0,w,c
  7517  001BE6  0D20               	mullw	32
  7518  001BE8  0EFC               	movlw	252
  7519  001BEA  6E18               	movwf	(??_downleft+3)^0,c
  7520  001BEC  0EFF               	movlw	255
  7521  001BEE  6E19               	movwf	(??_downleft+4)^0,c
  7522  001BF0  0E00               	movlw	low _display
  7523  001BF2  6E1A               	movwf	(??_downleft+5)^0,c
  7524  001BF4  0E01               	movlw	high _display
  7525  001BF6  6E1B               	movwf	(??_downleft+6)^0,c
  7526  001BF8  5018               	movf	(??_downleft+3)^0,w,c
  7527  001BFA  261A               	addwf	(??_downleft+5)^0,f,c
  7528  001BFC  5019               	movf	(??_downleft+4)^0,w,c
  7529  001BFE  221B               	addwfc	(??_downleft+6)^0,f,c
  7530  001C00  50F3               	movf	243,w,c
  7531  001C02  261A               	addwf	(??_downleft+5)^0,f,c
  7532  001C04  50F4               	movf	244,w,c
  7533  001C06  221B               	addwfc	(??_downleft+6)^0,f,c
  7534  001C08  5015               	movf	??_downleft^0,w,c
  7535  001C0A  241A               	addwf	(??_downleft+5)^0,w,c
  7536  001C0C  6ED9               	movwf	fsr2l,c
  7537  001C0E  5016               	movf	(??_downleft+1)^0,w,c
  7538  001C10  201B               	addwfc	(??_downleft+6)^0,w,c
  7539  001C12  6EDA               	movwf	fsr2h,c
  7540  001C14  EE10 F003          	lfsr	1,3
  7541  001C18  50DE               	movf	postinc2,w,c
  7542  001C1A  26E1               	addwf	fsr1l,f,c
  7543  001C1C  50DD               	movf	postdec2,w,c
  7544  001C1E  22E2               	addwfc	fsr1h,f,c
  7545  001C20  04E6               	decf	postinc1,w,c
  7546  001C22  A4D8               	btfss	status,2,c
  7547  001C24  EF16  F00E         	goto	i2u241_41
  7548  001C28  EF18  F00E         	goto	i2u241_40
  7549  001C2C                     i2u241_41:
  7550  001C2C  EF1A  F00E         	goto	i2l2450
  7551  001C30                     i2u241_40:
  7552  001C30  EFCD  F00E         	goto	i2l430
  7553  001C34                     i2l2450:
  7554                           
  7555                           ;main.c: 644:         if (display[pl->y][pl->x-2]->type == OT_FRISBEE) {
  7556  001C34  C013  FFD9         	movff	downleft@pl,fsr2l
  7557  001C38  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7558  001C3C  50DF               	movf	indf2,w,c
  7559  001C3E  6E15               	movwf	??_downleft^0,c
  7560  001C40  6A16               	clrf	(??_downleft+1)^0,c
  7561  001C42  90D8               	bcf	status,0,c
  7562  001C44  3615               	rlcf	??_downleft^0,f,c
  7563  001C46  3616               	rlcf	(??_downleft+1)^0,f,c
  7564  001C48  EE20 F001          	lfsr	2,1
  7565  001C4C  5013               	movf	downleft@pl^0,w,c
  7566  001C4E  26D9               	addwf	fsr2l,f,c
  7567  001C50  5014               	movf	(downleft@pl+1)^0,w,c
  7568  001C52  22DA               	addwfc	fsr2h,f,c
  7569  001C54  50DF               	movf	indf2,w,c
  7570  001C56  6E17               	movwf	(??_downleft+2)^0,c
  7571  001C58  5017               	movf	(??_downleft+2)^0,w,c
  7572  001C5A  0D20               	mullw	32
  7573  001C5C  0EFC               	movlw	252
  7574  001C5E  6E18               	movwf	(??_downleft+3)^0,c
  7575  001C60  0EFF               	movlw	255
  7576  001C62  6E19               	movwf	(??_downleft+4)^0,c
  7577  001C64  0E00               	movlw	low _display
  7578  001C66  6E1A               	movwf	(??_downleft+5)^0,c
  7579  001C68  0E01               	movlw	high _display
  7580  001C6A  6E1B               	movwf	(??_downleft+6)^0,c
  7581  001C6C  5018               	movf	(??_downleft+3)^0,w,c
  7582  001C6E  261A               	addwf	(??_downleft+5)^0,f,c
  7583  001C70  5019               	movf	(??_downleft+4)^0,w,c
  7584  001C72  221B               	addwfc	(??_downleft+6)^0,f,c
  7585  001C74  50F3               	movf	243,w,c
  7586  001C76  261A               	addwf	(??_downleft+5)^0,f,c
  7587  001C78  50F4               	movf	244,w,c
  7588  001C7A  221B               	addwfc	(??_downleft+6)^0,f,c
  7589  001C7C  5015               	movf	??_downleft^0,w,c
  7590  001C7E  241A               	addwf	(??_downleft+5)^0,w,c
  7591  001C80  6ED9               	movwf	fsr2l,c
  7592  001C82  5016               	movf	(??_downleft+1)^0,w,c
  7593  001C84  201B               	addwfc	(??_downleft+6)^0,w,c
  7594  001C86  6EDA               	movwf	fsr2h,c
  7595  001C88  EE10 F003          	lfsr	1,3
  7596  001C8C  50DE               	movf	postinc2,w,c
  7597  001C8E  26E1               	addwf	fsr1l,f,c
  7598  001C90  50DD               	movf	postdec2,w,c
  7599  001C92  22E2               	addwfc	fsr1h,f,c
  7600  001C94  0E02               	movlw	2
  7601  001C96  18E6               	xorwf	postinc1,w,c
  7602  001C98  A4D8               	btfss	status,2,c
  7603  001C9A  EF51  F00E         	goto	i2u242_41
  7604  001C9E  EF53  F00E         	goto	i2u242_40
  7605  001CA2                     i2u242_41:
  7606  001CA2  EF59  F00E         	goto	i2l2454
  7607  001CA6                     i2u242_40:
  7608  001CA6                     
  7609                           ;main.c: 645:             CatchFrisbee(pl);
  7610  001CA6  C013  F007         	movff	downleft@pl,CatchFrisbee@pl
  7611  001CAA  C014  F008         	movff	downleft@pl+1,CatchFrisbee@pl+1
  7612  001CAE  EC15  F015         	call	_CatchFrisbee	;wreg free
  7613  001CB2                     i2l2454:
  7614                           
  7615                           ;main.c: 648:     display[pl->y-1][pl->x-1] = ((void*)0);
  7616  001CB2  EE20 F001          	lfsr	2,1
  7617  001CB6  5013               	movf	downleft@pl^0,w,c
  7618  001CB8  26D9               	addwf	fsr2l,f,c
  7619  001CBA  5014               	movf	(downleft@pl+1)^0,w,c
  7620  001CBC  22DA               	addwfc	fsr2h,f,c
  7621  001CBE  50DF               	movf	indf2,w,c
  7622  001CC0  6E15               	movwf	??_downleft^0,c
  7623  001CC2  6A16               	clrf	(??_downleft+1)^0,c
  7624  001CC4  0E05               	movlw	5
  7625  001CC6                     i2u243_45:
  7626  001CC6  90D8               	bcf	status,0,c
  7627  001CC8  3615               	rlcf	??_downleft^0,f,c
  7628  001CCA  3616               	rlcf	(??_downleft+1)^0,f,c
  7629  001CCC  2EE8               	decfsz	wreg,f,c
  7630  001CCE  EF63  F00E         	goto	i2u243_45
  7631  001CD2  C013  FFD9         	movff	downleft@pl,fsr2l
  7632  001CD6  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7633  001CDA  50DF               	movf	indf2,w,c
  7634  001CDC  6E17               	movwf	(??_downleft+2)^0,c
  7635  001CDE  6A18               	clrf	(??_downleft+3)^0,c
  7636  001CE0  90D8               	bcf	status,0,c
  7637  001CE2  3617               	rlcf	(??_downleft+2)^0,f,c
  7638  001CE4  3618               	rlcf	(??_downleft+3)^0,f,c
  7639  001CE6  0EDE               	movlw	222
  7640  001CE8  6E19               	movwf	(??_downleft+4)^0,c
  7641  001CEA  0EFF               	movlw	255
  7642  001CEC  6E1A               	movwf	(??_downleft+5)^0,c
  7643  001CEE  0E00               	movlw	low _display
  7644  001CF0  6E1B               	movwf	(??_downleft+6)^0,c
  7645  001CF2  0E01               	movlw	high _display
  7646  001CF4  6E1C               	movwf	(??_downleft+7)^0,c
  7647  001CF6  5019               	movf	(??_downleft+4)^0,w,c
  7648  001CF8  261B               	addwf	(??_downleft+6)^0,f,c
  7649  001CFA  501A               	movf	(??_downleft+5)^0,w,c
  7650  001CFC  221C               	addwfc	(??_downleft+7)^0,f,c
  7651  001CFE  5017               	movf	(??_downleft+2)^0,w,c
  7652  001D00  261B               	addwf	(??_downleft+6)^0,f,c
  7653  001D02  5018               	movf	(??_downleft+3)^0,w,c
  7654  001D04  221C               	addwfc	(??_downleft+7)^0,f,c
  7655  001D06  5015               	movf	??_downleft^0,w,c
  7656  001D08  241B               	addwf	(??_downleft+6)^0,w,c
  7657  001D0A  6ED9               	movwf	fsr2l,c
  7658  001D0C  5016               	movf	(??_downleft+1)^0,w,c
  7659  001D0E  201C               	addwfc	(??_downleft+7)^0,w,c
  7660  001D10  6EDA               	movwf	fsr2h,c
  7661  001D12  0E00               	movlw	0
  7662  001D14  6EDE               	movwf	postinc2,c
  7663  001D16  0E00               	movlw	0
  7664  001D18  6EDD               	movwf	postdec2,c
  7665  001D1A                     
  7666                           ;main.c: 649:     pl->x--;
  7667  001D1A  C013  FFD9         	movff	downleft@pl,fsr2l
  7668  001D1E  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7669  001D22  06DF               	decf	indf2,f,c
  7670  001D24                     
  7671                           ;main.c: 650:     pl->y++;
  7672  001D24  EE20 F001          	lfsr	2,1
  7673  001D28  5013               	movf	downleft@pl^0,w,c
  7674  001D2A  26D9               	addwf	fsr2l,f,c
  7675  001D2C  5014               	movf	(downleft@pl+1)^0,w,c
  7676  001D2E  22DA               	addwfc	fsr2h,f,c
  7677  001D30  2ADF               	incf	indf2,f,c
  7678  001D32                     
  7679                           ;main.c: 651:     display[pl->y-1][pl->x-1] = pl;
  7680  001D32  EE20 F001          	lfsr	2,1
  7681  001D36  5013               	movf	downleft@pl^0,w,c
  7682  001D38  26D9               	addwf	fsr2l,f,c
  7683  001D3A  5014               	movf	(downleft@pl+1)^0,w,c
  7684  001D3C  22DA               	addwfc	fsr2h,f,c
  7685  001D3E  50DF               	movf	indf2,w,c
  7686  001D40  6E15               	movwf	??_downleft^0,c
  7687  001D42  6A16               	clrf	(??_downleft+1)^0,c
  7688  001D44  0E05               	movlw	5
  7689  001D46                     i2u244_45:
  7690  001D46  90D8               	bcf	status,0,c
  7691  001D48  3615               	rlcf	??_downleft^0,f,c
  7692  001D4A  3616               	rlcf	(??_downleft+1)^0,f,c
  7693  001D4C  2EE8               	decfsz	wreg,f,c
  7694  001D4E  EFA3  F00E         	goto	i2u244_45
  7695  001D52  C013  FFD9         	movff	downleft@pl,fsr2l
  7696  001D56  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7697  001D5A  50DF               	movf	indf2,w,c
  7698  001D5C  6E17               	movwf	(??_downleft+2)^0,c
  7699  001D5E  6A18               	clrf	(??_downleft+3)^0,c
  7700  001D60  90D8               	bcf	status,0,c
  7701  001D62  3617               	rlcf	(??_downleft+2)^0,f,c
  7702  001D64  3618               	rlcf	(??_downleft+3)^0,f,c
  7703  001D66  0EDE               	movlw	222
  7704  001D68  6E19               	movwf	(??_downleft+4)^0,c
  7705  001D6A  0EFF               	movlw	255
  7706  001D6C  6E1A               	movwf	(??_downleft+5)^0,c
  7707  001D6E  0E00               	movlw	low _display
  7708  001D70  6E1B               	movwf	(??_downleft+6)^0,c
  7709  001D72  0E01               	movlw	high _display
  7710  001D74  6E1C               	movwf	(??_downleft+7)^0,c
  7711  001D76  5019               	movf	(??_downleft+4)^0,w,c
  7712  001D78  261B               	addwf	(??_downleft+6)^0,f,c
  7713  001D7A  501A               	movf	(??_downleft+5)^0,w,c
  7714  001D7C  221C               	addwfc	(??_downleft+7)^0,f,c
  7715  001D7E  5017               	movf	(??_downleft+2)^0,w,c
  7716  001D80  261B               	addwf	(??_downleft+6)^0,f,c
  7717  001D82  5018               	movf	(??_downleft+3)^0,w,c
  7718  001D84  221C               	addwfc	(??_downleft+7)^0,f,c
  7719  001D86  5015               	movf	??_downleft^0,w,c
  7720  001D88  241B               	addwf	(??_downleft+6)^0,w,c
  7721  001D8A  6ED9               	movwf	fsr2l,c
  7722  001D8C  5016               	movf	(??_downleft+1)^0,w,c
  7723  001D8E  201C               	addwfc	(??_downleft+7)^0,w,c
  7724  001D90  6EDA               	movwf	fsr2h,c
  7725  001D92  C013  FFDE         	movff	downleft@pl,postinc2
  7726  001D96  C014  FFDD         	movff	downleft@pl+1,postdec2
  7727  001D9A                     i2l430:
  7728  001D9A  0012               	return		;funcret
  7729  001D9C                     __end_of_downleft:
  7730                           	callstack 0
  7731                           
  7732 ;; *************** function _down *****************
  7733 ;; Defined at:
  7734 ;;		line 592 in file "main.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  pl              2   18[COMRAM] PTR struct GameElement
  7737 ;;		 -> objs(30), 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;		None
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  1    wreg      void 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;Total ram usage:       11 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    2
  7756 ;; This function calls:
  7757 ;;		_CatchFrisbee
  7758 ;; This function is called by:
  7759 ;;		_highIsr
  7760 ;;		_MoveEveryone
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text25
  7765  002082                     __ptext25:
  7766                           	callstack 0
  7767  002082                     _down:
  7768                           	callstack 22
  7769  002082                     
  7770                           ;main.c: 593:     if (pl->y == 4) return;
  7771  002082  EE20 F001          	lfsr	2,1
  7772  002086  5013               	movf	down@pl^0,w,c
  7773  002088  26D9               	addwf	fsr2l,f,c
  7774  00208A  5014               	movf	(down@pl+1)^0,w,c
  7775  00208C  22DA               	addwfc	fsr2h,f,c
  7776  00208E  0E04               	movlw	4
  7777  002090  18DE               	xorwf	postinc2,w,c
  7778  002092  A4D8               	btfss	status,2,c
  7779  002094  EF4E  F010         	goto	i2u195_41
  7780  002098  EF50  F010         	goto	i2u195_40
  7781  00209C                     i2u195_41:
  7782  00209C  EF52  F010         	goto	i2l2332
  7783  0020A0                     i2u195_40:
  7784  0020A0  EFA7  F011         	goto	i2l400
  7785  0020A4                     i2l2332:
  7786                           
  7787                           ;main.c: 594:     if (display[pl->y][pl->x-1] != ((void*)0)) {
  7788  0020A4  C013  FFD9         	movff	down@pl,fsr2l
  7789  0020A8  C014  FFDA         	movff	down@pl+1,fsr2h
  7790  0020AC  50DF               	movf	indf2,w,c
  7791  0020AE  6E15               	movwf	??_down^0,c
  7792  0020B0  6A16               	clrf	(??_down+1)^0,c
  7793  0020B2  90D8               	bcf	status,0,c
  7794  0020B4  3615               	rlcf	??_down^0,f,c
  7795  0020B6  3616               	rlcf	(??_down+1)^0,f,c
  7796  0020B8  EE20 F001          	lfsr	2,1
  7797  0020BC  5013               	movf	down@pl^0,w,c
  7798  0020BE  26D9               	addwf	fsr2l,f,c
  7799  0020C0  5014               	movf	(down@pl+1)^0,w,c
  7800  0020C2  22DA               	addwfc	fsr2h,f,c
  7801  0020C4  50DF               	movf	indf2,w,c
  7802  0020C6  6E17               	movwf	(??_down+2)^0,c
  7803  0020C8  5017               	movf	(??_down+2)^0,w,c
  7804  0020CA  0D20               	mullw	32
  7805  0020CC  0EFE               	movlw	254
  7806  0020CE  6E18               	movwf	(??_down+3)^0,c
  7807  0020D0  0EFF               	movlw	255
  7808  0020D2  6E19               	movwf	(??_down+4)^0,c
  7809  0020D4  0E00               	movlw	low _display
  7810  0020D6  6E1A               	movwf	(??_down+5)^0,c
  7811  0020D8  0E01               	movlw	high _display
  7812  0020DA  6E1B               	movwf	(??_down+6)^0,c
  7813  0020DC  5018               	movf	(??_down+3)^0,w,c
  7814  0020DE  261A               	addwf	(??_down+5)^0,f,c
  7815  0020E0  5019               	movf	(??_down+4)^0,w,c
  7816  0020E2  221B               	addwfc	(??_down+6)^0,f,c
  7817  0020E4  50F3               	movf	243,w,c
  7818  0020E6  261A               	addwf	(??_down+5)^0,f,c
  7819  0020E8  50F4               	movf	244,w,c
  7820  0020EA  221B               	addwfc	(??_down+6)^0,f,c
  7821  0020EC  5015               	movf	??_down^0,w,c
  7822  0020EE  241A               	addwf	(??_down+5)^0,w,c
  7823  0020F0  6ED9               	movwf	fsr2l,c
  7824  0020F2  5016               	movf	(??_down+1)^0,w,c
  7825  0020F4  201B               	addwfc	(??_down+6)^0,w,c
  7826  0020F6  6EDA               	movwf	fsr2h,c
  7827  0020F8  50DE               	movf	postinc2,w,c
  7828  0020FA  10DE               	iorwf	postinc2,w,c
  7829  0020FC  B4D8               	btfsc	status,2,c
  7830  0020FE  EF83  F010         	goto	i2u196_41
  7831  002102  EF85  F010         	goto	i2u196_40
  7832  002106                     i2u196_41:
  7833  002106  EF38  F011         	goto	i2l2346
  7834  00210A                     i2u196_40:
  7835  00210A                     
  7836                           ;main.c: 595:         if (display[pl->y][pl->x-1]->type == OT_PLAYERA) return;
  7837  00210A  C013  FFD9         	movff	down@pl,fsr2l
  7838  00210E  C014  FFDA         	movff	down@pl+1,fsr2h
  7839  002112  50DF               	movf	indf2,w,c
  7840  002114  6E15               	movwf	??_down^0,c
  7841  002116  6A16               	clrf	(??_down+1)^0,c
  7842  002118  90D8               	bcf	status,0,c
  7843  00211A  3615               	rlcf	??_down^0,f,c
  7844  00211C  3616               	rlcf	(??_down+1)^0,f,c
  7845  00211E  EE20 F001          	lfsr	2,1
  7846  002122  5013               	movf	down@pl^0,w,c
  7847  002124  26D9               	addwf	fsr2l,f,c
  7848  002126  5014               	movf	(down@pl+1)^0,w,c
  7849  002128  22DA               	addwfc	fsr2h,f,c
  7850  00212A  50DF               	movf	indf2,w,c
  7851  00212C  6E17               	movwf	(??_down+2)^0,c
  7852  00212E  5017               	movf	(??_down+2)^0,w,c
  7853  002130  0D20               	mullw	32
  7854  002132  0EFE               	movlw	254
  7855  002134  6E18               	movwf	(??_down+3)^0,c
  7856  002136  0EFF               	movlw	255
  7857  002138  6E19               	movwf	(??_down+4)^0,c
  7858  00213A  0E00               	movlw	low _display
  7859  00213C  6E1A               	movwf	(??_down+5)^0,c
  7860  00213E  0E01               	movlw	high _display
  7861  002140  6E1B               	movwf	(??_down+6)^0,c
  7862  002142  5018               	movf	(??_down+3)^0,w,c
  7863  002144  261A               	addwf	(??_down+5)^0,f,c
  7864  002146  5019               	movf	(??_down+4)^0,w,c
  7865  002148  221B               	addwfc	(??_down+6)^0,f,c
  7866  00214A  50F3               	movf	243,w,c
  7867  00214C  261A               	addwf	(??_down+5)^0,f,c
  7868  00214E  50F4               	movf	244,w,c
  7869  002150  221B               	addwfc	(??_down+6)^0,f,c
  7870  002152  5015               	movf	??_down^0,w,c
  7871  002154  241A               	addwf	(??_down+5)^0,w,c
  7872  002156  6ED9               	movwf	fsr2l,c
  7873  002158  5016               	movf	(??_down+1)^0,w,c
  7874  00215A  201B               	addwfc	(??_down+6)^0,w,c
  7875  00215C  6EDA               	movwf	fsr2h,c
  7876  00215E  EE10 F003          	lfsr	1,3
  7877  002162  50DE               	movf	postinc2,w,c
  7878  002164  26E1               	addwf	fsr1l,f,c
  7879  002166  50DD               	movf	postdec2,w,c
  7880  002168  22E2               	addwfc	fsr1h,f,c
  7881  00216A  50E7               	movf	indf1,w,c
  7882  00216C  A4D8               	btfss	status,2,c
  7883  00216E  EFBB  F010         	goto	i2u197_41
  7884  002172  EFBD  F010         	goto	i2u197_40
  7885  002176                     i2u197_41:
  7886  002176  EFBF  F010         	goto	i2l2338
  7887  00217A                     i2u197_40:
  7888  00217A  EFA7  F011         	goto	i2l400
  7889  00217E                     i2l2338:
  7890                           
  7891                           ;main.c: 596:         if (display[pl->y][pl->x-1]->type == OT_PLAYERB) return;
  7892  00217E  C013  FFD9         	movff	down@pl,fsr2l
  7893  002182  C014  FFDA         	movff	down@pl+1,fsr2h
  7894  002186  50DF               	movf	indf2,w,c
  7895  002188  6E15               	movwf	??_down^0,c
  7896  00218A  6A16               	clrf	(??_down+1)^0,c
  7897  00218C  90D8               	bcf	status,0,c
  7898  00218E  3615               	rlcf	??_down^0,f,c
  7899  002190  3616               	rlcf	(??_down+1)^0,f,c
  7900  002192  EE20 F001          	lfsr	2,1
  7901  002196  5013               	movf	down@pl^0,w,c
  7902  002198  26D9               	addwf	fsr2l,f,c
  7903  00219A  5014               	movf	(down@pl+1)^0,w,c
  7904  00219C  22DA               	addwfc	fsr2h,f,c
  7905  00219E  50DF               	movf	indf2,w,c
  7906  0021A0  6E17               	movwf	(??_down+2)^0,c
  7907  0021A2  5017               	movf	(??_down+2)^0,w,c
  7908  0021A4  0D20               	mullw	32
  7909  0021A6  0EFE               	movlw	254
  7910  0021A8  6E18               	movwf	(??_down+3)^0,c
  7911  0021AA  0EFF               	movlw	255
  7912  0021AC  6E19               	movwf	(??_down+4)^0,c
  7913  0021AE  0E00               	movlw	low _display
  7914  0021B0  6E1A               	movwf	(??_down+5)^0,c
  7915  0021B2  0E01               	movlw	high _display
  7916  0021B4  6E1B               	movwf	(??_down+6)^0,c
  7917  0021B6  5018               	movf	(??_down+3)^0,w,c
  7918  0021B8  261A               	addwf	(??_down+5)^0,f,c
  7919  0021BA  5019               	movf	(??_down+4)^0,w,c
  7920  0021BC  221B               	addwfc	(??_down+6)^0,f,c
  7921  0021BE  50F3               	movf	243,w,c
  7922  0021C0  261A               	addwf	(??_down+5)^0,f,c
  7923  0021C2  50F4               	movf	244,w,c
  7924  0021C4  221B               	addwfc	(??_down+6)^0,f,c
  7925  0021C6  5015               	movf	??_down^0,w,c
  7926  0021C8  241A               	addwf	(??_down+5)^0,w,c
  7927  0021CA  6ED9               	movwf	fsr2l,c
  7928  0021CC  5016               	movf	(??_down+1)^0,w,c
  7929  0021CE  201B               	addwfc	(??_down+6)^0,w,c
  7930  0021D0  6EDA               	movwf	fsr2h,c
  7931  0021D2  EE10 F003          	lfsr	1,3
  7932  0021D6  50DE               	movf	postinc2,w,c
  7933  0021D8  26E1               	addwf	fsr1l,f,c
  7934  0021DA  50DD               	movf	postdec2,w,c
  7935  0021DC  22E2               	addwfc	fsr1h,f,c
  7936  0021DE  04E6               	decf	postinc1,w,c
  7937  0021E0  A4D8               	btfss	status,2,c
  7938  0021E2  EFF5  F010         	goto	i2u198_41
  7939  0021E6  EFF7  F010         	goto	i2u198_40
  7940  0021EA                     i2u198_41:
  7941  0021EA  EFF9  F010         	goto	i2l2342
  7942  0021EE                     i2u198_40:
  7943  0021EE  EFA7  F011         	goto	i2l400
  7944  0021F2                     i2l2342:
  7945                           
  7946                           ;main.c: 597:         if (display[pl->y][pl->x-1]->type == OT_FRISBEE) {
  7947  0021F2  C013  FFD9         	movff	down@pl,fsr2l
  7948  0021F6  C014  FFDA         	movff	down@pl+1,fsr2h
  7949  0021FA  50DF               	movf	indf2,w,c
  7950  0021FC  6E15               	movwf	??_down^0,c
  7951  0021FE  6A16               	clrf	(??_down+1)^0,c
  7952  002200  90D8               	bcf	status,0,c
  7953  002202  3615               	rlcf	??_down^0,f,c
  7954  002204  3616               	rlcf	(??_down+1)^0,f,c
  7955  002206  EE20 F001          	lfsr	2,1
  7956  00220A  5013               	movf	down@pl^0,w,c
  7957  00220C  26D9               	addwf	fsr2l,f,c
  7958  00220E  5014               	movf	(down@pl+1)^0,w,c
  7959  002210  22DA               	addwfc	fsr2h,f,c
  7960  002212  50DF               	movf	indf2,w,c
  7961  002214  6E17               	movwf	(??_down+2)^0,c
  7962  002216  5017               	movf	(??_down+2)^0,w,c
  7963  002218  0D20               	mullw	32
  7964  00221A  0EFE               	movlw	254
  7965  00221C  6E18               	movwf	(??_down+3)^0,c
  7966  00221E  0EFF               	movlw	255
  7967  002220  6E19               	movwf	(??_down+4)^0,c
  7968  002222  0E00               	movlw	low _display
  7969  002224  6E1A               	movwf	(??_down+5)^0,c
  7970  002226  0E01               	movlw	high _display
  7971  002228  6E1B               	movwf	(??_down+6)^0,c
  7972  00222A  5018               	movf	(??_down+3)^0,w,c
  7973  00222C  261A               	addwf	(??_down+5)^0,f,c
  7974  00222E  5019               	movf	(??_down+4)^0,w,c
  7975  002230  221B               	addwfc	(??_down+6)^0,f,c
  7976  002232  50F3               	movf	243,w,c
  7977  002234  261A               	addwf	(??_down+5)^0,f,c
  7978  002236  50F4               	movf	244,w,c
  7979  002238  221B               	addwfc	(??_down+6)^0,f,c
  7980  00223A  5015               	movf	??_down^0,w,c
  7981  00223C  241A               	addwf	(??_down+5)^0,w,c
  7982  00223E  6ED9               	movwf	fsr2l,c
  7983  002240  5016               	movf	(??_down+1)^0,w,c
  7984  002242  201B               	addwfc	(??_down+6)^0,w,c
  7985  002244  6EDA               	movwf	fsr2h,c
  7986  002246  EE10 F003          	lfsr	1,3
  7987  00224A  50DE               	movf	postinc2,w,c
  7988  00224C  26E1               	addwf	fsr1l,f,c
  7989  00224E  50DD               	movf	postdec2,w,c
  7990  002250  22E2               	addwfc	fsr1h,f,c
  7991  002252  0E02               	movlw	2
  7992  002254  18E6               	xorwf	postinc1,w,c
  7993  002256  A4D8               	btfss	status,2,c
  7994  002258  EF30  F011         	goto	i2u199_41
  7995  00225C  EF32  F011         	goto	i2u199_40
  7996  002260                     i2u199_41:
  7997  002260  EF38  F011         	goto	i2l2346
  7998  002264                     i2u199_40:
  7999  002264                     
  8000                           ;main.c: 598:             CatchFrisbee(pl);
  8001  002264  C013  F007         	movff	down@pl,CatchFrisbee@pl
  8002  002268  C014  F008         	movff	down@pl+1,CatchFrisbee@pl+1
  8003  00226C  EC15  F015         	call	_CatchFrisbee	;wreg free
  8004  002270                     i2l2346:
  8005                           
  8006                           ;main.c: 601:     display[pl->y-1][pl->x-1] = ((void*)0);
  8007  002270  EE20 F001          	lfsr	2,1
  8008  002274  5013               	movf	down@pl^0,w,c
  8009  002276  26D9               	addwf	fsr2l,f,c
  8010  002278  5014               	movf	(down@pl+1)^0,w,c
  8011  00227A  22DA               	addwfc	fsr2h,f,c
  8012  00227C  50DF               	movf	indf2,w,c
  8013  00227E  6E15               	movwf	??_down^0,c
  8014  002280  6A16               	clrf	(??_down+1)^0,c
  8015  002282  0E05               	movlw	5
  8016  002284                     i2u200_45:
  8017  002284  90D8               	bcf	status,0,c
  8018  002286  3615               	rlcf	??_down^0,f,c
  8019  002288  3616               	rlcf	(??_down+1)^0,f,c
  8020  00228A  2EE8               	decfsz	wreg,f,c
  8021  00228C  EF42  F011         	goto	i2u200_45
  8022  002290  C013  FFD9         	movff	down@pl,fsr2l
  8023  002294  C014  FFDA         	movff	down@pl+1,fsr2h
  8024  002298  50DF               	movf	indf2,w,c
  8025  00229A  6E17               	movwf	(??_down+2)^0,c
  8026  00229C  6A18               	clrf	(??_down+3)^0,c
  8027  00229E  90D8               	bcf	status,0,c
  8028  0022A0  3617               	rlcf	(??_down+2)^0,f,c
  8029  0022A2  3618               	rlcf	(??_down+3)^0,f,c
  8030  0022A4  0EDE               	movlw	222
  8031  0022A6  6E19               	movwf	(??_down+4)^0,c
  8032  0022A8  0EFF               	movlw	255
  8033  0022AA  6E1A               	movwf	(??_down+5)^0,c
  8034  0022AC  0E00               	movlw	low _display
  8035  0022AE  6E1B               	movwf	(??_down+6)^0,c
  8036  0022B0  0E01               	movlw	high _display
  8037  0022B2  6E1C               	movwf	(??_down+7)^0,c
  8038  0022B4  5019               	movf	(??_down+4)^0,w,c
  8039  0022B6  261B               	addwf	(??_down+6)^0,f,c
  8040  0022B8  501A               	movf	(??_down+5)^0,w,c
  8041  0022BA  221C               	addwfc	(??_down+7)^0,f,c
  8042  0022BC  5017               	movf	(??_down+2)^0,w,c
  8043  0022BE  261B               	addwf	(??_down+6)^0,f,c
  8044  0022C0  5018               	movf	(??_down+3)^0,w,c
  8045  0022C2  221C               	addwfc	(??_down+7)^0,f,c
  8046  0022C4  5015               	movf	??_down^0,w,c
  8047  0022C6  241B               	addwf	(??_down+6)^0,w,c
  8048  0022C8  6ED9               	movwf	fsr2l,c
  8049  0022CA  5016               	movf	(??_down+1)^0,w,c
  8050  0022CC  201C               	addwfc	(??_down+7)^0,w,c
  8051  0022CE  6EDA               	movwf	fsr2h,c
  8052  0022D0  0E00               	movlw	0
  8053  0022D2  6EDE               	movwf	postinc2,c
  8054  0022D4  0E00               	movlw	0
  8055  0022D6  6EDD               	movwf	postdec2,c
  8056  0022D8                     
  8057                           ;main.c: 602:     pl->y++;
  8058  0022D8  EE20 F001          	lfsr	2,1
  8059  0022DC  5013               	movf	down@pl^0,w,c
  8060  0022DE  26D9               	addwf	fsr2l,f,c
  8061  0022E0  5014               	movf	(down@pl+1)^0,w,c
  8062  0022E2  22DA               	addwfc	fsr2h,f,c
  8063  0022E4  2ADF               	incf	indf2,f,c
  8064  0022E6                     
  8065                           ;main.c: 603:     display[pl->y-1][pl->x-1] = pl;
  8066  0022E6  EE20 F001          	lfsr	2,1
  8067  0022EA  5013               	movf	down@pl^0,w,c
  8068  0022EC  26D9               	addwf	fsr2l,f,c
  8069  0022EE  5014               	movf	(down@pl+1)^0,w,c
  8070  0022F0  22DA               	addwfc	fsr2h,f,c
  8071  0022F2  50DF               	movf	indf2,w,c
  8072  0022F4  6E15               	movwf	??_down^0,c
  8073  0022F6  6A16               	clrf	(??_down+1)^0,c
  8074  0022F8  0E05               	movlw	5
  8075  0022FA                     i2u201_45:
  8076  0022FA  90D8               	bcf	status,0,c
  8077  0022FC  3615               	rlcf	??_down^0,f,c
  8078  0022FE  3616               	rlcf	(??_down+1)^0,f,c
  8079  002300  2EE8               	decfsz	wreg,f,c
  8080  002302  EF7D  F011         	goto	i2u201_45
  8081  002306  C013  FFD9         	movff	down@pl,fsr2l
  8082  00230A  C014  FFDA         	movff	down@pl+1,fsr2h
  8083  00230E  50DF               	movf	indf2,w,c
  8084  002310  6E17               	movwf	(??_down+2)^0,c
  8085  002312  6A18               	clrf	(??_down+3)^0,c
  8086  002314  90D8               	bcf	status,0,c
  8087  002316  3617               	rlcf	(??_down+2)^0,f,c
  8088  002318  3618               	rlcf	(??_down+3)^0,f,c
  8089  00231A  0EDE               	movlw	222
  8090  00231C  6E19               	movwf	(??_down+4)^0,c
  8091  00231E  0EFF               	movlw	255
  8092  002320  6E1A               	movwf	(??_down+5)^0,c
  8093  002322  0E00               	movlw	low _display
  8094  002324  6E1B               	movwf	(??_down+6)^0,c
  8095  002326  0E01               	movlw	high _display
  8096  002328  6E1C               	movwf	(??_down+7)^0,c
  8097  00232A  5019               	movf	(??_down+4)^0,w,c
  8098  00232C  261B               	addwf	(??_down+6)^0,f,c
  8099  00232E  501A               	movf	(??_down+5)^0,w,c
  8100  002330  221C               	addwfc	(??_down+7)^0,f,c
  8101  002332  5017               	movf	(??_down+2)^0,w,c
  8102  002334  261B               	addwf	(??_down+6)^0,f,c
  8103  002336  5018               	movf	(??_down+3)^0,w,c
  8104  002338  221C               	addwfc	(??_down+7)^0,f,c
  8105  00233A  5015               	movf	??_down^0,w,c
  8106  00233C  241B               	addwf	(??_down+6)^0,w,c
  8107  00233E  6ED9               	movwf	fsr2l,c
  8108  002340  5016               	movf	(??_down+1)^0,w,c
  8109  002342  201C               	addwfc	(??_down+7)^0,w,c
  8110  002344  6EDA               	movwf	fsr2h,c
  8111  002346  C013  FFDE         	movff	down@pl,postinc2
  8112  00234A  C014  FFDD         	movff	down@pl+1,postdec2
  8113  00234E                     i2l400:
  8114  00234E  0012               	return		;funcret
  8115  002350                     __end_of_down:
  8116                           	callstack 0
  8117                           
  8118 ;; *************** function _CatchFrisbee *****************
  8119 ;; Defined at:
  8120 ;;		line 515 in file "main.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  pl              2    6[COMRAM] PTR struct GameElement
  8123 ;;		 -> objs(30), 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  i               2   16[COMRAM] int 
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8139 ;;Total ram usage:       12 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:    1
  8142 ;; This function calls:
  8143 ;;		i2___wmul
  8144 ;; This function is called by:
  8145 ;;		_left
  8146 ;;		_right
  8147 ;;		_up
  8148 ;;		_down
  8149 ;;		_upleft
  8150 ;;		_upright
  8151 ;;		_downleft
  8152 ;;		_downright
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           	psect	text26
  8157  002A2A                     __ptext26:
  8158                           	callstack 0
  8159  002A2A                     _CatchFrisbee:
  8160                           	callstack 22
  8161  002A2A                     
  8162                           ;main.c: 516:     if (game_state == GS_INACTIVE) {
  8163  002A2A  047B               	decf	_game_state^0,w,c
  8164  002A2C  A4D8               	btfss	status,2,c
  8165  002A2E  EF1B  F015         	goto	i2u162_41
  8166  002A32  EF1D  F015         	goto	i2u162_40
  8167  002A36                     i2u162_41:
  8168  002A36  EF59  F015         	goto	i2l2196
  8169  002A3A                     i2u162_40:
  8170  002A3A                     
  8171                           ;main.c: 517:         pl->state = OS_SEL_W_FRISBEE;
  8172  002A3A  EE20 F004          	lfsr	2,4
  8173  002A3E  5007               	movf	CatchFrisbee@pl^0,w,c
  8174  002A40  26D9               	addwf	fsr2l,f,c
  8175  002A42  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8176  002A44  22DA               	addwfc	fsr2h,f,c
  8177  002A46  0E02               	movlw	2
  8178  002A48  6EDF               	movwf	indf2,c
  8179                           
  8180                           ;main.c: 519:         display[objs[5].y-1][objs[5].x-1] = pl;
  8181  002A4A  5073               	movf	(_objs+26)^0,w,c
  8182  002A4C  6E09               	movwf	??_CatchFrisbee^0,c
  8183  002A4E  6A0A               	clrf	(??_CatchFrisbee+1)^0,c
  8184  002A50  0E05               	movlw	5
  8185  002A52                     i2u163_45:
  8186  002A52  90D8               	bcf	status,0,c
  8187  002A54  3609               	rlcf	??_CatchFrisbee^0,f,c
  8188  002A56  360A               	rlcf	(??_CatchFrisbee+1)^0,f,c
  8189  002A58  2EE8               	decfsz	wreg,f,c
  8190  002A5A  EF29  F015         	goto	i2u163_45
  8191  002A5E  5072               	movf	(_objs+25)^0,w,c
  8192  002A60  6E0B               	movwf	(??_CatchFrisbee+2)^0,c
  8193  002A62  6A0C               	clrf	(??_CatchFrisbee+3)^0,c
  8194  002A64  90D8               	bcf	status,0,c
  8195  002A66  360B               	rlcf	(??_CatchFrisbee+2)^0,f,c
  8196  002A68  360C               	rlcf	(??_CatchFrisbee+3)^0,f,c
  8197  002A6A  0EDE               	movlw	222
  8198  002A6C  6E0D               	movwf	(??_CatchFrisbee+4)^0,c
  8199  002A6E  0EFF               	movlw	255
  8200  002A70  6E0E               	movwf	(??_CatchFrisbee+5)^0,c
  8201  002A72  0E00               	movlw	low _display
  8202  002A74  6E0F               	movwf	(??_CatchFrisbee+6)^0,c
  8203  002A76  0E01               	movlw	high _display
  8204  002A78  6E10               	movwf	(??_CatchFrisbee+7)^0,c
  8205  002A7A  500D               	movf	(??_CatchFrisbee+4)^0,w,c
  8206  002A7C  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8207  002A7E  500E               	movf	(??_CatchFrisbee+5)^0,w,c
  8208  002A80  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8209  002A82  500B               	movf	(??_CatchFrisbee+2)^0,w,c
  8210  002A84  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8211  002A86  500C               	movf	(??_CatchFrisbee+3)^0,w,c
  8212  002A88  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8213  002A8A  5009               	movf	??_CatchFrisbee^0,w,c
  8214  002A8C  240F               	addwf	(??_CatchFrisbee+6)^0,w,c
  8215  002A8E  6ED9               	movwf	fsr2l,c
  8216  002A90  500A               	movf	(??_CatchFrisbee+1)^0,w,c
  8217  002A92  2010               	addwfc	(??_CatchFrisbee+7)^0,w,c
  8218  002A94  6EDA               	movwf	fsr2h,c
  8219  002A96  C007  FFDE         	movff	CatchFrisbee@pl,postinc2
  8220  002A9A  C008  FFDD         	movff	CatchFrisbee@pl+1,postdec2
  8221  002A9E                     
  8222                           ;main.c: 520:         objs[5].active = 0;
  8223  002A9E  0E00               	movlw	0
  8224  002AA0  6E74               	movwf	(_objs+27)^0,c
  8225  002AA2                     
  8226                           ;main.c: 521:         objs[5].state = OS_FELL;
  8227  002AA2  0E04               	movlw	4
  8228  002AA4  6E76               	movwf	(_objs+29)^0,c
  8229  002AA6                     
  8230                           ;main.c: 522:         objs[5].x = objs[5].y = 0;
  8231  002AA6  0E00               	movlw	0
  8232  002AA8  6E73               	movwf	(_objs+26)^0,c
  8233  002AAA  C073  F072         	movff	_objs+26,_objs+25
  8234                           
  8235                           ;main.c: 524:     } else {
  8236  002AAE  EFF7  F015         	goto	i2l372
  8237  002AB2                     i2l2196:
  8238                           
  8239                           ;main.c: 525:         objs[selectedPlayer].state = OS_DEFAULT;
  8240  002AB2  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  8241  002AB6  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  8242  002ABA  0E00               	movlw	0
  8243  002ABC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8244  002ABE  0E05               	movlw	5
  8245  002AC0  6E03               	movwf	i2___wmul@multiplicand^0,c
  8246  002AC2  EC79  F018         	call	i2___wmul	;wreg free
  8247  002AC6  0E5D               	movlw	low (_objs+4)
  8248  002AC8  2401               	addwf	?i2___wmul^0,w,c
  8249  002ACA  6ED9               	movwf	fsr2l,c
  8250  002ACC  0E00               	movlw	high (_objs+4)
  8251  002ACE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8252  002AD0  6EDA               	movwf	fsr2h,c
  8253  002AD2  0E00               	movlw	0
  8254  002AD4  6EDF               	movwf	indf2,c
  8255  002AD6                     
  8256                           ;main.c: 526:         pl->state = OS_SEL_W_FRISBEE;
  8257  002AD6  EE20 F004          	lfsr	2,4
  8258  002ADA  5007               	movf	CatchFrisbee@pl^0,w,c
  8259  002ADC  26D9               	addwf	fsr2l,f,c
  8260  002ADE  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8261  002AE0  22DA               	addwfc	fsr2h,f,c
  8262  002AE2  0E02               	movlw	2
  8263  002AE4  6EDF               	movwf	indf2,c
  8264  002AE6                     
  8265                           ;main.c: 528:         for (int i = 0; i < 4; i++) {
  8266  002AE6  0E00               	movlw	0
  8267  002AE8  6E12               	movwf	(CatchFrisbee@i+1)^0,c
  8268  002AEA  0E00               	movlw	0
  8269  002AEC  6E11               	movwf	CatchFrisbee@i^0,c
  8270  002AEE                     i2l2206:
  8271                           
  8272                           ;main.c: 529:             if (&objs[i] == pl) {
  8273  002AEE  C011  F001         	movff	CatchFrisbee@i,i2___wmul@multiplier
  8274  002AF2  C012  F002         	movff	CatchFrisbee@i+1,i2___wmul@multiplier+1
  8275  002AF6  0E00               	movlw	0
  8276  002AF8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8277  002AFA  0E05               	movlw	5
  8278  002AFC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8279  002AFE  EC79  F018         	call	i2___wmul	;wreg free
  8280  002B02  0E59               	movlw	low _objs
  8281  002B04  6E09               	movwf	??_CatchFrisbee^0,c
  8282  002B06  0E00               	movlw	high _objs
  8283  002B08  6E0A               	movwf	(??_CatchFrisbee+1)^0,c
  8284  002B0A  5001               	movf	?i2___wmul^0,w,c
  8285  002B0C  2609               	addwf	??_CatchFrisbee^0,f,c
  8286  002B0E  5002               	movf	(?i2___wmul+1)^0,w,c
  8287  002B10  220A               	addwfc	(??_CatchFrisbee+1)^0,f,c
  8288  002B12  5007               	movf	CatchFrisbee@pl^0,w,c
  8289  002B14  1809               	xorwf	??_CatchFrisbee^0,w,c
  8290  002B16  E107               	bnz	i2u164_41
  8291  002B18  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8292  002B1A  180A               	xorwf	(??_CatchFrisbee+1)^0,w,c
  8293  002B1C  A4D8               	btfss	status,2,c
  8294  002B1E  EF93  F015         	goto	i2u164_41
  8295  002B22  EF95  F015         	goto	i2u164_40
  8296  002B26                     i2u164_41:
  8297  002B26  EF9B  F015         	goto	i2l2210
  8298  002B2A                     i2u164_40:
  8299  002B2A                     
  8300                           ;main.c: 530:                 selectedPlayer = i;
  8301  002B2A  C011  F055         	movff	CatchFrisbee@i,_selectedPlayer
  8302  002B2E  C012  F056         	movff	CatchFrisbee@i+1,_selectedPlayer+1
  8303                           
  8304                           ;main.c: 531:                 break;
  8305  002B32  EFAB  F015         	goto	i2l2214
  8306  002B36                     i2l2210:
  8307                           
  8308                           ;main.c: 533:         }
  8309  002B36  4A11               	infsnz	CatchFrisbee@i^0,f,c
  8310  002B38  2A12               	incf	(CatchFrisbee@i+1)^0,f,c
  8311  002B3A  BE12               	btfsc	(CatchFrisbee@i+1)^0,7,c
  8312  002B3C  EFA9  F015         	goto	i2u165_41
  8313  002B40  5012               	movf	(CatchFrisbee@i+1)^0,w,c
  8314  002B42  E109               	bnz	i2u165_40
  8315  002B44  0E04               	movlw	4
  8316  002B46  5C11               	subwf	CatchFrisbee@i^0,w,c
  8317  002B48  A0D8               	btfss	status,0,c
  8318  002B4A  EFA9  F015         	goto	i2u165_41
  8319  002B4E  EFAB  F015         	goto	i2u165_40
  8320  002B52                     i2u165_41:
  8321  002B52  EF77  F015         	goto	i2l2206
  8322  002B56                     i2u165_40:
  8323  002B56                     i2l2214:
  8324                           
  8325                           ;main.c: 535:         display[objs[5].y-1][objs[5].x-1] = pl;
  8326  002B56  5073               	movf	(_objs+26)^0,w,c
  8327  002B58  6E09               	movwf	??_CatchFrisbee^0,c
  8328  002B5A  6A0A               	clrf	(??_CatchFrisbee+1)^0,c
  8329  002B5C  0E05               	movlw	5
  8330  002B5E                     i2u166_45:
  8331  002B5E  90D8               	bcf	status,0,c
  8332  002B60  3609               	rlcf	??_CatchFrisbee^0,f,c
  8333  002B62  360A               	rlcf	(??_CatchFrisbee+1)^0,f,c
  8334  002B64  2EE8               	decfsz	wreg,f,c
  8335  002B66  EFAF  F015         	goto	i2u166_45
  8336  002B6A  5072               	movf	(_objs+25)^0,w,c
  8337  002B6C  6E0B               	movwf	(??_CatchFrisbee+2)^0,c
  8338  002B6E  6A0C               	clrf	(??_CatchFrisbee+3)^0,c
  8339  002B70  90D8               	bcf	status,0,c
  8340  002B72  360B               	rlcf	(??_CatchFrisbee+2)^0,f,c
  8341  002B74  360C               	rlcf	(??_CatchFrisbee+3)^0,f,c
  8342  002B76  0EDE               	movlw	222
  8343  002B78  6E0D               	movwf	(??_CatchFrisbee+4)^0,c
  8344  002B7A  0EFF               	movlw	255
  8345  002B7C  6E0E               	movwf	(??_CatchFrisbee+5)^0,c
  8346  002B7E  0E00               	movlw	low _display
  8347  002B80  6E0F               	movwf	(??_CatchFrisbee+6)^0,c
  8348  002B82  0E01               	movlw	high _display
  8349  002B84  6E10               	movwf	(??_CatchFrisbee+7)^0,c
  8350  002B86  500D               	movf	(??_CatchFrisbee+4)^0,w,c
  8351  002B88  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8352  002B8A  500E               	movf	(??_CatchFrisbee+5)^0,w,c
  8353  002B8C  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8354  002B8E  500B               	movf	(??_CatchFrisbee+2)^0,w,c
  8355  002B90  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8356  002B92  500C               	movf	(??_CatchFrisbee+3)^0,w,c
  8357  002B94  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8358  002B96  5009               	movf	??_CatchFrisbee^0,w,c
  8359  002B98  240F               	addwf	(??_CatchFrisbee+6)^0,w,c
  8360  002B9A  6ED9               	movwf	fsr2l,c
  8361  002B9C  500A               	movf	(??_CatchFrisbee+1)^0,w,c
  8362  002B9E  2010               	addwfc	(??_CatchFrisbee+7)^0,w,c
  8363  002BA0  6EDA               	movwf	fsr2h,c
  8364  002BA2  C007  FFDE         	movff	CatchFrisbee@pl,postinc2
  8365  002BA6  C008  FFDD         	movff	CatchFrisbee@pl+1,postdec2
  8366  002BAA                     
  8367                           ;main.c: 536:         objs[5].active = 0;
  8368  002BAA  0E00               	movlw	0
  8369  002BAC  6E74               	movwf	(_objs+27)^0,c
  8370  002BAE                     
  8371                           ;main.c: 537:         objs[5].x = objs[5].y = 0;
  8372  002BAE  0E00               	movlw	0
  8373  002BB0  6E73               	movwf	(_objs+26)^0,c
  8374  002BB2  C073  F072         	movff	_objs+26,_objs+25
  8375  002BB6                     
  8376                           ;main.c: 538:         objs[5].state = OS_FELL;
  8377  002BB6  0E04               	movlw	4
  8378  002BB8  6E76               	movwf	(_objs+29)^0,c
  8379  002BBA                     
  8380                           ;main.c: 540:         objs[4].active = 0;
  8381  002BBA  0E00               	movlw	0
  8382  002BBC  6E6F               	movwf	(_objs+22)^0,c
  8383                           
  8384                           ;main.c: 542:         if (pl->type == OT_PLAYERA) scoreA++;
  8385  002BBE  EE20 F003          	lfsr	2,3
  8386  002BC2  5007               	movf	CatchFrisbee@pl^0,w,c
  8387  002BC4  26D9               	addwf	fsr2l,f,c
  8388  002BC6  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8389  002BC8  22DA               	addwfc	fsr2h,f,c
  8390  002BCA  50DF               	movf	indf2,w,c
  8391  002BCC  A4D8               	btfss	status,2,c
  8392  002BCE  EFEB  F015         	goto	i2u167_41
  8393  002BD2  EFED  F015         	goto	i2u167_40
  8394  002BD6                     i2u167_41:
  8395  002BD6  EFF2  F015         	goto	i2l2226
  8396  002BDA                     i2u167_40:
  8397  002BDA  0100               	movlb	0	; () banked
  8398  002BDC  4BF1               	infsnz	_scoreA& (0+255),f,b
  8399  002BDE  2BF2               	incf	(_scoreA+1)& (0+255),f,b
  8400  002BE0  EFF5  F015         	goto	i2l2228
  8401  002BE4                     i2l2226:
  8402  002BE4  0100               	movlb	0	; () banked
  8403  002BE6  4BEF               	infsnz	_scoreB& (0+255),f,b
  8404  002BE8  2BF0               	incf	(_scoreB+1)& (0+255),f,b
  8405  002BEA                     i2l2228:
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;main.c: 545:         game_state = GS_INACTIVE;
  8409  002BEA  0E01               	movlw	1
  8410  002BEC  6E7B               	movwf	_game_state^0,c
  8411  002BEE                     i2l372:
  8412  002BEE  0012               	return		;funcret
  8413  002BF0                     __end_of_CatchFrisbee:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _CheckIfCaughtFrisbee *****************
  8417 ;; Defined at:
  8418 ;;		line 490 in file "main.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;		None
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  i               2    7[COMRAM] int 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  2   38[None  ] PTR struct GameElement
  8425 ;; Registers used:
  8426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;Total ram usage:        3 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    1
  8439 ;; This function calls:
  8440 ;;		i2___wmul
  8441 ;; This function is called by:
  8442 ;;		_highIsr
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text27
  8447  002BF0                     __ptext27:
  8448                           	callstack 0
  8449  002BF0                     _CheckIfCaughtFrisbee:
  8450                           	callstack 23
  8451  002BF0                     
  8452                           ;main.c: 491:     for (int i = 0; i < 4; i++) {
  8453  002BF0  0E00               	movlw	0
  8454  002BF2  6E09               	movwf	(CheckIfCaughtFrisbee@i+1)^0,c
  8455  002BF4  0E00               	movlw	0
  8456  002BF6  6E08               	movwf	CheckIfCaughtFrisbee@i^0,c
  8457  002BF8                     i2l2658:
  8458                           
  8459                           ;main.c: 492:         if (objs[i].x == objs[5].x && objs[i].y == objs[5].y) {
  8460  002BF8  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8461  002BFC  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8462  002C00  0E00               	movlw	0
  8463  002C02  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8464  002C04  0E05               	movlw	5
  8465  002C06  6E03               	movwf	i2___wmul@multiplicand^0,c
  8466  002C08  EC79  F018         	call	i2___wmul	;wreg free
  8467  002C0C  0E59               	movlw	low _objs
  8468  002C0E  2401               	addwf	?i2___wmul^0,w,c
  8469  002C10  6ED9               	movwf	fsr2l,c
  8470  002C12  0E00               	movlw	high _objs
  8471  002C14  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8472  002C16  6EDA               	movwf	fsr2h,c
  8473  002C18  5072               	movf	(_objs+25)^0,w,c
  8474  002C1A  18DE               	xorwf	postinc2,w,c
  8475  002C1C  A4D8               	btfss	status,2,c
  8476  002C1E  EF13  F016         	goto	i2u268_41
  8477  002C22  EF15  F016         	goto	i2u268_40
  8478  002C26                     i2u268_41:
  8479  002C26  EF8C  F016         	goto	i2l2686
  8480  002C2A                     i2u268_40:
  8481  002C2A  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8482  002C2E  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8483  002C32  0E00               	movlw	0
  8484  002C34  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8485  002C36  0E05               	movlw	5
  8486  002C38  6E03               	movwf	i2___wmul@multiplicand^0,c
  8487  002C3A  EC79  F018         	call	i2___wmul	;wreg free
  8488  002C3E  0E5A               	movlw	low (_objs+1)
  8489  002C40  2401               	addwf	?i2___wmul^0,w,c
  8490  002C42  6ED9               	movwf	fsr2l,c
  8491  002C44  0E00               	movlw	high (_objs+1)
  8492  002C46  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8493  002C48  6EDA               	movwf	fsr2h,c
  8494  002C4A  5073               	movf	(_objs+26)^0,w,c
  8495  002C4C  18DE               	xorwf	postinc2,w,c
  8496  002C4E  A4D8               	btfss	status,2,c
  8497  002C50  EF2C  F016         	goto	i2u269_41
  8498  002C54  EF2E  F016         	goto	i2u269_40
  8499  002C58                     i2u269_41:
  8500  002C58  EF8C  F016         	goto	i2l2686
  8501  002C5C                     i2u269_40:
  8502  002C5C                     
  8503                           ;main.c: 493:             if (objs[i].type == OT_PLAYERA) {
  8504  002C5C  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8505  002C60  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8506  002C64  0E00               	movlw	0
  8507  002C66  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8508  002C68  0E05               	movlw	5
  8509  002C6A  6E03               	movwf	i2___wmul@multiplicand^0,c
  8510  002C6C  EC79  F018         	call	i2___wmul	;wreg free
  8511  002C70  0E5C               	movlw	low (_objs+3)
  8512  002C72  2401               	addwf	?i2___wmul^0,w,c
  8513  002C74  6ED9               	movwf	fsr2l,c
  8514  002C76  0E00               	movlw	high (_objs+3)
  8515  002C78  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8516  002C7A  6EDA               	movwf	fsr2h,c
  8517  002C7C  50DF               	movf	indf2,w,c
  8518  002C7E  A4D8               	btfss	status,2,c
  8519  002C80  EF44  F016         	goto	i2u270_41
  8520  002C84  EF46  F016         	goto	i2u270_40
  8521  002C88                     i2u270_41:
  8522  002C88  EF4B  F016         	goto	i2l2666
  8523  002C8C                     i2u270_40:
  8524  002C8C                     
  8525                           ;main.c: 494:                 scoreA++;
  8526  002C8C  0100               	movlb	0	; () banked
  8527  002C8E  4BF1               	infsnz	_scoreA& (0+255),f,b
  8528  002C90  2BF2               	incf	(_scoreA+1)& (0+255),f,b
  8529                           
  8530                           ;main.c: 495:             }
  8531  002C92  EF4E  F016         	goto	i2l2668
  8532  002C96                     i2l2666:
  8533                           
  8534                           ;main.c: 497:                 scoreB++;
  8535  002C96  0100               	movlb	0	; () banked
  8536  002C98  4BEF               	infsnz	_scoreB& (0+255),f,b
  8537  002C9A  2BF0               	incf	(_scoreB+1)& (0+255),f,b
  8538  002C9C                     i2l2668:
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;main.c: 499:             game_state = GS_INACTIVE;
  8542  002C9C  0E01               	movlw	1
  8543  002C9E  6E7B               	movwf	_game_state^0,c
  8544  002CA0                     
  8545                           ; BSR set to: 0
  8546                           ;main.c: 500:             curFrisbeeSteps = 0;
  8547  002CA0  0E00               	movlw	0
  8548  002CA2  6E4C               	movwf	(_curFrisbeeSteps+1)^0,c
  8549  002CA4  0E00               	movlw	0
  8550  002CA6  6E4B               	movwf	_curFrisbeeSteps^0,c
  8551  002CA8                     
  8552                           ; BSR set to: 0
  8553                           ;main.c: 501:             objs[4].active = 0;
  8554  002CA8  0E00               	movlw	0
  8555  002CAA  6E6F               	movwf	(_objs+22)^0,c
  8556  002CAC                     
  8557                           ; BSR set to: 0
  8558                           ;main.c: 502:             objs[5].active = 0;
  8559  002CAC  0E00               	movlw	0
  8560  002CAE  6E74               	movwf	(_objs+27)^0,c
  8561  002CB0                     
  8562                           ; BSR set to: 0
  8563                           ;main.c: 504:             objs[selectedPlayer].state = OS_DEFAULT;
  8564  002CB0  C055  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  8565  002CB4  C056  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  8566  002CB8  0E00               	movlw	0
  8567  002CBA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8568  002CBC  0E05               	movlw	5
  8569  002CBE  6E03               	movwf	i2___wmul@multiplicand^0,c
  8570  002CC0  EC79  F018         	call	i2___wmul	;wreg free
  8571  002CC4  0E5D               	movlw	low (_objs+4)
  8572  002CC6  2401               	addwf	?i2___wmul^0,w,c
  8573  002CC8  6ED9               	movwf	fsr2l,c
  8574  002CCA  0E00               	movlw	high (_objs+4)
  8575  002CCC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8576  002CCE  6EDA               	movwf	fsr2h,c
  8577  002CD0  0E00               	movlw	0
  8578  002CD2  6EDF               	movwf	indf2,c
  8579  002CD4                     
  8580                           ;main.c: 505:             objs[i].state = OS_SEL_W_FRISBEE;
  8581  002CD4  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8582  002CD8  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8583  002CDC  0E00               	movlw	0
  8584  002CDE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8585  002CE0  0E05               	movlw	5
  8586  002CE2  6E03               	movwf	i2___wmul@multiplicand^0,c
  8587  002CE4  EC79  F018         	call	i2___wmul	;wreg free
  8588  002CE8  0E5D               	movlw	low (_objs+4)
  8589  002CEA  2401               	addwf	?i2___wmul^0,w,c
  8590  002CEC  6ED9               	movwf	fsr2l,c
  8591  002CEE  0E00               	movlw	high (_objs+4)
  8592  002CF0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8593  002CF2  6EDA               	movwf	fsr2h,c
  8594  002CF4  0E02               	movlw	2
  8595  002CF6  6EDF               	movwf	indf2,c
  8596  002CF8                     
  8597                           ;main.c: 506:             selectedPlayer = i;
  8598  002CF8  C008  F055         	movff	CheckIfCaughtFrisbee@i,_selectedPlayer
  8599  002CFC  C009  F056         	movff	CheckIfCaughtFrisbee@i+1,_selectedPlayer+1
  8600  002D00                     
  8601                           ;main.c: 508:             return &objs[i];;	Return value of _CheckIfCaughtFrisbee is nev
      +                          er used
  8602  002D00  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8603  002D04  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8604  002D08  0E00               	movlw	0
  8605  002D0A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8606  002D0C  0E05               	movlw	5
  8607  002D0E  6E03               	movwf	i2___wmul@multiplicand^0,c
  8608  002D10  EC79  F018         	call	i2___wmul	;wreg free
  8609  002D14  EF9C  F016         	goto	i2l362
  8610  002D18                     i2l2686:
  8611                           
  8612                           ;main.c: 510:     }
  8613  002D18  4A08               	infsnz	CheckIfCaughtFrisbee@i^0,f,c
  8614  002D1A  2A09               	incf	(CheckIfCaughtFrisbee@i+1)^0,f,c
  8615  002D1C  BE09               	btfsc	(CheckIfCaughtFrisbee@i+1)^0,7,c
  8616  002D1E  EF9A  F016         	goto	i2u271_41
  8617  002D22  5009               	movf	(CheckIfCaughtFrisbee@i+1)^0,w,c
  8618  002D24  E109               	bnz	i2u271_40
  8619  002D26  0E04               	movlw	4
  8620  002D28  5C08               	subwf	CheckIfCaughtFrisbee@i^0,w,c
  8621  002D2A  A0D8               	btfss	status,0,c
  8622  002D2C  EF9A  F016         	goto	i2u271_41
  8623  002D30  EF9C  F016         	goto	i2u271_40
  8624  002D34                     i2u271_41:
  8625  002D34  EFFC  F015         	goto	i2l2658
  8626  002D38                     i2u271_40:
  8627  002D38                     i2l362:
  8628  002D38  0012               	return		;funcret
  8629  002D3A                     __end_of_CheckIfCaughtFrisbee:
  8630                           	callstack 0
  8631                           
  8632 ;; *************** function i2___wmul *****************
  8633 ;; Defined at:
  8634 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  multiplier      2    0[COMRAM] unsigned int 
  8637 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  product         2    4[COMRAM] unsigned int 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  2    0[COMRAM] unsigned int 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, prodl, prodh
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;Total ram usage:        6 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; This function calls:
  8656 ;;		Nothing
  8657 ;; This function is called by:
  8658 ;;		_highIsr
  8659 ;;		_MoveEveryone
  8660 ;;		_CheckIfCaughtFrisbee
  8661 ;;		_CatchFrisbee
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text28
  8666  0030F2                     __ptext28:
  8667                           	callstack 0
  8668  0030F2                     i2___wmul:
  8669                           	callstack 24
  8670  0030F2  5001               	movf	i2___wmul@multiplier^0,w,c
  8671  0030F4  0203               	mulwf	i2___wmul@multiplicand^0,c
  8672  0030F6  CFF3 F005          	movff	prodl,i2___wmul@product
  8673  0030FA  CFF4 F006          	movff	prodh,i2___wmul@product+1
  8674  0030FE  5001               	movf	i2___wmul@multiplier^0,w,c
  8675  003100  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  8676  003102  50F3               	movf	243,w,c
  8677  003104  2606               	addwf	(i2___wmul@product+1)^0,f,c
  8678  003106  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  8679  003108  0203               	mulwf	i2___wmul@multiplicand^0,c
  8680  00310A  50F3               	movf	243,w,c
  8681  00310C  2606               	addwf	(i2___wmul@product+1)^0,f,c
  8682  00310E  C005  F001         	movff	i2___wmul@product,?i2___wmul
  8683  003112  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  8684  003116  0012               	return		;funcret
  8685  003118                     __end_ofi2___wmul:
  8686                           	callstack 0
  8687  0000                     
  8688                           	psect	rparam
  8689  0000                     
  8690                           	psect	temp
  8691  00007C                     btemp:
  8692                           	callstack 0
  8693  00007C                     	ds	1
  8694  0000                     int$flags	set	btemp
  8695  0000                     wtemp8	set	btemp+1
  8696  0000                     ttemp5	set	btemp+1
  8697  0000                     ttemp6	set	btemp+4
  8698  0000                     ttemp7	set	btemp+8
  8699                           
  8700                           	psect	idloc
  8701                           
  8702                           ;Config register IDLOC0 @ 0x200000
  8703                           ;	unspecified, using default values
  8704  200000                     	org	2097152
  8705  200000  FF                 	db	255
  8706                           
  8707                           ;Config register IDLOC1 @ 0x200001
  8708                           ;	unspecified, using default values
  8709  200001                     	org	2097153
  8710  200001  FF                 	db	255
  8711                           
  8712                           ;Config register IDLOC2 @ 0x200002
  8713                           ;	unspecified, using default values
  8714  200002                     	org	2097154
  8715  200002  FF                 	db	255
  8716                           
  8717                           ;Config register IDLOC3 @ 0x200003
  8718                           ;	unspecified, using default values
  8719  200003                     	org	2097155
  8720  200003  FF                 	db	255
  8721                           
  8722                           ;Config register IDLOC4 @ 0x200004
  8723                           ;	unspecified, using default values
  8724  200004                     	org	2097156
  8725  200004  FF                 	db	255
  8726                           
  8727                           ;Config register IDLOC5 @ 0x200005
  8728                           ;	unspecified, using default values
  8729  200005                     	org	2097157
  8730  200005  FF                 	db	255
  8731                           
  8732                           ;Config register IDLOC6 @ 0x200006
  8733                           ;	unspecified, using default values
  8734  200006                     	org	2097158
  8735  200006  FF                 	db	255
  8736                           
  8737                           ;Config register IDLOC7 @ 0x200007
  8738                           ;	unspecified, using default values
  8739  200007                     	org	2097159
  8740  200007  FF                 	db	255
  8741                           
  8742                           	psect	config
  8743                           
  8744                           ; Padding undefined space
  8745  300000                     	org	3145728
  8746  300000  FF                 	db	255
  8747                           
  8748                           ;Config register CONFIG1H @ 0x300001
  8749                           ;	unspecified, using default values
  8750                           ;	Oscillator Selection bits
  8751                           ;	OSC = 0x7, unprogrammed default
  8752                           ;	Fail-Safe Clock Monitor Enable bit
  8753                           ;	FCMEN = 0x0, unprogrammed default
  8754                           ;	Internal/External Oscillator Switchover bit
  8755                           ;	IESO = 0x0, unprogrammed default
  8756  300001                     	org	3145729
  8757  300001  07                 	db	7
  8758                           
  8759                           ;Config register CONFIG2L @ 0x300002
  8760                           ;	unspecified, using default values
  8761                           ;	Power-up Timer Enable bit
  8762                           ;	PWRT = 0x1, unprogrammed default
  8763                           ;	Brown-out Reset Enable bits
  8764                           ;	BOREN = 0x3, unprogrammed default
  8765                           ;	Brown Out Reset Voltage bits
  8766                           ;	BORV = 0x3, unprogrammed default
  8767  300002                     	org	3145730
  8768  300002  1F                 	db	31
  8769                           
  8770                           ;Config register CONFIG2H @ 0x300003
  8771                           ;	unspecified, using default values
  8772                           ;	Watchdog Timer Enable bit
  8773                           ;	WDT = 0x1, unprogrammed default
  8774                           ;	Watchdog Timer Postscale Select bits
  8775                           ;	WDTPS = 0xF, unprogrammed default
  8776  300003                     	org	3145731
  8777  300003  1F                 	db	31
  8778                           
  8779                           ; Padding undefined space
  8780  300004                     	org	3145732
  8781  300004  FF                 	db	255
  8782                           
  8783                           ;Config register CONFIG3H @ 0x300005
  8784                           ;	unspecified, using default values
  8785                           ;	CCP2 MUX bit
  8786                           ;	CCP2MX = 0x1, unprogrammed default
  8787                           ;	PORTB A/D Enable bit
  8788                           ;	PBADEN = 0x1, unprogrammed default
  8789                           ;	Low-Power Timer1 Oscillator Enable bit
  8790                           ;	LPT1OSC = 0x0, unprogrammed default
  8791                           ;	MCLR Pin Enable bit
  8792                           ;	MCLRE = 0x1, unprogrammed default
  8793  300005                     	org	3145733
  8794  300005  83                 	db	131
  8795                           
  8796                           ;Config register CONFIG4L @ 0x300006
  8797                           ;	unspecified, using default values
  8798                           ;	Stack Full/Underflow Reset Enable bit
  8799                           ;	STVREN = 0x1, unprogrammed default
  8800                           ;	Single-Supply ICSP Enable bit
  8801                           ;	LVP = 0x1, unprogrammed default
  8802                           ;	Extended Instruction Set Enable bit
  8803                           ;	XINST = 0x0, unprogrammed default
  8804                           ;	Background Debugger Enable bit
  8805                           ;	DEBUG = 0x1, unprogrammed default
  8806  300006                     	org	3145734
  8807  300006  85                 	db	133
  8808                           
  8809                           ; Padding undefined space
  8810  300007                     	org	3145735
  8811  300007  FF                 	db	255
  8812                           
  8813                           ;Config register CONFIG5L @ 0x300008
  8814                           ;	unspecified, using default values
  8815                           ;	Code Protection bit
  8816                           ;	CP0 = 0x1, unprogrammed default
  8817                           ;	Code Protection bit
  8818                           ;	CP1 = 0x1, unprogrammed default
  8819                           ;	Code Protection bit
  8820                           ;	CP2 = 0x1, unprogrammed default
  8821                           ;	Code Protection bit
  8822                           ;	CP3 = 0x1, unprogrammed default
  8823  300008                     	org	3145736
  8824  300008  0F                 	db	15
  8825                           
  8826                           ;Config register CONFIG5H @ 0x300009
  8827                           ;	unspecified, using default values
  8828                           ;	Boot Block Code Protection bit
  8829                           ;	CPB = 0x1, unprogrammed default
  8830                           ;	Data EEPROM Code Protection bit
  8831                           ;	CPD = 0x1, unprogrammed default
  8832  300009                     	org	3145737
  8833  300009  C0                 	db	192
  8834                           
  8835                           ;Config register CONFIG6L @ 0x30000A
  8836                           ;	unspecified, using default values
  8837                           ;	Write Protection bit
  8838                           ;	WRT0 = 0x1, unprogrammed default
  8839                           ;	Write Protection bit
  8840                           ;	WRT1 = 0x1, unprogrammed default
  8841                           ;	Write Protection bit
  8842                           ;	WRT2 = 0x1, unprogrammed default
  8843                           ;	Write Protection bit
  8844                           ;	WRT3 = 0x1, unprogrammed default
  8845  30000A                     	org	3145738
  8846  30000A  0F                 	db	15
  8847                           
  8848                           ;Config register CONFIG6H @ 0x30000B
  8849                           ;	unspecified, using default values
  8850                           ;	Configuration Register Write Protection bit
  8851                           ;	WRTC = 0x1, unprogrammed default
  8852                           ;	Boot Block Write Protection bit
  8853                           ;	WRTB = 0x1, unprogrammed default
  8854                           ;	Data EEPROM Write Protection bit
  8855                           ;	WRTD = 0x1, unprogrammed default
  8856  30000B                     	org	3145739
  8857  30000B  E0                 	db	224
  8858                           
  8859                           ;Config register CONFIG7L @ 0x30000C
  8860                           ;	unspecified, using default values
  8861                           ;	Table Read Protection bit
  8862                           ;	EBTR0 = 0x1, unprogrammed default
  8863                           ;	Table Read Protection bit
  8864                           ;	EBTR1 = 0x1, unprogrammed default
  8865                           ;	Table Read Protection bit
  8866                           ;	EBTR2 = 0x1, unprogrammed default
  8867                           ;	Table Read Protection bit
  8868                           ;	EBTR3 = 0x1, unprogrammed default
  8869  30000C                     	org	3145740
  8870  30000C  0F                 	db	15
  8871                           
  8872                           ;Config register CONFIG7H @ 0x30000D
  8873                           ;	unspecified, using default values
  8874                           ;	Boot Block Table Read Protection bit
  8875                           ;	EBTRB = 0x1, unprogrammed default
  8876  30000D                     	org	3145741
  8877  30000D  40                 	db	64
  8878                           tosu	equ	0xFFF
  8879                           tosh	equ	0xFFE
  8880                           tosl	equ	0xFFD
  8881                           stkptr	equ	0xFFC
  8882                           pclatu	equ	0xFFB
  8883                           pclath	equ	0xFFA
  8884                           pcl	equ	0xFF9
  8885                           tblptru	equ	0xFF8
  8886                           tblptrh	equ	0xFF7
  8887                           tblptrl	equ	0xFF6
  8888                           tablat	equ	0xFF5
  8889                           prodh	equ	0xFF4
  8890                           prodl	equ	0xFF3
  8891                           indf0	equ	0xFEF
  8892                           postinc0	equ	0xFEE
  8893                           postdec0	equ	0xFED
  8894                           preinc0	equ	0xFEC
  8895                           plusw0	equ	0xFEB
  8896                           fsr0h	equ	0xFEA
  8897                           fsr0l	equ	0xFE9
  8898                           wreg	equ	0xFE8
  8899                           indf1	equ	0xFE7
  8900                           postinc1	equ	0xFE6
  8901                           postdec1	equ	0xFE5
  8902                           preinc1	equ	0xFE4
  8903                           plusw1	equ	0xFE3
  8904                           fsr1h	equ	0xFE2
  8905                           fsr1l	equ	0xFE1
  8906                           bsr	equ	0xFE0
  8907                           indf2	equ	0xFDF
  8908                           postinc2	equ	0xFDE
  8909                           postdec2	equ	0xFDD
  8910                           preinc2	equ	0xFDC
  8911                           plusw2	equ	0xFDB
  8912                           fsr2h	equ	0xFDA
  8913                           fsr2l	equ	0xFD9
  8914                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        82
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     74     123
    BANK0           128     34     115
    BANK1           256      0     188
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    MoveEveryone$1802	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1801	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1800	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1799	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1798	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1797	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1796	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1795	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1794	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1793	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1792	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1791	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1766	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1765	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1764	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1763	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1762	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1761	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1760	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    MoveEveryone$1759	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1758	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1757	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1756	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1755	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    downright@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    downleft@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    upright@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    upleft@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    down@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    up@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    right@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    left@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    CatchFrisbee@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    display	PTR struct GameElement[16][4] size(2) Largest target is 30
		 -> NULL(NULL[0]), objs(COMRAM[30]), 

    sp__CheckIfCaughtFrisbee	PTR struct GameElement size(2) Largest target is 30
		 -> NULL(NULL[0]), objs(COMRAM[30]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(BANK0[8]), frisbeeChar(BANK0[8]), selected_teamB_player_with_frisbee(BANK0[8]), selected_teamA_player_with_frisbee(BANK0[8]), 
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), teamB_player(BANK0[8]), teamA_player(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lowIsr in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_MoveEveryone
    _compute_frisbee_target_and_route->_random_generator
    _MoveEveryone->_left
    _MoveEveryone->_up
    _MoveEveryone->_upleft
    _upright->_CatchFrisbee
    _upleft->_CatchFrisbee
    _up->_CatchFrisbee
    _right->_CatchFrisbee
    _random_generator->___lwmod
    _left->_CatchFrisbee
    _downright->_CatchFrisbee
    _downleft->_CatchFrisbee
    _down->_CatchFrisbee
    _CatchFrisbee->i2___wmul
    _CheckIfCaughtFrisbee->i2___wmul

Critical Paths under _main in BANK0

    _main->_UpdateAndPrintDisplay
    _UpdateAndPrintDisplay->___wmul
    _InitLCD->_LCDCmd
    _InitGameObjects->___wmul
    _AddCustomCharacters->_LCDAddSpecialCharacter
    _LCDAddSpecialCharacter->_LCDGoto
    _LCDGoto->_LCDCmd

Critical Paths under _lowIsr in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowIsr in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowIsr in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowIsr in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowIsr in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowIsr in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowIsr in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowIsr in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowIsr in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowIsr in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowIsr in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowIsr in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowIsr in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowIsr in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowIsr in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowIsr in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31072
                _AddCustomCharacters
                    _InitGameObjects
                     _InitInterrupts
                            _InitLCD
              _UpdateAndPrintDisplay
 ---------------------------------------------------------------------------------
 (1) _UpdateAndPrintDisplay                               20    20      0   15343
                                             14 BANK0     20    20      0
                             _LCDDat
                            _LCDGoto
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      22
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGameObjects                                     18    18      0   14495
                                             14 BANK0     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4   14247
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _AddCustomCharacters                                  0     0      0    1212
             _LCDAddSpecialCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDAddSpecialCharacter                               4     2      2    1212
                                             11 BANK0      4     2      2
                             _LCDCmd
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1     448
                                              9 BANK0      2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               1     1      0      22
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               1     1      0      22
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lowIsr                                               8     8      0      46
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _highIsr                                             22    22      0   42740
                                             52 COMRAM    22    22      0
               _CheckIfCaughtFrisbee
                       _MoveEveryone
               _SetupDebouncingTimer
   _compute_frisbee_target_and_route
                               _down
                               _left
                              _right
                                 _up
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) _compute_frisbee_target_and_route                    32    28      4    2041
                                             13 COMRAM    32    28      4
                   _random_generator
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _SetupDebouncingTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MoveEveryone                                        22    22      0   25715
                                             30 COMRAM    22    22      0
                               _down
                           _downleft
                          _downright
                               _left
                   _random_generator
                              _right
                                 _up
                             _upleft
                            _upright
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) _upright                                             11     9      2    2865
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _upleft                                              12    10      2    2865
                                             18 COMRAM    12    10      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (7) _up                                                  12    10      2    2897
                                             18 COMRAM    12    10      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (7) _right                                               11     9      2    2897
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _random_generator                                     8     6      2     653
                                              5 COMRAM     8     6      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _left                                                12    10      2    2897
                                             18 COMRAM    12    10      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _downright                                           10     8      2    2865
                                             18 COMRAM    10     8      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _downleft                                            11     9      2    2865
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (7) _down                                                11     9      2    2897
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _CatchFrisbee                                        12    10      2    2393
                                              6 COMRAM    12    10      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) _CheckIfCaughtFrisbee                                 3     3      0    1741
                                              6 COMRAM     3     3      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4    1563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddCustomCharacters
     _LCDAddSpecialCharacter
       _LCDCmd
       _LCDDat
       _LCDGoto
         _LCDCmd
   _InitGameObjects
     ___wmul
   _InitInterrupts
   _InitLCD
     _LCDCmd
   _UpdateAndPrintDisplay
     _LCDDat
     _LCDGoto
       _LCDCmd
     ___wmul

 _lowIsr (ROOT)

 _highIsr (ROOT)
   _CheckIfCaughtFrisbee
     i2___wmul
   _MoveEveryone
     _down
       _CatchFrisbee
         i2___wmul
     _downleft
       _CatchFrisbee
         i2___wmul
     _downright
       _CatchFrisbee
         i2___wmul
     _left
       _CatchFrisbee
         i2___wmul
     _random_generator
       ___lwmod
     _right
       _CatchFrisbee
         i2___wmul
     _up
       _CatchFrisbee
         i2___wmul
     _upleft
       _CatchFrisbee
         i2___wmul
     _upright
       _CatchFrisbee
         i2___wmul
     i2___wmul
   _SetupDebouncingTimer
   _compute_frisbee_target_and_route
     _random_generator
       ___lwmod
     i2___wmul (ARG)
   _down
     _CatchFrisbee
       i2___wmul
   _left
     _CatchFrisbee
       i2___wmul
   _right
     _CatchFrisbee
       i2___wmul
   _up
     _CatchFrisbee
       i2___wmul
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BC       7       73.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     22      73       5       89.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4A      7B       1       97.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AA      34        0.0%
DATA                 0      0     1AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon May 29 22:39:13 2023

                                             _pulseCounter 004F  
                                                       _up 14BC  
                                                       bsr 000FE0  
                               LCDAddSpecialCharacter@data 00D8  
                                      ___wmul@multiplicand 00D7  
                    LCDAddSpecialCharacter@character_index 00DA  
                                                      l201 2E48  
                                                      l170 3154  
                                                      l322 0AF2  
                                                      l173 3136  
                                                      l182 2EC0  
                                                      l351 2DC6  
                                                      l193 30C8  
                                                      l339 0B34  
                                                      l348 2A28  
                                                      l198 3096  
                                                      ?_up 0013  
                                                      l447 30F0  
                                                      wreg 000FE8  
                                                     ??_up 0015  
                                          __end_of_LCDGoto 2EC2  
                                                     l2140 3144  
                                                     l2142 3146  
                                                     l2160 3126  
                                                     l2144 314C  
                                                     l2136 313C  
                                                     l3120 3156  
                                                     l2162 312C  
                                                     l2154 311C  
                                                     l2146 314E  
                                                     l2138 3140  
                                                     l2170 2E60  
                                                     l3122 315E  
                                                     l2164 312E  
                                                     l2156 3120  
                                                     l2180 2EAE  
                                                     l2172 2E6E  
                                                     l2260 3052  
                                                     l3124 3162  
                                                     l2166 3134  
                                                     l2158 3124  
                                                     l2174 2E80  
                                                     l2182 2EB8  
                                                     l2270 3078  
                                                     l2262 3060  
                                                     l3126 3166  
                                                     l2184 2EBC  
                                                     l2176 2E8E  
                                                     l2168 2E4E  
                                                     l2272 307C  
                                                     l2178 2EA0  
                                                     l2274 308C  
                                                     l3250 0A56  
                                                     l2268 3066  
                                                     l2700 2D62  
                                                     l3252 0ACC  
                                                     l2710 2D6C  
                                                     l2702 2D64  
                                                     l2720 2D76  
                                                     l2712 2D6E  
                                                     l2704 2D66  
                                                     l3248 09C2  
                                                     l2730 2D82  
                                                     l2722 2D78  
                                                     l2714 2D70  
                                                     l2706 2D68  
                                                     l2810 0710  
                                                     l2802 06C8  
                                                     l2492 30CA  
                                                     l2740 2D8C  
                                                     l2732 2D84  
                                                     l2724 2D7A  
                                                     l2716 2D72  
                                                     l2708 2D6A  
                                                     l2580 30A2  
                                                     l2812 0714  
                                                     l2494 30E8  
                                                     l2750 2D96  
                                                     l2742 2D8E  
                                                     l2734 2D86  
                                                     l2726 2D7C  
                                                     l2718 2D74  
                                                     l2590 30BC  
                                                     l2582 30A4  
                                                     l2574 3098  
                                                     l2830 07EE  
                                                     l2814 0730  
                                                     l2760 2DC4  
                                                     l2752 2DA4  
                                                     l2744 2D90  
                                                     l2736 2D88  
                                                     l2728 2D80  
                                                     l2592 30C2  
                                                     l2584 30AA  
                                                     l2576 309C  
                                                     l2832 08AC  
                                                     l2824 0758  
                                                     l2816 0734  
                                                     l2808 06D0  
                                                     l2594 2DC8  
                                                     l2762 2854  
                                                     l2754 2DA6  
                                                     l2746 2D92  
                                                     l2738 2D8A  
                                                     l2586 30B0  
                                                     l2578 30A0  
                                                     l2850 08D8  
                                                     l2842 08C8  
                                                     l2834 08B2  
                                                     l2826 078A  
                                                     l2818 0750  
                                                     l2780 28C6  
                                                     l2756 2DC0  
                                                     l2748 2D94  
                                                     l2588 30B6  
                                                     l2860 094C  
                                                     l2852 08E2  
                                                     l2836 08C0  
                                                     l2828 07BC  
                                                     l2790 296A  
                                                     l2782 28CA  
                                                     l2774 2866  
                                                     l2758 2DC2  
                                                     l2694 2D3A  
                                                     l2870 09E0  
                                                     l2862 0956  
                                                     l2854 092E  
                                                     l2792 2A08  
                                                     l2784 28E6  
                                                     l2776 28A6  
                                                     l2768 285E  
                                                     l2696 2D3E  
                                                     l2872 09EA  
                                                     l2864 0960  
                                                     l2856 0938  
                                                     l2848 08D0  
                                                     l2794 2A0C  
                                                     l2778 28AA  
                                                     l2698 2D48  
                                                     l2890 0B18  
                                                     l2874 09F4  
                                                     l2858 0942  
                                                     l2882 0A74  
                                                     l2868 096A  
                                                     l2884 0AF2  
                                                     l2796 06BE  
                                                     l2886 0AF8  
                                                     l2878 09FE  
                                                     l2888 0B14  
                                                     _LATA 000F89  
                                                     u1600 2E80  
                                                     _LATD 000F8C  
                                                     u1601 2E7C  
                                                     u1610 2EA0  
                                                     u1611 2E9C  
                                                     u3207 3130  
                                                     u1720 308C  
                                                     u1721 3088  
                                                     u1590 2E60  
                                                     u1591 2E5C  
                                                     u2800 07BC  
                                                     u3177 3148  
                                                     u2801 07B8  
                                                     u2730 28C6  
                                                     u2810 07EE  
                                                     u3187 3150  
                                                     u2731 28C2  
                                                     u2811 07EA  
                                                     u2740 28E6  
                                                     u2900 0B34  
                                                     u3197 3128  
                                                     u2741 28E2  
                                                     u2725 2870  
                                                     u2901 0B30  
                                                     u2750 2A28  
                                                     u2830 08C0  
                                                     u2751 2A24  
                                                     u2831 08BC  
                                                     u2825 083E  
                                                     u2850 092E  
                                                     u2770 0730  
                                                     u2851 092A  
                                                     u2771 072C  
                                                     u2780 0750  
                                                     u2845 08EC  
                                                     u2781 074C  
                                                     u2765 06DA  
                                                     u2790 078A  
                                                     u2791 0786  
                                                     u2865 0974  
                                                     u2890 0B14  
                                                     u2891 0B10  
                                                     u2875 0A08  
                                                     u2885 0A7E  
                                          _InitGameObjects 2854  
                                                     _main 3156  
                                                     _left 17B8  
                                                     _down 2082  
                                                     _objs 0059  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     fsr2l 000FD9  
                                                     btemp 007C  
                                                     up@pl 0013  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 00C8  
                                             ___param_bank 000000  
                                          __end_of_InitLCD 30CA  
                                                    ?_main 0001  
                                                    ?_left 0013  
                                                    ?_down 0013  
                                                    _T0CON 000FD5  
                                                    _T1CON 000FCD  
                                                    _T2CON 000FCA  
                                                    _T3CON 000FB1  
                                          __end_of___lwmod 3000  
                                                    i2l132 0C1C  
                                                    i2l125 0B36  
                                                    i2l150 0E2E  
                                                    i2l134 0C24  
                                                    i1l278 00B0  
                                                    i2l127 0B98  
                                                    i2l400 234E  
                                                    i2l304 2852  
                                                    i2l145 0D48  
                                                    i2l129 0BCA  
                                                    i2l162 2F92  
                                                    i2l410 11AA  
                                                    i2l163 2F9A  
                                                    i2l139 0CFA  
                                                    i2l420 14BA  
                                                    i2l156 0E84  
                                                    i2l260 0570  
                                                    i2l157 0E8C  
                                                    i2l430 1D9A  
                                                    i2l239 017E  
                                                    i2l440 2610  
                                                    i2l256 04C8  
                                                    i2l248 01E4  
                                                    i2l273 06A2  
                                                    i2l249 034A  
                                                    i2l362 2D38  
                                                    i2l354 3180  
                                                    i2l372 2BEE  
                                                    i2l447 3116  
                                                    i2l376 1AAA  
                                                    i2l384 2080  
                                                    i2l392 17B6  
                                                    i2l955 2FFE  
                                                    i2l948 2FF6  
                                                    _TMR0H 000FD7  
                                                    _TMR1H 000FCF  
                                                    _TMR0L 000FD6  
                                                    _TMR3H 000FB3  
                                                    _TMR1L 000FCE  
                                                    _TMR3L 000FB2  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                             __end_of_CheckIfCaughtFrisbee 2D3A  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISD 000F95  
                                    _UpdateAndPrintDisplay 06BE  
                                          __end_of_highIsr 06BE  
                                    __size_of_CatchFrisbee 01C6  
                                                    _lcd_x 008C  
                                                    _lcd_y 008B  
                                                    _right 1D9C  
                                                    tablat 000FF5  
                                         __end_ofi2___wmul 3118  
                                                    ttemp5 007D  
                                                    ttemp6 0080  
                                                    ttemp7 0084  
                                                    status 000FD8  
                                                    wtemp8 007D  
                                          __end_of_upright 14BC  
                                 __end_of_random_generator 2F9C  
                                          __initialization 2EC2  
                                             __end_of_main 3172  
                                             __end_of_left 1AAC  
                                             __end_of_down 2350  
                                           _InitInterrupts 2D3A  
                                                   ??_main 00EF  
                                                   ??_left 0015  
                                                   ??_down 0015  
                                             _CatchFrisbee 2A2A  
                                            __activetblptr 000002  
                                                ??_LCDGoto 00D7  
                                  __end_of_InitGameObjects 2A2A  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   _ADRESH 000FC4  
                                                   ?_right 0013  
                                                   _LCDDat 3118  
                                                   _LCDCmd 3138  
                                                   i1l3100 0062  
                                                   i1l3110 0092  
                                                   i1l3102 0066  
                                                   i1l3112 00A4  
                                                   i1l3104 006A  
                                                   i1l3114 00A8  
                                                   i1l3106 007C  
                                                   i1l3116 00AC  
                                                   i1l3108 0080  
                                                   i1l3118 00AE  
                                                   i1l3092 002E  
                                                   i1l3094 003A  
                                                   i1l3096 003E  
                                                   i1l3098 0050  
                                                   i2l2200 2AE6  
                                                   i2l3000 0358  
                                                   i2l2210 2B36  
                                                   i2l3010 0432  
                                                   i2l3002 0368  
                                                   i2l2220 2BB6  
                                                   i2l2212 2B3A  
                                                   i2l3020 0476  
                                                   i2l3012 0466  
                                                   i2l3004 039A  
                                                   i2l2150 310E  
                                                   i2l2222 2BBA  
                                                   i2l2214 2B56  
                                                   i2l2206 2AEE  
                                                   i2l2230 2F9C  
                                                   i2l2302 1D9C  
                                                   i2l3030 04BC  
                                                   i2l3022 04A6  
                                                   i2l3014 046A  
                                                   i2l3006 03FA  
                                                   i2l2224 2BDA  
                                                   i2l2216 2BAA  
                                                   i2l2208 2B2A  
                                                   i2l2240 2FE2  
                                                   i2l2232 2FAE  
                                                   i2l2312 1EA4  
                                                   i2l2320 1FA6  
                                                   i2l2400 112A  
                                                   i2l3040 053C  
                                                   i2l3024 04AE  
                                                   i2l3016 046E  
                                                   i2l3008 03FE  
                                                   i2l3032 04C0  
                                                   i2l2226 2BE4  
                                                   i2l2218 2BAE  
                                                   i2l2242 2FEA  
                                                   i2l2234 2FB6  
                                                   i2l2250 2F4A  
                                                   i2l2322 200E  
                                                   i2l2306 1DBA  
                                                   i2l2402 1134  
                                                   i2l2410 11C6  
                                                   i2l3050 058E  
                                                   i2l3042 0540  
                                                   i2l3034 04D6  
                                                   i2l3026 04B0  
                                                   i2l3018 0472  
                                                   i2l2148 30F2  
                                                   i2l2228 2BEA  
                                                   i2l2332 20A4  
                                                   i2l2244 2FF0  
                                                   i2l2236 2FBE  
                                                   i2l2252 2F4E  
                                                   i2l2324 2018  
                                                   i2l2316 1F20  
                                                   i2l2308 1E28  
                                                   i2l2404 1142  
                                                   i2l2412 11E6  
                                                   i2l2500 0B66  
                                                   i2l3060 05F8  
                                                   i2l3052 0598  
                                                   i2l3044 0548  
                                                   i2l3036 04E6  
                                                   i2l3028 04BA  
                                                   i2l2190 2A9E  
                                                   i2l2350 22E6  
                                                   i2l2342 21F2  
                                                   i2l2334 210A  
                                                   i2l2238 2FCC  
                                                   i2l2254 2F5A  
                                                   i2l2246 2F32  
                                                   i2l2318 1F9A  
                                                   i2l2430 1444  
                                                   i2l2422 134C  
                                                   i2l2414 1254  
                                                   i2l2510 0BE0  
                                                   i2l2502 0B7C  
                                                   i2l3062 0618  
                                                   i2l3054 05B8  
                                                   i2l3038 0518  
                                                   i2l2192 2AA2  
                                                   i2l2344 2264  
                                                   i2l2328 2082  
                                                   i2l2440 1AE6  
                                                   i2l2360 1846  
                                                   i2l2256 2F6C  
                                                   i2l2248 2F34  
                                                   i2l2280 14DC  
                                                   i2l2432 1452  
                                                   i2l2424 13C6  
                                                   i2l2408 11AC  
                                                   i2l2520 0C42  
                                                   i2l2504 0B8C  
                                                   i2l3080 069E  
                                                   i2l3064 0628  
                                                   i2l3056 05C8  
                                                   i2l3072 0660  
                                                   i2l3048 057E  
                                                   i2l2194 2AA6  
                                                   i2l2186 2A2A  
                                                   i2l2338 217E  
                                                   i2l2346 2270  
                                                   i2l2450 1C34  
                                                   i2l2442 1B4C  
                                                   i2l2370 19C4  
                                                   i2l2354 17B8  
                                                   i2l2258 2F70  
                                                   i2l2290 164E  
                                                   i2l2282 154E  
                                                   i2l2418 12D0  
                                                   i2l2426 13D2  
                                                   i2l2610 266E  
                                                   i2l2602 261A  
                                                   i2l2522 0C4E  
                                                   i2l2530 0CA0  
                                                   i2l2514 0BFA  
                                                   i2l2506 0BAE  
                                                   i2l3082 06A0  
                                                   i2l3066 0648  
                                                   i2l3058 05E8  
                                                   i2l2188 2A3A  
                                                   i2l2196 2AB2  
                                                   i2l2348 22D8  
                                                   i2l2460 1D32  
                                                   i2l2452 1CA6  
                                                   i2l2436 1AAC  
                                                   i2l2364 18C6  
                                                   i2l2372 19D0  
                                                   i2l2292 16CC  
                                                   i2l2276 14BC  
                                                   i2l2380 0E8E  
                                                   i2l2428 143A  
                                                   i2l2620 26DE  
                                                   i2l2612 267E  
                                                   i2l2540 0D06  
                                                   i2l2532 0CAC  
                                                   i2l2524 0C5A  
                                                   i2l2516 0C10  
                                                   i2l2508 0BBE  
                                                   i2l3068 0658  
                                                   i2l3076 069A  
                                                   i2l2198 2AD6  
                                                   i2l2446 1BC0  
                                                   i2l2454 1CB2  
                                                   i2l2438 1AC4  
                                                   i2l2470 23E6  
                                                   i2l2374 1A38  
                                                   i2l2358 17D4  
                                                   i2l2286 15CE  
                                                   i2l2294 16D8  
                                                   i2l2390 0FB8  
                                                   i2l2382 0EA6  
                                                   i2l2630 275E  
                                                   i2l2622 26FE  
                                                   i2l2614 269E  
                                                   i2l2606 2636  
                                                   i2l2550 0D72  
                                                   i2l2542 0D2E  
                                                   i2l2534 0CB8  
                                                   i2l2526 0C82  
                                                   i2l2518 0C2C  
                                                   i2l3078 069C  
                                                   i2l3254 0158  
                                                   i2l2456 1D1A  
                                                   i2l2480 251C  
                                                   i2l2464 2350  
                                                   i2l2376 1A42  
                                                   i2l2368 1946  
                                                   i2l2296 1740  
                                                   i2l2384 0EC6  
                                                   i2l2632 276E  
                                                   i2l2624 270E  
                                                   i2l2616 26AE  
                                                   i2l2608 264E  
                                                   i2l2560 0DD8  
                                                   i2l2552 0D7E  
                                                   i2l2544 0D32  
                                                   i2l2536 0CE0  
                                                   i2l2528 0C86  
                                                   i2l3256 0674  
                                                   i2l2458 1D24  
                                                   i2l2474 244E  
                                                   i2l2482 2528  
                                                   i2l2466 236A  
                                                   i2l2298 174E  
                                                   i2l2394 1038  
                                                   i2l2386 0F38  
                                                   i2l3258 27E4  
                                                   i2l2634 278E  
                                                   i2l2626 272E  
                                                   i2l2618 26CE  
                                                   i2l2642 27CE  
                                                   i2l2570 0E6A  
                                                   i2l2562 0DE4  
                                                   i2l2554 0DAE  
                                                   i2l2546 0D50  
                                                   i2l2538 0CE4  
                                                   i2l2660 2C2A  
                                                   i2l2652 2BF0  
                                                   i2l2484 2590  
                                                   i2l2468 238C  
                                                   i2l2396 10B6  
                                                   i2l2636 279E  
                                                   i2l2628 273E  
                                                   i2l2644 2832  
                                                   i2l2572 0E6E  
                                                   i2l2564 0E14  
                                                   i2l2556 0DB2  
                                                   i2l2548 0D66  
                                                   i2l2670 2CA0  
                                                   i2l2662 2C5C  
                                                   i2l2486 259A  
                                                   i2l2478 24B6  
                                                   i2l2398 10C2  
                                                   i2l2646 2836  
                                                   i2l2638 27BE  
                                                   i2l2566 0E18  
                                                   i2l2558 0DCC  
                                                   i2l2680 2CF8  
                                                   i2l2672 2CA8  
                                                   i2l2664 2C8C  
                                                   i2l2488 25A8  
                                                   i2l2568 0E3A  
                                                   i2l2682 2D00  
                                                   i2l2674 2CAC  
                                                   i2l2666 2C96  
                                                   i2l2658 2BF8  
                                                   i2l2690 3172  
                                                   i2l2498 0B36  
                                                   i2l2930 00FC  
                                                   i2l2676 2CB0  
                                                   i2l2668 2C9C  
                                                   i2l2596 2612  
                                                   i2l2692 317E  
                                                   i2l2940 0120  
                                                   i2l2932 00FE  
                                                   i2l2678 2CD4  
                                                   i2l2686 2D18  
                                                   i2l2950 018C  
                                                   i2l2942 012C  
                                                   i2l2934 0100  
                                                   i2l2926 00E6  
                                                   i2l2688 2D1C  
                                                   i2l2960 01B0  
                                                   i2l2952 0190  
                                                   i2l2944 0138  
                                                   i2l2936 010E  
                                                   i2l2928 00F8  
                                                   i2l2970 0216  
                                                   i2l2962 01BE  
                                                   i2l2954 0198  
                                                   i2l2938 0114  
                                                   i2l2980 027E  
                                                   i2l2972 0226  
                                                   i2l2964 01CE  
                                                   i2l2956 019A  
                                                   i2l2948 0144  
                                                   i2l2990 02DE  
                                                   i2l2982 0282  
                                                   i2l2974 022A  
                                                   i2l2966 01FC  
                                                   i2l2958 019E  
                                                   i2l2992 0332  
                                                   i2l2984 0294  
                                                   i2l2976 022E  
                                                   i2l2968 0204  
                                                   i2l2994 033A  
                                                   i2l2986 02A6  
                                                   i2l2978 0252  
                                                   i2l2996 033E  
                                                   i2l2988 02D6  
                                                   i2l2998 034A  
                                            MoveEveryone@i 0033  
                                                ??_InitLCD 00D6  
                                     random_generator@temp 000C  
                                   __end_of_InitInterrupts 2DC8  
                                    CheckIfCaughtFrisbee@i 0008  
                                              downright@pl 0013  
                                                   ___wmul 30CA  
                                                ??___lwmod 0005  
                                         __end_of_downleft 1D9C  
                                                   clear_0 2F08  
                                                   clear_1 2F1E  
                                                   _lowIsr 0018  
                                                   _scoreA 00F1  
                                                   _scoreB 00EF  
compute_frisbee_target_and_route@current_fisbee_x_position 000E  
                                                ??_highIsr 0035  
                                                   _upleft 0E8E  
                                                   left@pl 0013  
                                                   down@pl 0013  
                                   ?_UpdateAndPrintDisplay 0001  
compute_frisbee_target_and_route@current_fisbee_y_position 0010  
                                             __pdataCOMRAM 0077  
                                            _frisbee_steps 0180  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                ??_upright 0015  
                                                LCDDat@dat 00D5  
                                                LCDCmd@cmd 00D5  
                                               __accesstop 0080  
                                  __end_of__initialization 2F24  
                                           _selectedPlayer 0055  
                                            ___rparam_used 000001  
                             __size_of_AddCustomCharacters 0082  
                                            ?_MoveEveryone 0001  
                                     _CheckIfCaughtFrisbee 2BF0  
                                          ?_InitInterrupts 0001  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 3000  
                                 ??_LCDAddSpecialCharacter 00DA  
                                            __end_of_right 2082  
                                               __end_of_up 17B8  
                                                ?i2___wmul 0001  
                                        _MoveEveryone$1800 002D  
                                        _MoveEveryone$1801 002F  
                                        _MoveEveryone$1802 0031  
                                        _MoveEveryone$1795 0023  
                                        _MoveEveryone$1796 0025  
                                        _MoveEveryone$1797 0027  
                                        _MoveEveryone$1798 0029  
                                        _MoveEveryone$1799 002B  
                                         ?_InitGameObjects 0001  
                            __size_of_SetupDebouncingTimer 0010  
                                                  ??_right 0015  
                                                  ?_LCDDat 0001  
                                                  ?_LCDCmd 0001  
                                               __pbssBANK0 00EF  
                                               __pbssBANK1 0100  
                                       __size_of_downright 02C2  
                                           ??_MoveEveryone 001F  
                                    ?_CheckIfCaughtFrisbee 0001  
              compute_frisbee_target_and_route@x_step_size 002A  
                                               _game_state 007B  
                                                  ?___wmul 00D5  
                                                  ?_lowIsr 0001  
              compute_frisbee_target_and_route@y_step_size 002C  
                                                  ?_upleft 0013  
                                               ??i2___wmul 0005  
                                                  _LCDGoto 2E4A  
                                         InitGameObjects@i 00E7  
                                         InitGameObjects@j 00E9  
                                          __size_of_LCDDat 0020  
                                          __size_of_LCDCmd 001E  
                                                ?_downleft 0013  
                                                  _InitLCD 3098  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                        ?_random_generator 0006  
                                             _highIsr$1791 0043  
                                             _highIsr$1792 0045  
                                             _highIsr$1793 0047  
                                             _highIsr$1794 0049  
                                       ??_random_generator 0008  
                                          __size_of___wmul 0028  
                                                  ___lwmod 2F9C  
                          __size_of_LCDAddSpecialCharacter 004A  
                                                  __pcinit 2EC2  
                                                  __ramtop 1000  
                                          __size_of_lowIsr 00B0  
                                                  _digital 0051  
                                                  __ptext0 3156  
                                                  __ptext1 06BE  
                                                  __ptext2 3098  
                                                  __ptext3 2D3A  
                                                  __ptext4 2854  
                                                  __ptext5 30CA  
                                                  __ptext6 2DC8  
                                                  __ptext7 304E  
                                                  __ptext8 2E4A  
                                                  __ptext9 3138  
                                                  _highIsr 0008  
                                                  _display 0100  
                                                _T0CONbits 000FD5  
                                          __size_of_upleft 031E  
                                                _T1CONbits 000FCD  
                                        __end_of_downright 2612  
                                                _T3CONbits 000FB1  
                                                  _upright 11AC  
                                           __pintcode_body 00CC  
                                     end_of_initialization 2F24  
                                           _frisbee_target 008D  
                                               ??_downleft 0015  
                                            __Lmediumconst 0000  
                                                  int_func 00CC  
                                      i2___wmul@multiplier 0001  
                                   ??_CheckIfCaughtFrisbee 0007  
                                                  right@pl 0013  
                                            _nextGameSpeed 0077  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                  ??_UpdateAndPrintDisplay 00DB  
                                                _PORTEbits 000F84  
                    compute_frisbee_target_and_route@i_840 0016  
                    compute_frisbee_target_and_route@i_841 0018  
                    compute_frisbee_target_and_route@i_843 001A  
                    compute_frisbee_target_and_route@i_844 001C  
                    compute_frisbee_target_and_route@i_845 001E  
                                      _AddCustomCharacters 2DC8  
                                     __end_of_MoveEveryone 2854  
                                                _TRISAbits 000F92  
                                                _TRISEbits 000F96  
                                   _LCDAddSpecialCharacter 304E  
                                         ??_InitInterrupts 00D5  
                                           __end_of_LCDDat 3138  
                                           __end_of_LCDCmd 3156  
                                               LCDGoto@p_1 00D6  
                                               LCDGoto@p_2 00D7  
                                     ?_AddCustomCharacters 0001  
          compute_frisbee_target_and_route@number_of_steps 0020  
                 compute_frisbee_target_and_route@target_x 0022  
                 compute_frisbee_target_and_route@target_y 0024  
                       _selected_teamA_player_with_frisbee 00A5  
                                           __end_of___wmul 30F2  
                                            __pidataCOMRAM 3182  
                 __end_of_compute_frisbee_target_and_route 0E8E  
                __size_of_compute_frisbee_target_and_route 0358  
                       ??_compute_frisbee_target_and_route 0012  
                        ?_compute_frisbee_target_and_route 000E  
                         _compute_frisbee_target_and_route 0B36  
                                           __end_of_lowIsr 00C8  
                                         i2___wmul@product 0005  
                                           __end_of_upleft 11AC  
                                      start_initialization 2EC2  
                                        __size_ofi2___wmul 0026  
                                                 ??_LCDDat 00D5  
                                                 ??_LCDCmd 00D5  
                                    ??_AddCustomCharacters 00DC  
                                               downleft@pl 0013  
                                      random_generator@res 000D  
                             __end_of_SetupDebouncingTimer 3182  
                                  LCDAddSpecialCharacter@i 00DB  
                                                 ??___wmul 00D9  
                                             _frisbeeSteps 004D  
                                           _currentSegment 0053  
                                              __pdataBANK0 0080  
                                             lowIsr@temp_a 00D4  
                                             lowIsr@temp_d 00D3  
                                                 ??_lowIsr 00CD  
                                                 ??_upleft 0015  
                                                 ?_LCDGoto 00D6  
                                              __pbssCOMRAM 004B  
                                            __pcstackBANK0 00CD  
                                                 ?_InitLCD 0001  
                                 __size_of_InitGameObjects 01D6  
                                        __size_of_downleft 02F0  
                                                _gameSpeed 0079  
                                   UpdateAndPrintDisplay@i 00E5  
                                   UpdateAndPrintDisplay@j 00E7  
                                                __pintcode 0008  
                                                 ?___lwmod 0001  
                                    __size_of_MoveEveryone 0242  
                                              __pintcodelo 0018  
                                            ?_CatchFrisbee 0007  
                                                 ?_highIsr 0001  
                                __size_of_random_generator 006A  
                                                _downright 2350  
                                             _teamA_player 00C5  
                                             _teamB_player 00BD  
                                                 ?_upright 0013  
                                           __size_of_right 02E6  
                                                _segValues 0080  
                                              __size_of_up 02FC  
                                           ___wmul@product 00D9  
                                    _selected_teamA_player 00B5  
                                                 _IPR1bits 000F9F  
                                                 _PIE1bits 000F9D  
                                    _selected_teamB_player 00AD  
                                                 i1u321_27 0058  
                                                 i1u322_27 0072  
                                             _MoveEveryone 2612  
                                                 i1u323_27 009A  
                                                 i2u200_45 2284  
                                                 i2u201_45 22FA  
                                                 i2u210_40 19C4  
                                                 i2u202_40 17D0  
                                                 i2u210_41 19C0  
                                                 i2u202_41 17CC  
                                                 i2u211_45 19E4  
                                                 i2u203_45 17E8  
                                                 i2u204_40 1846  
                                                 i2u220_40 1034  
                                                 i2u300_40 01E0  
                                                 i2u204_41 1842  
                                                 i2u220_41 1030  
                                                 i2u300_41 01DA  
                                                 i2u212_45 1A56  
                                                 i2u213_40 0EA6  
                                                 i2u301_40 01E2  
                                                 i2u213_41 0EA2  
                                                 i2u205_45 185A  
                                                 i2u221_45 104C  
                                                 i2u206_40 18C2  
                                                 i2u222_40 10B6  
                                                 i2u214_40 0EC2  
                                                 i2u230_40 12CC  
                                                 i2u310_40 0368  
                                                 i2u302_40 01FC  
                                                 i2u206_41 18BE  
                                                 i2u222_41 10B2  
                                                 i2u214_41 0EBE  
                                                 i2u230_41 12C8  
                                                 i2u310_41 0364  
                                                 i2u302_41 01F8  
                                                 i2u311_40 039A  
                                                 i2u303_40 0216  
                                                 i2u311_41 0396  
                                                 i2u303_41 0212  
                                                 i2u207_45 18DA  
                                                 i2u223_45 10D6  
                                                 i2u215_45 0EDA  
                                                 i2u231_45 12E4  
                                                 i2u240_40 1BBC  
                                                 i2u208_40 1942  
                                                 i2u216_40 0F38  
                                                 i2u232_40 1348  
                                                 i2u312_40 04D6  
                                                 i2u304_40 0226  
                                                 i2u240_41 1BB8  
                                                 i2u208_41 193E  
                                                 i2u216_41 0F34  
                                                 i2u232_41 1344  
                                                 i2u312_41 04D2  
                                                 i2u304_41 0222  
                                                 i2u224_45 1156  
                                                 i2u241_40 1C30  
                                                 i2u225_40 11C6  
                                                 i2u313_40 04E6  
                                                 i2u305_40 0294  
                                                 i2u241_41 1C2C  
                                                 i2u225_41 11C2  
                                                 i2u313_41 04E2  
                                                 i2u305_41 0290  
                                                 i2u209_45 195A  
                                                 i2u217_45 0F4C  
                                                 i2u233_45 1360  
                                                 i2u162_40 2A3A  
                                                 i2u242_40 1CA6  
                                                 i2u250_40 251C  
                                                 i2u170_40 2FE2  
                                                 i2u218_40 0FB4  
                                                 i2u234_40 13C6  
                                                 i2u226_40 11E2  
                                                 i2u314_40 0518  
                                                 i2u306_40 02A6  
                                                 i2u162_41 2A36  
                                                 i2u242_41 1CA2  
                                                 i2u250_41 2518  
                                                 i2u170_41 2FDE  
                                                 i2u218_41 0FB0  
                                                 i2u234_41 13C2  
                                                 i2u226_41 11DE  
                                                 i2u314_41 0514  
                                                 i2u306_41 02A2  
                                                 i2u171_40 2F92  
                                                 i2u315_40 057E  
                                                 i2u307_40 02D6  
                                                 i2u171_41 2F8E  
                                                 i2u315_41 057A  
                                                 i2u307_41 02D2  
                                                 i2u163_45 2A52  
                                                 i2u243_45 1CC6  
                                                 i2u251_45 253C  
                                                 i2u219_45 0FCC  
                                                 i2u235_45 13E6  
                                                 i2u227_45 11FA  
                                                 i2u164_40 2B2A  
                                                 i2u228_40 1254  
                                                 i2u260_40 0CFA  
                                                 i2u316_40 058E  
                                                 i2u164_41 2B26  
                                                 i2u228_41 1250  
                                                 i2u260_41 0CF6  
                                                 i2u316_41 058A  
                                                 i2u244_45 1D46  
                                                 i2u252_45 25BC  
                                                 i2u180_45 1662  
                                                 i2u236_45 1466  
                                                 i2u308_45 02E6  
                                                 i2u165_40 2B56  
                                                 i2u237_40 1AC4  
                                                 i2u245_40 236A  
                                                 i2u181_40 16CC  
                                                 i2u173_40 14D8  
                                                 i2u261_40 0D48  
                                                 i2u253_40 0B7C  
                                                 i2u309_40 0358  
                                                 i2u165_41 2B52  
                                                 i2u237_41 1AC0  
                                                 i2u245_41 2366  
                                                 i2u181_41 16C8  
                                                 i2u173_41 14D4  
                                                 i2u261_41 0D44  
                                                 i2u253_41 0B78  
                                                 i2u309_41 0354  
                                                 i2u229_45 1268  
                                                 i2u270_40 2C8C  
                                                 i2u238_40 1AE2  
                                                 i2u246_40 2388  
                                                 i2u190_40 1F1C  
                                                 i2u262_40 0D66  
                                                 i2u254_40 0BAE  
                                                 i2u270_41 2C88  
                                                 i2u238_41 1ADE  
                                                 i2u246_41 2384  
                                                 i2u190_41 1F18  
                                                 i2u262_41 0D62  
                                                 i2u254_41 0BAA  
                                                 i2u166_45 2B5E  
                                                 i2u182_45 16EC  
                                                 i2u174_45 14F0  
                                                 i2u271_40 2D38  
                                                 i2u167_40 2BDA  
                                                 i2u239_40 1B4C  
                                                 i2u247_40 23E6  
                                                 i2u175_40 154E  
                                                 i2u263_40 0DC8  
                                                 i2u255_40 0BE0  
                                                 i2u271_41 2D34  
                                                 i2u167_41 2BD6  
                                                 i2u239_41 1B48  
                                                 i2u247_41 23E2  
                                                 i2u175_41 154A  
                                                 i2u263_41 0DC4  
                                                 i2u255_41 0BDC  
                                                 i2u191_45 1F34  
                                                 i2u183_45 1762  
                                                 i2u248_40 244A  
                                                 i2u168_40 2FAE  
                                                 i2u192_40 1F9A  
                                                 i2u184_40 1DB6  
                                                 i2u264_40 0E2E  
                                                 i2u256_40 0BF6  
                                                 i2u248_41 2446  
                                                 i2u168_41 2FAA  
                                                 i2u192_41 1F96  
                                                 i2u184_41 1DB2  
                                                 i2u264_41 0E2A  
                                                 i2u256_41 0BF2  
                                                 i2u176_45 1562  
                                                 i2u249_40 24B2  
                                                 i2u169_40 2FCC  
                                                 i2u177_40 15CA  
                                                 i2u265_40 0E84  
                                                 i2u257_40 0C10  
                                                 i2u249_41 24AE  
                                                 i2u169_41 2FC8  
                                                 i2u177_41 15C6  
                                                 i2u265_41 0E80  
                                                 i2u257_41 0C0C  
                                                 _PIR1bits 000F9E  
                                                 i2u193_45 1FBA  
                                                 i2u185_45 1DCE  
                                                 i2u186_40 1E28  
                                                 i2u266_40 2632  
                                                 i2u258_40 0C42  
                                                 i2u186_41 1E24  
                                                 i2u266_41 262E  
                                                 i2u258_41 0C3E  
                                                 i2u194_45 202C  
                                                 i2u178_45 15E2  
                                                 i2u195_40 20A0  
                                                 i2u179_40 164A  
                                                 i2u267_40 2852  
                                                 i2u259_40 0C9C  
                                                 i2u195_41 209C  
                                                 i2u179_41 1646  
                                                 i2u267_41 284E  
                                                 i2u259_41 0C98  
                                                 i2u187_45 1E3C  
                                                 i2u268_40 2C2A  
                                                 i2u196_40 210A  
                                                 i2u188_40 1EA0  
                                                 i2u268_41 2C26  
                                                 i2u196_41 2106  
                                                 i2u188_41 1E9C  
                                                 i2u269_40 2C5C  
                                                 i2u197_40 217A  
                                                 i2u269_41 2C58  
                                                 i2u197_41 2176  
                                                 i2u189_45 1EB8  
                                                 i2u198_40 21EE  
                                                 i2u294_40 00F8  
                                                 i2u198_41 21EA  
                                                 i2u294_41 00F4  
                                                 i2u199_40 2264  
                                                 i2u295_40 010E  
                                                 i2u199_41 2260  
                                                 i2u295_41 010A  
                                                 i2u296_40 018C  
                                                 i2u296_41 0188  
                                                 i2u297_40 01B0  
                                                 i2u297_41 01AC  
                                                 i2u298_40 01BE  
                                                 i2u298_41 01BA  
                                                 i2u299_40 01CE  
                                                 i2u299_41 01CA  
                                                 _RCONbits 000FD0  
                                          MoveEveryone@val 0021  
                                                _portbVals 0057  
                                           ??_CatchFrisbee 0009  
                                               _ADCON0bits 000FC2  
                           __size_of_UpdateAndPrintDisplay 0478  
                                               _ADCON2bits 000FC0  
                                        ___wmul@multiplier 00D5  
                            __end_of_UpdateAndPrintDisplay 0B36  
                                                 i2___wmul 30F2  
                                         __size_of_LCDGoto 0078  
                                  ?_LCDAddSpecialCharacter 00D8  
                                               ?_downright 0013  
                                           CatchFrisbee@pl 0007  
                                     _SetupDebouncingTimer 3172  
                                              _INTCON2bits 000FF1  
                                              _INTCON3bits 000FF0  
                                                copy_data0 2ED6  
                                                copy_data1 2EF6  
                                   random_generator@modulo 0006  
                                         __size_of_InitLCD 0032  
                                                 __Hrparam 0000  
                            __size_of_CheckIfCaughtFrisbee 014A  
                                                 __Lrparam 0000  
                                              _frisbeeChar 0095  
                                        ??_InitGameObjects 00DB  
                                    i2___wmul@multiplicand 0003  
                                         __size_of___lwmod 0064  
                                         __size_of_highIsr 06B6  
                           __end_of_LCDAddSpecialCharacter 3098  
                                         _acceptInterrupts 0058  
                                                 __ptext10 3118  
                                                 __ptext20 2F32  
                                                 __ptext21 2F9C  
                                                 __ptext13 0B36  
                                                 __ptext22 17B8  
                                                 __ptext14 3172  
                                                 __ptext23 2350  
                                                 __ptext15 2612  
                                                 __ptext24 1AAC  
                                                 __ptext16 11AC  
                                    ?_SetupDebouncingTimer 0001  
                                                 __ptext25 2082  
                                                 __ptext17 0E8E  
                                                 __ptext26 2A2A  
                                                 __ptext18 14BC  
                                                 __ptext27 2BF0  
                                                 __ptext19 1D9C  
                                                 __ptext28 30F2  
                                         __size_of_upright 0310  
                               UpdateAndPrintDisplay@i_988 00ED  
                               UpdateAndPrintDisplay@i_989 00E9  
                               UpdateAndPrintDisplay@j_990 00EB  
                                                 _downleft 1AAC  
                                            __size_of_main 001C  
                                            __size_of_left 02F4  
                                            __size_of_down 02CE  
                       _selected_teamB_player_with_frisbee 009D  
                                                 int$flags 007C  
                                            CatchFrisbee@i 0011  
                                               _INTCONbits 000FF2  
                                         _random_generator 2F32  
                                        random_generator@i 000A  
                                              ??_downright 0015  
                              __end_of_AddCustomCharacters 2E4A  
                                                 intlevel1 0000  
                                                 intlevel2 0000  
                                         ___lwmod@dividend 0001  
                                     __end_of_CatchFrisbee 2BF0  
                                                upright@pl 0013  
                                          _curFrisbeeSteps 004B  
                                     InitGameObjects@i_999 00EB  
                                  __size_of_InitInterrupts 008E  
                                                 upleft@pl 0013  
                                          ___lwmod@divisor 0003  
                                          ___lwmod@counter 0005  
                                   ??_SetupDebouncingTimer 0001  
                        compute_frisbee_target_and_route@i 0014  
                        compute_frisbee_target_and_route@x 0026  
                        compute_frisbee_target_and_route@y 0028  
