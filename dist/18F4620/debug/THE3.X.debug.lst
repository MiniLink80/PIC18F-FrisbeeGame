

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri May 26 23:59:25 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4620 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  0042D4                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _nextGameSpeed
    95  0042D4  0010               	dw	16
    96                           
    97                           ;initializer for _gameSpeed
    98  0042D6  0010               	dw	16
    99                           
   100                           ;initializer for _game_state
   101  0042D8  01                 	db	1
   102                           
   103                           ;initializer for _frisbee_target
   104  0042D9  0E                 	db	14
   105  0042DA  11                 	db	17
   106  0042DB  11                 	db	17
   107  0042DC  11                 	db	17
   108  0042DD  0E                 	db	14
   109  0042DE  00                 	db	0
   110  0042DF  00                 	db	0
   111  0042E0  00                 	db	0
   112                           
   113                           ;initializer for _frisbeeChar
   114  0042E1  0E                 	db	14
   115  0042E2  1F                 	db	31
   116  0042E3  1F                 	db	31
   117  0042E4  1F                 	db	31
   118  0042E5  0E                 	db	14
   119  0042E6  00                 	db	0
   120  0042E7  00                 	db	0
   121  0042E8  00                 	db	0
   122                           
   123                           ;initializer for _selected_teamB_player_with_frisbee
   124  0042E9  1F                 	db	31
   125  0042EA  15                 	db	21
   126  0042EB  0A                 	db	10
   127  0042EC  04                 	db	4
   128  0042ED  0E                 	db	14
   129  0042EE  1F                 	db	31
   130  0042EF  0A                 	db	10
   131  0042F0  1F                 	db	31
   132                           
   133                           	psect	idataBANK0
   134  004216                     __pidataBANK0:
   135                           	callstack 0
   136                           
   137                           ;initializer for _lcd_y
   138  004216  01                 	db	1
   139                           
   140                           ;initializer for _lcd_x
   141  004217  01                 	db	1
   142                           
   143                           ;initializer for _selected_teamA_player_with_frisbee
   144  004218  1F                 	db	31
   145  004219  15                 	db	21
   146  00421A  0A                 	db	10
   147  00421B  04                 	db	4
   148  00421C  04                 	db	4
   149  00421D  04                 	db	4
   150  00421E  0A                 	db	10
   151  00421F  1F                 	db	31
   152                           
   153                           ;initializer for _selected_teamB_player
   154  004220  11                 	db	17
   155  004221  15                 	db	21
   156  004222  0A                 	db	10
   157  004223  04                 	db	4
   158  004224  0E                 	db	14
   159  004225  1F                 	db	31
   160  004226  0A                 	db	10
   161  004227  1F                 	db	31
   162                           
   163                           ;initializer for _selected_teamA_player
   164  004228  11                 	db	17
   165  004229  15                 	db	21
   166  00422A  0A                 	db	10
   167  00422B  04                 	db	4
   168  00422C  04                 	db	4
   169  00422D  04                 	db	4
   170  00422E  0A                 	db	10
   171  00422F  1F                 	db	31
   172                           
   173                           ;initializer for _teamB_player
   174  004230  11                 	db	17
   175  004231  15                 	db	21
   176  004232  0A                 	db	10
   177  004233  04                 	db	4
   178  004234  0E                 	db	14
   179  004235  1F                 	db	31
   180  004236  0A                 	db	10
   181  004237  0A                 	db	10
   182                           
   183                           ;initializer for _teamA_player
   184  004238  11                 	db	17
   185  004239  15                 	db	21
   186  00423A  0A                 	db	10
   187  00423B  04                 	db	4
   188  00423C  04                 	db	4
   189  00423D  04                 	db	4
   190  00423E  0A                 	db	10
   191  00423F  0A                 	db	10
   192                           
   193                           	psect	idataBANK1
   194  00431E                     __pidataBANK1:
   195                           	callstack 0
   196                           
   197                           ;initializer for _segValues
   198  00431E  3F                 	db	63
   199  00431F  06                 	db	6
   200  004320  5B                 	db	91
   201  004321  4F                 	db	79
   202  004322  66                 	db	102
   203  004323  6D                 	db	109
   204  004324  7D                 	db	125
   205  004325  07                 	db	7
   206  004326  7F                 	db	127
   207  004327  6F                 	db	111
   208  004328  40                 	db	64
   209  0000                     _ADCON2	set	4032
   210  0000                     _ADCON0	set	4034
   211  0000                     _T2CON	set	4042
   212  0000                     _RCONbits	set	4048
   213  0000                     _T1CON	set	4045
   214  0000                     _IPR1bits	set	3999
   215  0000                     _TMR0H	set	4055
   216  0000                     _TMR0L	set	4054
   217  0000                     _T0CON	set	4053
   218  0000                     _TRISA	set	3986
   219  0000                     _TRISB	set	3987
   220  0000                     _T3CON	set	4017
   221  0000                     _INTCON2bits	set	4081
   222  0000                     _ADCON1	set	4033
   223  0000                     _LATD	set	3980
   224  0000                     _LATA	set	3977
   225  0000                     _PORTA	set	3968
   226  0000                     _PIE1bits	set	3997
   227  0000                     _INTCON3bits	set	4080
   228  0000                     _ADRESL	set	4035
   229  0000                     _ADRESH	set	4036
   230  0000                     _ADCON0bits	set	4034
   231  0000                     _TMR1H	set	4047
   232  0000                     _TMR1L	set	4046
   233  0000                     _T1CONbits	set	4045
   234  0000                     _PIR1bits	set	3998
   235  0000                     _T0CONbits	set	4053
   236  0000                     _INTCONbits	set	4082
   237  0000                     _PORTB	set	3969
   238  0000                     _TRISD	set	3989
   239  0000                     _TRISEbits	set	3990
   240  0000                     _PORTD	set	3971
   241  0000                     _PORTEbits	set	3972
   242  0000                     _TMR3H	set	4019
   243  0000                     _TMR3L	set	4018
   244  0000                     _T3CONbits	set	4017
   245                           
   246                           	psect	smallconst
   247  001000                     __psmallconst:
   248                           	callstack 0
   249  001000  00                 	db	0
   250  001001                     STR_1:
   251  001001  25                 	db	37
   252  001002  64                 	db	100	;'d'
   253  001003  00                 	db	0
   254  001004  00                 	db	0	; dummy byte at the end
   255  0000                     
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259  003F40                     __pcinit:
   260                           	callstack 0
   261  003F40                     start_initialization:
   262                           	callstack 0
   263  003F40                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; Initialize objects allocated to BANK1 (11 bytes)
   267                           ; load TBLPTR registers with __pidataBANK1
   268  003F40  0E1E               	movlw	low __pidataBANK1
   269  003F42  6EF6               	movwf	tblptrl,c
   270  003F44  0E43               	movlw	high __pidataBANK1
   271  003F46  6EF7               	movwf	tblptrh,c
   272  003F48  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   273  003F4A  6EF8               	movwf	tblptru,c
   274  003F4C  EE01  F0BC         	lfsr	0,__pdataBANK1
   275  003F50  EE10 F00B          	lfsr	1,11
   276  003F54                     copy_data0:
   277  003F54  0009               	tblrd		*+
   278  003F56  CFF5 FFEE          	movff	tablat,postinc0
   279  003F5A  50E5               	movf	postdec1,w,c
   280  003F5C  50E1               	movf	fsr1l,w,c
   281  003F5E  E1FA               	bnz	copy_data0
   282                           
   283                           ; Initialize objects allocated to BANK0 (42 bytes)
   284                           ; load TBLPTR registers with __pidataBANK0
   285  003F60  0E16               	movlw	low __pidataBANK0
   286  003F62  6EF6               	movwf	tblptrl,c
   287  003F64  0E42               	movlw	high __pidataBANK0
   288  003F66  6EF7               	movwf	tblptrh,c
   289  003F68  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   290  003F6A  6EF8               	movwf	tblptru,c
   291  003F6C  EE00  F0AE         	lfsr	0,__pdataBANK0
   292  003F70  EE10 F02A          	lfsr	1,42
   293  003F74                     copy_data1:
   294  003F74  0009               	tblrd		*+
   295  003F76  CFF5 FFEE          	movff	tablat,postinc0
   296  003F7A  50E5               	movf	postdec1,w,c
   297  003F7C  50E1               	movf	fsr1l,w,c
   298  003F7E  E1FA               	bnz	copy_data1
   299                           
   300                           ; Initialize objects allocated to COMRAM (29 bytes)
   301                           ; load TBLPTR registers with __pidataCOMRAM
   302  003F80  0ED4               	movlw	low __pidataCOMRAM
   303  003F82  6EF6               	movwf	tblptrl,c
   304  003F84  0E42               	movlw	high __pidataCOMRAM
   305  003F86  6EF7               	movwf	tblptrh,c
   306  003F88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   307  003F8A  6EF8               	movwf	tblptru,c
   308  003F8C  EE00  F04B         	lfsr	0,__pdataCOMRAM
   309  003F90  EE10 F01D          	lfsr	1,29
   310  003F94                     copy_data2:
   311  003F94  0009               	tblrd		*+
   312  003F96  CFF5 FFEE          	movff	tablat,postinc0
   313  003F9A  50E5               	movf	postdec1,w,c
   314  003F9C  50E1               	movf	fsr1l,w,c
   315  003F9E  E1FA               	bnz	copy_data2
   316                           
   317                           ; Clear objects allocated to BANK1 (188 bytes)
   318  003FA0  EE01  F000         	lfsr	0,__pbssBANK1
   319  003FA4  0EBC               	movlw	188
   320  003FA6                     clear_0:
   321  003FA6  6AEE               	clrf	postinc0,c
   322  003FA8  06E8               	decf	wreg,f,c
   323  003FAA  E1FD               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to BANK0 (46 bytes)
   326  003FAC  EE00  F080         	lfsr	0,__pbssBANK0
   327  003FB0  0E2E               	movlw	46
   328  003FB2                     clear_1:
   329  003FB2  6AEE               	clrf	postinc0,c
   330  003FB4  06E8               	decf	wreg,f,c
   331  003FB6  E1FD               	bnz	clear_1
   332                           
   333                           ; Clear objects allocated to COMRAM (20 bytes)
   334  003FB8  EE00  F068         	lfsr	0,__pbssCOMRAM
   335  003FBC  0E14               	movlw	20
   336  003FBE                     clear_2:
   337  003FBE  6AEE               	clrf	postinc0,c
   338  003FC0  06E8               	decf	wreg,f,c
   339  003FC2  E1FD               	bnz	clear_2
   340  003FC4                     end_of_initialization:
   341                           	callstack 0
   342  003FC4                     __end_of__initialization:
   343                           	callstack 0
   344  003FC4  907C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   345  003FC6  927C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   346  003FC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   347  003FCA  6EF8               	movwf	tblptru,c
   348  003FCC  0100               	movlb	0
   349  003FCE  EF79  F021         	goto	_main	;jump to C main() function
   350                           
   351                           	psect	bssCOMRAM
   352  000068                     __pbssCOMRAM:
   353                           	callstack 0
   354  000068                     _digital:
   355                           	callstack 0
   356  000068                     	ds	2
   357  00006A                     _curFrisbeeSteps:
   358                           	callstack 0
   359  00006A                     	ds	2
   360  00006C                     _frisbeeSteps:
   361                           	callstack 0
   362  00006C                     	ds	2
   363  00006E                     _pulseCounter:
   364                           	callstack 0
   365  00006E                     	ds	2
   366  000070                     _currentSegment:
   367                           	callstack 0
   368  000070                     	ds	2
   369  000072                     _selectedPlayer:
   370                           	callstack 0
   371  000072                     	ds	2
   372  000074                     _c:
   373                           	callstack 0
   374  000074                     	ds	2
   375  000076                     _b:
   376                           	callstack 0
   377  000076                     	ds	2
   378  000078                     _a:
   379                           	callstack 0
   380  000078                     	ds	2
   381  00007A                     _portbVals:
   382                           	callstack 0
   383  00007A                     	ds	1
   384  00007B                     _acceptInterrupts:
   385                           	callstack 0
   386  00007B                     	ds	1
   387                           
   388                           	psect	dataCOMRAM
   389  00004B                     __pdataCOMRAM:
   390                           	callstack 0
   391  00004B                     _nextGameSpeed:
   392                           	callstack 0
   393  00004B                     	ds	2
   394  00004D                     _gameSpeed:
   395                           	callstack 0
   396  00004D                     	ds	2
   397  00004F                     _game_state:
   398                           	callstack 0
   399  00004F                     	ds	1
   400  000050                     _frisbee_target:
   401                           	callstack 0
   402  000050                     	ds	8
   403  000058                     _frisbeeChar:
   404                           	callstack 0
   405  000058                     	ds	8
   406  000060                     _selected_teamB_player_with_frisbee:
   407                           	callstack 0
   408  000060                     	ds	8
   409                           
   410                           	psect	bssBANK0
   411  000080                     __pbssBANK0:
   412                           	callstack 0
   413  000080                     _scoreB:
   414                           	callstack 0
   415  000080                     	ds	2
   416  000082                     _scoreA:
   417                           	callstack 0
   418  000082                     	ds	2
   419  000084                     _objs:
   420                           	callstack 0
   421  000084                     	ds	42
   422                           
   423                           	psect	dataBANK0
   424  0000AE                     __pdataBANK0:
   425                           	callstack 0
   426  0000AE                     _lcd_y:
   427                           	callstack 0
   428  0000AE                     	ds	1
   429  0000AF                     _lcd_x:
   430                           	callstack 0
   431  0000AF                     	ds	1
   432  0000B0                     _selected_teamA_player_with_frisbee:
   433                           	callstack 0
   434  0000B0                     	ds	8
   435  0000B8                     _selected_teamB_player:
   436                           	callstack 0
   437  0000B8                     	ds	8
   438  0000C0                     _selected_teamA_player:
   439                           	callstack 0
   440  0000C0                     	ds	8
   441  0000C8                     _teamB_player:
   442                           	callstack 0
   443  0000C8                     	ds	8
   444  0000D0                     _teamA_player:
   445                           	callstack 0
   446  0000D0                     	ds	8
   447                           
   448                           	psect	bssBANK1
   449  000100                     __pbssBANK1:
   450                           	callstack 0
   451  000100                     _display:
   452                           	callstack 0
   453  000100                     	ds	128
   454  000180                     _frisbee_steps:
   455                           	callstack 0
   456  000180                     	ds	60
   457                           
   458                           	psect	dataBANK1
   459  0001BC                     __pdataBANK1:
   460                           	callstack 0
   461  0001BC                     _segValues:
   462                           	callstack 0
   463  0001BC                     	ds	11
   464                           
   465                           	psect	cstackBANK1
   466  0001C7                     __pcstackBANK1:
   467                           	callstack 0
   468  0001C7                     UpdateAndPrintDisplay2D@i:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x0
   472  0001C7                     	ds	2
   473  0001C9                     UpdateAndPrintDisplay2D@j:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x2
   477  0001C9                     	ds	2
   478  0001CB                     UpdateAndPrintDisplay2D@i_949:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x4
   482  0001CB                     	ds	2
   483  0001CD                     UpdateAndPrintDisplay2D@j_950:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x6
   487  0001CD                     	ds	2
   488  0001CF                     UpdateAndPrintDisplay2D@i_948:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x8
   492  0001CF                     	ds	2
   493                           
   494                           	psect	cstackBANK0
   495  0000D8                     __pcstackBANK0:
   496                           	callstack 0
   497  0000D8                     ??_lowIsr:
   498                           
   499                           ; 1 bytes @ 0x0
   500  0000D8                     	ds	6
   501  0000DE                     lowIsr@temp_d:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x6
   505  0000DE                     	ds	1
   506  0000DF                     lowIsr@temp_a:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x7
   510  0000DF                     	ds	1
   511  0000E0                     ?___wmul:
   512                           	callstack 0
   513  0000E0                     LCDCmd@cmd:
   514                           	callstack 0
   515  0000E0                     LCDDat@dat:
   516                           	callstack 0
   517  0000E0                     ___wmul@multiplier:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x8
   521  0000E0                     	ds	1
   522  0000E1                     LCDGoto@p_1:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x9
   526  0000E1                     	ds	1
   527  0000E2                     LCDGoto@p_2:
   528                           	callstack 0
   529  0000E2                     ___wmul@multiplicand:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0xA
   533  0000E2                     	ds	1
   534  0000E3                     LCDAddSpecialCharacter@data:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xB
   538  0000E3                     	ds	1
   539  0000E4                     ___wmul@product:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xC
   543  0000E4                     	ds	1
   544  0000E5                     LCDAddSpecialCharacter@character_index:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0xD
   548  0000E5                     	ds	1
   549  0000E6                     ??_InitGameObjects:
   550  0000E6                     ??_UpdateAndPrintDisplay2D:
   551  0000E6                     LCDAddSpecialCharacter@i:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0xE
   555  0000E6                     	ds	1
   556  0000E7                     
   557                           ; 1 bytes @ 0xF
   558  0000E7                     	ds	11
   559  0000F2                     InitGameObjects@i:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x1A
   563  0000F2                     	ds	2
   564  0000F4                     InitGameObjects@j:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x1C
   568  0000F4                     	ds	2
   569  0000F6                     InitGameObjects@i_954:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1E
   573  0000F6                     	ds	2
   574  0000F8                     
   575                           ; 1 bytes @ 0x20
   576                           
   577                           	psect	cstackCOMRAM
   578  000001                     __pcstackCOMRAM:
   579                           	callstack 0
   580  000001                     ?___lwmod:
   581                           	callstack 0
   582  000001                     ?i2___wmul:
   583                           	callstack 0
   584  000001                     ___lwmod@dividend:
   585                           	callstack 0
   586  000001                     i2___wmul@multiplier:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x0
   590  000001                     	ds	2
   591  000003                     ___lwmod@divisor:
   592                           	callstack 0
   593  000003                     i2___wmul@multiplicand:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x2
   597  000003                     	ds	2
   598  000005                     ___lwmod@counter:
   599                           	callstack 0
   600  000005                     i2___wmul@product:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x4
   604  000005                     	ds	1
   605  000006                     ?_random_generator:
   606                           	callstack 0
   607  000006                     random_generator@modulo:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x5
   611  000006                     	ds	1
   612  000007                     CatchFrisbee@pl:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x6
   616  000007                     	ds	1
   617  000008                     ??_random_generator:
   618  000008                     CheckIfCaughtFrisbee@i:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x7
   622  000008                     	ds	1
   623  000009                     ??_CatchFrisbee:
   624                           
   625                           ; 1 bytes @ 0x8
   626  000009                     	ds	1
   627  00000A                     random_generator@i:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x9
   631  00000A                     	ds	2
   632  00000C                     random_generator@temp:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0xB
   636  00000C                     	ds	1
   637  00000D                     random_generator@res:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0xC
   641  00000D                     	ds	1
   642  00000E                     ?_compute_frisbee_target_and_route:
   643                           	callstack 0
   644  00000E                     compute_frisbee_target_and_route@current_fisbee_x_position:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0xD
   648  00000E                     	ds	2
   649  000010                     compute_frisbee_target_and_route@current_fisbee_y_position:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xF
   653  000010                     	ds	1
   654  000011                     CatchFrisbee@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x10
   658  000011                     	ds	1
   659  000012                     ??_compute_frisbee_target_and_route:
   660                           
   661                           ; 1 bytes @ 0x11
   662  000012                     	ds	1
   663  000013                     left@pl:
   664                           	callstack 0
   665  000013                     right@pl:
   666                           	callstack 0
   667  000013                     up@pl:
   668                           	callstack 0
   669  000013                     down@pl:
   670                           	callstack 0
   671  000013                     upleft@pl:
   672                           	callstack 0
   673  000013                     upright@pl:
   674                           	callstack 0
   675  000013                     downleft@pl:
   676                           	callstack 0
   677  000013                     downright@pl:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x12
   681  000013                     	ds	1
   682  000014                     compute_frisbee_target_and_route@i:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x13
   686  000014                     	ds	1
   687  000015                     ??_up:
   688  000015                     ??_right:
   689  000015                     ??_down:
   690  000015                     ??_left:
   691  000015                     ??_upleft:
   692  000015                     ??_upright:
   693  000015                     ??_downleft:
   694  000015                     ??_downright:
   695                           
   696                           ; 1 bytes @ 0x14
   697  000015                     	ds	1
   698  000016                     compute_frisbee_target_and_route@i_782:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x15
   702  000016                     	ds	2
   703  000018                     compute_frisbee_target_and_route@i_783:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x17
   707  000018                     	ds	2
   708  00001A                     compute_frisbee_target_and_route@i_785:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x19
   712  00001A                     	ds	2
   713  00001C                     compute_frisbee_target_and_route@i_786:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x1B
   717  00001C                     	ds	2
   718  00001E                     compute_frisbee_target_and_route@i_787:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x1D
   722  00001E                     	ds	1
   723  00001F                     ??_MoveEveryone:
   724                           
   725                           ; 1 bytes @ 0x1E
   726  00001F                     	ds	1
   727  000020                     compute_frisbee_target_and_route@number_of_steps:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x1F
   731  000020                     	ds	1
   732  000021                     MoveEveryone@val:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x20
   736  000021                     	ds	1
   737  000022                     compute_frisbee_target_and_route@target_x:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x21
   741  000022                     	ds	1
   742  000023                     _MoveEveryone$1802:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x22
   746  000023                     	ds	1
   747  000024                     compute_frisbee_target_and_route@target_y:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x23
   751  000024                     	ds	1
   752  000025                     _MoveEveryone$1803:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x24
   756  000025                     	ds	1
   757  000026                     compute_frisbee_target_and_route@x:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x25
   761  000026                     	ds	1
   762  000027                     _MoveEveryone$1804:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x26
   766  000027                     	ds	1
   767  000028                     compute_frisbee_target_and_route@y:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x27
   771  000028                     	ds	1
   772  000029                     _MoveEveryone$1805:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x28
   776  000029                     	ds	1
   777  00002A                     compute_frisbee_target_and_route@x_step_size:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x29
   781  00002A                     	ds	1
   782  00002B                     _MoveEveryone$1806:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x2A
   786  00002B                     	ds	1
   787  00002C                     compute_frisbee_target_and_route@y_step_size:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x2B
   791  00002C                     	ds	1
   792  00002D                     _MoveEveryone$1807:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x2C
   796  00002D                     	ds	2
   797  00002F                     _MoveEveryone$1808:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x2E
   801  00002F                     	ds	2
   802  000031                     _MoveEveryone$1809:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x30
   806  000031                     	ds	2
   807  000033                     MoveEveryone@i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x32
   811  000033                     	ds	2
   812  000035                     ??_highIsr:
   813                           
   814                           ; 1 bytes @ 0x34
   815  000035                     	ds	14
   816  000043                     _highIsr$1798:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x42
   820  000043                     	ds	2
   821  000045                     _highIsr$1799:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x44
   825  000045                     	ds	2
   826  000047                     _highIsr$1800:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x46
   830  000047                     	ds	2
   831  000049                     _highIsr$1801:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x48
   835  000049                     	ds	2
   836                           
   837 ;;
   838 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   839 ;;
   840 ;; *************** function _main *****************
   841 ;; Defined at:
   842 ;;		line 243 in file "main.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels required when called:   10
   862 ;; This function calls:
   863 ;;		_AddCustomCharacters
   864 ;;		_InitGameObjects
   865 ;;		_InitInterrupts
   866 ;;		_InitLCD
   867 ;;		_UpdateAndPrintDisplay2D
   868 ;; This function is called by:
   869 ;;		Startup code after reset
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text0
   874  0042F2                     __ptext0:
   875                           	callstack 0
   876  0042F2                     _main:
   877                           	callstack 21
   878  0042F2                     
   879                           ;main.c: 245:     InitInterrupts();
   880  0042F2  EC4E  F01F         	call	_InitInterrupts	;wreg free
   881  0042F6                     
   882                           ;main.c: 246:     InitLCD();
   883  0042F6  ECF2  F020         	call	_InitLCD	;wreg free
   884  0042FA                     
   885                           ;main.c: 247:     InitGameObjects();
   886  0042FA  ECBD  F01C         	call	_InitGameObjects	;wreg free
   887  0042FE                     
   888                           ;main.c: 249:     AddCustomCharacters();
   889  0042FE  ECE9  F01F         	call	_AddCustomCharacters	;wreg free
   890  004302                     l4018:
   891                           
   892                           ;main.c: 254:         UpdateAndPrintDisplay2D();
   893  004302  EC11  F00B         	call	_UpdateAndPrintDisplay2D	;wreg free
   894  004306  EF81  F021         	goto	l4018
   895  00430A  EF63  F000         	goto	start
   896  00430E                     __end_of_main:
   897                           	callstack 0
   898                           
   899 ;; *************** function _UpdateAndPrintDisplay2D *****************
   900 ;; Defined at:
   901 ;;		line 382 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  j               2    6[BANK1 ] int 
   906 ;;  j               2    2[BANK1 ] int 
   907 ;;  i               2    4[BANK1 ] int 
   908 ;;  i               2    8[BANK1 ] int 
   909 ;;  i               2    0[BANK1 ] int 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Totals:         0      10      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;Total ram usage:       20 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    8
   926 ;; This function calls:
   927 ;;		_LCDDat
   928 ;;		_LCDGoto
   929 ;;		___wmul
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text1
   936  001622                     __ptext1:
   937                           	callstack 0
   938  001622                     _UpdateAndPrintDisplay2D:
   939                           	callstack 22
   940  001622                     
   941                           ;main.c: 383:     for (int i = 0; i < 4; i++) {
   942  001622  0E00               	movlw	0
   943  001624  0101               	movlb	1	; () banked
   944  001626  6FC8               	movwf	(UpdateAndPrintDisplay2D@i+1)& (0+255),b
   945  001628  0E00               	movlw	0
   946  00162A  6FC7               	movwf	UpdateAndPrintDisplay2D@i& (0+255),b
   947  00162C                     l3908:
   948                           
   949                           ; BSR set to: 1
   950                           ;main.c: 384:         for (int j = 0; j < 16; j++) {
   951  00162C  0E00               	movlw	0
   952  00162E  6FCA               	movwf	(UpdateAndPrintDisplay2D@j+1)& (0+255),b
   953  001630  0E00               	movlw	0
   954  001632  6FC9               	movwf	UpdateAndPrintDisplay2D@j& (0+255),b
   955  001634                     l3914:
   956                           
   957                           ; BSR set to: 1
   958                           ;main.c: 385:             display[i][j] = ((void*)0);
   959  001634  C1C7  F0E6         	movff	UpdateAndPrintDisplay2D@i,??_UpdateAndPrintDisplay2D
   960  001638  C1C8  F0E7         	movff	UpdateAndPrintDisplay2D@i+1,??_UpdateAndPrintDisplay2D+1
   961  00163C  0E05               	movlw	5
   962  00163E                     u3805:
   963  00163E  90D8               	bcf	status,0,c
   964  001640  0100               	movlb	0	; () banked
   965  001642  37E6               	rlcf	??_UpdateAndPrintDisplay2D& (0+255),f,b
   966  001644  37E7               	rlcf	(??_UpdateAndPrintDisplay2D+1)& (0+255),f,b
   967  001646  2EE8               	decfsz	wreg,f,c
   968  001648  EF1F  F00B         	goto	u3805
   969  00164C  0E00               	movlw	low _display
   970  00164E  6FE8               	movwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),b
   971  001650  0E01               	movlw	high _display
   972  001652  6FE9               	movwf	(??_UpdateAndPrintDisplay2D+3)& (0+255),b
   973  001654  51E6               	movf	??_UpdateAndPrintDisplay2D& (0+255),w,b
   974  001656  27E8               	addwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),f,b
   975  001658  51E7               	movf	(??_UpdateAndPrintDisplay2D+1)& (0+255),w,b
   976  00165A  23E9               	addwfc	(??_UpdateAndPrintDisplay2D+3)& (0+255),f,b
   977  00165C  90D8               	bcf	status,0,c
   978  00165E  0101               	movlb	1	; () banked
   979  001660  35C9               	rlcf	UpdateAndPrintDisplay2D@j& (0+255),w,b
   980  001662  6ED9               	movwf	fsr2l,c
   981  001664  35CA               	rlcf	(UpdateAndPrintDisplay2D@j+1)& (0+255),w,b
   982  001666  6EDA               	movwf	fsr2h,c
   983  001668  0100               	movlb	0	; () banked
   984  00166A  51E8               	movf	(??_UpdateAndPrintDisplay2D+2)& (0+255),w,b
   985  00166C  26D9               	addwf	fsr2l,f,c
   986  00166E  51E9               	movf	(??_UpdateAndPrintDisplay2D+3)& (0+255),w,b
   987  001670  22DA               	addwfc	fsr2h,f,c
   988  001672  0E00               	movlw	0
   989  001674  6EDE               	movwf	postinc2,c
   990  001676  0E00               	movlw	0
   991  001678  6EDD               	movwf	postdec2,c
   992  00167A                     
   993                           ; BSR set to: 0
   994                           ;main.c: 386:         }
   995  00167A  0101               	movlb	1	; () banked
   996  00167C  4BC9               	infsnz	UpdateAndPrintDisplay2D@j& (0+255),f,b
   997  00167E  2BCA               	incf	(UpdateAndPrintDisplay2D@j+1)& (0+255),f,b
   998  001680                     
   999                           ; BSR set to: 1
  1000  001680  BFCA               	btfsc	(UpdateAndPrintDisplay2D@j+1)& (0+255),7,b
  1001  001682  EF4C  F00B         	goto	u3811
  1002  001686  51CA               	movf	(UpdateAndPrintDisplay2D@j+1)& (0+255),w,b
  1003  001688  E109               	bnz	u3810
  1004  00168A  0E10               	movlw	16
  1005  00168C  5DC9               	subwf	UpdateAndPrintDisplay2D@j& (0+255),w,b
  1006  00168E  A0D8               	btfss	status,0,c
  1007  001690  EF4C  F00B         	goto	u3811
  1008  001694  EF4E  F00B         	goto	u3810
  1009  001698                     u3811:
  1010  001698  EF1A  F00B         	goto	l3914
  1011  00169C                     u3810:
  1012  00169C                     
  1013                           ; BSR set to: 1
  1014                           ;main.c: 387:     }
  1015  00169C  4BC7               	infsnz	UpdateAndPrintDisplay2D@i& (0+255),f,b
  1016  00169E  2BC8               	incf	(UpdateAndPrintDisplay2D@i+1)& (0+255),f,b
  1017  0016A0                     
  1018                           ; BSR set to: 1
  1019  0016A0  BFC8               	btfsc	(UpdateAndPrintDisplay2D@i+1)& (0+255),7,b
  1020  0016A2  EF5C  F00B         	goto	u3821
  1021  0016A6  51C8               	movf	(UpdateAndPrintDisplay2D@i+1)& (0+255),w,b
  1022  0016A8  E109               	bnz	u3820
  1023  0016AA  0E04               	movlw	4
  1024  0016AC  5DC7               	subwf	UpdateAndPrintDisplay2D@i& (0+255),w,b
  1025  0016AE  A0D8               	btfss	status,0,c
  1026  0016B0  EF5C  F00B         	goto	u3821
  1027  0016B4  EF5E  F00B         	goto	u3820
  1028  0016B8                     u3821:
  1029  0016B8  EF16  F00B         	goto	l3908
  1030  0016BC                     u3820:
  1031  0016BC                     
  1032                           ; BSR set to: 1
  1033                           ;main.c: 388:     for (int i = 6 -1; i >= 0; i--) {
  1034  0016BC  0E00               	movlw	0
  1035  0016BE  6FD0               	movwf	(UpdateAndPrintDisplay2D@i_948+1)& (0+255),b
  1036  0016C0  0E05               	movlw	5
  1037  0016C2  6FCF               	movwf	UpdateAndPrintDisplay2D@i_948& (0+255),b
  1038  0016C4                     l3930:
  1039                           
  1040                           ; BSR set to: 1
  1041                           ;main.c: 389:         if (objs[i].active && !(objs[i].x == 0 || objs[i].y == 0)) {
  1042  0016C4  C1CF  F0E0         	movff	UpdateAndPrintDisplay2D@i_948,___wmul@multiplier
  1043  0016C8  C1D0  F0E1         	movff	UpdateAndPrintDisplay2D@i_948+1,___wmul@multiplier+1
  1044  0016CC  0E00               	movlw	0
  1045  0016CE  0100               	movlb	0	; () banked
  1046  0016D0  6FE3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1047  0016D2  0E07               	movlw	7
  1048  0016D4  6FE2               	movwf	___wmul@multiplicand& (0+255),b
  1049  0016D6  EC20  F021         	call	___wmul	;wreg free
  1050  0016DA  0E88               	movlw	low (_objs+4)
  1051  0016DC  0100               	movlb	0	; () banked
  1052  0016DE  25E0               	addwf	?___wmul& (0+255),w,b
  1053  0016E0  6ED9               	movwf	fsr2l,c
  1054  0016E2  0E00               	movlw	high (_objs+4)
  1055  0016E4  21E1               	addwfc	(?___wmul+1)& (0+255),w,b
  1056  0016E6  6EDA               	movwf	fsr2h,c
  1057  0016E8  50DF               	movf	indf2,w,c
  1058  0016EA  B4D8               	btfsc	status,2,c
  1059  0016EC  EF7A  F00B         	goto	u3831
  1060  0016F0  EF7C  F00B         	goto	u3830
  1061  0016F4                     u3831:
  1062  0016F4  EF0D  F00C         	goto	l3938
  1063  0016F8                     u3830:
  1064  0016F8                     
  1065                           ; BSR set to: 0
  1066  0016F8  C1CF  F0E0         	movff	UpdateAndPrintDisplay2D@i_948,___wmul@multiplier
  1067  0016FC  C1D0  F0E1         	movff	UpdateAndPrintDisplay2D@i_948+1,___wmul@multiplier+1
  1068  001700  0E00               	movlw	0
  1069  001702  6FE3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1070  001704  0E07               	movlw	7
  1071  001706  6FE2               	movwf	___wmul@multiplicand& (0+255),b
  1072  001708  EC20  F021         	call	___wmul	;wreg free
  1073  00170C  0E84               	movlw	low _objs
  1074  00170E  0100               	movlb	0	; () banked
  1075  001710  25E0               	addwf	?___wmul& (0+255),w,b
  1076  001712  6ED9               	movwf	fsr2l,c
  1077  001714  0E00               	movlw	high _objs
  1078  001716  21E1               	addwfc	(?___wmul+1)& (0+255),w,b
  1079  001718  6EDA               	movwf	fsr2h,c
  1080  00171A  50DF               	movf	indf2,w,c
  1081  00171C  B4D8               	btfsc	status,2,c
  1082  00171E  EF93  F00B         	goto	u3841
  1083  001722  EF95  F00B         	goto	u3840
  1084  001726                     u3841:
  1085  001726  EF0D  F00C         	goto	l3938
  1086  00172A                     u3840:
  1087  00172A                     
  1088                           ; BSR set to: 0
  1089  00172A  C1CF  F0E0         	movff	UpdateAndPrintDisplay2D@i_948,___wmul@multiplier
  1090  00172E  C1D0  F0E1         	movff	UpdateAndPrintDisplay2D@i_948+1,___wmul@multiplier+1
  1091  001732  0E00               	movlw	0
  1092  001734  6FE3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1093  001736  0E07               	movlw	7
  1094  001738  6FE2               	movwf	___wmul@multiplicand& (0+255),b
  1095  00173A  EC20  F021         	call	___wmul	;wreg free
  1096  00173E  0E85               	movlw	low (_objs+1)
  1097  001740  0100               	movlb	0	; () banked
  1098  001742  25E0               	addwf	?___wmul& (0+255),w,b
  1099  001744  6ED9               	movwf	fsr2l,c
  1100  001746  0E00               	movlw	high (_objs+1)
  1101  001748  21E1               	addwfc	(?___wmul+1)& (0+255),w,b
  1102  00174A  6EDA               	movwf	fsr2h,c
  1103  00174C  50DF               	movf	indf2,w,c
  1104  00174E  B4D8               	btfsc	status,2,c
  1105  001750  EFAC  F00B         	goto	u3851
  1106  001754  EFAE  F00B         	goto	u3850
  1107  001758                     u3851:
  1108  001758  EF0D  F00C         	goto	l3938
  1109  00175C                     u3850:
  1110  00175C                     
  1111                           ; BSR set to: 0
  1112                           ;main.c: 390:             display[objs[i].y-1][objs[i].x-1] = &objs[i];
  1113  00175C  C1CF  F0E0         	movff	UpdateAndPrintDisplay2D@i_948,___wmul@multiplier
  1114  001760  C1D0  F0E1         	movff	UpdateAndPrintDisplay2D@i_948+1,___wmul@multiplier+1
  1115  001764  0E00               	movlw	0
  1116  001766  6FE3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1117  001768  0E07               	movlw	7
  1118  00176A  6FE2               	movwf	___wmul@multiplicand& (0+255),b
  1119  00176C  EC20  F021         	call	___wmul	;wreg free
  1120  001770  0E84               	movlw	low _objs
  1121  001772  0100               	movlb	0	; () banked
  1122  001774  6FE6               	movwf	??_UpdateAndPrintDisplay2D& (0+255),b
  1123  001776  0E00               	movlw	high _objs
  1124  001778  6FE7               	movwf	(??_UpdateAndPrintDisplay2D+1)& (0+255),b
  1125  00177A  51E0               	movf	?___wmul& (0+255),w,b
  1126  00177C  27E6               	addwf	??_UpdateAndPrintDisplay2D& (0+255),f,b
  1127  00177E  51E1               	movf	(?___wmul+1)& (0+255),w,b
  1128  001780  23E7               	addwfc	(??_UpdateAndPrintDisplay2D+1)& (0+255),f,b
  1129  001782  C1CF  F0E0         	movff	UpdateAndPrintDisplay2D@i_948,___wmul@multiplier
  1130  001786  C1D0  F0E1         	movff	UpdateAndPrintDisplay2D@i_948+1,___wmul@multiplier+1
  1131  00178A  0E00               	movlw	0
  1132  00178C  6FE3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1133  00178E  0E07               	movlw	7
  1134  001790  6FE2               	movwf	___wmul@multiplicand& (0+255),b
  1135  001792  EC20  F021         	call	___wmul	;wreg free
  1136  001796  0E85               	movlw	low (_objs+1)
  1137  001798  0100               	movlb	0	; () banked
  1138  00179A  25E0               	addwf	?___wmul& (0+255),w,b
  1139  00179C  6ED9               	movwf	fsr2l,c
  1140  00179E  0E00               	movlw	high (_objs+1)
  1141  0017A0  21E1               	addwfc	(?___wmul+1)& (0+255),w,b
  1142  0017A2  6EDA               	movwf	fsr2h,c
  1143  0017A4  50DF               	movf	indf2,w,c
  1144  0017A6  6FE8               	movwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),b
  1145  0017A8  6BE9               	clrf	(??_UpdateAndPrintDisplay2D+3)& (0+255),b
  1146  0017AA  0E05               	movlw	5
  1147  0017AC                     u3865:
  1148  0017AC  90D8               	bcf	status,0,c
  1149  0017AE  37E8               	rlcf	(??_UpdateAndPrintDisplay2D+2)& (0+255),f,b
  1150  0017B0  37E9               	rlcf	(??_UpdateAndPrintDisplay2D+3)& (0+255),f,b
  1151  0017B2  2EE8               	decfsz	wreg,f,c
  1152  0017B4  EFD6  F00B         	goto	u3865
  1153  0017B8  C1CF  F0E0         	movff	UpdateAndPrintDisplay2D@i_948,___wmul@multiplier
  1154  0017BC  C1D0  F0E1         	movff	UpdateAndPrintDisplay2D@i_948+1,___wmul@multiplier+1
  1155  0017C0  0E00               	movlw	0
  1156  0017C2  6FE3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1157  0017C4  0E07               	movlw	7
  1158  0017C6  6FE2               	movwf	___wmul@multiplicand& (0+255),b
  1159  0017C8  EC20  F021         	call	___wmul	;wreg free
  1160  0017CC  0E84               	movlw	low _objs
  1161  0017CE  0100               	movlb	0	; () banked
  1162  0017D0  25E0               	addwf	?___wmul& (0+255),w,b
  1163  0017D2  6ED9               	movwf	fsr2l,c
  1164  0017D4  0E00               	movlw	high _objs
  1165  0017D6  21E1               	addwfc	(?___wmul+1)& (0+255),w,b
  1166  0017D8  6EDA               	movwf	fsr2h,c
  1167  0017DA  50DF               	movf	indf2,w,c
  1168  0017DC  6FEA               	movwf	(??_UpdateAndPrintDisplay2D+4)& (0+255),b
  1169  0017DE  6BEB               	clrf	(??_UpdateAndPrintDisplay2D+5)& (0+255),b
  1170  0017E0  90D8               	bcf	status,0,c
  1171  0017E2  37EA               	rlcf	(??_UpdateAndPrintDisplay2D+4)& (0+255),f,b
  1172  0017E4  37EB               	rlcf	(??_UpdateAndPrintDisplay2D+5)& (0+255),f,b
  1173  0017E6  0EDE               	movlw	222
  1174  0017E8  6FEC               	movwf	(??_UpdateAndPrintDisplay2D+6)& (0+255),b
  1175  0017EA  0EFF               	movlw	255
  1176  0017EC  6FED               	movwf	(??_UpdateAndPrintDisplay2D+7)& (0+255),b
  1177  0017EE  0E00               	movlw	low _display
  1178  0017F0  6FEE               	movwf	(??_UpdateAndPrintDisplay2D+8)& (0+255),b
  1179  0017F2  0E01               	movlw	high _display
  1180  0017F4  6FEF               	movwf	(??_UpdateAndPrintDisplay2D+9)& (0+255),b
  1181  0017F6  51EC               	movf	(??_UpdateAndPrintDisplay2D+6)& (0+255),w,b
  1182  0017F8  27EE               	addwf	(??_UpdateAndPrintDisplay2D+8)& (0+255),f,b
  1183  0017FA  51ED               	movf	(??_UpdateAndPrintDisplay2D+7)& (0+255),w,b
  1184  0017FC  23EF               	addwfc	(??_UpdateAndPrintDisplay2D+9)& (0+255),f,b
  1185  0017FE  51EA               	movf	(??_UpdateAndPrintDisplay2D+4)& (0+255),w,b
  1186  001800  27EE               	addwf	(??_UpdateAndPrintDisplay2D+8)& (0+255),f,b
  1187  001802  51EB               	movf	(??_UpdateAndPrintDisplay2D+5)& (0+255),w,b
  1188  001804  23EF               	addwfc	(??_UpdateAndPrintDisplay2D+9)& (0+255),f,b
  1189  001806  51E8               	movf	(??_UpdateAndPrintDisplay2D+2)& (0+255),w,b
  1190  001808  25EE               	addwf	(??_UpdateAndPrintDisplay2D+8)& (0+255),w,b
  1191  00180A  6ED9               	movwf	fsr2l,c
  1192  00180C  51E9               	movf	(??_UpdateAndPrintDisplay2D+3)& (0+255),w,b
  1193  00180E  21EF               	addwfc	(??_UpdateAndPrintDisplay2D+9)& (0+255),w,b
  1194  001810  6EDA               	movwf	fsr2h,c
  1195  001812  C0E6  FFDE         	movff	??_UpdateAndPrintDisplay2D,postinc2
  1196  001816  C0E7  FFDD         	movff	??_UpdateAndPrintDisplay2D+1,postdec2
  1197  00181A                     l3938:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;main.c: 392:     }
  1201  00181A  0101               	movlb	1	; () banked
  1202  00181C  07CF               	decf	UpdateAndPrintDisplay2D@i_948& (0+255),f,b
  1203  00181E  A0D8               	btfss	status,0,c
  1204  001820  07D0               	decf	(UpdateAndPrintDisplay2D@i_948+1)& (0+255),f,b
  1205  001822                     
  1206                           ; BSR set to: 1
  1207  001822  BFD0               	btfsc	(UpdateAndPrintDisplay2D@i_948+1)& (0+255),7,b
  1208  001824  EF18  F00C         	goto	u3870
  1209  001828  EF16  F00C         	goto	u3871
  1210  00182C                     u3871:
  1211  00182C  EF62  F00B         	goto	l3930
  1212  001830                     u3870:
  1213  001830                     
  1214                           ; BSR set to: 1
  1215                           ;main.c: 394:     for (int i = 0; i < 4; i++) {
  1216  001830  0E00               	movlw	0
  1217  001832  6FCC               	movwf	(UpdateAndPrintDisplay2D@i_949+1)& (0+255),b
  1218  001834  0E00               	movlw	0
  1219  001836  6FCB               	movwf	UpdateAndPrintDisplay2D@i_949& (0+255),b
  1220  001838                     l3948:
  1221                           
  1222                           ; BSR set to: 1
  1223                           ;main.c: 395:         for (int j = 0; j < 16; j++) {
  1224  001838  0E00               	movlw	0
  1225  00183A  6FCE               	movwf	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),b
  1226  00183C  0E00               	movlw	0
  1227  00183E  6FCD               	movwf	UpdateAndPrintDisplay2D@j_950& (0+255),b
  1228  001840                     l3954:
  1229                           
  1230                           ; BSR set to: 1
  1231                           ;main.c: 396:             lcd_x = j+1;
  1232  001840  29CD               	incf	UpdateAndPrintDisplay2D@j_950& (0+255),w,b
  1233  001842  0100               	movlb	0	; () banked
  1234  001844  6FAF               	movwf	_lcd_x& (0+255),b
  1235                           
  1236                           ;main.c: 397:             lcd_y = i+1;
  1237  001846  0101               	movlb	1	; () banked
  1238  001848  29CB               	incf	UpdateAndPrintDisplay2D@i_949& (0+255),w,b
  1239  00184A  0100               	movlb	0	; () banked
  1240  00184C  6FAE               	movwf	_lcd_y& (0+255),b
  1241  00184E                     
  1242                           ; BSR set to: 0
  1243                           ;main.c: 398:             LCDGoto(lcd_x, lcd_y);
  1244  00184E  C0AE  F0E1         	movff	_lcd_y,LCDGoto@p_1
  1245  001852  51AF               	movf	_lcd_x& (0+255),w,b
  1246  001854  EC2A  F020         	call	_LCDGoto
  1247  001858                     
  1248                           ;main.c: 400:             if (display[i][j] == ((void*)0)) {
  1249  001858  C1CB  F0E6         	movff	UpdateAndPrintDisplay2D@i_949,??_UpdateAndPrintDisplay2D
  1250  00185C  C1CC  F0E7         	movff	UpdateAndPrintDisplay2D@i_949+1,??_UpdateAndPrintDisplay2D+1
  1251  001860  0E05               	movlw	5
  1252  001862                     u3885:
  1253  001862  90D8               	bcf	status,0,c
  1254  001864  0100               	movlb	0	; () banked
  1255  001866  37E6               	rlcf	??_UpdateAndPrintDisplay2D& (0+255),f,b
  1256  001868  37E7               	rlcf	(??_UpdateAndPrintDisplay2D+1)& (0+255),f,b
  1257  00186A  2EE8               	decfsz	wreg,f,c
  1258  00186C  EF31  F00C         	goto	u3885
  1259  001870  0E00               	movlw	low _display
  1260  001872  6FE8               	movwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),b
  1261  001874  0E01               	movlw	high _display
  1262  001876  6FE9               	movwf	(??_UpdateAndPrintDisplay2D+3)& (0+255),b
  1263  001878  51E6               	movf	??_UpdateAndPrintDisplay2D& (0+255),w,b
  1264  00187A  27E8               	addwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),f,b
  1265  00187C  51E7               	movf	(??_UpdateAndPrintDisplay2D+1)& (0+255),w,b
  1266  00187E  23E9               	addwfc	(??_UpdateAndPrintDisplay2D+3)& (0+255),f,b
  1267  001880  90D8               	bcf	status,0,c
  1268  001882  0101               	movlb	1	; () banked
  1269  001884  35CD               	rlcf	UpdateAndPrintDisplay2D@j_950& (0+255),w,b
  1270  001886  6ED9               	movwf	fsr2l,c
  1271  001888  35CE               	rlcf	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),w,b
  1272  00188A  6EDA               	movwf	fsr2h,c
  1273  00188C  0100               	movlb	0	; () banked
  1274  00188E  51E8               	movf	(??_UpdateAndPrintDisplay2D+2)& (0+255),w,b
  1275  001890  26D9               	addwf	fsr2l,f,c
  1276  001892  51E9               	movf	(??_UpdateAndPrintDisplay2D+3)& (0+255),w,b
  1277  001894  22DA               	addwfc	fsr2h,f,c
  1278  001896  50DE               	movf	postinc2,w,c
  1279  001898  10DE               	iorwf	postinc2,w,c
  1280  00189A  A4D8               	btfss	status,2,c
  1281  00189C  EF52  F00C         	goto	u3891
  1282  0018A0  EF54  F00C         	goto	u3890
  1283  0018A4                     u3891:
  1284  0018A4  EFFB  F00C         	goto	l3988
  1285  0018A8                     u3890:
  1286  0018A8                     
  1287                           ; BSR set to: 0
  1288                           ;main.c: 401:                 LCDDat(' ');
  1289  0018A8  0E20               	movlw	32
  1290  0018AA  EC47  F021         	call	_LCDDat
  1291                           
  1292                           ;main.c: 402:                 continue;
  1293  0018AE  EF3C  F00D         	goto	l3990
  1294  0018B2                     l3962:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main.c: 407:                     LCDDat(6);
  1298  0018B2  0E06               	movlw	6
  1299  0018B4  EC47  F021         	call	_LCDDat
  1300                           
  1301                           ;main.c: 408:                     break;
  1302  0018B8  EF3C  F00D         	goto	l3990
  1303  0018BC                     l3964:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;main.c: 410:                     LCDDat(7);
  1307  0018BC  0E07               	movlw	7
  1308  0018BE  EC47  F021         	call	_LCDDat
  1309                           
  1310                           ;main.c: 411:                     break;
  1311  0018C2  EF3C  F00D         	goto	l3990
  1312  0018C6                     l3966:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 415:                             LCDDat(0);
  1316  0018C6  0E00               	movlw	0
  1317  0018C8  EC47  F021         	call	_LCDDat
  1318                           
  1319                           ;main.c: 416:                             break;
  1320  0018CC  EF3C  F00D         	goto	l3990
  1321  0018D0                     l3968:
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;main.c: 418:                             LCDDat(2);
  1325  0018D0  0E02               	movlw	2
  1326  0018D2  EC47  F021         	call	_LCDDat
  1327                           
  1328                           ;main.c: 419:                             break;
  1329  0018D6  EF3C  F00D         	goto	l3990
  1330  0018DA                     l3970:
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;main.c: 421:                             LCDDat(4);
  1334  0018DA  0E04               	movlw	4
  1335  0018DC  EC47  F021         	call	_LCDDat
  1336                           
  1337                           ;main.c: 422:                             break;
  1338  0018E0  EF3C  F00D         	goto	l3990
  1339  0018E4                     l3974:
  1340                           
  1341                           ; BSR set to: 0
  1342  0018E4  C1CB  F0E6         	movff	UpdateAndPrintDisplay2D@i_949,??_UpdateAndPrintDisplay2D
  1343  0018E8  C1CC  F0E7         	movff	UpdateAndPrintDisplay2D@i_949+1,??_UpdateAndPrintDisplay2D+1
  1344  0018EC  0E05               	movlw	5
  1345  0018EE                     u3905:
  1346  0018EE  90D8               	bcf	status,0,c
  1347  0018F0  37E6               	rlcf	??_UpdateAndPrintDisplay2D& (0+255),f,b
  1348  0018F2  37E7               	rlcf	(??_UpdateAndPrintDisplay2D+1)& (0+255),f,b
  1349  0018F4  2EE8               	decfsz	wreg,f,c
  1350  0018F6  EF77  F00C         	goto	u3905
  1351  0018FA  0E00               	movlw	low _display
  1352  0018FC  6FE8               	movwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),b
  1353  0018FE  0E01               	movlw	high _display
  1354  001900  6FE9               	movwf	(??_UpdateAndPrintDisplay2D+3)& (0+255),b
  1355  001902  51E6               	movf	??_UpdateAndPrintDisplay2D& (0+255),w,b
  1356  001904  27E8               	addwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),f,b
  1357  001906  51E7               	movf	(??_UpdateAndPrintDisplay2D+1)& (0+255),w,b
  1358  001908  23E9               	addwfc	(??_UpdateAndPrintDisplay2D+3)& (0+255),f,b
  1359  00190A  90D8               	bcf	status,0,c
  1360  00190C  0101               	movlb	1	; () banked
  1361  00190E  35CD               	rlcf	UpdateAndPrintDisplay2D@j_950& (0+255),w,b
  1362  001910  6ED9               	movwf	fsr2l,c
  1363  001912  35CE               	rlcf	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),w,b
  1364  001914  6EDA               	movwf	fsr2h,c
  1365  001916  0100               	movlb	0	; () banked
  1366  001918  51E8               	movf	(??_UpdateAndPrintDisplay2D+2)& (0+255),w,b
  1367  00191A  26D9               	addwf	fsr2l,f,c
  1368  00191C  51E9               	movf	(??_UpdateAndPrintDisplay2D+3)& (0+255),w,b
  1369  00191E  22DA               	addwfc	fsr2h,f,c
  1370  001920  EE10 F006          	lfsr	1,6
  1371  001924  50DE               	movf	postinc2,w,c
  1372  001926  26E1               	addwf	fsr1l,f,c
  1373  001928  50DD               	movf	postdec2,w,c
  1374  00192A  22E2               	addwfc	fsr1h,f,c
  1375  00192C  50E7               	movf	indf1,w,c
  1376  00192E  6FEA               	movwf	(??_UpdateAndPrintDisplay2D+4)& (0+255),b
  1377  001930  6BEB               	clrf	(??_UpdateAndPrintDisplay2D+5)& (0+255),b
  1378                           
  1379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 1, Range of values is 0 to 0
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte            4     3 (average)
  1385                           ;	Chosen strategy is simple_byte
  1386  001932  51EB               	movf	(??_UpdateAndPrintDisplay2D+5)& (0+255),w,b
  1387  001934  0A00               	xorlw	0	; case 0
  1388  001936  B4D8               	btfsc	status,2,c
  1389  001938  EFA0  F00C         	goto	l4294
  1390  00193C  EF3C  F00D         	goto	l380
  1391  001940                     l4294:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 3, Range of values is 0 to 2
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte           10     6 (average)
  1399                           ;	Chosen strategy is simple_byte
  1400  001940  51EA               	movf	(??_UpdateAndPrintDisplay2D+4)& (0+255),w,b
  1401  001942  0A00               	xorlw	0	; case 0
  1402  001944  B4D8               	btfsc	status,2,c
  1403  001946  EF63  F00C         	goto	l3966
  1404  00194A  0A01               	xorlw	1	; case 1
  1405  00194C  B4D8               	btfsc	status,2,c
  1406  00194E  EF68  F00C         	goto	l3968
  1407  001952  0A03               	xorlw	3	; case 2
  1408  001954  B4D8               	btfsc	status,2,c
  1409  001956  EF6D  F00C         	goto	l3970
  1410  00195A  EF3C  F00D         	goto	l380
  1411  00195E                     l3976:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;main.c: 431:                             LCDDat(1);
  1415  00195E  0E01               	movlw	1
  1416  001960  EC47  F021         	call	_LCDDat
  1417                           
  1418                           ;main.c: 432:                             break;
  1419  001964  EF3C  F00D         	goto	l3990
  1420  001968                     l3978:
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;main.c: 434:                             LCDDat(3);
  1424  001968  0E03               	movlw	3
  1425  00196A  EC47  F021         	call	_LCDDat
  1426                           
  1427                           ;main.c: 435:                             break;
  1428  00196E  EF3C  F00D         	goto	l3990
  1429  001972                     l3980:
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;main.c: 437:                             LCDDat(5);
  1433  001972  0E05               	movlw	5
  1434  001974  EC47  F021         	call	_LCDDat
  1435                           
  1436                           ;main.c: 438:                             break;
  1437  001978  EF3C  F00D         	goto	l3990
  1438  00197C                     l3984:
  1439                           
  1440                           ; BSR set to: 0
  1441  00197C  C1CB  F0E6         	movff	UpdateAndPrintDisplay2D@i_949,??_UpdateAndPrintDisplay2D
  1442  001980  C1CC  F0E7         	movff	UpdateAndPrintDisplay2D@i_949+1,??_UpdateAndPrintDisplay2D+1
  1443  001984  0E05               	movlw	5
  1444  001986                     u3915:
  1445  001986  90D8               	bcf	status,0,c
  1446  001988  37E6               	rlcf	??_UpdateAndPrintDisplay2D& (0+255),f,b
  1447  00198A  37E7               	rlcf	(??_UpdateAndPrintDisplay2D+1)& (0+255),f,b
  1448  00198C  2EE8               	decfsz	wreg,f,c
  1449  00198E  EFC3  F00C         	goto	u3915
  1450  001992  0E00               	movlw	low _display
  1451  001994  6FE8               	movwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),b
  1452  001996  0E01               	movlw	high _display
  1453  001998  6FE9               	movwf	(??_UpdateAndPrintDisplay2D+3)& (0+255),b
  1454  00199A  51E6               	movf	??_UpdateAndPrintDisplay2D& (0+255),w,b
  1455  00199C  27E8               	addwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),f,b
  1456  00199E  51E7               	movf	(??_UpdateAndPrintDisplay2D+1)& (0+255),w,b
  1457  0019A0  23E9               	addwfc	(??_UpdateAndPrintDisplay2D+3)& (0+255),f,b
  1458  0019A2  90D8               	bcf	status,0,c
  1459  0019A4  0101               	movlb	1	; () banked
  1460  0019A6  35CD               	rlcf	UpdateAndPrintDisplay2D@j_950& (0+255),w,b
  1461  0019A8  6ED9               	movwf	fsr2l,c
  1462  0019AA  35CE               	rlcf	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),w,b
  1463  0019AC  6EDA               	movwf	fsr2h,c
  1464  0019AE  0100               	movlb	0	; () banked
  1465  0019B0  51E8               	movf	(??_UpdateAndPrintDisplay2D+2)& (0+255),w,b
  1466  0019B2  26D9               	addwf	fsr2l,f,c
  1467  0019B4  51E9               	movf	(??_UpdateAndPrintDisplay2D+3)& (0+255),w,b
  1468  0019B6  22DA               	addwfc	fsr2h,f,c
  1469  0019B8  EE10 F006          	lfsr	1,6
  1470  0019BC  50DE               	movf	postinc2,w,c
  1471  0019BE  26E1               	addwf	fsr1l,f,c
  1472  0019C0  50DD               	movf	postdec2,w,c
  1473  0019C2  22E2               	addwfc	fsr1h,f,c
  1474  0019C4  50E7               	movf	indf1,w,c
  1475  0019C6  6FEA               	movwf	(??_UpdateAndPrintDisplay2D+4)& (0+255),b
  1476  0019C8  6BEB               	clrf	(??_UpdateAndPrintDisplay2D+5)& (0+255),b
  1477                           
  1478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 1, Range of values is 0 to 0
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte            4     3 (average)
  1484                           ;	Chosen strategy is simple_byte
  1485  0019CA  51EB               	movf	(??_UpdateAndPrintDisplay2D+5)& (0+255),w,b
  1486  0019CC  0A00               	xorlw	0	; case 0
  1487  0019CE  B4D8               	btfsc	status,2,c
  1488  0019D0  EFEC  F00C         	goto	l4296
  1489  0019D4  EF3C  F00D         	goto	l380
  1490  0019D8                     l4296:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ; Switch size 1, requested type "simple"
  1494                           ; Number of cases is 3, Range of values is 0 to 2
  1495                           ; switch strategies available:
  1496                           ; Name         Instructions Cycles
  1497                           ; simple_byte           10     6 (average)
  1498                           ;	Chosen strategy is simple_byte
  1499  0019D8  51EA               	movf	(??_UpdateAndPrintDisplay2D+4)& (0+255),w,b
  1500  0019DA  0A00               	xorlw	0	; case 0
  1501  0019DC  B4D8               	btfsc	status,2,c
  1502  0019DE  EFAF  F00C         	goto	l3976
  1503  0019E2  0A01               	xorlw	1	; case 1
  1504  0019E4  B4D8               	btfsc	status,2,c
  1505  0019E6  EFB4  F00C         	goto	l3978
  1506  0019EA  0A03               	xorlw	3	; case 2
  1507  0019EC  B4D8               	btfsc	status,2,c
  1508  0019EE  EFB9  F00C         	goto	l3980
  1509  0019F2  EF3C  F00D         	goto	l380
  1510  0019F6                     l3988:
  1511                           
  1512                           ; BSR set to: 0
  1513  0019F6  C1CB  F0E6         	movff	UpdateAndPrintDisplay2D@i_949,??_UpdateAndPrintDisplay2D
  1514  0019FA  C1CC  F0E7         	movff	UpdateAndPrintDisplay2D@i_949+1,??_UpdateAndPrintDisplay2D+1
  1515  0019FE  0E05               	movlw	5
  1516  001A00                     u3925:
  1517  001A00  90D8               	bcf	status,0,c
  1518  001A02  37E6               	rlcf	??_UpdateAndPrintDisplay2D& (0+255),f,b
  1519  001A04  37E7               	rlcf	(??_UpdateAndPrintDisplay2D+1)& (0+255),f,b
  1520  001A06  2EE8               	decfsz	wreg,f,c
  1521  001A08  EF00  F00D         	goto	u3925
  1522  001A0C  0E00               	movlw	low _display
  1523  001A0E  6FE8               	movwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),b
  1524  001A10  0E01               	movlw	high _display
  1525  001A12  6FE9               	movwf	(??_UpdateAndPrintDisplay2D+3)& (0+255),b
  1526  001A14  51E6               	movf	??_UpdateAndPrintDisplay2D& (0+255),w,b
  1527  001A16  27E8               	addwf	(??_UpdateAndPrintDisplay2D+2)& (0+255),f,b
  1528  001A18  51E7               	movf	(??_UpdateAndPrintDisplay2D+1)& (0+255),w,b
  1529  001A1A  23E9               	addwfc	(??_UpdateAndPrintDisplay2D+3)& (0+255),f,b
  1530  001A1C  90D8               	bcf	status,0,c
  1531  001A1E  0101               	movlb	1	; () banked
  1532  001A20  35CD               	rlcf	UpdateAndPrintDisplay2D@j_950& (0+255),w,b
  1533  001A22  6ED9               	movwf	fsr2l,c
  1534  001A24  35CE               	rlcf	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),w,b
  1535  001A26  6EDA               	movwf	fsr2h,c
  1536  001A28  0100               	movlb	0	; () banked
  1537  001A2A  51E8               	movf	(??_UpdateAndPrintDisplay2D+2)& (0+255),w,b
  1538  001A2C  26D9               	addwf	fsr2l,f,c
  1539  001A2E  51E9               	movf	(??_UpdateAndPrintDisplay2D+3)& (0+255),w,b
  1540  001A30  22DA               	addwfc	fsr2h,f,c
  1541  001A32  EE10 F005          	lfsr	1,5
  1542  001A36  50DE               	movf	postinc2,w,c
  1543  001A38  26E1               	addwf	fsr1l,f,c
  1544  001A3A  50DD               	movf	postdec2,w,c
  1545  001A3C  22E2               	addwfc	fsr1h,f,c
  1546  001A3E  50E7               	movf	indf1,w,c
  1547  001A40  6FEA               	movwf	(??_UpdateAndPrintDisplay2D+4)& (0+255),b
  1548  001A42  6BEB               	clrf	(??_UpdateAndPrintDisplay2D+5)& (0+255),b
  1549                           
  1550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 1, Range of values is 0 to 0
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte            4     3 (average)
  1556                           ;	Chosen strategy is simple_byte
  1557  001A44  51EB               	movf	(??_UpdateAndPrintDisplay2D+5)& (0+255),w,b
  1558  001A46  0A00               	xorlw	0	; case 0
  1559  001A48  B4D8               	btfsc	status,2,c
  1560  001A4A  EF29  F00D         	goto	l4298
  1561  001A4E  EF3C  F00D         	goto	l3990
  1562  001A52                     l4298:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ; Switch size 1, requested type "simple"
  1566                           ; Number of cases is 4, Range of values is 0 to 3
  1567                           ; switch strategies available:
  1568                           ; Name         Instructions Cycles
  1569                           ; simple_byte           13     7 (average)
  1570                           ;	Chosen strategy is simple_byte
  1571  001A52  51EA               	movf	(??_UpdateAndPrintDisplay2D+4)& (0+255),w,b
  1572  001A54  0A00               	xorlw	0	; case 0
  1573  001A56  B4D8               	btfsc	status,2,c
  1574  001A58  EF72  F00C         	goto	l3974
  1575  001A5C  0A01               	xorlw	1	; case 1
  1576  001A5E  B4D8               	btfsc	status,2,c
  1577  001A60  EFBE  F00C         	goto	l3984
  1578  001A64  0A03               	xorlw	3	; case 2
  1579  001A66  B4D8               	btfsc	status,2,c
  1580  001A68  EF59  F00C         	goto	l3962
  1581  001A6C  0A01               	xorlw	1	; case 3
  1582  001A6E  B4D8               	btfsc	status,2,c
  1583  001A70  EF5E  F00C         	goto	l3964
  1584  001A74  EF3C  F00D         	goto	l3990
  1585  001A78                     l380:
  1586  001A78                     l3990:
  1587  001A78  0101               	movlb	1	; () banked
  1588  001A7A  4BCD               	infsnz	UpdateAndPrintDisplay2D@j_950& (0+255),f,b
  1589  001A7C  2BCE               	incf	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),f,b
  1590  001A7E                     
  1591                           ; BSR set to: 1
  1592  001A7E  BFCE               	btfsc	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),7,b
  1593  001A80  EF4B  F00D         	goto	u3931
  1594  001A84  51CE               	movf	(UpdateAndPrintDisplay2D@j_950+1)& (0+255),w,b
  1595  001A86  E109               	bnz	u3930
  1596  001A88  0E10               	movlw	16
  1597  001A8A  5DCD               	subwf	UpdateAndPrintDisplay2D@j_950& (0+255),w,b
  1598  001A8C  A0D8               	btfss	status,0,c
  1599  001A8E  EF4B  F00D         	goto	u3931
  1600  001A92  EF4D  F00D         	goto	u3930
  1601  001A96                     u3931:
  1602  001A96  EF20  F00C         	goto	l3954
  1603  001A9A                     u3930:
  1604  001A9A                     
  1605                           ; BSR set to: 1
  1606                           ;main.c: 449:     }
  1607  001A9A  4BCB               	infsnz	UpdateAndPrintDisplay2D@i_949& (0+255),f,b
  1608  001A9C  2BCC               	incf	(UpdateAndPrintDisplay2D@i_949+1)& (0+255),f,b
  1609  001A9E                     
  1610                           ; BSR set to: 1
  1611  001A9E  BFCC               	btfsc	(UpdateAndPrintDisplay2D@i_949+1)& (0+255),7,b
  1612  001AA0  EF5B  F00D         	goto	u3941
  1613  001AA4  51CC               	movf	(UpdateAndPrintDisplay2D@i_949+1)& (0+255),w,b
  1614  001AA6  E109               	bnz	u3940
  1615  001AA8  0E04               	movlw	4
  1616  001AAA  5DCB               	subwf	UpdateAndPrintDisplay2D@i_949& (0+255),w,b
  1617  001AAC  A0D8               	btfss	status,0,c
  1618  001AAE  EF5B  F00D         	goto	u3941
  1619  001AB2  EF5D  F00D         	goto	u3940
  1620  001AB6                     u3941:
  1621  001AB6  EF1C  F00C         	goto	l3948
  1622  001ABA                     u3940:
  1623  001ABA                     
  1624                           ; BSR set to: 1
  1625  001ABA  0012               	return		;funcret
  1626  001ABC                     __end_of_UpdateAndPrintDisplay2D:
  1627                           	callstack 0
  1628                           
  1629 ;; *************** function _InitLCD *****************
  1630 ;; Defined at:
  1631 ;;		line 124 in file "./lcd.h"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    7
  1652 ;; This function calls:
  1653 ;;		_LCDCmd
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text2
  1660  0041E4                     __ptext2:
  1661                           	callstack 0
  1662  0041E4                     _InitLCD:
  1663                           	callstack 23
  1664  0041E4                     
  1665                           ;./lcd.h: 125:   TRISEbits.RE1 = 0;
  1666  0041E4  9296               	bcf	150,1,c	;volatile
  1667                           
  1668                           ;./lcd.h: 126:   TRISEbits.RE2 = 0;
  1669  0041E6  9496               	bcf	150,2,c	;volatile
  1670  0041E8                     
  1671                           ;./lcd.h: 127:   TRISD = 0;
  1672  0041E8  0E00               	movlw	0
  1673  0041EA  6E95               	movwf	149,c	;volatile
  1674  0041EC                     
  1675                           ;./lcd.h: 129:   PORTEbits.RE1 = 0;
  1676  0041EC  9284               	bcf	132,1,c	;volatile
  1677  0041EE                     
  1678                           ;./lcd.h: 130:   PORTEbits.RE2 = 0;
  1679  0041EE  9484               	bcf	132,2,c	;volatile
  1680  0041F0                     
  1681                           ;./lcd.h: 131:   LCDCmd(0x38);
  1682  0041F0  0E38               	movlw	56
  1683  0041F2  EC59  F021         	call	_LCDCmd
  1684  0041F6                     
  1685                           ;./lcd.h: 132:   LCDCmd(0x08);
  1686  0041F6  0E08               	movlw	8
  1687  0041F8  EC59  F021         	call	_LCDCmd
  1688  0041FC                     
  1689                           ;./lcd.h: 133:   LCDCmd(0x0C);
  1690  0041FC  0E0C               	movlw	12
  1691  0041FE  EC59  F021         	call	_LCDCmd
  1692  004202                     
  1693                           ;./lcd.h: 134:   LCDCmd(0x06);
  1694  004202  0E06               	movlw	6
  1695  004204  EC59  F021         	call	_LCDCmd
  1696  004208                     
  1697                           ;./lcd.h: 135:   LCDCmd(0x01);
  1698  004208  0E01               	movlw	1
  1699  00420A  EC59  F021         	call	_LCDCmd
  1700  00420E                     
  1701                           ;./lcd.h: 136:   LCDCmd(0x80);
  1702  00420E  0E80               	movlw	128
  1703  004210  EC59  F021         	call	_LCDCmd
  1704  004214  0012               	return		;funcret
  1705  004216                     __end_of_InitLCD:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _InitInterrupts *****************
  1709 ;; Defined at:
  1710 ;;		line 542 in file "main.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    6
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text3
  1739  003E9C                     __ptext3:
  1740                           	callstack 0
  1741  003E9C                     _InitInterrupts:
  1742                           	callstack 24
  1743  003E9C                     
  1744                           ;main.c: 543:     a = b = c = 0;
  1745  003E9C  0E00               	movlw	0
  1746  003E9E  6E75               	movwf	(_c+1)^0,c
  1747  003EA0  0E00               	movlw	0
  1748  003EA2  6E74               	movwf	_c^0,c
  1749  003EA4  C074  F076         	movff	_c,_b
  1750  003EA8  C075  F077         	movff	_c+1,_b+1
  1751  003EAC  C076  F078         	movff	_b,_a
  1752  003EB0  C077  F079         	movff	_b+1,_a+1
  1753                           
  1754                           ;main.c: 545:     ADCON1 = 0b0111;
  1755  003EB4  0E07               	movlw	7
  1756  003EB6  6EC1               	movwf	193,c	;volatile
  1757  003EB8                     
  1758                           ;main.c: 546:     INTCON2bits.RBPU = 0;
  1759  003EB8  9EF1               	bcf	241,7,c	;volatile
  1760                           
  1761                           ;main.c: 547:     PORTB = 0;
  1762  003EBA  0E00               	movlw	0
  1763  003EBC  6E81               	movwf	129,c	;volatile
  1764                           
  1765                           ;main.c: 549:     T3CON = 0b10000001;
  1766  003EBE  0E81               	movlw	129
  1767  003EC0  6EB1               	movwf	177,c	;volatile
  1768  003EC2                     
  1769                           ;main.c: 550:     TRISB = 0xff;
  1770  003EC2  6893               	setf	147,c	;volatile
  1771                           
  1772                           ;main.c: 551:     TRISA = 0x0;
  1773  003EC4  0E00               	movlw	0
  1774  003EC6  6E92               	movwf	146,c	;volatile
  1775                           
  1776                           ;main.c: 552:     TRISD = 0x0;
  1777  003EC8  0E00               	movlw	0
  1778  003ECA  6E95               	movwf	149,c	;volatile
  1779                           
  1780                           ;main.c: 554:     T0CON = 0b00010011;
  1781  003ECC  0E13               	movlw	19
  1782  003ECE  6ED5               	movwf	213,c	;volatile
  1783                           
  1784                           ;main.c: 555:     acceptInterrupts = 0;
  1785  003ED0  0E00               	movlw	0
  1786  003ED2  6E7B               	movwf	_acceptInterrupts^0,c
  1787                           
  1788                           ;main.c: 556:     TMR0L = 0;
  1789  003ED4  0E00               	movlw	0
  1790  003ED6  6ED6               	movwf	214,c	;volatile
  1791                           
  1792                           ;main.c: 557:     TMR0H = 0x80;
  1793  003ED8  0E80               	movlw	128
  1794  003EDA  6ED7               	movwf	215,c	;volatile
  1795  003EDC                     
  1796                           ;main.c: 558:     T0CONbits.TMR0ON = 1;
  1797  003EDC  8ED5               	bsf	213,7,c	;volatile
  1798  003EDE                     
  1799                           ;main.c: 560:     INTCONbits.PEIE = 1;
  1800  003EDE  8CF2               	bsf	242,6,c	;volatile
  1801  003EE0                     
  1802                           ;main.c: 561:     INTCONbits.INT0E = 1;
  1803  003EE0  88F2               	bsf	242,4,c	;volatile
  1804  003EE2                     
  1805                           ;main.c: 562:     INTCONbits.RBIE = 1;
  1806  003EE2  86F2               	bsf	242,3,c	;volatile
  1807  003EE4                     
  1808                           ;main.c: 563:     INTCONbits.T0IE = 1;
  1809  003EE4  8AF2               	bsf	242,5,c	;volatile
  1810  003EE6                     
  1811                           ;main.c: 564:     INTCON3bits.INT1E = 1;
  1812  003EE6  86F0               	bsf	240,3,c	;volatile
  1813  003EE8                     
  1814                           ;main.c: 566:     INTCON2bits.INTEDG0 = 0;
  1815  003EE8  9CF1               	bcf	241,6,c	;volatile
  1816  003EEA                     
  1817                           ;main.c: 567:     INTCON2bits.INTEDG1 = 0;
  1818  003EEA  9AF1               	bcf	241,5,c	;volatile
  1819  003EEC                     
  1820                           ;main.c: 570:     INTCONbits.RBIF = 0;
  1821  003EEC  90F2               	bcf	242,0,c	;volatile
  1822  003EEE                     
  1823                           ;main.c: 571:     INTCONbits.INT0IF = 0;
  1824  003EEE  92F2               	bcf	242,1,c	;volatile
  1825  003EF0                     
  1826                           ;main.c: 572:     INTCON3bits.INT1IF = 0;
  1827  003EF0  90F0               	bcf	240,0,c	;volatile
  1828  003EF2                     
  1829                           ;main.c: 574:     INTCONbits.RBIE = 0;
  1830  003EF2  96F2               	bcf	242,3,c	;volatile
  1831  003EF4                     
  1832                           ;main.c: 575:     INTCONbits.GIE = 1;
  1833  003EF4  8EF2               	bsf	242,7,c	;volatile
  1834  003EF6                     
  1835                           ;main.c: 576:     PORTB = PORTB;
  1836  003EF6  CF81 FF81          	movff	3969,3969	;volatile
  1837  003EFA                     
  1838                           ;main.c: 577:     INTCONbits.RBIF = 0;
  1839  003EFA  90F2               	bcf	242,0,c	;volatile
  1840  003EFC                     
  1841                           ;main.c: 578:     INTCONbits.RBIE = 1;
  1842  003EFC  86F2               	bsf	242,3,c	;volatile
  1843  003EFE                     
  1844                           ;main.c: 581:     INTCON2bits.RBIP = 1;
  1845  003EFE  80F1               	bsf	241,0,c	;volatile
  1846  003F00                     
  1847                           ;main.c: 582:     INTCON2bits.TMR0IP = 1;
  1848  003F00  84F1               	bsf	241,2,c	;volatile
  1849  003F02                     
  1850                           ;main.c: 583:     INTCON3bits.INT1IP = 1;
  1851  003F02  8CF0               	bsf	240,6,c	;volatile
  1852  003F04                     
  1853                           ;main.c: 584:     IPR1bits.TMR1IP = 1;
  1854  003F04  809F               	bsf	159,0,c	;volatile
  1855  003F06                     
  1856                           ;main.c: 585:     IPR1bits.ADIP = 1;
  1857  003F06  8C9F               	bsf	159,6,c	;volatile
  1858  003F08                     
  1859                           ;main.c: 587:     PIE1bits.TMR1IE = 1;
  1860  003F08  809D               	bsf	157,0,c	;volatile
  1861  003F0A                     
  1862                           ;main.c: 588:     PIR1bits.TMR1IF = 0;
  1863  003F0A  909E               	bcf	158,0,c	;volatile
  1864  003F0C                     
  1865                           ;main.c: 589:     IPR1bits.TMR1IP = 1;
  1866  003F0C  809F               	bsf	159,0,c	;volatile
  1867                           
  1868                           ;main.c: 590:     TMR1L = 0xED;
  1869  003F0E  0EED               	movlw	237
  1870  003F10  6ECE               	movwf	206,c	;volatile
  1871                           
  1872                           ;main.c: 591:     TMR1H = 0x85;
  1873  003F12  0E85               	movlw	133
  1874  003F14  6ECF               	movwf	207,c	;volatile
  1875                           
  1876                           ;main.c: 592:     T1CON = 0b10110000;
  1877  003F16  0EB0               	movlw	176
  1878  003F18  6ECD               	movwf	205,c	;volatile
  1879  003F1A                     
  1880                           ;main.c: 594:     PIE1bits.TMR2IE = 1;
  1881  003F1A  829D               	bsf	157,1,c	;volatile
  1882  003F1C                     
  1883                           ;main.c: 595:     PIR1bits.TMR2IF = 0;
  1884  003F1C  929E               	bcf	158,1,c	;volatile
  1885  003F1E                     
  1886                           ;main.c: 596:     IPR1bits.TMR2IP = 0;
  1887  003F1E  929F               	bcf	159,1,c	;volatile
  1888  003F20                     
  1889                           ;main.c: 597:     RCONbits.IPEN = 1;
  1890  003F20  8ED0               	bsf	208,7,c	;volatile
  1891                           
  1892                           ;main.c: 598:     T2CON = 0b01111111;
  1893  003F22  0E7F               	movlw	127
  1894  003F24  6ECA               	movwf	202,c	;volatile
  1895  003F26                     
  1896                           ;main.c: 600:     ADCON0 = ADCON0 | 1;
  1897  003F26  50C2               	movf	194,w,c	;volatile
  1898  003F28  0901               	iorlw	1
  1899  003F2A  6EC2               	movwf	194,c	;volatile
  1900  003F2C                     
  1901                           ;main.c: 601:     ADCON2 = 0b10010010;
  1902  003F2C  0E92               	movlw	146
  1903  003F2E  6EC0               	movwf	192,c	;volatile
  1904  003F30                     
  1905                           ;main.c: 602:     ADRESH = 0;
  1906  003F30  0E00               	movlw	0
  1907  003F32  6EC4               	movwf	196,c	;volatile
  1908  003F34                     
  1909                           ;main.c: 603:     ADRESL = 0;
  1910  003F34  0E00               	movlw	0
  1911  003F36  6EC3               	movwf	195,c	;volatile
  1912  003F38                     
  1913                           ;main.c: 604:     PIR1bits.ADIF = 0;
  1914  003F38  9C9E               	bcf	158,6,c	;volatile
  1915  003F3A                     
  1916                           ;main.c: 605:     PIE1bits.ADIE = 1;
  1917  003F3A  8C9D               	bsf	157,6,c	;volatile
  1918  003F3C                     
  1919                           ;main.c: 606:     ADCON0bits.ADON = 1;
  1920  003F3C  80C2               	bsf	194,0,c	;volatile
  1921  003F3E  0012               	return		;funcret
  1922  003F40                     __end_of_InitInterrupts:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _InitGameObjects *****************
  1926 ;; Defined at:
  1927 ;;		line 452 in file "main.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  j               2   28[BANK0 ] int 
  1932 ;;  i               2   30[BANK0 ] int 
  1933 ;;  i               2   26[BANK0 ] int 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:       18 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    7
  1950 ;; This function calls:
  1951 ;;		___wmul
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text4
  1958  00397A                     __ptext4:
  1959                           	callstack 0
  1960  00397A                     _InitGameObjects:
  1961                           	callstack 23
  1962  00397A                     
  1963                           ;main.c: 453:     for (int i = 0; i < 4; i++) {
  1964  00397A  0E00               	movlw	0
  1965  00397C  0100               	movlb	0	; () banked
  1966  00397E  6FF3               	movwf	(InitGameObjects@i+1)& (0+255),b
  1967  003980  0E00               	movlw	0
  1968  003982  6FF2               	movwf	InitGameObjects@i& (0+255),b
  1969  003984                     l3874:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 454:         for (int j = 0; j < 16; j++) {
  1973  003984  0E00               	movlw	0
  1974  003986  6FF5               	movwf	(InitGameObjects@j+1)& (0+255),b
  1975  003988  0E00               	movlw	0
  1976  00398A  6FF4               	movwf	InitGameObjects@j& (0+255),b
  1977  00398C                     l3880:
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;main.c: 455:             display[i][j] = ((void*)0);
  1981  00398C  C0F2  F0E6         	movff	InitGameObjects@i,??_InitGameObjects
  1982  003990  C0F3  F0E7         	movff	InitGameObjects@i+1,??_InitGameObjects+1
  1983  003994  0E05               	movlw	5
  1984  003996                     u3765:
  1985  003996  90D8               	bcf	status,0,c
  1986  003998  37E6               	rlcf	??_InitGameObjects& (0+255),f,b
  1987  00399A  37E7               	rlcf	(??_InitGameObjects+1)& (0+255),f,b
  1988  00399C  2EE8               	decfsz	wreg,f,c
  1989  00399E  EFCB  F01C         	goto	u3765
  1990  0039A2  0E00               	movlw	low _display
  1991  0039A4  6FE8               	movwf	(??_InitGameObjects+2)& (0+255),b
  1992  0039A6  0E01               	movlw	high _display
  1993  0039A8  6FE9               	movwf	(??_InitGameObjects+3)& (0+255),b
  1994  0039AA  51E6               	movf	??_InitGameObjects& (0+255),w,b
  1995  0039AC  27E8               	addwf	(??_InitGameObjects+2)& (0+255),f,b
  1996  0039AE  51E7               	movf	(??_InitGameObjects+1)& (0+255),w,b
  1997  0039B0  23E9               	addwfc	(??_InitGameObjects+3)& (0+255),f,b
  1998  0039B2  90D8               	bcf	status,0,c
  1999  0039B4  35F4               	rlcf	InitGameObjects@j& (0+255),w,b
  2000  0039B6  6ED9               	movwf	fsr2l,c
  2001  0039B8  35F5               	rlcf	(InitGameObjects@j+1)& (0+255),w,b
  2002  0039BA  6EDA               	movwf	fsr2h,c
  2003  0039BC  51E8               	movf	(??_InitGameObjects+2)& (0+255),w,b
  2004  0039BE  26D9               	addwf	fsr2l,f,c
  2005  0039C0  51E9               	movf	(??_InitGameObjects+3)& (0+255),w,b
  2006  0039C2  22DA               	addwfc	fsr2h,f,c
  2007  0039C4  0E00               	movlw	0
  2008  0039C6  6EDE               	movwf	postinc2,c
  2009  0039C8  0E00               	movlw	0
  2010  0039CA  6EDD               	movwf	postdec2,c
  2011  0039CC                     
  2012                           ; BSR set to: 0
  2013                           ;main.c: 456:         }
  2014  0039CC  4BF4               	infsnz	InitGameObjects@j& (0+255),f,b
  2015  0039CE  2BF5               	incf	(InitGameObjects@j+1)& (0+255),f,b
  2016  0039D0                     
  2017                           ; BSR set to: 0
  2018  0039D0  BFF5               	btfsc	(InitGameObjects@j+1)& (0+255),7,b
  2019  0039D2  EFF4  F01C         	goto	u3771
  2020  0039D6  51F5               	movf	(InitGameObjects@j+1)& (0+255),w,b
  2021  0039D8  E109               	bnz	u3770
  2022  0039DA  0E10               	movlw	16
  2023  0039DC  5DF4               	subwf	InitGameObjects@j& (0+255),w,b
  2024  0039DE  A0D8               	btfss	status,0,c
  2025  0039E0  EFF4  F01C         	goto	u3771
  2026  0039E4  EFF6  F01C         	goto	u3770
  2027  0039E8                     u3771:
  2028  0039E8  EFC6  F01C         	goto	l3880
  2029  0039EC                     u3770:
  2030  0039EC                     
  2031                           ; BSR set to: 0
  2032                           ;main.c: 457:     }
  2033  0039EC  4BF2               	infsnz	InitGameObjects@i& (0+255),f,b
  2034  0039EE  2BF3               	incf	(InitGameObjects@i+1)& (0+255),f,b
  2035  0039F0                     
  2036                           ; BSR set to: 0
  2037  0039F0  BFF3               	btfsc	(InitGameObjects@i+1)& (0+255),7,b
  2038  0039F2  EF04  F01D         	goto	u3781
  2039  0039F6  51F3               	movf	(InitGameObjects@i+1)& (0+255),w,b
  2040  0039F8  E109               	bnz	u3780
  2041  0039FA  0E04               	movlw	4
  2042  0039FC  5DF2               	subwf	InitGameObjects@i& (0+255),w,b
  2043  0039FE  A0D8               	btfss	status,0,c
  2044  003A00  EF04  F01D         	goto	u3781
  2045  003A04  EF06  F01D         	goto	u3780
  2046  003A08                     u3781:
  2047  003A08  EFC2  F01C         	goto	l3874
  2048  003A0C                     u3780:
  2049  003A0C                     
  2050                           ; BSR set to: 0
  2051                           ;main.c: 459:     selectedPlayer = 0;
  2052  003A0C  0E00               	movlw	0
  2053  003A0E  6E73               	movwf	(_selectedPlayer+1)^0,c
  2054  003A10  0E00               	movlw	0
  2055  003A12  6E72               	movwf	_selectedPlayer^0,c
  2056                           
  2057                           ;main.c: 461:     objs[0].x = 3;
  2058  003A14  0E03               	movlw	3
  2059  003A16  6F84               	movwf	_objs& (0+255),b
  2060                           
  2061                           ;main.c: 462:     objs[0].y = 2;
  2062  003A18  0E02               	movlw	2
  2063  003A1A  6F85               	movwf	(_objs+1)& (0+255),b
  2064                           
  2065                           ;main.c: 463:     objs[0].oldX = 0;
  2066  003A1C  0E00               	movlw	0
  2067  003A1E  6F86               	movwf	(_objs+2)& (0+255),b
  2068                           
  2069                           ;main.c: 464:     objs[0].oldY = 0;
  2070  003A20  0E00               	movlw	0
  2071  003A22  6F87               	movwf	(_objs+3)& (0+255),b
  2072                           
  2073                           ;main.c: 465:     objs[0].type = OT_PLAYERA;
  2074  003A24  0E00               	movlw	0
  2075  003A26  6F89               	movwf	(_objs+5)& (0+255),b
  2076                           
  2077                           ;main.c: 466:     objs[0].state = OS_SELECTED;
  2078  003A28  0E01               	movlw	1
  2079  003A2A  6F8A               	movwf	(_objs+6)& (0+255),b
  2080                           
  2081                           ;main.c: 467:     objs[0].active = 1;
  2082  003A2C  0E01               	movlw	1
  2083  003A2E  6F88               	movwf	(_objs+4)& (0+255),b
  2084                           
  2085                           ;main.c: 469:     objs[1].x = 3;
  2086  003A30  0E03               	movlw	3
  2087  003A32  6F8B               	movwf	(_objs+7)& (0+255),b
  2088                           
  2089                           ;main.c: 470:     objs[1].y = 3;
  2090  003A34  0E03               	movlw	3
  2091  003A36  6F8C               	movwf	(_objs+8)& (0+255),b
  2092                           
  2093                           ;main.c: 471:     objs[1].oldX = 0;
  2094  003A38  0E00               	movlw	0
  2095  003A3A  6F8D               	movwf	(_objs+9)& (0+255),b
  2096                           
  2097                           ;main.c: 472:     objs[1].oldY = 0;
  2098  003A3C  0E00               	movlw	0
  2099  003A3E  6F8E               	movwf	(_objs+10)& (0+255),b
  2100                           
  2101                           ;main.c: 473:     objs[1].type = OT_PLAYERA;
  2102  003A40  0E00               	movlw	0
  2103  003A42  6F90               	movwf	(_objs+12)& (0+255),b
  2104                           
  2105                           ;main.c: 474:     objs[1].state = OS_DEFAULT;
  2106  003A44  0E00               	movlw	0
  2107  003A46  6F91               	movwf	(_objs+13)& (0+255),b
  2108                           
  2109                           ;main.c: 475:     objs[1].active = 1;
  2110  003A48  0E01               	movlw	1
  2111  003A4A  6F8F               	movwf	(_objs+11)& (0+255),b
  2112                           
  2113                           ;main.c: 477:     objs[2].x = 14;
  2114  003A4C  0E0E               	movlw	14
  2115  003A4E  6F92               	movwf	(_objs+14)& (0+255),b
  2116                           
  2117                           ;main.c: 478:     objs[2].y = 2;
  2118  003A50  0E02               	movlw	2
  2119  003A52  6F93               	movwf	(_objs+15)& (0+255),b
  2120                           
  2121                           ;main.c: 479:     objs[2].oldX = 0;
  2122  003A54  0E00               	movlw	0
  2123  003A56  6F94               	movwf	(_objs+16)& (0+255),b
  2124                           
  2125                           ;main.c: 480:     objs[2].oldY = 0;
  2126  003A58  0E00               	movlw	0
  2127  003A5A  6F95               	movwf	(_objs+17)& (0+255),b
  2128                           
  2129                           ;main.c: 481:     objs[2].type = OT_PLAYERB;
  2130  003A5C  0E01               	movlw	1
  2131  003A5E  6F97               	movwf	(_objs+19)& (0+255),b
  2132                           
  2133                           ;main.c: 482:     objs[2].state = OS_DEFAULT;
  2134  003A60  0E00               	movlw	0
  2135  003A62  6F98               	movwf	(_objs+20)& (0+255),b
  2136                           
  2137                           ;main.c: 483:     objs[2].active = 1;
  2138  003A64  0E01               	movlw	1
  2139  003A66  6F96               	movwf	(_objs+18)& (0+255),b
  2140                           
  2141                           ;main.c: 485:     objs[3].x = 14;
  2142  003A68  0E0E               	movlw	14
  2143  003A6A  6F99               	movwf	(_objs+21)& (0+255),b
  2144                           
  2145                           ;main.c: 486:     objs[3].y = 3;
  2146  003A6C  0E03               	movlw	3
  2147  003A6E  6F9A               	movwf	(_objs+22)& (0+255),b
  2148                           
  2149                           ;main.c: 487:     objs[3].oldX = 0;
  2150  003A70  0E00               	movlw	0
  2151  003A72  6F9B               	movwf	(_objs+23)& (0+255),b
  2152                           
  2153                           ;main.c: 488:     objs[3].oldY = 0;
  2154  003A74  0E00               	movlw	0
  2155  003A76  6F9C               	movwf	(_objs+24)& (0+255),b
  2156                           
  2157                           ;main.c: 489:     objs[3].type = OT_PLAYERB;
  2158  003A78  0E01               	movlw	1
  2159  003A7A  6F9E               	movwf	(_objs+26)& (0+255),b
  2160                           
  2161                           ;main.c: 490:     objs[3].state = OS_DEFAULT;
  2162  003A7C  0E00               	movlw	0
  2163  003A7E  6F9F               	movwf	(_objs+27)& (0+255),b
  2164                           
  2165                           ;main.c: 491:     objs[3].active = 1;
  2166  003A80  0E01               	movlw	1
  2167  003A82  6F9D               	movwf	(_objs+25)& (0+255),b
  2168                           
  2169                           ;main.c: 493:     objs[5].x = 9;
  2170  003A84  0E09               	movlw	9
  2171  003A86  6FA7               	movwf	(_objs+35)& (0+255),b
  2172                           
  2173                           ;main.c: 494:     objs[5].y = 2;
  2174  003A88  0E02               	movlw	2
  2175  003A8A  6FA8               	movwf	(_objs+36)& (0+255),b
  2176                           
  2177                           ;main.c: 495:     objs[5].oldX = 0;
  2178  003A8C  0E00               	movlw	0
  2179  003A8E  6FA9               	movwf	(_objs+37)& (0+255),b
  2180                           
  2181                           ;main.c: 496:     objs[5].oldY = 0;
  2182  003A90  0E00               	movlw	0
  2183  003A92  6FAA               	movwf	(_objs+38)& (0+255),b
  2184                           
  2185                           ;main.c: 497:     objs[5].type = OT_FRISBEE;
  2186  003A94  0E02               	movlw	2
  2187  003A96  6FAC               	movwf	(_objs+40)& (0+255),b
  2188                           
  2189                           ;main.c: 498:     objs[5].state = OS_FELL;
  2190  003A98  0E04               	movlw	4
  2191  003A9A  6FAD               	movwf	(_objs+41)& (0+255),b
  2192                           
  2193                           ;main.c: 499:     objs[5].active = 1;
  2194  003A9C  0E01               	movlw	1
  2195  003A9E  6FAB               	movwf	(_objs+39)& (0+255),b
  2196                           
  2197                           ;main.c: 501:     objs[4].x = 1;
  2198  003AA0  0E01               	movlw	1
  2199  003AA2  6FA0               	movwf	(_objs+28)& (0+255),b
  2200                           
  2201                           ;main.c: 502:     objs[4].y = 1;
  2202  003AA4  0E01               	movlw	1
  2203  003AA6  6FA1               	movwf	(_objs+29)& (0+255),b
  2204                           
  2205                           ;main.c: 503:     objs[4].oldX = 0;
  2206  003AA8  0E00               	movlw	0
  2207  003AAA  6FA2               	movwf	(_objs+30)& (0+255),b
  2208                           
  2209                           ;main.c: 504:     objs[4].oldY = 0;
  2210  003AAC  0E00               	movlw	0
  2211  003AAE  6FA3               	movwf	(_objs+31)& (0+255),b
  2212                           
  2213                           ;main.c: 505:     objs[4].type = OT_TARGET;
  2214  003AB0  0E03               	movlw	3
  2215  003AB2  6FA5               	movwf	(_objs+33)& (0+255),b
  2216                           
  2217                           ;main.c: 506:     objs[4].active = 0;
  2218  003AB4  0E00               	movlw	0
  2219  003AB6  6FA4               	movwf	(_objs+32)& (0+255),b
  2220                           
  2221                           ;main.c: 508:     for (int i = 0; i < 6; i++) {
  2222  003AB8  0E00               	movlw	0
  2223  003ABA  6FF7               	movwf	(InitGameObjects@i_954+1)& (0+255),b
  2224  003ABC  0E00               	movlw	0
  2225  003ABE  6FF6               	movwf	InitGameObjects@i_954& (0+255),b
  2226  003AC0                     l3896:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;main.c: 509:         display[objs[i].y][objs[i].x] = &objs[i];
  2230  003AC0  C0F6  F0E0         	movff	InitGameObjects@i_954,___wmul@multiplier
  2231  003AC4  C0F7  F0E1         	movff	InitGameObjects@i_954+1,___wmul@multiplier+1
  2232  003AC8  0E00               	movlw	0
  2233  003ACA  6FE3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2234  003ACC  0E07               	movlw	7
  2235  003ACE  6FE2               	movwf	___wmul@multiplicand& (0+255),b
  2236  003AD0  EC20  F021         	call	___wmul	;wreg free
  2237  003AD4  0E84               	movlw	low _objs
  2238  003AD6  0100               	movlb	0	; () banked
  2239  003AD8  6FE6               	movwf	??_InitGameObjects& (0+255),b
  2240  003ADA  0E00               	movlw	high _objs
  2241  003ADC  6FE7               	movwf	(??_InitGameObjects+1)& (0+255),b
  2242  003ADE  51E0               	movf	?___wmul& (0+255),w,b
  2243  003AE0  27E6               	addwf	??_InitGameObjects& (0+255),f,b
  2244  003AE2  51E1               	movf	(?___wmul+1)& (0+255),w,b
  2245  003AE4  23E7               	addwfc	(??_InitGameObjects+1)& (0+255),f,b
  2246  003AE6  0E07               	movlw	7
  2247  003AE8  03F6               	mulwf	InitGameObjects@i_954& (0+255),b
  2248  003AEA  CFF3 F0E8          	movff	prodl,??_InitGameObjects+2
  2249  003AEE  CFF4 F0E9          	movff	prodh,??_InitGameObjects+3
  2250  003AF2  03F7               	mulwf	(InitGameObjects@i_954+1)& (0+255),b
  2251  003AF4  50F3               	movf	prodl,w,c
  2252  003AF6  27E9               	addwf	(??_InitGameObjects+3)& (0+255),f,b
  2253  003AF8  0E84               	movlw	low _objs
  2254  003AFA  25E8               	addwf	(??_InitGameObjects+2)& (0+255),w,b
  2255  003AFC  6ED9               	movwf	fsr2l,c
  2256  003AFE  0E00               	movlw	high _objs
  2257  003B00  21E9               	addwfc	(??_InitGameObjects+3)& (0+255),w,b
  2258  003B02  6EDA               	movwf	fsr2h,c
  2259  003B04  50DF               	movf	indf2,w,c
  2260  003B06  6FEA               	movwf	(??_InitGameObjects+4)& (0+255),b
  2261  003B08  51EA               	movf	(??_InitGameObjects+4)& (0+255),w,b
  2262  003B0A  0D02               	mullw	2
  2263  003B0C  CFF3 F0EB          	movff	prodl,??_InitGameObjects+5
  2264  003B10  CFF4 F0EC          	movff	prodh,??_InitGameObjects+6
  2265  003B14  0E07               	movlw	7
  2266  003B16  03F6               	mulwf	InitGameObjects@i_954& (0+255),b
  2267  003B18  CFF3 F0ED          	movff	prodl,??_InitGameObjects+7
  2268  003B1C  CFF4 F0EE          	movff	prodh,??_InitGameObjects+8
  2269  003B20  03F7               	mulwf	(InitGameObjects@i_954+1)& (0+255),b
  2270  003B22  50F3               	movf	prodl,w,c
  2271  003B24  27EE               	addwf	(??_InitGameObjects+8)& (0+255),f,b
  2272  003B26  0E85               	movlw	low (_objs+1)
  2273  003B28  25ED               	addwf	(??_InitGameObjects+7)& (0+255),w,b
  2274  003B2A  6ED9               	movwf	fsr2l,c
  2275  003B2C  0E00               	movlw	high (_objs+1)
  2276  003B2E  21EE               	addwfc	(??_InitGameObjects+8)& (0+255),w,b
  2277  003B30  6EDA               	movwf	fsr2h,c
  2278  003B32  50DF               	movf	indf2,w,c
  2279  003B34  6FEF               	movwf	(??_InitGameObjects+9)& (0+255),b
  2280  003B36  51EF               	movf	(??_InitGameObjects+9)& (0+255),w,b
  2281  003B38  0D20               	mullw	32
  2282  003B3A  0E00               	movlw	low _display
  2283  003B3C  6FF0               	movwf	(??_InitGameObjects+10)& (0+255),b
  2284  003B3E  0E01               	movlw	high _display
  2285  003B40  6FF1               	movwf	(??_InitGameObjects+11)& (0+255),b
  2286  003B42  50F3               	movf	243,w,c
  2287  003B44  27F0               	addwf	(??_InitGameObjects+10)& (0+255),f,b
  2288  003B46  50F4               	movf	244,w,c
  2289  003B48  23F1               	addwfc	(??_InitGameObjects+11)& (0+255),f,b
  2290  003B4A  51EB               	movf	(??_InitGameObjects+5)& (0+255),w,b
  2291  003B4C  25F0               	addwf	(??_InitGameObjects+10)& (0+255),w,b
  2292  003B4E  6ED9               	movwf	fsr2l,c
  2293  003B50  51EC               	movf	(??_InitGameObjects+6)& (0+255),w,b
  2294  003B52  21F1               	addwfc	(??_InitGameObjects+11)& (0+255),w,b
  2295  003B54  6EDA               	movwf	fsr2h,c
  2296  003B56  C0E6  FFDE         	movff	??_InitGameObjects,postinc2
  2297  003B5A  C0E7  FFDD         	movff	??_InitGameObjects+1,postdec2
  2298  003B5E                     
  2299                           ; BSR set to: 0
  2300                           ;main.c: 510:     }
  2301  003B5E  4BF6               	infsnz	InitGameObjects@i_954& (0+255),f,b
  2302  003B60  2BF7               	incf	(InitGameObjects@i_954+1)& (0+255),f,b
  2303  003B62                     
  2304                           ; BSR set to: 0
  2305  003B62  BFF7               	btfsc	(InitGameObjects@i_954+1)& (0+255),7,b
  2306  003B64  EFBD  F01D         	goto	u3791
  2307  003B68  51F7               	movf	(InitGameObjects@i_954+1)& (0+255),w,b
  2308  003B6A  E109               	bnz	u3790
  2309  003B6C  0E06               	movlw	6
  2310  003B6E  5DF6               	subwf	InitGameObjects@i_954& (0+255),w,b
  2311  003B70  A0D8               	btfss	status,0,c
  2312  003B72  EFBD  F01D         	goto	u3791
  2313  003B76  EFBF  F01D         	goto	u3790
  2314  003B7A                     u3791:
  2315  003B7A  EF60  F01D         	goto	l3896
  2316  003B7E                     u3790:
  2317  003B7E                     
  2318                           ; BSR set to: 0
  2319  003B7E  0012               	return		;funcret
  2320  003B80                     __end_of_InitGameObjects:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function ___wmul *****************
  2324 ;; Defined at:
  2325 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  multiplier      2    8[BANK0 ] unsigned int 
  2328 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  product         2   12[BANK0 ] unsigned int 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2    8[BANK0 ] unsigned int 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, prodl, prodh
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;Total ram usage:        6 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    6
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_UpdateAndPrintDisplay2D
  2351 ;;		_InitGameObjects
  2352 ;;		_UpdateAndPrintDisplay
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text5
  2357  004240                     __ptext5:
  2358                           	callstack 0
  2359  004240                     ___wmul:
  2360                           	callstack 23
  2361  004240  0100               	movlb	0	; () banked
  2362  004242  51E0               	movf	___wmul@multiplier& (0+255),w,b
  2363  004244  03E2               	mulwf	___wmul@multiplicand& (0+255),b
  2364  004246  CFF3 F0E4          	movff	prodl,___wmul@product
  2365  00424A  CFF4 F0E5          	movff	prodh,___wmul@product+1
  2366  00424E  51E0               	movf	___wmul@multiplier& (0+255),w,b
  2367  004250  03E3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2368  004252  50F3               	movf	243,w,c
  2369  004254  27E5               	addwf	(___wmul@product+1)& (0+255),f,b
  2370  004256  51E1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2371  004258  03E2               	mulwf	___wmul@multiplicand& (0+255),b
  2372  00425A  50F3               	movf	243,w,c
  2373  00425C  27E5               	addwf	(___wmul@product+1)& (0+255),f,b
  2374  00425E                     
  2375                           ; BSR set to: 0
  2376  00425E  C0E4  F0E0         	movff	___wmul@product,?___wmul
  2377  004262  C0E5  F0E1         	movff	___wmul@product+1,?___wmul+1
  2378  004266                     
  2379                           ; BSR set to: 0
  2380  004266  0012               	return		;funcret
  2381  004268                     __end_of___wmul:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _AddCustomCharacters *****************
  2385 ;; Defined at:
  2386 ;;		line 161 in file "./lcd.h"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    9
  2407 ;; This function calls:
  2408 ;;		_LCDAddSpecialCharacter
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text6
  2415  003FD2                     __ptext6:
  2416                           	callstack 0
  2417  003FD2                     _AddCustomCharacters:
  2418                           	callstack 21
  2419  003FD2                     
  2420                           ;./lcd.h: 162:     LCDAddSpecialCharacter(0, teamA_player);
  2421  003FD2  0ED0               	movlw	low _teamA_player
  2422  003FD4  0100               	movlb	0	; () banked
  2423  003FD6  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2424  003FD8  0E00               	movlw	high _teamA_player
  2425  003FDA  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2426  003FDC  0E00               	movlw	0
  2427  003FDE  ECCD  F020         	call	_LCDAddSpecialCharacter
  2428                           
  2429                           ;./lcd.h: 163:     LCDAddSpecialCharacter(1, teamB_player);
  2430  003FE2  0EC8               	movlw	low _teamB_player
  2431  003FE4  0100               	movlb	0	; () banked
  2432  003FE6  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2433  003FE8  0E00               	movlw	high _teamB_player
  2434  003FEA  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2435  003FEC  0E01               	movlw	1
  2436  003FEE  ECCD  F020         	call	_LCDAddSpecialCharacter
  2437                           
  2438                           ;./lcd.h: 164:     LCDAddSpecialCharacter(2, selected_teamA_player);
  2439  003FF2  0EC0               	movlw	low _selected_teamA_player
  2440  003FF4  0100               	movlb	0	; () banked
  2441  003FF6  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2442  003FF8  0E00               	movlw	high _selected_teamA_player
  2443  003FFA  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2444  003FFC  0E02               	movlw	2
  2445  003FFE  ECCD  F020         	call	_LCDAddSpecialCharacter
  2446                           
  2447                           ;./lcd.h: 165:     LCDAddSpecialCharacter(3, selected_teamB_player);
  2448  004002  0EB8               	movlw	low _selected_teamB_player
  2449  004004  0100               	movlb	0	; () banked
  2450  004006  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2451  004008  0E00               	movlw	high _selected_teamB_player
  2452  00400A  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2453  00400C  0E03               	movlw	3
  2454  00400E  ECCD  F020         	call	_LCDAddSpecialCharacter
  2455                           
  2456                           ;./lcd.h: 166:     LCDAddSpecialCharacter(4, selected_teamA_player_with_frisbee);
  2457  004012  0EB0               	movlw	low _selected_teamA_player_with_frisbee
  2458  004014  0100               	movlb	0	; () banked
  2459  004016  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2460  004018  0E00               	movlw	high _selected_teamA_player_with_frisbee
  2461  00401A  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2462  00401C  0E04               	movlw	4
  2463  00401E  ECCD  F020         	call	_LCDAddSpecialCharacter
  2464                           
  2465                           ;./lcd.h: 167:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
  2466  004022  0E60               	movlw	low _selected_teamB_player_with_frisbee
  2467  004024  0100               	movlb	0	; () banked
  2468  004026  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2469  004028  0E00               	movlw	high _selected_teamB_player_with_frisbee
  2470  00402A  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2471  00402C  0E05               	movlw	5
  2472  00402E  ECCD  F020         	call	_LCDAddSpecialCharacter
  2473                           
  2474                           ;./lcd.h: 168:     LCDAddSpecialCharacter(6, frisbeeChar);
  2475  004032  0E58               	movlw	low _frisbeeChar
  2476  004034  0100               	movlb	0	; () banked
  2477  004036  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2478  004038  0E00               	movlw	high _frisbeeChar
  2479  00403A  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2480  00403C  0E06               	movlw	6
  2481  00403E  ECCD  F020         	call	_LCDAddSpecialCharacter
  2482                           
  2483                           ;./lcd.h: 169:     LCDAddSpecialCharacter(7, frisbee_target);
  2484  004042  0E50               	movlw	low _frisbee_target
  2485  004044  0100               	movlb	0	; () banked
  2486  004046  6FE3               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2487  004048  0E00               	movlw	high _frisbee_target
  2488  00404A  6FE4               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2489  00404C  0E07               	movlw	7
  2490  00404E  ECCD  F020         	call	_LCDAddSpecialCharacter
  2491  004052  0012               	return		;funcret
  2492  004054                     __end_of_AddCustomCharacters:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _LCDAddSpecialCharacter *****************
  2496 ;; Defined at:
  2497 ;;		line 145 in file "./lcd.h"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  character_in    1    wreg     unsigned char 
  2500 ;;  data            2   11[BANK0 ] PTR unsigned char 
  2501 ;;		 -> frisbee_target(8), frisbeeChar(8), selected_teamB_player_with_frisbee(8), selected_teamA_player_with_frisbee(8),
      + 
  2502 ;;		 -> selected_teamB_player(8), selected_teamA_player(8), teamB_player(8), teamA_player(8), 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  character_in    1   13[BANK0 ] unsigned char 
  2505 ;;  i               1   14[BANK0 ] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;Total ram usage:        4 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    8
  2522 ;; This function calls:
  2523 ;;		_LCDCmd
  2524 ;;		_LCDDat
  2525 ;;		_LCDGoto
  2526 ;; This function is called by:
  2527 ;;		_AddCustomCharacters
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text7
  2532  00419A                     __ptext7:
  2533                           	callstack 0
  2534  00419A                     _LCDAddSpecialCharacter:
  2535                           	callstack 21
  2536                           
  2537                           ;incstack = 0
  2538                           ;LCDAddSpecialCharacter@character_index stored from wreg
  2539  00419A  0100               	movlb	0	; () banked
  2540  00419C  6FE5               	movwf	LCDAddSpecialCharacter@character_index& (0+255),b
  2541  00419E                     
  2542                           ;./lcd.h: 151:     LCDCmd(0b01000000+(character_index*8));
  2543  00419E  0100               	movlb	0	; () banked
  2544  0041A0  51E5               	movf	LCDAddSpecialCharacter@character_index& (0+255),w,b
  2545  0041A2  0D08               	mullw	8
  2546  0041A4  50F3               	movf	243,w,c
  2547  0041A6  0F40               	addlw	64
  2548  0041A8  EC59  F021         	call	_LCDCmd
  2549  0041AC                     
  2550                           ;./lcd.h: 152:     for(byte i=0; i < 8; i++) {
  2551  0041AC  0E00               	movlw	0
  2552  0041AE  0100               	movlb	0	; () banked
  2553  0041B0  6FE6               	movwf	LCDAddSpecialCharacter@i& (0+255),b
  2554  0041B2                     l3810:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;./lcd.h: 153:         LCDDat(data[i]);
  2558  0041B2  51E6               	movf	LCDAddSpecialCharacter@i& (0+255),w,b
  2559  0041B4  25E3               	addwf	LCDAddSpecialCharacter@data& (0+255),w,b
  2560  0041B6  6ED9               	movwf	fsr2l,c
  2561  0041B8  0E00               	movlw	0
  2562  0041BA  21E4               	addwfc	(LCDAddSpecialCharacter@data+1)& (0+255),w,b
  2563  0041BC  6EDA               	movwf	fsr2h,c
  2564  0041BE  50DF               	movf	indf2,w,c
  2565  0041C0  EC47  F021         	call	_LCDDat
  2566  0041C4                     
  2567                           ;./lcd.h: 154:     }
  2568  0041C4  0100               	movlb	0	; () banked
  2569  0041C6  2BE6               	incf	LCDAddSpecialCharacter@i& (0+255),f,b
  2570  0041C8                     
  2571                           ; BSR set to: 0
  2572  0041C8  0E07               	movlw	7
  2573  0041CA  65E6               	cpfsgt	LCDAddSpecialCharacter@i& (0+255),b
  2574  0041CC  EFEA  F020         	goto	u3721
  2575  0041D0  EFEC  F020         	goto	u3720
  2576  0041D4                     u3721:
  2577  0041D4  EFD9  F020         	goto	l3810
  2578  0041D8                     u3720:
  2579  0041D8                     
  2580                           ; BSR set to: 0
  2581                           ;./lcd.h: 156:     LCDGoto(lcd_x, lcd_y);
  2582  0041D8  C0AE  F0E1         	movff	_lcd_y,LCDGoto@p_1
  2583  0041DC  51AF               	movf	_lcd_x& (0+255),w,b
  2584  0041DE  EC2A  F020         	call	_LCDGoto
  2585  0041E2  0012               	return		;funcret
  2586  0041E4                     __end_of_LCDAddSpecialCharacter:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _LCDGoto *****************
  2590 ;; Defined at:
  2591 ;;		line 88 in file "./lcd.h"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  p_2             1    wreg     unsigned char 
  2594 ;;  p_1             1    9[BANK0 ] unsigned char 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  p_2             1   10[BANK0 ] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    7
  2613 ;; This function calls:
  2614 ;;		_LCDCmd
  2615 ;; This function is called by:
  2616 ;;		_LCDAddSpecialCharacter
  2617 ;;		_UpdateAndPrintDisplay2D
  2618 ;;		_LCDStr
  2619 ;;		_UpdateAndPrintDisplay
  2620 ;;		_PrintPORTBandIntCounts
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text8
  2625  004054                     __ptext8:
  2626                           	callstack 0
  2627  004054                     _LCDGoto:
  2628                           	callstack 22
  2629                           
  2630                           ;incstack = 0
  2631                           ;LCDGoto@p_2 stored from wreg
  2632  004054  0100               	movlb	0	; () banked
  2633  004056  6FE2               	movwf	LCDGoto@p_2& (0+255),b
  2634  004058                     
  2635                           ;./lcd.h: 89:   if(p_1==1) {
  2636  004058  0100               	movlb	0	; () banked
  2637  00405A  05E1               	decf	LCDGoto@p_1& (0+255),w,b
  2638  00405C  A4D8               	btfss	status,2,c
  2639  00405E  EF33  F020         	goto	u3691
  2640  004062  EF35  F020         	goto	u3690
  2641  004066                     u3691:
  2642  004066  EF3C  F020         	goto	l3788
  2643  00406A                     u3690:
  2644  00406A                     
  2645                           ; BSR set to: 0
  2646                           ;./lcd.h: 90:     LCDCmd(0x80 +((p_2-1)%16));
  2647  00406A  05E2               	decf	LCDGoto@p_2& (0+255),w,b
  2648  00406C  0B0F               	andlw	15
  2649  00406E  0F80               	addlw	128
  2650  004070  EC59  F021         	call	_LCDCmd
  2651                           
  2652                           ;./lcd.h: 91:   }
  2653  004074  EF61  F020         	goto	l3798
  2654  004078                     l3788:
  2655                           
  2656                           ; BSR set to: 0
  2657  004078  0E02               	movlw	2
  2658  00407A  19E1               	xorwf	LCDGoto@p_1& (0+255),w,b
  2659  00407C  A4D8               	btfss	status,2,c
  2660  00407E  EF43  F020         	goto	u3701
  2661  004082  EF45  F020         	goto	u3700
  2662  004086                     u3701:
  2663  004086  EF4C  F020         	goto	l3792
  2664  00408A                     u3700:
  2665  00408A                     
  2666                           ; BSR set to: 0
  2667                           ;./lcd.h: 93:     LCDCmd(0xC0 +((p_2-1)%16));
  2668  00408A  05E2               	decf	LCDGoto@p_2& (0+255),w,b
  2669  00408C  0B0F               	andlw	15
  2670  00408E  0FC0               	addlw	192
  2671  004090  EC59  F021         	call	_LCDCmd
  2672                           
  2673                           ;./lcd.h: 94:   }
  2674  004094  EF61  F020         	goto	l3798
  2675  004098                     l3792:
  2676                           
  2677                           ; BSR set to: 0
  2678  004098  0E03               	movlw	3
  2679  00409A  19E1               	xorwf	LCDGoto@p_1& (0+255),w,b
  2680  00409C  A4D8               	btfss	status,2,c
  2681  00409E  EF53  F020         	goto	u3711
  2682  0040A2  EF55  F020         	goto	u3710
  2683  0040A6                     u3711:
  2684  0040A6  EF5C  F020         	goto	l3796
  2685  0040AA                     u3710:
  2686  0040AA                     
  2687                           ; BSR set to: 0
  2688                           ;./lcd.h: 96:     LCDCmd(0x90 +((p_2-1)%16));
  2689  0040AA  05E2               	decf	LCDGoto@p_2& (0+255),w,b
  2690  0040AC  0B0F               	andlw	15
  2691  0040AE  0F90               	addlw	144
  2692  0040B0  EC59  F021         	call	_LCDCmd
  2693                           
  2694                           ;./lcd.h: 97:   }
  2695  0040B4  EF61  F020         	goto	l3798
  2696  0040B8                     l3796:
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;./lcd.h: 99:     LCDCmd(0xD0 +((p_2-1)%16));
  2700  0040B8  05E2               	decf	LCDGoto@p_2& (0+255),w,b
  2701  0040BA  0B0F               	andlw	15
  2702  0040BC  0FD0               	addlw	208
  2703  0040BE  EC59  F021         	call	_LCDCmd
  2704  0040C2                     l3798:
  2705                           
  2706                           ;./lcd.h: 101:   lcd_x = p_2;
  2707  0040C2  C0E2  F0AF         	movff	LCDGoto@p_2,_lcd_x
  2708  0040C6                     
  2709                           ;./lcd.h: 102:   lcd_y = p_1;
  2710  0040C6  C0E1  F0AE         	movff	LCDGoto@p_1,_lcd_y
  2711  0040CA  0012               	return		;funcret
  2712  0040CC                     __end_of_LCDGoto:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _LCDCmd *****************
  2716 ;; Defined at:
  2717 ;;		line 64 in file "./lcd.h"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  cmd             1    wreg     unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  cmd             1    8[BANK0 ] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;Total ram usage:        1 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    6
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_LCDGoto
  2742 ;;		_InitLCD
  2743 ;;		_LCDAddSpecialCharacter
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text9
  2748  0042B2                     __ptext9:
  2749                           	callstack 0
  2750  0042B2                     _LCDCmd:
  2751                           	callstack 22
  2752                           
  2753                           ;incstack = 0
  2754                           ;LCDCmd@cmd stored from wreg
  2755  0042B2  0100               	movlb	0	; () banked
  2756  0042B4  6FE0               	movwf	LCDCmd@cmd& (0+255),b
  2757  0042B6                     
  2758                           ;./lcd.h: 65:   PORTEbits.RE1 = 0;
  2759  0042B6  9284               	bcf	132,1,c	;volatile
  2760                           
  2761                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  2762  0042B8  9484               	bcf	132,2,c	;volatile
  2763  0042BA                     
  2764                           ;./lcd.h: 67:   PORTD = cmd;
  2765  0042BA  C0E0  FF83         	movff	LCDCmd@cmd,3971	;volatile
  2766  0042BE                     
  2767                           ;./lcd.h: 68:   PORTEbits.RE1 = 1;
  2768  0042BE  8284               	bsf	132,1,c	;volatile
  2769  0042C0                     
  2770                           ;./lcd.h: 69:   _delay((unsigned long)((500)*(10000000L/4000000.0)));
  2771  0042C0  0EFA               	movlw	250
  2772  0042C2                     u4197:
  2773  0042C2  D000               	nop2	
  2774  0042C4  2EE8               	decfsz	wreg,f,c
  2775  0042C6  D7FD               	bra	u4197
  2776  0042C8                     
  2777                           ;./lcd.h: 70:   PORTEbits.RE1 = 0;
  2778  0042C8  9284               	bcf	132,1,c	;volatile
  2779  0042CA                     
  2780                           ;./lcd.h: 71:   _delay((unsigned long)((500)*(10000000L/4000000.0)));
  2781  0042CA  0EFA               	movlw	250
  2782  0042CC                     u4207:
  2783  0042CC  D000               	nop2	
  2784  0042CE  2EE8               	decfsz	wreg,f,c
  2785  0042D0  D7FD               	bra	u4207
  2786  0042D2  0012               	return		;funcret
  2787  0042D4                     __end_of_LCDCmd:
  2788                           	callstack 0
  2789                           
  2790 ;; *************** function _LCDDat *****************
  2791 ;; Defined at:
  2792 ;;		line 74 in file "./lcd.h"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  dat             1    wreg     unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  dat             1    8[BANK0 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        1 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    6
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_LCDAddSpecialCharacter
  2817 ;;		_UpdateAndPrintDisplay2D
  2818 ;;		_LCDStr
  2819 ;;		_UpdateAndPrintDisplay
  2820 ;;		_PrintPORTBandIntCounts
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text10
  2825  00428E                     __ptext10:
  2826                           	callstack 0
  2827  00428E                     _LCDDat:
  2828                           	callstack 23
  2829                           
  2830                           ;incstack = 0
  2831                           ;LCDDat@dat stored from wreg
  2832  00428E  0100               	movlb	0	; () banked
  2833  004290  6FE0               	movwf	LCDDat@dat& (0+255),b
  2834  004292                     
  2835                           ;./lcd.h: 75:   PORTEbits.RE1 = 0;
  2836  004292  9284               	bcf	132,1,c	;volatile
  2837                           
  2838                           ;./lcd.h: 76:   PORTEbits.RE2 = 1;
  2839  004294  8484               	bsf	132,2,c	;volatile
  2840  004296                     
  2841                           ;./lcd.h: 77:   PORTD = dat;
  2842  004296  C0E0  FF83         	movff	LCDDat@dat,3971	;volatile
  2843  00429A                     
  2844                           ;./lcd.h: 78:   PORTEbits.RE1 = 1;
  2845  00429A  8284               	bsf	132,1,c	;volatile
  2846  00429C                     
  2847                           ;./lcd.h: 79:   _delay((unsigned long)((500)*(10000000L/4000000.0)));
  2848  00429C  0EFA               	movlw	250
  2849  00429E                     u4217:
  2850  00429E  D000               	nop2	
  2851  0042A0  2EE8               	decfsz	wreg,f,c
  2852  0042A2  D7FD               	bra	u4217
  2853  0042A4                     
  2854                           ;./lcd.h: 80:   PORTEbits.RE1 = 0;
  2855  0042A4  9284               	bcf	132,1,c	;volatile
  2856  0042A6                     
  2857                           ;./lcd.h: 81:   _delay((unsigned long)((500)*(10000000L/4000000.0)));
  2858  0042A6  0EFA               	movlw	250
  2859  0042A8                     u4227:
  2860  0042A8  D000               	nop2	
  2861  0042AA  2EE8               	decfsz	wreg,f,c
  2862  0042AC  D7FD               	bra	u4227
  2863  0042AE                     
  2864                           ;./lcd.h: 82:   PORTEbits.RE2 = 0;
  2865  0042AE  9484               	bcf	132,2,c	;volatile
  2866  0042B0  0012               	return		;funcret
  2867  0042B2                     __end_of_LCDDat:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _lowIsr *****************
  2871 ;; Defined at:
  2872 ;;		line 214 in file "main.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  temp_a          1    7[BANK0 ] unsigned char 
  2877 ;;  temp_d          1    6[BANK0 ] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;Total ram usage:        8 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    5
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		Interrupt level 1
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	intcodelo
  2902  000018                     __pintcodelo:
  2903                           	callstack 0
  2904  000018                     _lowIsr:
  2905                           	callstack 21
  2906                           
  2907                           ;incstack = 0
  2908  000018  807C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2909  00001A  CFD8 F0D9          	movff	status,??_lowIsr+1
  2910  00001E  CFE8 F0DA          	movff	wreg,??_lowIsr+2
  2911  000022  CFE0 F0DB          	movff	bsr,??_lowIsr+3
  2912  000026  CFD9 F0DC          	movff	fsr2l,??_lowIsr+4
  2913  00002A  CFDA F0DD          	movff	fsr2h,??_lowIsr+5
  2914  00002E                     
  2915                           ;main.c: 215:     PIR1bits.TMR2IF = 0;
  2916  00002E  929E               	bcf	158,1,c	;volatile
  2917                           
  2918                           ;main.c: 216:     PIE1bits.TMR2IE = 0;
  2919  000030  929D               	bcf	157,1,c	;volatile
  2920                           
  2921                           ;main.c: 218:     byte temp_d = PORTD;
  2922  000032  CF83 F0DE          	movff	3971,lowIsr@temp_d	;volatile
  2923                           
  2924                           ;main.c: 219:     byte temp_a = PORTA;
  2925  000036  CF80 F0DF          	movff	3968,lowIsr@temp_a	;volatile
  2926  00003A                     
  2927                           ;main.c: 221:     LATA = 0b1000;
  2928  00003A  0E08               	movlw	8
  2929  00003C  6E89               	movwf	137,c	;volatile
  2930  00003E                     
  2931                           ;main.c: 222:     LATD = segValues[scoreA];
  2932  00003E  0EBC               	movlw	low _segValues
  2933  000040  0100               	movlb	0	; () banked
  2934  000042  2582               	addwf	_scoreA& (0+255),w,b
  2935  000044  6ED9               	movwf	fsr2l,c
  2936  000046  0E01               	movlw	high _segValues
  2937  000048  2183               	addwfc	(_scoreA+1)& (0+255),w,b
  2938  00004A  6EDA               	movwf	fsr2h,c
  2939  00004C  50DF               	movf	indf2,w,c
  2940  00004E  6E8C               	movwf	140,c	;volatile
  2941  000050                     
  2942                           ; BSR set to: 0
  2943                           ;main.c: 223:     _delay((unsigned long)((4000)*(10000000L/4000000.0)));
  2944  000050  0E0D               	movlw	13
  2945  000052  0100               	movlb	0	; () banked
  2946  000054  6FD8               	movwf	??_lowIsr& (0+255),b
  2947  000056  0EFB               	movlw	251
  2948  000058                     i1u423_27:
  2949  000058  2EE8               	decfsz	wreg,f,c
  2950  00005A  D7FE               	bra	i1u423_27
  2951  00005C  2FD8               	decfsz	??_lowIsr& (0+255),f,b
  2952  00005E  D7FC               	bra	i1u423_27
  2953  000060  D000               	nop2	
  2954  000062                     
  2955                           ;main.c: 225:     LATA = 0b10000;
  2956  000062  0E10               	movlw	16
  2957  000064  6E89               	movwf	137,c	;volatile
  2958  000066                     
  2959                           ;main.c: 226:     LATD = segValues[10];
  2960  000066  C1C6  FF8C         	movff	_segValues+10,3980	;volatile
  2961  00006A                     
  2962                           ;main.c: 227:     _delay((unsigned long)((4000)*(10000000L/4000000.0)));
  2963  00006A  0E0D               	movlw	13
  2964  00006C  0100               	movlb	0	; () banked
  2965  00006E  6FD8               	movwf	??_lowIsr& (0+255),b
  2966  000070  0EFB               	movlw	251
  2967  000072                     i1u424_27:
  2968  000072  2EE8               	decfsz	wreg,f,c
  2969  000074  D7FE               	bra	i1u424_27
  2970  000076  2FD8               	decfsz	??_lowIsr& (0+255),f,b
  2971  000078  D7FC               	bra	i1u424_27
  2972  00007A  D000               	nop2	
  2973  00007C                     
  2974                           ;main.c: 229:     LATA = 0b100000;
  2975  00007C  0E20               	movlw	32
  2976  00007E  6E89               	movwf	137,c	;volatile
  2977  000080                     
  2978                           ;main.c: 230:     LATD = segValues[scoreB];
  2979  000080  0EBC               	movlw	low _segValues
  2980  000082  0100               	movlb	0	; () banked
  2981  000084  2580               	addwf	_scoreB& (0+255),w,b
  2982  000086  6ED9               	movwf	fsr2l,c
  2983  000088  0E01               	movlw	high _segValues
  2984  00008A  2181               	addwfc	(_scoreB+1)& (0+255),w,b
  2985  00008C  6EDA               	movwf	fsr2h,c
  2986  00008E  50DF               	movf	indf2,w,c
  2987  000090  6E8C               	movwf	140,c	;volatile
  2988  000092                     
  2989                           ; BSR set to: 0
  2990                           ;main.c: 231:     _delay((unsigned long)((4000)*(10000000L/4000000.0)));
  2991  000092  0E0D               	movlw	13
  2992  000094  0100               	movlb	0	; () banked
  2993  000096  6FD8               	movwf	??_lowIsr& (0+255),b
  2994  000098  0EFB               	movlw	251
  2995  00009A                     i1u425_27:
  2996  00009A  2EE8               	decfsz	wreg,f,c
  2997  00009C  D7FE               	bra	i1u425_27
  2998  00009E  2FD8               	decfsz	??_lowIsr& (0+255),f,b
  2999  0000A0  D7FC               	bra	i1u425_27
  3000  0000A2  D000               	nop2	
  3001  0000A4                     
  3002                           ;main.c: 233:     LATA = temp_a;
  3003  0000A4  C0DF  FF89         	movff	lowIsr@temp_a,3977	;volatile
  3004  0000A8                     
  3005                           ;main.c: 234:     LATD = temp_d;
  3006  0000A8  C0DE  FF8C         	movff	lowIsr@temp_d,3980	;volatile
  3007  0000AC                     
  3008                           ;main.c: 236:     PIE1bits.TMR2IE = 1;
  3009  0000AC  829D               	bsf	157,1,c	;volatile
  3010  0000AE  C0DD  FFDA         	movff	??_lowIsr+5,fsr2h
  3011  0000B2  C0DC  FFD9         	movff	??_lowIsr+4,fsr2l
  3012  0000B6  C0DB  FFE0         	movff	??_lowIsr+3,bsr
  3013  0000BA  C0DA  FFE8         	movff	??_lowIsr+2,wreg
  3014  0000BE  C0D9  FFD8         	movff	??_lowIsr+1,status
  3015  0000C2  907C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3016  0000C4  0010               	retfie	
  3017  0000C6                     __end_of_lowIsr:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _highIsr *****************
  3021 ;; Defined at:
  3022 ;;		line 49 in file "main.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:       22 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    4
  3043 ;; This function calls:
  3044 ;;		_CheckIfCaughtFrisbee
  3045 ;;		_MoveEveryone
  3046 ;;		_SetupDebouncingTimer
  3047 ;;		_compute_frisbee_target_and_route
  3048 ;;		_down
  3049 ;;		_left
  3050 ;;		_right
  3051 ;;		_up
  3052 ;;		i2___wmul
  3053 ;; This function is called by:
  3054 ;;		Interrupt level 2
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	intcode
  3059  000008                     __pintcode:
  3060                           	callstack 0
  3061  000008                     _highIsr:
  3062                           	callstack 21
  3063                           
  3064                           ;incstack = 0
  3065  000008  827C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3066  00000A  ED03  F008         	call	int_func,f	;refresh shadow registers
  3067                           
  3068                           	psect	intcode_body
  3069  001006                     __pintcode_body:
  3070                           	callstack 21
  3071  001006                     int_func:
  3072                           	callstack 21
  3073  001006  0006               	pop		; remove dummy address from shadow register refresh
  3074  001008  CFE1 F03D          	movff	fsr1l,??_highIsr+8
  3075  00100C  CFE2 F03E          	movff	fsr1h,??_highIsr+9
  3076  001010  CFD9 F03F          	movff	fsr2l,??_highIsr+10
  3077  001014  CFDA F040          	movff	fsr2h,??_highIsr+11
  3078  001018  CFF3 F041          	movff	prodl,??_highIsr+12
  3079  00101C  CFF4 F042          	movff	prodh,??_highIsr+13
  3080  001020                     
  3081                           ;main.c: 50:     portbVals = PORTB;
  3082  001020  CF81 F07A          	movff	3969,_portbVals	;volatile
  3083                           
  3084                           ;main.c: 66:     if (INTCONbits.TMR0IF) {
  3085  001024  A4F2               	btfss	242,2,c	;volatile
  3086  001026  EF17  F008         	goto	i2u320_41
  3087  00102A  EF19  F008         	goto	i2u320_40
  3088  00102E                     i2u320_41:
  3089  00102E  EF1D  F008         	goto	i2l3268
  3090  001032                     i2u320_40:
  3091  001032                     
  3092                           ;main.c: 67:         acceptInterrupts = 1;
  3093  001032  0E01               	movlw	1
  3094  001034  6E7B               	movwf	_acceptInterrupts^0,c
  3095  001036                     
  3096                           ;main.c: 68:         T0CONbits.TMR0ON = 0;
  3097  001036  9ED5               	bcf	213,7,c	;volatile
  3098  001038                     
  3099                           ;main.c: 69:         INTCONbits.TMR0IF = 0;
  3100  001038  94F2               	bcf	242,2,c	;volatile
  3101  00103A                     i2l3268:
  3102                           
  3103                           ;main.c: 72:     if (PIR1bits.TMR1IF) {
  3104  00103A  A09E               	btfss	158,0,c	;volatile
  3105  00103C  EF22  F008         	goto	i2u321_41
  3106  001040  EF24  F008         	goto	i2u321_40
  3107  001044                     i2u321_41:
  3108  001044  EF4C  F009         	goto	i2l3332
  3109  001048                     i2u321_40:
  3110  001048                     
  3111                           ;main.c: 73:         PIR1bits.TMR1IF = 0;
  3112  001048  909E               	bcf	158,0,c	;volatile
  3113                           
  3114                           ;main.c: 74:         T1CONbits.TMR1ON = 0;
  3115  00104A  90CD               	bcf	205,0,c	;volatile
  3116  00104C                     
  3117                           ;main.c: 75:         TMR1L = 0xED;
  3118  00104C  0EED               	movlw	237
  3119  00104E  6ECE               	movwf	206,c	;volatile
  3120                           
  3121                           ;main.c: 76:         TMR1H = 0x85;
  3122  001050  0E85               	movlw	133
  3123  001052  6ECF               	movwf	207,c	;volatile
  3124  001054                     
  3125                           ;main.c: 77:         T1CONbits.TMR1ON = 1;
  3126  001054  80CD               	bsf	205,0,c	;volatile
  3127  001056                     
  3128                           ;main.c: 79:         pulseCounter++;
  3129  001056  4A6E               	infsnz	_pulseCounter^0,f,c
  3130  001058  2A6F               	incf	(_pulseCounter+1)^0,f,c
  3131  00105A                     
  3132                           ;main.c: 81:         ADCON0bits.GO = 1;
  3133  00105A  82C2               	bsf	194,1,c	;volatile
  3134  00105C                     i2l248:
  3135  00105C  B2C2               	btfsc	194,1,c	;volatile
  3136  00105E  EF33  F008         	goto	i2u322_41
  3137  001062  EF35  F008         	goto	i2u322_40
  3138  001066                     i2u322_41:
  3139  001066  EF2E  F008         	goto	i2l248
  3140  00106A                     i2u322_40:
  3141  00106A                     
  3142                           ;main.c: 84:         digital = (ADRESH << 8) + ADRESL;
  3143  00106A  50C4               	movf	196,w,c	;volatile
  3144  00106C  6E36               	movwf	(??_highIsr+1)^0,c
  3145  00106E  6A35               	clrf	??_highIsr^0,c
  3146  001070  50C3               	movf	195,w,c	;volatile
  3147  001072  2435               	addwf	??_highIsr^0,w,c
  3148  001074  6E68               	movwf	_digital^0,c
  3149  001076  0E00               	movlw	0
  3150  001078  2036               	addwfc	(??_highIsr+1)^0,w,c
  3151  00107A  6E69               	movwf	(_digital+1)^0,c
  3152                           
  3153                           ;main.c: 85:         if (digital < 256)
  3154  00107C  BE69               	btfsc	(_digital+1)^0,7,c
  3155  00107E  EF49  F008         	goto	i2u323_40
  3156  001082  0469               	decf	(_digital+1)^0,w,c
  3157  001084  B0D8               	btfsc	status,0,c
  3158  001086  EF47  F008         	goto	i2u323_41
  3159  00108A  EF49  F008         	goto	i2u323_40
  3160  00108E                     i2u323_41:
  3161  00108E  EF4F  F008         	goto	i2l3284
  3162  001092                     i2u323_40:
  3163  001092                     
  3164                           ;main.c: 86:             nextGameSpeed = 4;
  3165  001092  0E00               	movlw	0
  3166  001094  6E4C               	movwf	(_nextGameSpeed+1)^0,c
  3167  001096  0E04               	movlw	4
  3168  001098  6E4B               	movwf	_nextGameSpeed^0,c
  3169  00109A  EF77  F008         	goto	i2l3294
  3170  00109E                     i2l3284:
  3171  00109E  BE69               	btfsc	(_digital+1)^0,7,c
  3172  0010A0  EF5B  F008         	goto	i2u324_40
  3173  0010A4  0E02               	movlw	2
  3174  0010A6  5C69               	subwf	(_digital+1)^0,w,c
  3175  0010A8  B0D8               	btfsc	status,0,c
  3176  0010AA  EF59  F008         	goto	i2u324_41
  3177  0010AE  EF5B  F008         	goto	i2u324_40
  3178  0010B2                     i2u324_41:
  3179  0010B2  EF61  F008         	goto	i2l3288
  3180  0010B6                     i2u324_40:
  3181  0010B6                     
  3182                           ;main.c: 88:             nextGameSpeed = 8;
  3183  0010B6  0E00               	movlw	0
  3184  0010B8  6E4C               	movwf	(_nextGameSpeed+1)^0,c
  3185  0010BA  0E08               	movlw	8
  3186  0010BC  6E4B               	movwf	_nextGameSpeed^0,c
  3187  0010BE  EF77  F008         	goto	i2l3294
  3188  0010C2                     i2l3288:
  3189  0010C2  BE69               	btfsc	(_digital+1)^0,7,c
  3190  0010C4  EF6D  F008         	goto	i2u325_40
  3191  0010C8  0E03               	movlw	3
  3192  0010CA  5C69               	subwf	(_digital+1)^0,w,c
  3193  0010CC  B0D8               	btfsc	status,0,c
  3194  0010CE  EF6B  F008         	goto	i2u325_41
  3195  0010D2  EF6D  F008         	goto	i2u325_40
  3196  0010D6                     i2u325_41:
  3197  0010D6  EF73  F008         	goto	i2l3292
  3198  0010DA                     i2u325_40:
  3199  0010DA                     
  3200                           ;main.c: 90:             nextGameSpeed = 12;
  3201  0010DA  0E00               	movlw	0
  3202  0010DC  6E4C               	movwf	(_nextGameSpeed+1)^0,c
  3203  0010DE  0E0C               	movlw	12
  3204  0010E0  6E4B               	movwf	_nextGameSpeed^0,c
  3205  0010E2  EF77  F008         	goto	i2l3294
  3206  0010E6                     i2l3292:
  3207                           
  3208                           ;main.c: 92:             nextGameSpeed = 16;
  3209  0010E6  0E00               	movlw	0
  3210  0010E8  6E4C               	movwf	(_nextGameSpeed+1)^0,c
  3211  0010EA  0E10               	movlw	16
  3212  0010EC  6E4B               	movwf	_nextGameSpeed^0,c
  3213  0010EE                     i2l3294:
  3214                           
  3215                           ;main.c: 94:         if (objs[5].state == OS_FLYING && pulseCounter % 2 == 0 && game_sta
      +                          te == GS_ACTIVE) {
  3216  0010EE  0E03               	movlw	3
  3217  0010F0  0100               	movlb	0	; () banked
  3218  0010F2  19AD               	xorwf	(_objs+41)& (0+255),w,b
  3219  0010F4  A4D8               	btfss	status,2,c
  3220  0010F6  EF7F  F008         	goto	i2u326_41
  3221  0010FA  EF81  F008         	goto	i2u326_40
  3222  0010FE                     i2u326_41:
  3223  0010FE  EF9B  F008         	goto	i2l257
  3224  001102                     i2u326_40:
  3225  001102                     
  3226                           ; BSR set to: 0
  3227  001102  B06E               	btfsc	_pulseCounter^0,0,c
  3228  001104  EF86  F008         	goto	i2u327_41
  3229  001108  EF88  F008         	goto	i2u327_40
  3230  00110C                     i2u327_41:
  3231  00110C  EF9B  F008         	goto	i2l257
  3232  001110                     i2u327_40:
  3233  001110                     
  3234                           ; BSR set to: 0
  3235  001110  504F               	movf	_game_state^0,w,c
  3236  001112  A4D8               	btfss	status,2,c
  3237  001114  EF8E  F008         	goto	i2u328_41
  3238  001118  EF90  F008         	goto	i2u328_40
  3239  00111C                     i2u328_41:
  3240  00111C  EF9B  F008         	goto	i2l257
  3241  001120                     i2u328_40:
  3242  001120                     
  3243                           ; BSR set to: 0
  3244                           ;main.c: 95:             objs[4].active = ~objs[4].active;
  3245  001120  05A4               	decf	(_objs+32)& (0+255),w,b
  3246  001122  A4D8               	btfss	status,2,c
  3247  001124  EF96  F008         	goto	i2u329_41
  3248  001128  EF99  F008         	goto	i2u329_40
  3249  00112C                     i2u329_41:
  3250  00112C  0E01               	movlw	1
  3251  00112E  EF9A  F008         	goto	i2u330_40
  3252  001132                     i2u329_40:
  3253  001132  0E00               	movlw	0
  3254  001134                     i2u330_40:
  3255  001134  6FA4               	movwf	(_objs+32)& (0+255),b
  3256  001136                     i2l257:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;main.c: 98:         if (pulseCounter == gameSpeed) {
  3260  001136  504D               	movf	_gameSpeed^0,w,c
  3261  001138  186E               	xorwf	_pulseCounter^0,w,c
  3262  00113A  E107               	bnz	i2u331_41
  3263  00113C  504E               	movf	(_gameSpeed+1)^0,w,c
  3264  00113E  186F               	xorwf	(_pulseCounter+1)^0,w,c
  3265  001140  A4D8               	btfss	status,2,c
  3266  001142  EFA5  F008         	goto	i2u331_41
  3267  001146  EFA7  F008         	goto	i2u331_40
  3268  00114A                     i2u331_41:
  3269  00114A  EF4C  F009         	goto	i2l3332
  3270  00114E                     i2u331_40:
  3271  00114E                     
  3272                           ; BSR set to: 0
  3273                           ;main.c: 99:             pulseCounter = 0;
  3274  00114E  0E00               	movlw	0
  3275  001150  6E6F               	movwf	(_pulseCounter+1)^0,c
  3276  001152  0E00               	movlw	0
  3277  001154  6E6E               	movwf	_pulseCounter^0,c
  3278  001156                     
  3279                           ; BSR set to: 0
  3280                           ;main.c: 100:             if (objs[5].state == OS_FLYING) {
  3281  001156  0E03               	movlw	3
  3282  001158  19AD               	xorwf	(_objs+41)& (0+255),w,b
  3283  00115A  A4D8               	btfss	status,2,c
  3284  00115C  EFB2  F008         	goto	i2u332_41
  3285  001160  EFB4  F008         	goto	i2u332_40
  3286  001164                     i2u332_41:
  3287  001164  EF4C  F009         	goto	i2l3332
  3288  001168                     i2u332_40:
  3289  001168                     
  3290                           ; BSR set to: 0
  3291                           ;main.c: 102:                 MoveEveryone();
  3292  001168  EC9C  F01B         	call	_MoveEveryone	;wreg free
  3293  00116C                     
  3294                           ;main.c: 104:                 curFrisbeeSteps++;
  3295  00116C  4A6A               	infsnz	_curFrisbeeSteps^0,f,c
  3296  00116E  2A6B               	incf	(_curFrisbeeSteps+1)^0,f,c
  3297  001170                     
  3298                           ;main.c: 106:                 objs[5].x = frisbee_steps[curFrisbeeSteps][0];
  3299  001170  0E80               	movlw	low _frisbee_steps
  3300  001172  6E35               	movwf	??_highIsr^0,c
  3301  001174  0E01               	movlw	high _frisbee_steps
  3302  001176  6E36               	movwf	(??_highIsr+1)^0,c
  3303  001178  90D8               	bcf	status,0,c
  3304  00117A  346A               	rlcf	_curFrisbeeSteps^0,w,c
  3305  00117C  6ED9               	movwf	fsr2l,c
  3306  00117E  346B               	rlcf	(_curFrisbeeSteps+1)^0,w,c
  3307  001180  6EDA               	movwf	fsr2h,c
  3308  001182  90D8               	bcf	status,0,c
  3309  001184  36D9               	rlcf	fsr2l,f,c
  3310  001186  36DA               	rlcf	fsr2h,f,c
  3311  001188  5035               	movf	??_highIsr^0,w,c
  3312  00118A  26D9               	addwf	fsr2l,f,c
  3313  00118C  5036               	movf	(??_highIsr+1)^0,w,c
  3314  00118E  22DA               	addwfc	fsr2h,f,c
  3315  001190  50DF               	movf	indf2,w,c
  3316  001192  0100               	movlb	0	; () banked
  3317  001194  6FA7               	movwf	(_objs+35)& (0+255),b
  3318  001196                     
  3319                           ; BSR set to: 0
  3320                           ;main.c: 107:                 objs[5].y = frisbee_steps[curFrisbeeSteps][1];
  3321  001196  0E80               	movlw	low _frisbee_steps
  3322  001198  6E35               	movwf	??_highIsr^0,c
  3323  00119A  0E01               	movlw	high _frisbee_steps
  3324  00119C  6E36               	movwf	(??_highIsr+1)^0,c
  3325  00119E  0E02               	movlw	2
  3326  0011A0  2635               	addwf	??_highIsr^0,f,c
  3327  0011A2  0E00               	movlw	0
  3328  0011A4  2236               	addwfc	(??_highIsr+1)^0,f,c
  3329  0011A6  90D8               	bcf	status,0,c
  3330  0011A8  346A               	rlcf	_curFrisbeeSteps^0,w,c
  3331  0011AA  6ED9               	movwf	fsr2l,c
  3332  0011AC  346B               	rlcf	(_curFrisbeeSteps+1)^0,w,c
  3333  0011AE  6EDA               	movwf	fsr2h,c
  3334  0011B0  90D8               	bcf	status,0,c
  3335  0011B2  36D9               	rlcf	fsr2l,f,c
  3336  0011B4  36DA               	rlcf	fsr2h,f,c
  3337  0011B6  5035               	movf	??_highIsr^0,w,c
  3338  0011B8  26D9               	addwf	fsr2l,f,c
  3339  0011BA  5036               	movf	(??_highIsr+1)^0,w,c
  3340  0011BC  22DA               	addwfc	fsr2h,f,c
  3341  0011BE  50DF               	movf	indf2,w,c
  3342  0011C0  6FA8               	movwf	(_objs+36)& (0+255),b
  3343  0011C2                     
  3344                           ; BSR set to: 0
  3345                           ;main.c: 109:                 CheckIfCaughtFrisbee();
  3346  0011C2  ECA7  F01E         	call	_CheckIfCaughtFrisbee	;wreg free
  3347  0011C6                     
  3348                           ;main.c: 112:                 if ((objs[5].x == objs[4].x && objs[5].y == objs[4].y) || 
      +                          curFrisbeeSteps == frisbeeSteps-1) {
  3349  0011C6  0100               	movlb	0	; () banked
  3350  0011C8  51A0               	movf	(_objs+28)& (0+255),w,b
  3351  0011CA  19A7               	xorwf	(_objs+35)& (0+255),w,b
  3352  0011CC  A4D8               	btfss	status,2,c
  3353  0011CE  EFEB  F008         	goto	i2u333_41
  3354  0011D2  EFED  F008         	goto	i2u333_40
  3355  0011D6                     i2u333_41:
  3356  0011D6  EFF6  F008         	goto	i2l3320
  3357  0011DA                     i2u333_40:
  3358  0011DA                     
  3359                           ; BSR set to: 0
  3360  0011DA  51A1               	movf	(_objs+29)& (0+255),w,b
  3361  0011DC  19A8               	xorwf	(_objs+36)& (0+255),w,b
  3362  0011DE  B4D8               	btfsc	status,2,c
  3363  0011E0  EFF4  F008         	goto	i2u334_41
  3364  0011E4  EFF6  F008         	goto	i2u334_40
  3365  0011E8                     i2u334_41:
  3366  0011E8  EF0E  F009         	goto	i2l3322
  3367  0011EC                     i2u334_40:
  3368  0011EC                     i2l3320:
  3369                           
  3370                           ; BSR set to: 0
  3371  0011EC  0EFF               	movlw	255
  3372  0011EE  6E35               	movwf	??_highIsr^0,c
  3373  0011F0  0EFF               	movlw	255
  3374  0011F2  6E36               	movwf	(??_highIsr+1)^0,c
  3375  0011F4  C06C  F037         	movff	_frisbeeSteps,??_highIsr+2
  3376  0011F8  C06D  F038         	movff	_frisbeeSteps+1,??_highIsr+3
  3377  0011FC  5035               	movf	??_highIsr^0,w,c
  3378  0011FE  2637               	addwf	(??_highIsr+2)^0,f,c
  3379  001200  5036               	movf	(??_highIsr+1)^0,w,c
  3380  001202  2238               	addwfc	(??_highIsr+3)^0,f,c
  3381  001204  506A               	movf	_curFrisbeeSteps^0,w,c
  3382  001206  1837               	xorwf	(??_highIsr+2)^0,w,c
  3383  001208  E107               	bnz	i2u335_41
  3384  00120A  506B               	movf	(_curFrisbeeSteps+1)^0,w,c
  3385  00120C  1838               	xorwf	(??_highIsr+3)^0,w,c
  3386  00120E  A4D8               	btfss	status,2,c
  3387  001210  EF0C  F009         	goto	i2u335_41
  3388  001214  EF0E  F009         	goto	i2u335_40
  3389  001218                     i2u335_41:
  3390  001218  EF4C  F009         	goto	i2l258
  3391  00121C                     i2u335_40:
  3392  00121C                     i2l3322:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;main.c: 113:                     objs[5].state = OS_FELL;
  3396  00121C  0E04               	movlw	4
  3397  00121E  6FAD               	movwf	(_objs+41)& (0+255),b
  3398                           
  3399                           ;main.c: 114:                     objs[4].active = 0;
  3400  001220  0E00               	movlw	0
  3401  001222  6FA4               	movwf	(_objs+32)& (0+255),b
  3402  001224                     
  3403                           ; BSR set to: 0
  3404                           ;main.c: 115:                     display[objs[4].y-1][objs[4].x-1] = &objs[5];
  3405  001224  51A1               	movf	(_objs+29)& (0+255),w,b
  3406  001226  6E35               	movwf	??_highIsr^0,c
  3407  001228  6A36               	clrf	(??_highIsr+1)^0,c
  3408  00122A  0E05               	movlw	5
  3409  00122C                     i2u336_45:
  3410  00122C  90D8               	bcf	status,0,c
  3411  00122E  3635               	rlcf	??_highIsr^0,f,c
  3412  001230  3636               	rlcf	(??_highIsr+1)^0,f,c
  3413  001232  2EE8               	decfsz	wreg,f,c
  3414  001234  EF16  F009         	goto	i2u336_45
  3415  001238  51A0               	movf	(_objs+28)& (0+255),w,b
  3416  00123A  6E37               	movwf	(??_highIsr+2)^0,c
  3417  00123C  6A38               	clrf	(??_highIsr+3)^0,c
  3418  00123E  90D8               	bcf	status,0,c
  3419  001240  3637               	rlcf	(??_highIsr+2)^0,f,c
  3420  001242  3638               	rlcf	(??_highIsr+3)^0,f,c
  3421  001244  0EDE               	movlw	222
  3422  001246  6E39               	movwf	(??_highIsr+4)^0,c
  3423  001248  0EFF               	movlw	255
  3424  00124A  6E3A               	movwf	(??_highIsr+5)^0,c
  3425  00124C  0E00               	movlw	low _display
  3426  00124E  6E3B               	movwf	(??_highIsr+6)^0,c
  3427  001250  0E01               	movlw	high _display
  3428  001252  6E3C               	movwf	(??_highIsr+7)^0,c
  3429  001254  5039               	movf	(??_highIsr+4)^0,w,c
  3430  001256  263B               	addwf	(??_highIsr+6)^0,f,c
  3431  001258  503A               	movf	(??_highIsr+5)^0,w,c
  3432  00125A  223C               	addwfc	(??_highIsr+7)^0,f,c
  3433  00125C  5037               	movf	(??_highIsr+2)^0,w,c
  3434  00125E  263B               	addwf	(??_highIsr+6)^0,f,c
  3435  001260  5038               	movf	(??_highIsr+3)^0,w,c
  3436  001262  223C               	addwfc	(??_highIsr+7)^0,f,c
  3437  001264  5035               	movf	??_highIsr^0,w,c
  3438  001266  243B               	addwf	(??_highIsr+6)^0,w,c
  3439  001268  6ED9               	movwf	fsr2l,c
  3440  00126A  5036               	movf	(??_highIsr+1)^0,w,c
  3441  00126C  203C               	addwfc	(??_highIsr+7)^0,w,c
  3442  00126E  6EDA               	movwf	fsr2h,c
  3443  001270  0EA7               	movlw	low (_objs+35)
  3444  001272  6EDE               	movwf	postinc2,c
  3445  001274  0E00               	movlw	high (_objs+35)
  3446  001276  6EDD               	movwf	postdec2,c
  3447  001278                     
  3448                           ; BSR set to: 0
  3449                           ;main.c: 116:                     objs[4].x = objs[4].y = objs[4].oldX = objs[4].oldY = 
      +                          0;
  3450  001278  0E00               	movlw	0
  3451  00127A  6FA3               	movwf	(_objs+31)& (0+255),b
  3452  00127C  C0A3  F0A2         	movff	_objs+31,_objs+30
  3453  001280  C0A2  F0A1         	movff	_objs+30,_objs+29
  3454  001284  C0A1  F0A0         	movff	_objs+29,_objs+28
  3455  001288                     
  3456                           ; BSR set to: 0
  3457                           ;main.c: 117:                     game_state = GS_INACTIVE;
  3458  001288  0E01               	movlw	1
  3459  00128A  6E4F               	movwf	_game_state^0,c
  3460  00128C                     
  3461                           ; BSR set to: 0
  3462                           ;main.c: 119:                     curFrisbeeSteps = 0;
  3463  00128C  0E00               	movlw	0
  3464  00128E  6E6B               	movwf	(_curFrisbeeSteps+1)^0,c
  3465  001290  0E00               	movlw	0
  3466  001292  6E6A               	movwf	_curFrisbeeSteps^0,c
  3467  001294  EF4C  F009         	goto	i2l3332
  3468  001298                     i2l258:
  3469  001298                     i2l3332:
  3470                           
  3471                           ;main.c: 125:     if (INTCONbits.INT0IF ){
  3472  001298  A2F2               	btfss	242,1,c	;volatile
  3473  00129A  EF51  F009         	goto	i2u337_41
  3474  00129E  EF53  F009         	goto	i2u337_40
  3475  0012A2                     i2u337_41:
  3476  0012A2  EF0E  F00A         	goto	i2l265
  3477  0012A6                     i2u337_40:
  3478  0012A6                     
  3479                           ;main.c: 126:         if (acceptInterrupts) {
  3480  0012A6  507B               	movf	_acceptInterrupts^0,w,c
  3481  0012A8  B4D8               	btfsc	status,2,c
  3482  0012AA  EF59  F009         	goto	i2u338_41
  3483  0012AE  EF5B  F009         	goto	i2u338_40
  3484  0012B2                     i2u338_41:
  3485  0012B2  EFFF  F00A         	goto	i2l3424
  3486  0012B6                     i2u338_40:
  3487  0012B6                     
  3488                           ;main.c: 127:             a++;
  3489  0012B6  4A78               	infsnz	_a^0,f,c
  3490  0012B8  2A79               	incf	(_a+1)^0,f,c
  3491  0012BA                     
  3492                           ;main.c: 128:             SetupDebouncingTimer();
  3493  0012BA  EC87  F021         	call	_SetupDebouncingTimer	;wreg free
  3494  0012BE                     
  3495                           ;main.c: 130:             if (objs[selectedPlayer].state == OS_SEL_W_FRISBEE) {
  3496  0012BE  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3497  0012C2  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3498  0012C6  0E00               	movlw	0
  3499  0012C8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3500  0012CA  0E07               	movlw	7
  3501  0012CC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3502  0012CE  EC34  F021         	call	i2___wmul	;wreg free
  3503  0012D2  0E8A               	movlw	low (_objs+6)
  3504  0012D4  2401               	addwf	?i2___wmul^0,w,c
  3505  0012D6  6ED9               	movwf	fsr2l,c
  3506  0012D8  0E00               	movlw	high (_objs+6)
  3507  0012DA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3508  0012DC  6EDA               	movwf	fsr2h,c
  3509  0012DE  0E02               	movlw	2
  3510  0012E0  18DE               	xorwf	postinc2,w,c
  3511  0012E2  A4D8               	btfss	status,2,c
  3512  0012E4  EF76  F009         	goto	i2u339_41
  3513  0012E8  EF78  F009         	goto	i2u339_40
  3514  0012EC                     i2u339_41:
  3515  0012EC  EFFF  F00A         	goto	i2l3424
  3516  0012F0                     i2u339_40:
  3517  0012F0                     
  3518                           ;main.c: 132:                 frisbeeSteps = compute_frisbee_target_and_route(objs[selec
      +                          tedPlayer].x, objs[selectedPlayer].y);
  3519  0012F0  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3520  0012F4  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3521  0012F8  0E00               	movlw	0
  3522  0012FA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3523  0012FC  0E07               	movlw	7
  3524  0012FE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3525  001300  EC34  F021         	call	i2___wmul	;wreg free
  3526  001304  0E84               	movlw	low _objs
  3527  001306  2401               	addwf	?i2___wmul^0,w,c
  3528  001308  6ED9               	movwf	fsr2l,c
  3529  00130A  0E00               	movlw	high _objs
  3530  00130C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3531  00130E  6EDA               	movwf	fsr2h,c
  3532  001310  50DF               	movf	indf2,w,c
  3533  001312  6E35               	movwf	??_highIsr^0,c
  3534  001314  5035               	movf	??_highIsr^0,w,c
  3535  001316  6E0E               	movwf	compute_frisbee_target_and_route@current_fisbee_x_position^0,c
  3536  001318  6A0F               	clrf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,c
  3537  00131A  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3538  00131E  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3539  001322  0E00               	movlw	0
  3540  001324  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3541  001326  0E07               	movlw	7
  3542  001328  6E03               	movwf	i2___wmul@multiplicand^0,c
  3543  00132A  EC34  F021         	call	i2___wmul	;wreg free
  3544  00132E  0E85               	movlw	low (_objs+1)
  3545  001330  2401               	addwf	?i2___wmul^0,w,c
  3546  001332  6ED9               	movwf	fsr2l,c
  3547  001334  0E00               	movlw	high (_objs+1)
  3548  001336  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3549  001338  6EDA               	movwf	fsr2h,c
  3550  00133A  50DF               	movf	indf2,w,c
  3551  00133C  6E36               	movwf	(??_highIsr+1)^0,c
  3552  00133E  5036               	movf	(??_highIsr+1)^0,w,c
  3553  001340  6E10               	movwf	compute_frisbee_target_and_route@current_fisbee_y_position^0,c
  3554  001342  6A11               	clrf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,c
  3555  001344  EC5E  F00D         	call	_compute_frisbee_target_and_route	;wreg free
  3556  001348  C00E  F06C         	movff	?_compute_frisbee_target_and_route,_frisbeeSteps
  3557  00134C  C00F  F06D         	movff	?_compute_frisbee_target_and_route+1,_frisbeeSteps+1
  3558  001350                     
  3559                           ;main.c: 134:                 objs[4].active = 1;
  3560  001350  0E01               	movlw	1
  3561  001352  0100               	movlb	0	; () banked
  3562  001354  6FA4               	movwf	(_objs+32)& (0+255),b
  3563  001356                     
  3564                           ; BSR set to: 0
  3565                           ;main.c: 136:                 objs[4].x = frisbee_steps[frisbeeSteps-1][0];
  3566  001356  0EFC               	movlw	252
  3567  001358  6E35               	movwf	??_highIsr^0,c
  3568  00135A  0EFF               	movlw	255
  3569  00135C  6E36               	movwf	(??_highIsr+1)^0,c
  3570  00135E  0E80               	movlw	low _frisbee_steps
  3571  001360  6E37               	movwf	(??_highIsr+2)^0,c
  3572  001362  0E01               	movlw	high _frisbee_steps
  3573  001364  6E38               	movwf	(??_highIsr+3)^0,c
  3574  001366  5035               	movf	??_highIsr^0,w,c
  3575  001368  2637               	addwf	(??_highIsr+2)^0,f,c
  3576  00136A  5036               	movf	(??_highIsr+1)^0,w,c
  3577  00136C  2238               	addwfc	(??_highIsr+3)^0,f,c
  3578  00136E  90D8               	bcf	status,0,c
  3579  001370  346C               	rlcf	_frisbeeSteps^0,w,c
  3580  001372  6ED9               	movwf	fsr2l,c
  3581  001374  346D               	rlcf	(_frisbeeSteps+1)^0,w,c
  3582  001376  6EDA               	movwf	fsr2h,c
  3583  001378  90D8               	bcf	status,0,c
  3584  00137A  36D9               	rlcf	fsr2l,f,c
  3585  00137C  36DA               	rlcf	fsr2h,f,c
  3586  00137E  5037               	movf	(??_highIsr+2)^0,w,c
  3587  001380  26D9               	addwf	fsr2l,f,c
  3588  001382  5038               	movf	(??_highIsr+3)^0,w,c
  3589  001384  22DA               	addwfc	fsr2h,f,c
  3590  001386  50DF               	movf	indf2,w,c
  3591  001388  6FA0               	movwf	(_objs+28)& (0+255),b
  3592  00138A                     
  3593                           ; BSR set to: 0
  3594                           ;main.c: 137:                 objs[4].y = frisbee_steps[frisbeeSteps-1][1];
  3595  00138A  0EFE               	movlw	254
  3596  00138C  6E35               	movwf	??_highIsr^0,c
  3597  00138E  0EFF               	movlw	255
  3598  001390  6E36               	movwf	(??_highIsr+1)^0,c
  3599  001392  0E80               	movlw	low _frisbee_steps
  3600  001394  6E37               	movwf	(??_highIsr+2)^0,c
  3601  001396  0E01               	movlw	high _frisbee_steps
  3602  001398  6E38               	movwf	(??_highIsr+3)^0,c
  3603  00139A  5035               	movf	??_highIsr^0,w,c
  3604  00139C  2637               	addwf	(??_highIsr+2)^0,f,c
  3605  00139E  5036               	movf	(??_highIsr+1)^0,w,c
  3606  0013A0  2238               	addwfc	(??_highIsr+3)^0,f,c
  3607  0013A2  90D8               	bcf	status,0,c
  3608  0013A4  346C               	rlcf	_frisbeeSteps^0,w,c
  3609  0013A6  6ED9               	movwf	fsr2l,c
  3610  0013A8  346D               	rlcf	(_frisbeeSteps+1)^0,w,c
  3611  0013AA  6EDA               	movwf	fsr2h,c
  3612  0013AC  90D8               	bcf	status,0,c
  3613  0013AE  36D9               	rlcf	fsr2l,f,c
  3614  0013B0  36DA               	rlcf	fsr2h,f,c
  3615  0013B2  5037               	movf	(??_highIsr+2)^0,w,c
  3616  0013B4  26D9               	addwf	fsr2l,f,c
  3617  0013B6  5038               	movf	(??_highIsr+3)^0,w,c
  3618  0013B8  22DA               	addwfc	fsr2h,f,c
  3619  0013BA  50DF               	movf	indf2,w,c
  3620  0013BC  6FA1               	movwf	(_objs+29)& (0+255),b
  3621  0013BE                     
  3622                           ; BSR set to: 0
  3623                           ;main.c: 140:                 objs[5].x = frisbee_steps[0][0];
  3624  0013BE  C180  F0A7         	movff	_frisbee_steps,_objs+35
  3625  0013C2                     
  3626                           ; BSR set to: 0
  3627                           ;main.c: 141:                 objs[5].y = frisbee_steps[0][1];
  3628  0013C2  C182  F0A8         	movff	_frisbee_steps+2,_objs+36
  3629  0013C6                     
  3630                           ; BSR set to: 0
  3631                           ;main.c: 143:                 objs[5].active = 1;
  3632  0013C6  0E01               	movlw	1
  3633  0013C8  6FAB               	movwf	(_objs+39)& (0+255),b
  3634  0013CA                     
  3635                           ; BSR set to: 0
  3636                           ;main.c: 144:                 objs[5].state = OS_FLYING;
  3637  0013CA  0E03               	movlw	3
  3638  0013CC  6FAD               	movwf	(_objs+41)& (0+255),b
  3639  0013CE                     
  3640                           ; BSR set to: 0
  3641                           ;main.c: 146:                 objs[selectedPlayer].state = OS_SELECTED;
  3642  0013CE  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3643  0013D2  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3644  0013D6  0E00               	movlw	0
  3645  0013D8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3646  0013DA  0E07               	movlw	7
  3647  0013DC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3648  0013DE  EC34  F021         	call	i2___wmul	;wreg free
  3649  0013E2  0E8A               	movlw	low (_objs+6)
  3650  0013E4  2401               	addwf	?i2___wmul^0,w,c
  3651  0013E6  6ED9               	movwf	fsr2l,c
  3652  0013E8  0E00               	movlw	high (_objs+6)
  3653  0013EA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3654  0013EC  6EDA               	movwf	fsr2h,c
  3655  0013EE  0E01               	movlw	1
  3656  0013F0  6EDF               	movwf	indf2,c
  3657  0013F2                     
  3658                           ;main.c: 148:                 CheckIfCaughtFrisbee();
  3659  0013F2  ECA7  F01E         	call	_CheckIfCaughtFrisbee	;wreg free
  3660  0013F6                     
  3661                           ;main.c: 151:                 game_state = GS_ACTIVE;
  3662  0013F6  0E00               	movlw	0
  3663  0013F8  6E4F               	movwf	_game_state^0,c
  3664  0013FA                     
  3665                           ;main.c: 153:                 pulseCounter = 0;
  3666  0013FA  0E00               	movlw	0
  3667  0013FC  6E6F               	movwf	(_pulseCounter+1)^0,c
  3668  0013FE  0E00               	movlw	0
  3669  001400  6E6E               	movwf	_pulseCounter^0,c
  3670  001402                     
  3671                           ;main.c: 154:                 gameSpeed = nextGameSpeed;
  3672  001402  C04B  F04D         	movff	_nextGameSpeed,_gameSpeed
  3673  001406  C04C  F04E         	movff	_nextGameSpeed+1,_gameSpeed+1
  3674  00140A                     
  3675                           ;main.c: 156:                 PIR1bits.TMR1IF = 0;
  3676  00140A  909E               	bcf	158,0,c	;volatile
  3677  00140C                     
  3678                           ;main.c: 157:                 T1CONbits.TMR1ON = 0;
  3679  00140C  90CD               	bcf	205,0,c	;volatile
  3680  00140E                     
  3681                           ;main.c: 158:                 TMR1L = 0xED;
  3682  00140E  0EED               	movlw	237
  3683  001410  6ECE               	movwf	206,c	;volatile
  3684  001412                     
  3685                           ;main.c: 159:                 TMR1H = 0x85;
  3686  001412  0E85               	movlw	133
  3687  001414  6ECF               	movwf	207,c	;volatile
  3688  001416                     
  3689                           ;main.c: 160:                 T1CONbits.TMR1ON = 1;
  3690  001416  80CD               	bsf	205,0,c	;volatile
  3691  001418  EFFF  F00A         	goto	i2l3424
  3692  00141C                     i2l265:
  3693  00141C  A0F0               	btfss	240,0,c	;volatile
  3694  00141E  EF13  F00A         	goto	i2u340_41
  3695  001422  EF15  F00A         	goto	i2u340_40
  3696  001426                     i2u340_41:
  3697  001426  EF66  F00A         	goto	i2l269
  3698  00142A                     i2u340_40:
  3699  00142A                     
  3700                           ;main.c: 168:         if (acceptInterrupts) {
  3701  00142A  507B               	movf	_acceptInterrupts^0,w,c
  3702  00142C  B4D8               	btfsc	status,2,c
  3703  00142E  EF1B  F00A         	goto	i2u341_41
  3704  001432  EF1D  F00A         	goto	i2u341_40
  3705  001436                     i2u341_41:
  3706  001436  EFFF  F00A         	goto	i2l3424
  3707  00143A                     i2u341_40:
  3708  00143A                     
  3709                           ;main.c: 169:             b++;
  3710  00143A  4A76               	infsnz	_b^0,f,c
  3711  00143C  2A77               	incf	(_b+1)^0,f,c
  3712  00143E                     
  3713                           ;main.c: 170:             if (objs[selectedPlayer].state != OS_SEL_W_FRISBEE) {
  3714  00143E  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3715  001442  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3716  001446  0E00               	movlw	0
  3717  001448  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3718  00144A  0E07               	movlw	7
  3719  00144C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3720  00144E  EC34  F021         	call	i2___wmul	;wreg free
  3721  001452  0E8A               	movlw	low (_objs+6)
  3722  001454  2401               	addwf	?i2___wmul^0,w,c
  3723  001456  6ED9               	movwf	fsr2l,c
  3724  001458  0E00               	movlw	high (_objs+6)
  3725  00145A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3726  00145C  6EDA               	movwf	fsr2h,c
  3727  00145E  0E02               	movlw	2
  3728  001460  18DE               	xorwf	postinc2,w,c
  3729  001462  B4D8               	btfsc	status,2,c
  3730  001464  EF36  F00A         	goto	i2u342_41
  3731  001468  EF38  F00A         	goto	i2u342_40
  3732  00146C                     i2u342_41:
  3733  00146C  EF62  F00A         	goto	i2l3392
  3734  001470                     i2u342_40:
  3735  001470                     
  3736                           ;main.c: 171:                 objs[selectedPlayer].state = OS_DEFAULT;
  3737  001470  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3738  001474  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3739  001478  0E00               	movlw	0
  3740  00147A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3741  00147C  0E07               	movlw	7
  3742  00147E  6E03               	movwf	i2___wmul@multiplicand^0,c
  3743  001480  EC34  F021         	call	i2___wmul	;wreg free
  3744  001484  0E8A               	movlw	low (_objs+6)
  3745  001486  2401               	addwf	?i2___wmul^0,w,c
  3746  001488  6ED9               	movwf	fsr2l,c
  3747  00148A  0E00               	movlw	high (_objs+6)
  3748  00148C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3749  00148E  6EDA               	movwf	fsr2h,c
  3750  001490  0E00               	movlw	0
  3751  001492  6EDF               	movwf	indf2,c
  3752  001494                     
  3753                           ;main.c: 172:                 selectedPlayer++;
  3754  001494  4A72               	infsnz	_selectedPlayer^0,f,c
  3755  001496  2A73               	incf	(_selectedPlayer+1)^0,f,c
  3756  001498                     
  3757                           ;main.c: 173:                 selectedPlayer = selectedPlayer % 4;
  3758  001498  0E03               	movlw	3
  3759  00149A  1472               	andwf	_selectedPlayer^0,w,c
  3760  00149C  6E72               	movwf	_selectedPlayer^0,c
  3761  00149E  6A73               	clrf	(_selectedPlayer+1)^0,c
  3762  0014A0                     
  3763                           ;main.c: 174:                 objs[selectedPlayer].state = OS_SELECTED;
  3764  0014A0  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3765  0014A4  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3766  0014A8  0E00               	movlw	0
  3767  0014AA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3768  0014AC  0E07               	movlw	7
  3769  0014AE  6E03               	movwf	i2___wmul@multiplicand^0,c
  3770  0014B0  EC34  F021         	call	i2___wmul	;wreg free
  3771  0014B4  0E8A               	movlw	low (_objs+6)
  3772  0014B6  2401               	addwf	?i2___wmul^0,w,c
  3773  0014B8  6ED9               	movwf	fsr2l,c
  3774  0014BA  0E00               	movlw	high (_objs+6)
  3775  0014BC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3776  0014BE  6EDA               	movwf	fsr2h,c
  3777  0014C0  0E01               	movlw	1
  3778  0014C2  6EDF               	movwf	indf2,c
  3779  0014C4                     i2l3392:
  3780                           
  3781                           ;main.c: 178:             SetupDebouncingTimer();
  3782  0014C4  EC87  F021         	call	_SetupDebouncingTimer	;wreg free
  3783  0014C8  EFFF  F00A         	goto	i2l3424
  3784  0014CC                     i2l269:
  3785  0014CC  A0F2               	btfss	242,0,c	;volatile
  3786  0014CE  EF6B  F00A         	goto	i2u343_41
  3787  0014D2  EF6D  F00A         	goto	i2u343_40
  3788  0014D6                     i2u343_41:
  3789  0014D6  EFFF  F00A         	goto	i2l3424
  3790  0014DA                     i2u343_40:
  3791  0014DA                     
  3792                           ;main.c: 183:         if (acceptInterrupts) {
  3793  0014DA  507B               	movf	_acceptInterrupts^0,w,c
  3794  0014DC  B4D8               	btfsc	status,2,c
  3795  0014DE  EF73  F00A         	goto	i2u344_41
  3796  0014E2  EF75  F00A         	goto	i2u344_40
  3797  0014E6                     i2u344_41:
  3798  0014E6  EFFF  F00A         	goto	i2l3424
  3799  0014EA                     i2u344_40:
  3800  0014EA                     
  3801                           ;main.c: 184:             portbVals = portbVals >> 4;
  3802  0014EA  387A               	swapf	_portbVals^0,w,c
  3803  0014EC  0B0F               	andlw	15
  3804  0014EE  6E7A               	movwf	_portbVals^0,c
  3805                           
  3806                           ;main.c: 185:             switch (portbVals) {
  3807  0014F0  EFDE  F00A         	goto	i2l3418
  3808  0014F4                     i2l3398:
  3809                           
  3810                           ;main.c: 187:                     up(&objs[selectedPlayer]);
  3811  0014F4  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3812  0014F8  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3813  0014FC  0E00               	movlw	0
  3814  0014FE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3815  001500  0E07               	movlw	7
  3816  001502  6E03               	movwf	i2___wmul@multiplicand^0,c
  3817  001504  EC34  F021         	call	i2___wmul	;wreg free
  3818  001508  0E84               	movlw	low _objs
  3819  00150A  2401               	addwf	?i2___wmul^0,w,c
  3820  00150C  6E43               	movwf	_highIsr$1798^0,c
  3821  00150E  0E00               	movlw	high _objs
  3822  001510  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3823  001512  6E44               	movwf	(_highIsr$1798+1)^0,c
  3824  001514                     
  3825                           ;main.c: 187:                     up(&objs[selectedPlayer]);
  3826  001514  C043  F013         	movff	_highIsr$1798,up@pl
  3827  001518  C044  F014         	movff	_highIsr$1798+1,up@pl+1
  3828  00151C  EC55  F012         	call	_up	;wreg free
  3829                           
  3830                           ;main.c: 188:                     break;
  3831  001520  EFFB  F00A         	goto	i2l3420
  3832  001524                     i2l3402:
  3833                           
  3834                           ;main.c: 190:                     right(&objs[selectedPlayer]);
  3835  001524  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3836  001528  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3837  00152C  0E00               	movlw	0
  3838  00152E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3839  001530  0E07               	movlw	7
  3840  001532  6E03               	movwf	i2___wmul@multiplicand^0,c
  3841  001534  EC34  F021         	call	i2___wmul	;wreg free
  3842  001538  0E84               	movlw	low _objs
  3843  00153A  2401               	addwf	?i2___wmul^0,w,c
  3844  00153C  6E45               	movwf	_highIsr$1799^0,c
  3845  00153E  0E00               	movlw	high _objs
  3846  001540  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3847  001542  6E46               	movwf	(_highIsr$1799+1)^0,c
  3848  001544                     
  3849                           ;main.c: 190:                     right(&objs[selectedPlayer]);
  3850  001544  C045  F013         	movff	_highIsr$1799,right@pl
  3851  001548  C046  F014         	movff	_highIsr$1799+1,right@pl+1
  3852  00154C  EC13  F017         	call	_right	;wreg free
  3853                           
  3854                           ;main.c: 191:                     break;
  3855  001550  EFFB  F00A         	goto	i2l3420
  3856  001554                     i2l3406:
  3857                           
  3858                           ;main.c: 193:                     down(&objs[selectedPlayer]);
  3859  001554  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3860  001558  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3861  00155C  0E00               	movlw	0
  3862  00155E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3863  001560  0E07               	movlw	7
  3864  001562  6E03               	movwf	i2___wmul@multiplicand^0,c
  3865  001564  EC34  F021         	call	i2___wmul	;wreg free
  3866  001568  0E84               	movlw	low _objs
  3867  00156A  2401               	addwf	?i2___wmul^0,w,c
  3868  00156C  6E47               	movwf	_highIsr$1800^0,c
  3869  00156E  0E00               	movlw	high _objs
  3870  001570  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3871  001572  6E48               	movwf	(_highIsr$1800+1)^0,c
  3872  001574                     
  3873                           ;main.c: 193:                     down(&objs[selectedPlayer]);
  3874  001574  C047  F013         	movff	_highIsr$1800,down@pl
  3875  001578  C048  F014         	movff	_highIsr$1800+1,down@pl+1
  3876  00157C  ECA0  F018         	call	_down	;wreg free
  3877                           
  3878                           ;main.c: 194:                     break;
  3879  001580  EFFB  F00A         	goto	i2l3420
  3880  001584                     i2l3410:
  3881                           
  3882                           ;main.c: 196:                     left(&objs[selectedPlayer]);
  3883  001584  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3884  001588  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3885  00158C  0E00               	movlw	0
  3886  00158E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3887  001590  0E07               	movlw	7
  3888  001592  6E03               	movwf	i2___wmul@multiplicand^0,c
  3889  001594  EC34  F021         	call	i2___wmul	;wreg free
  3890  001598  0E84               	movlw	low _objs
  3891  00159A  2401               	addwf	?i2___wmul^0,w,c
  3892  00159C  6E49               	movwf	_highIsr$1801^0,c
  3893  00159E  0E00               	movlw	high _objs
  3894  0015A0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3895  0015A2  6E4A               	movwf	(_highIsr$1801+1)^0,c
  3896  0015A4                     
  3897                           ;main.c: 196:                     left(&objs[selectedPlayer]);
  3898  0015A4  C049  F013         	movff	_highIsr$1801,left@pl
  3899  0015A8  C04A  F014         	movff	_highIsr$1801+1,left@pl+1
  3900  0015AC  ECED  F013         	call	_left	;wreg free
  3901                           
  3902                           ;main.c: 197:                     break;
  3903  0015B0  EFFB  F00A         	goto	i2l3420
  3904  0015B4                     i2l3414:
  3905                           
  3906                           ;main.c: 199:                     portbVals = 0;
  3907  0015B4  0E00               	movlw	0
  3908  0015B6  6E7A               	movwf	_portbVals^0,c
  3909                           
  3910                           ;main.c: 200:                     break;
  3911  0015B8  EFFB  F00A         	goto	i2l3420
  3912  0015BC                     i2l3418:
  3913  0015BC  507A               	movf	_portbVals^0,w,c
  3914  0015BE  6E35               	movwf	??_highIsr^0,c
  3915  0015C0  6A36               	clrf	(??_highIsr+1)^0,c
  3916                           
  3917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3918                           ; Switch size 1, requested type "simple"
  3919                           ; Number of cases is 1, Range of values is 0 to 0
  3920                           ; switch strategies available:
  3921                           ; Name         Instructions Cycles
  3922                           ; simple_byte            4     3 (average)
  3923                           ;	Chosen strategy is simple_byte
  3924  0015C2  5036               	movf	(??_highIsr+1)^0,w,c
  3925  0015C4  0A00               	xorlw	0	; case 0
  3926  0015C6  B4D8               	btfsc	status,2,c
  3927  0015C8  EFE8  F00A         	goto	i2l4300
  3928  0015CC  EFDA  F00A         	goto	i2l3414
  3929  0015D0                     i2l4300:
  3930                           
  3931                           ; Switch size 1, requested type "simple"
  3932                           ; Number of cases is 4, Range of values is 7 to 14
  3933                           ; switch strategies available:
  3934                           ; Name         Instructions Cycles
  3935                           ; simple_byte           13     7 (average)
  3936                           ;	Chosen strategy is simple_byte
  3937  0015D0  5035               	movf	??_highIsr^0,w,c
  3938  0015D2  0A07               	xorlw	7	; case 7
  3939  0015D4  B4D8               	btfsc	status,2,c
  3940  0015D6  EFC2  F00A         	goto	i2l3410
  3941  0015DA  0A0C               	xorlw	12	; case 11
  3942  0015DC  B4D8               	btfsc	status,2,c
  3943  0015DE  EFAA  F00A         	goto	i2l3406
  3944  0015E2  0A06               	xorlw	6	; case 13
  3945  0015E4  B4D8               	btfsc	status,2,c
  3946  0015E6  EF92  F00A         	goto	i2l3402
  3947  0015EA  0A03               	xorlw	3	; case 14
  3948  0015EC  B4D8               	btfsc	status,2,c
  3949  0015EE  EF7A  F00A         	goto	i2l3398
  3950  0015F2  EFDA  F00A         	goto	i2l3414
  3951  0015F6                     i2l3420:
  3952                           
  3953                           ;main.c: 203:             c++;
  3954  0015F6  4A74               	infsnz	_c^0,f,c
  3955  0015F8  2A75               	incf	(_c+1)^0,f,c
  3956  0015FA  EF62  F00A         	goto	i2l3392
  3957  0015FE                     i2l3424:
  3958                           
  3959                           ;main.c: 207:     INTCON3bits.INT1IF = 0;
  3960  0015FE  90F0               	bcf	240,0,c	;volatile
  3961  001600                     
  3962                           ;main.c: 208:     INTCONbits.INT0IF = 0;
  3963  001600  92F2               	bcf	242,1,c	;volatile
  3964  001602                     
  3965                           ;main.c: 209:     INTCONbits.RBIF = 0;
  3966  001602  90F2               	bcf	242,0,c	;volatile
  3967  001604                     
  3968                           ;main.c: 210:     PIR1bits.ADIF = 0;
  3969  001604  9C9E               	bcf	158,6,c	;volatile
  3970  001606  C042  FFF4         	movff	??_highIsr+13,prodh
  3971  00160A  C041  FFF3         	movff	??_highIsr+12,prodl
  3972  00160E  C040  FFDA         	movff	??_highIsr+11,fsr2h
  3973  001612  C03F  FFD9         	movff	??_highIsr+10,fsr2l
  3974  001616  C03E  FFE2         	movff	??_highIsr+9,fsr1h
  3975  00161A  C03D  FFE1         	movff	??_highIsr+8,fsr1l
  3976  00161E  927C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3977  001620  0011               	retfie		f
  3978  001622                     __end_of_highIsr:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _compute_frisbee_target_and_route *****************
  3982 ;; Defined at:
  3983 ;;		line 151 in file "./the3.h"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  current_fisb    2   13[COMRAM] unsigned short 
  3986 ;;  current_fisb    2   15[COMRAM] unsigned short 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  i               2   27[COMRAM] unsigned short 
  3989 ;;  i               2   25[COMRAM] unsigned short 
  3990 ;;  i               2   21[COMRAM] unsigned short 
  3991 ;;  i               2   19[COMRAM] unsigned short 
  3992 ;;  i               2   29[COMRAM] unsigned short 
  3993 ;;  i               2   23[COMRAM] unsigned short 
  3994 ;;  y_step_size     2   43[COMRAM] unsigned short 
  3995 ;;  x_step_size     2   41[COMRAM] unsigned short 
  3996 ;;  y               2   39[COMRAM] unsigned short 
  3997 ;;  x               2   37[COMRAM] unsigned short 
  3998 ;;  target_y        2   35[COMRAM] unsigned short 
  3999 ;;  target_x        2   33[COMRAM] unsigned short 
  4000 ;;  number_of_st    2   31[COMRAM] unsigned short 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2   13[COMRAM] unsigned short 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:       32 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    2
  4017 ;; This function calls:
  4018 ;;		_random_generator
  4019 ;; This function is called by:
  4020 ;;		_highIsr
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text13
  4025  001ABC                     __ptext13:
  4026                           	callstack 0
  4027  001ABC                     _compute_frisbee_target_and_route:
  4028                           	callstack 22
  4029  001ABC                     i2l127:
  4030  001ABC                     
  4031                           ;./the3.h: 165:         target_x = random_generator(16) + 1;
  4032  001ABC  0E00               	movlw	0
  4033  001ABE  6E07               	movwf	(random_generator@modulo+1)^0,c
  4034  001AC0  0E10               	movlw	16
  4035  001AC2  6E06               	movwf	random_generator@modulo^0,c
  4036  001AC4  EC66  F020         	call	_random_generator	;wreg free
  4037  001AC8  0E01               	movlw	1
  4038  001ACA  2406               	addwf	?_random_generator^0,w,c
  4039  001ACC  6E22               	movwf	compute_frisbee_target_and_route@target_x^0,c
  4040  001ACE  0E00               	movlw	0
  4041  001AD0  2007               	addwfc	(?_random_generator+1)^0,w,c
  4042  001AD2  6E23               	movwf	(compute_frisbee_target_and_route@target_x+1)^0,c
  4043                           
  4044                           ;./the3.h: 166:         target_y = random_generator(4) + 1;
  4045  001AD4  0E00               	movlw	0
  4046  001AD6  6E07               	movwf	(random_generator@modulo+1)^0,c
  4047  001AD8  0E04               	movlw	4
  4048  001ADA  6E06               	movwf	random_generator@modulo^0,c
  4049  001ADC  EC66  F020         	call	_random_generator	;wreg free
  4050  001AE0  0E01               	movlw	1
  4051  001AE2  2406               	addwf	?_random_generator^0,w,c
  4052  001AE4  6E24               	movwf	compute_frisbee_target_and_route@target_y^0,c
  4053  001AE6  0E00               	movlw	0
  4054  001AE8  2007               	addwfc	(?_random_generator+1)^0,w,c
  4055  001AEA  6E25               	movwf	(compute_frisbee_target_and_route@target_y+1)^0,c
  4056  001AEC                     
  4057                           ;./the3.h: 169:         if (target_x < current_fisbee_x_position)
  4058  001AEC  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  4059  001AEE  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  4060  001AF0  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  4061  001AF2  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  4062  001AF4  B0D8               	btfsc	status,0,c
  4063  001AF6  EF7F  F00D         	goto	i2u279_41
  4064  001AFA  EF81  F00D         	goto	i2u279_40
  4065  001AFE                     i2u279_41:
  4066  001AFE  EF89  F00D         	goto	i2l2830
  4067  001B02                     i2u279_40:
  4068  001B02                     
  4069                           ;./the3.h: 170:             x_step_size = current_fisbee_x_position - target_x;
  4070  001B02  5022               	movf	compute_frisbee_target_and_route@target_x^0,w,c
  4071  001B04  5C0E               	subwf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  4072  001B06  6E2A               	movwf	compute_frisbee_target_and_route@x_step_size^0,c
  4073  001B08  5023               	movf	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  4074  001B0A  580F               	subwfb	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  4075  001B0C  6E2B               	movwf	(compute_frisbee_target_and_route@x_step_size+1)^0,c
  4076  001B0E  EF8F  F00D         	goto	i2l129
  4077  001B12                     i2l2830:
  4078                           
  4079                           ;./the3.h: 172:             x_step_size = target_x - current_fisbee_x_position;
  4080  001B12  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  4081  001B14  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  4082  001B16  6E2A               	movwf	compute_frisbee_target_and_route@x_step_size^0,c
  4083  001B18  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  4084  001B1A  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  4085  001B1C  6E2B               	movwf	(compute_frisbee_target_and_route@x_step_size+1)^0,c
  4086  001B1E                     i2l129:
  4087                           
  4088                           ;./the3.h: 175:         if (target_y < current_fisbee_y_position)
  4089  001B1E  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  4090  001B20  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  4091  001B22  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  4092  001B24  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  4093  001B26  B0D8               	btfsc	status,0,c
  4094  001B28  EF98  F00D         	goto	i2u280_41
  4095  001B2C  EF9A  F00D         	goto	i2u280_40
  4096  001B30                     i2u280_41:
  4097  001B30  EFA2  F00D         	goto	i2l2834
  4098  001B34                     i2u280_40:
  4099  001B34                     
  4100                           ;./the3.h: 176:             y_step_size = current_fisbee_y_position - target_y;
  4101  001B34  5024               	movf	compute_frisbee_target_and_route@target_y^0,w,c
  4102  001B36  5C10               	subwf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  4103  001B38  6E2C               	movwf	compute_frisbee_target_and_route@y_step_size^0,c
  4104  001B3A  5025               	movf	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  4105  001B3C  5811               	subwfb	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  4106  001B3E  6E2D               	movwf	(compute_frisbee_target_and_route@y_step_size+1)^0,c
  4107  001B40  EFA8  F00D         	goto	i2l131
  4108  001B44                     i2l2834:
  4109                           
  4110                           ;./the3.h: 178:             y_step_size = target_y - current_fisbee_y_position;
  4111  001B44  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  4112  001B46  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  4113  001B48  6E2C               	movwf	compute_frisbee_target_and_route@y_step_size^0,c
  4114  001B4A  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  4115  001B4C  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  4116  001B4E  6E2D               	movwf	(compute_frisbee_target_and_route@y_step_size+1)^0,c
  4117  001B50                     i2l131:
  4118                           
  4119                           ;./the3.h: 181:         if (x_step_size <= 2 && y_step_size <= 2)
  4120  001B50  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  4121  001B52  E107               	bnz	i2u281_41
  4122  001B54  0E03               	movlw	3
  4123  001B56  5C2A               	subwf	compute_frisbee_target_and_route@x_step_size^0,w,c
  4124  001B58  B0D8               	btfsc	status,0,c
  4125  001B5A  EFB1  F00D         	goto	i2u281_41
  4126  001B5E  EFB3  F00D         	goto	i2u281_40
  4127  001B62                     i2u281_41:
  4128  001B62  EFC0  F00D         	goto	i2l2840
  4129  001B66                     i2u281_40:
  4130  001B66  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  4131  001B68  E107               	bnz	i2u282_41
  4132  001B6A  0E03               	movlw	3
  4133  001B6C  5C2C               	subwf	compute_frisbee_target_and_route@y_step_size^0,w,c
  4134  001B6E  B0D8               	btfsc	status,0,c
  4135  001B70  EFBC  F00D         	goto	i2u282_41
  4136  001B74  EFBE  F00D         	goto	i2u282_40
  4137  001B78                     i2u282_41:
  4138  001B78  EFC0  F00D         	goto	i2l2840
  4139  001B7C                     i2u282_40:
  4140  001B7C  EF5E  F00D         	goto	i2l127
  4141  001B80                     i2l2840:
  4142                           
  4143                           ;./the3.h: 185:         if (x_step_size > y_step_size)
  4144  001B80  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  4145  001B82  5C2C               	subwf	compute_frisbee_target_and_route@y_step_size^0,w,c
  4146  001B84  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  4147  001B86  582D               	subwfb	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  4148  001B88  B0D8               	btfsc	status,0,c
  4149  001B8A  EFC9  F00D         	goto	i2u283_41
  4150  001B8E  EFCB  F00D         	goto	i2u283_40
  4151  001B92                     i2u283_41:
  4152  001B92  EFD1  F00D         	goto	i2l134
  4153  001B96                     i2u283_40:
  4154  001B96                     
  4155                           ;./the3.h: 186:             number_of_steps = x_step_size;
  4156  001B96  C02A  F020         	movff	compute_frisbee_target_and_route@x_step_size,compute_frisbee_target_and_route@num
      +                          ber_of_steps
  4157  001B9A  C02B  F021         	movff	compute_frisbee_target_and_route@x_step_size+1,compute_frisbee_target_and_route@n
      +                          umber_of_steps+1
  4158  001B9E  EFD5  F00D         	goto	i2l136
  4159  001BA2                     i2l134:
  4160                           
  4161                           ;./the3.h: 188:             number_of_steps = y_step_size;
  4162  001BA2  C02C  F020         	movff	compute_frisbee_target_and_route@y_step_size,compute_frisbee_target_and_route@num
      +                          ber_of_steps
  4163  001BA6  C02D  F021         	movff	compute_frisbee_target_and_route@y_step_size+1,compute_frisbee_target_and_route@n
      +                          umber_of_steps+1
  4164  001BAA                     i2l136:
  4165                           
  4166                           ;./the3.h: 201:     unsigned short x = current_fisbee_x_position;
  4167  001BAA  C00E  F026         	movff	compute_frisbee_target_and_route@current_fisbee_x_position,compute_frisbee_target
      +                          _and_route@x
  4168  001BAE  C00F  F027         	movff	compute_frisbee_target_and_route@current_fisbee_x_position+1,compute_frisbee_targ
      +                          et_and_route@x+1
  4169  001BB2                     
  4170                           ;./the3.h: 202:     if (target_x < current_fisbee_x_position) {
  4171  001BB2  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  4172  001BB4  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  4173  001BB6  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  4174  001BB8  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  4175  001BBA  B0D8               	btfsc	status,0,c
  4176  001BBC  EFE2  F00D         	goto	i2u284_41
  4177  001BC0  EFE4  F00D         	goto	i2u284_40
  4178  001BC4                     i2u284_41:
  4179  001BC4  EF13  F00E         	goto	i2l2856
  4180  001BC8                     i2u284_40:
  4181  001BC8                     
  4182                           ;./the3.h: 203:         for (unsigned short i = 0; i < x_step_size; i++) {
  4183  001BC8  0E00               	movlw	0
  4184  001BCA  6E15               	movwf	(compute_frisbee_target_and_route@i+1)^0,c
  4185  001BCC  0E00               	movlw	0
  4186  001BCE  6E14               	movwf	compute_frisbee_target_and_route@i^0,c
  4187  001BD0  EF06  F00E         	goto	i2l2854
  4188  001BD4                     i2l2848:
  4189                           
  4190                           ;./the3.h: 204:             x = x - 1;
  4191  001BD4  0EFF               	movlw	255
  4192  001BD6  2426               	addwf	compute_frisbee_target_and_route@x^0,w,c
  4193  001BD8  6E26               	movwf	compute_frisbee_target_and_route@x^0,c
  4194  001BDA  0EFF               	movlw	255
  4195  001BDC  2027               	addwfc	(compute_frisbee_target_and_route@x+1)^0,w,c
  4196  001BDE  6E27               	movwf	(compute_frisbee_target_and_route@x+1)^0,c
  4197  001BE0                     
  4198                           ;./the3.h: 205:             frisbee_steps[i][0] = x;
  4199  001BE0  0E80               	movlw	low _frisbee_steps
  4200  001BE2  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4201  001BE4  0E01               	movlw	high _frisbee_steps
  4202  001BE6  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4203  001BE8  90D8               	bcf	status,0,c
  4204  001BEA  3414               	rlcf	compute_frisbee_target_and_route@i^0,w,c
  4205  001BEC  6ED9               	movwf	fsr2l,c
  4206  001BEE  3415               	rlcf	(compute_frisbee_target_and_route@i+1)^0,w,c
  4207  001BF0  6EDA               	movwf	fsr2h,c
  4208  001BF2  90D8               	bcf	status,0,c
  4209  001BF4  36D9               	rlcf	fsr2l,f,c
  4210  001BF6  36DA               	rlcf	fsr2h,f,c
  4211  001BF8  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4212  001BFA  26D9               	addwf	fsr2l,f,c
  4213  001BFC  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4214  001BFE  22DA               	addwfc	fsr2h,f,c
  4215  001C00  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  4216  001C04  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  4217  001C08                     
  4218                           ;./the3.h: 206:         }
  4219  001C08  4A14               	infsnz	compute_frisbee_target_and_route@i^0,f,c
  4220  001C0A  2A15               	incf	(compute_frisbee_target_and_route@i+1)^0,f,c
  4221  001C0C                     i2l2854:
  4222  001C0C  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  4223  001C0E  5C14               	subwf	compute_frisbee_target_and_route@i^0,w,c
  4224  001C10  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  4225  001C12  5815               	subwfb	(compute_frisbee_target_and_route@i+1)^0,w,c
  4226  001C14  A0D8               	btfss	status,0,c
  4227  001C16  EF0F  F00E         	goto	i2u285_41
  4228  001C1A  EF11  F00E         	goto	i2u285_40
  4229  001C1E                     i2u285_41:
  4230  001C1E  EFEA  F00D         	goto	i2l2848
  4231  001C22                     i2u285_40:
  4232  001C22  EF40  F00E         	goto	i2l141
  4233  001C26                     i2l2856:
  4234                           
  4235                           ;./the3.h: 209:         for (unsigned short i = 0; i < x_step_size; i++) {
  4236  001C26  0E00               	movlw	0
  4237  001C28  6E17               	movwf	(compute_frisbee_target_and_route@i_782+1)^0,c
  4238  001C2A  0E00               	movlw	0
  4239  001C2C  6E16               	movwf	compute_frisbee_target_and_route@i_782^0,c
  4240  001C2E  EF35  F00E         	goto	i2l2864
  4241  001C32                     i2l2858:
  4242                           
  4243                           ;./the3.h: 210:             x = x + 1;
  4244  001C32  0E01               	movlw	1
  4245  001C34  2426               	addwf	compute_frisbee_target_and_route@x^0,w,c
  4246  001C36  6E26               	movwf	compute_frisbee_target_and_route@x^0,c
  4247  001C38  0E00               	movlw	0
  4248  001C3A  2027               	addwfc	(compute_frisbee_target_and_route@x+1)^0,w,c
  4249  001C3C  6E27               	movwf	(compute_frisbee_target_and_route@x+1)^0,c
  4250  001C3E                     
  4251                           ;./the3.h: 211:             frisbee_steps[i][0] = x;
  4252  001C3E  0E80               	movlw	low _frisbee_steps
  4253  001C40  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4254  001C42  0E01               	movlw	high _frisbee_steps
  4255  001C44  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4256  001C46  90D8               	bcf	status,0,c
  4257  001C48  3416               	rlcf	compute_frisbee_target_and_route@i_782^0,w,c
  4258  001C4A  6ED9               	movwf	fsr2l,c
  4259  001C4C  3417               	rlcf	(compute_frisbee_target_and_route@i_782+1)^0,w,c
  4260  001C4E  6EDA               	movwf	fsr2h,c
  4261  001C50  90D8               	bcf	status,0,c
  4262  001C52  36D9               	rlcf	fsr2l,f,c
  4263  001C54  36DA               	rlcf	fsr2h,f,c
  4264  001C56  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4265  001C58  26D9               	addwf	fsr2l,f,c
  4266  001C5A  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4267  001C5C  22DA               	addwfc	fsr2h,f,c
  4268  001C5E  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  4269  001C62  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  4270  001C66                     
  4271                           ;./the3.h: 212:         }
  4272  001C66  4A16               	infsnz	compute_frisbee_target_and_route@i_782^0,f,c
  4273  001C68  2A17               	incf	(compute_frisbee_target_and_route@i_782+1)^0,f,c
  4274  001C6A                     i2l2864:
  4275  001C6A  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  4276  001C6C  5C16               	subwf	compute_frisbee_target_and_route@i_782^0,w,c
  4277  001C6E  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  4278  001C70  5817               	subwfb	(compute_frisbee_target_and_route@i_782+1)^0,w,c
  4279  001C72  A0D8               	btfss	status,0,c
  4280  001C74  EF3E  F00E         	goto	i2u286_41
  4281  001C78  EF40  F00E         	goto	i2u286_40
  4282  001C7C                     i2u286_41:
  4283  001C7C  EF19  F00E         	goto	i2l2858
  4284  001C80                     i2u286_40:
  4285  001C80                     i2l141:
  4286                           
  4287                           ;./the3.h: 214:     for (unsigned short i = x_step_size; i < number_of_steps; i++)
  4288  001C80  C02A  F018         	movff	compute_frisbee_target_and_route@x_step_size,compute_frisbee_target_and_route@i_7
      +                          83
  4289  001C84  C02B  F019         	movff	compute_frisbee_target_and_route@x_step_size+1,compute_frisbee_target_and_route@i
      +                          _783+1
  4290  001C88  EF5C  F00E         	goto	i2l2870
  4291  001C8C                     i2l2866:
  4292                           
  4293                           ;./the3.h: 215:         frisbee_steps[i][0] = x;
  4294  001C8C  0E80               	movlw	low _frisbee_steps
  4295  001C8E  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4296  001C90  0E01               	movlw	high _frisbee_steps
  4297  001C92  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4298  001C94  90D8               	bcf	status,0,c
  4299  001C96  3418               	rlcf	compute_frisbee_target_and_route@i_783^0,w,c
  4300  001C98  6ED9               	movwf	fsr2l,c
  4301  001C9A  3419               	rlcf	(compute_frisbee_target_and_route@i_783+1)^0,w,c
  4302  001C9C  6EDA               	movwf	fsr2h,c
  4303  001C9E  90D8               	bcf	status,0,c
  4304  001CA0  36D9               	rlcf	fsr2l,f,c
  4305  001CA2  36DA               	rlcf	fsr2h,f,c
  4306  001CA4  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4307  001CA6  26D9               	addwf	fsr2l,f,c
  4308  001CA8  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4309  001CAA  22DA               	addwfc	fsr2h,f,c
  4310  001CAC  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  4311  001CB0  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  4312  001CB4  4A18               	infsnz	compute_frisbee_target_and_route@i_783^0,f,c
  4313  001CB6  2A19               	incf	(compute_frisbee_target_and_route@i_783+1)^0,f,c
  4314  001CB8                     i2l2870:
  4315  001CB8  5020               	movf	compute_frisbee_target_and_route@number_of_steps^0,w,c
  4316  001CBA  5C18               	subwf	compute_frisbee_target_and_route@i_783^0,w,c
  4317  001CBC  5021               	movf	(compute_frisbee_target_and_route@number_of_steps+1)^0,w,c
  4318  001CBE  5819               	subwfb	(compute_frisbee_target_and_route@i_783+1)^0,w,c
  4319  001CC0  A0D8               	btfss	status,0,c
  4320  001CC2  EF65  F00E         	goto	i2u287_41
  4321  001CC6  EF67  F00E         	goto	i2u287_40
  4322  001CCA                     i2u287_41:
  4323  001CCA  EF46  F00E         	goto	i2l2866
  4324  001CCE                     i2u287_40:
  4325  001CCE                     
  4326                           ;./the3.h: 218:     unsigned short y = current_fisbee_y_position;
  4327  001CCE  C010  F028         	movff	compute_frisbee_target_and_route@current_fisbee_y_position,compute_frisbee_target
      +                          _and_route@y
  4328  001CD2  C011  F029         	movff	compute_frisbee_target_and_route@current_fisbee_y_position+1,compute_frisbee_targ
      +                          et_and_route@y+1
  4329  001CD6                     
  4330                           ;./the3.h: 219:     if (target_y < current_fisbee_y_position) {
  4331  001CD6  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  4332  001CD8  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  4333  001CDA  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  4334  001CDC  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  4335  001CDE  B0D8               	btfsc	status,0,c
  4336  001CE0  EF74  F00E         	goto	i2u288_41
  4337  001CE4  EF76  F00E         	goto	i2u288_40
  4338  001CE8                     i2u288_41:
  4339  001CE8  EFA9  F00E         	goto	i2l2884
  4340  001CEC                     i2u288_40:
  4341  001CEC                     
  4342                           ;./the3.h: 220:         for (unsigned short i = 0; i < y_step_size; i++) {
  4343  001CEC  0E00               	movlw	0
  4344  001CEE  6E1B               	movwf	(compute_frisbee_target_and_route@i_785+1)^0,c
  4345  001CF0  0E00               	movlw	0
  4346  001CF2  6E1A               	movwf	compute_frisbee_target_and_route@i_785^0,c
  4347  001CF4  EF9C  F00E         	goto	i2l2882
  4348  001CF8                     i2l2876:
  4349                           
  4350                           ;./the3.h: 221:             y = y - 1;
  4351  001CF8  0EFF               	movlw	255
  4352  001CFA  2428               	addwf	compute_frisbee_target_and_route@y^0,w,c
  4353  001CFC  6E28               	movwf	compute_frisbee_target_and_route@y^0,c
  4354  001CFE  0EFF               	movlw	255
  4355  001D00  2029               	addwfc	(compute_frisbee_target_and_route@y+1)^0,w,c
  4356  001D02  6E29               	movwf	(compute_frisbee_target_and_route@y+1)^0,c
  4357  001D04                     
  4358                           ;./the3.h: 222:             frisbee_steps[i][1] = y;
  4359  001D04  0E80               	movlw	low _frisbee_steps
  4360  001D06  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4361  001D08  0E01               	movlw	high _frisbee_steps
  4362  001D0A  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4363  001D0C  0E02               	movlw	2
  4364  001D0E  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  4365  001D10  0E00               	movlw	0
  4366  001D12  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  4367  001D14  90D8               	bcf	status,0,c
  4368  001D16  341A               	rlcf	compute_frisbee_target_and_route@i_785^0,w,c
  4369  001D18  6ED9               	movwf	fsr2l,c
  4370  001D1A  341B               	rlcf	(compute_frisbee_target_and_route@i_785+1)^0,w,c
  4371  001D1C  6EDA               	movwf	fsr2h,c
  4372  001D1E  90D8               	bcf	status,0,c
  4373  001D20  36D9               	rlcf	fsr2l,f,c
  4374  001D22  36DA               	rlcf	fsr2h,f,c
  4375  001D24  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4376  001D26  26D9               	addwf	fsr2l,f,c
  4377  001D28  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4378  001D2A  22DA               	addwfc	fsr2h,f,c
  4379  001D2C  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  4380  001D30  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  4381  001D34                     
  4382                           ;./the3.h: 223:         }
  4383  001D34  4A1A               	infsnz	compute_frisbee_target_and_route@i_785^0,f,c
  4384  001D36  2A1B               	incf	(compute_frisbee_target_and_route@i_785+1)^0,f,c
  4385  001D38                     i2l2882:
  4386  001D38  502C               	movf	compute_frisbee_target_and_route@y_step_size^0,w,c
  4387  001D3A  5C1A               	subwf	compute_frisbee_target_and_route@i_785^0,w,c
  4388  001D3C  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  4389  001D3E  581B               	subwfb	(compute_frisbee_target_and_route@i_785+1)^0,w,c
  4390  001D40  A0D8               	btfss	status,0,c
  4391  001D42  EFA5  F00E         	goto	i2u289_41
  4392  001D46  EFA7  F00E         	goto	i2u289_40
  4393  001D4A                     i2u289_41:
  4394  001D4A  EF7C  F00E         	goto	i2l2876
  4395  001D4E                     i2u289_40:
  4396  001D4E  EFDA  F00E         	goto	i2l152
  4397  001D52                     i2l2884:
  4398                           
  4399                           ;./the3.h: 226:         for (unsigned short i = 0; i < y_step_size; i++) {
  4400  001D52  0E00               	movlw	0
  4401  001D54  6E1D               	movwf	(compute_frisbee_target_and_route@i_786+1)^0,c
  4402  001D56  0E00               	movlw	0
  4403  001D58  6E1C               	movwf	compute_frisbee_target_and_route@i_786^0,c
  4404  001D5A  EFCF  F00E         	goto	i2l2892
  4405  001D5E                     i2l2886:
  4406                           
  4407                           ;./the3.h: 227:             y = y + 1;
  4408  001D5E  0E01               	movlw	1
  4409  001D60  2428               	addwf	compute_frisbee_target_and_route@y^0,w,c
  4410  001D62  6E28               	movwf	compute_frisbee_target_and_route@y^0,c
  4411  001D64  0E00               	movlw	0
  4412  001D66  2029               	addwfc	(compute_frisbee_target_and_route@y+1)^0,w,c
  4413  001D68  6E29               	movwf	(compute_frisbee_target_and_route@y+1)^0,c
  4414  001D6A                     
  4415                           ;./the3.h: 228:             frisbee_steps[i][1] = y;
  4416  001D6A  0E80               	movlw	low _frisbee_steps
  4417  001D6C  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4418  001D6E  0E01               	movlw	high _frisbee_steps
  4419  001D70  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4420  001D72  0E02               	movlw	2
  4421  001D74  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  4422  001D76  0E00               	movlw	0
  4423  001D78  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  4424  001D7A  90D8               	bcf	status,0,c
  4425  001D7C  341C               	rlcf	compute_frisbee_target_and_route@i_786^0,w,c
  4426  001D7E  6ED9               	movwf	fsr2l,c
  4427  001D80  341D               	rlcf	(compute_frisbee_target_and_route@i_786+1)^0,w,c
  4428  001D82  6EDA               	movwf	fsr2h,c
  4429  001D84  90D8               	bcf	status,0,c
  4430  001D86  36D9               	rlcf	fsr2l,f,c
  4431  001D88  36DA               	rlcf	fsr2h,f,c
  4432  001D8A  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4433  001D8C  26D9               	addwf	fsr2l,f,c
  4434  001D8E  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4435  001D90  22DA               	addwfc	fsr2h,f,c
  4436  001D92  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  4437  001D96  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  4438  001D9A                     
  4439                           ;./the3.h: 229:         }
  4440  001D9A  4A1C               	infsnz	compute_frisbee_target_and_route@i_786^0,f,c
  4441  001D9C  2A1D               	incf	(compute_frisbee_target_and_route@i_786+1)^0,f,c
  4442  001D9E                     i2l2892:
  4443  001D9E  502C               	movf	compute_frisbee_target_and_route@y_step_size^0,w,c
  4444  001DA0  5C1C               	subwf	compute_frisbee_target_and_route@i_786^0,w,c
  4445  001DA2  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  4446  001DA4  581D               	subwfb	(compute_frisbee_target_and_route@i_786+1)^0,w,c
  4447  001DA6  A0D8               	btfss	status,0,c
  4448  001DA8  EFD8  F00E         	goto	i2u290_41
  4449  001DAC  EFDA  F00E         	goto	i2u290_40
  4450  001DB0                     i2u290_41:
  4451  001DB0  EFAF  F00E         	goto	i2l2886
  4452  001DB4                     i2u290_40:
  4453  001DB4                     i2l152:
  4454                           
  4455                           ;./the3.h: 231:     for (unsigned short i = y_step_size; i < number_of_steps; i++)
  4456  001DB4  C02C  F01E         	movff	compute_frisbee_target_and_route@y_step_size,compute_frisbee_target_and_route@i_7
      +                          87
  4457  001DB8  C02D  F01F         	movff	compute_frisbee_target_and_route@y_step_size+1,compute_frisbee_target_and_route@i
      +                          _787+1
  4458  001DBC  EFFA  F00E         	goto	i2l2898
  4459  001DC0                     i2l2894:
  4460                           
  4461                           ;./the3.h: 232:         frisbee_steps[i][1] = y;
  4462  001DC0  0E80               	movlw	low _frisbee_steps
  4463  001DC2  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  4464  001DC4  0E01               	movlw	high _frisbee_steps
  4465  001DC6  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  4466  001DC8  0E02               	movlw	2
  4467  001DCA  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  4468  001DCC  0E00               	movlw	0
  4469  001DCE  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  4470  001DD0  90D8               	bcf	status,0,c
  4471  001DD2  341E               	rlcf	compute_frisbee_target_and_route@i_787^0,w,c
  4472  001DD4  6ED9               	movwf	fsr2l,c
  4473  001DD6  341F               	rlcf	(compute_frisbee_target_and_route@i_787+1)^0,w,c
  4474  001DD8  6EDA               	movwf	fsr2h,c
  4475  001DDA  90D8               	bcf	status,0,c
  4476  001DDC  36D9               	rlcf	fsr2l,f,c
  4477  001DDE  36DA               	rlcf	fsr2h,f,c
  4478  001DE0  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  4479  001DE2  26D9               	addwf	fsr2l,f,c
  4480  001DE4  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  4481  001DE6  22DA               	addwfc	fsr2h,f,c
  4482  001DE8  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  4483  001DEC  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  4484  001DF0  4A1E               	infsnz	compute_frisbee_target_and_route@i_787^0,f,c
  4485  001DF2  2A1F               	incf	(compute_frisbee_target_and_route@i_787+1)^0,f,c
  4486  001DF4                     i2l2898:
  4487  001DF4  5020               	movf	compute_frisbee_target_and_route@number_of_steps^0,w,c
  4488  001DF6  5C1E               	subwf	compute_frisbee_target_and_route@i_787^0,w,c
  4489  001DF8  5021               	movf	(compute_frisbee_target_and_route@number_of_steps+1)^0,w,c
  4490  001DFA  581F               	subwfb	(compute_frisbee_target_and_route@i_787+1)^0,w,c
  4491  001DFC  A0D8               	btfss	status,0,c
  4492  001DFE  EF03  F00F         	goto	i2u291_41
  4493  001E02  EF05  F00F         	goto	i2u291_40
  4494  001E06                     i2u291_41:
  4495  001E06  EFE0  F00E         	goto	i2l2894
  4496  001E0A                     i2u291_40:
  4497  001E0A                     
  4498                           ;./the3.h: 234:     return number_of_steps;
  4499  001E0A  C020  F00E         	movff	compute_frisbee_target_and_route@number_of_steps,?_compute_frisbee_target_and_rou
      +                          te
  4500  001E0E  C021  F00F         	movff	compute_frisbee_target_and_route@number_of_steps+1,?_compute_frisbee_target_and_r
      +                          oute+1
  4501  001E12  0012               	return		;funcret
  4502  001E14                     __end_of_compute_frisbee_target_and_route:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _SetupDebouncingTimer *****************
  4506 ;; Defined at:
  4507 ;;		line 612 in file "main.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;Total ram usage:        0 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_highIsr
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text14
  4535  00430E                     __ptext14:
  4536                           	callstack 0
  4537  00430E                     _SetupDebouncingTimer:
  4538                           	callstack 24
  4539  00430E                     
  4540                           ;main.c: 613:     acceptInterrupts = 0;
  4541  00430E  0E00               	movlw	0
  4542  004310  6E7B               	movwf	_acceptInterrupts^0,c
  4543                           
  4544                           ;main.c: 614:     TMR0L = 0;
  4545  004312  0E00               	movlw	0
  4546  004314  6ED6               	movwf	214,c	;volatile
  4547                           
  4548                           ;main.c: 615:     TMR0H = 0;
  4549  004316  0E00               	movlw	0
  4550  004318  6ED7               	movwf	215,c	;volatile
  4551  00431A                     
  4552                           ;main.c: 616:     T0CONbits.TMR0ON = 1;
  4553  00431A  8ED5               	bsf	213,7,c	;volatile
  4554  00431C  0012               	return		;funcret
  4555  00431E                     __end_of_SetupDebouncingTimer:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _MoveEveryone *****************
  4559 ;; Defined at:
  4560 ;;		line 258 in file "main.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  val             2   32[COMRAM] int 
  4565 ;;  i               2   50[COMRAM] int 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;Total ram usage:       22 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    3
  4582 ;; This function calls:
  4583 ;;		_down
  4584 ;;		_downleft
  4585 ;;		_downright
  4586 ;;		_left
  4587 ;;		_random_generator
  4588 ;;		_right
  4589 ;;		_up
  4590 ;;		_upleft
  4591 ;;		_upright
  4592 ;;		i2___wmul
  4593 ;; This function is called by:
  4594 ;;		_highIsr
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text15
  4599  003738                     __ptext15:
  4600                           	callstack 0
  4601  003738                     _MoveEveryone:
  4602                           	callstack 21
  4603  003738                     
  4604                           ;main.c: 259:     for (int i = 0; i < 4; i++) {
  4605  003738  0E00               	movlw	0
  4606  00373A  6E34               	movwf	(MoveEveryone@i+1)^0,c
  4607  00373C  0E00               	movlw	0
  4608  00373E  6E33               	movwf	MoveEveryone@i^0,c
  4609  003740                     i2l2950:
  4610                           
  4611                           ;main.c: 260:         if (i == selectedPlayer) continue;
  4612  003740  5072               	movf	_selectedPlayer^0,w,c
  4613  003742  1833               	xorwf	MoveEveryone@i^0,w,c
  4614  003744  E107               	bnz	i2u295_41
  4615  003746  5073               	movf	(_selectedPlayer+1)^0,w,c
  4616  003748  1834               	xorwf	(MoveEveryone@i+1)^0,w,c
  4617  00374A  A4D8               	btfss	status,2,c
  4618  00374C  EFAA  F01B         	goto	i2u295_41
  4619  003750  EFAC  F01B         	goto	i2u295_40
  4620  003754                     i2u295_41:
  4621  003754  EFAE  F01B         	goto	i2l2954
  4622  003758                     i2u295_40:
  4623  003758  EFAC  F01C         	goto	i2l2992
  4624  00375C                     i2l2954:
  4625                           
  4626                           ;main.c: 262:         int val = random_generator(9);
  4627  00375C  0E00               	movlw	0
  4628  00375E  6E07               	movwf	(random_generator@modulo+1)^0,c
  4629  003760  0E09               	movlw	9
  4630  003762  6E06               	movwf	random_generator@modulo^0,c
  4631  003764  EC66  F020         	call	_random_generator	;wreg free
  4632  003768  C006  F021         	movff	?_random_generator,MoveEveryone@val
  4633  00376C  C007  F022         	movff	?_random_generator+1,MoveEveryone@val+1
  4634                           
  4635                           ;main.c: 263:         switch(val) {
  4636  003770  EF7A  F01C         	goto	i2l2990
  4637  003774                     i2l2956:
  4638                           
  4639                           ;main.c: 265:                 left(&objs[i]);
  4640  003774  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4641  003778  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4642  00377C  0E00               	movlw	0
  4643  00377E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4644  003780  0E07               	movlw	7
  4645  003782  6E03               	movwf	i2___wmul@multiplicand^0,c
  4646  003784  EC34  F021         	call	i2___wmul	;wreg free
  4647  003788  0E84               	movlw	low _objs
  4648  00378A  2401               	addwf	?i2___wmul^0,w,c
  4649  00378C  6E23               	movwf	_MoveEveryone$1802^0,c
  4650  00378E  0E00               	movlw	high _objs
  4651  003790  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4652  003792  6E24               	movwf	(_MoveEveryone$1802+1)^0,c
  4653  003794                     
  4654                           ;main.c: 265:                 left(&objs[i]);
  4655  003794  C023  F013         	movff	_MoveEveryone$1802,left@pl
  4656  003798  C024  F014         	movff	_MoveEveryone$1802+1,left@pl+1
  4657  00379C  ECED  F013         	call	_left	;wreg free
  4658                           
  4659                           ;main.c: 266:                 break;
  4660  0037A0  EFAC  F01C         	goto	i2l2992
  4661  0037A4                     i2l2960:
  4662                           
  4663                           ;main.c: 268:                 right(&objs[i]);
  4664  0037A4  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4665  0037A8  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4666  0037AC  0E00               	movlw	0
  4667  0037AE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4668  0037B0  0E07               	movlw	7
  4669  0037B2  6E03               	movwf	i2___wmul@multiplicand^0,c
  4670  0037B4  EC34  F021         	call	i2___wmul	;wreg free
  4671  0037B8  0E84               	movlw	low _objs
  4672  0037BA  2401               	addwf	?i2___wmul^0,w,c
  4673  0037BC  6E25               	movwf	_MoveEveryone$1803^0,c
  4674  0037BE  0E00               	movlw	high _objs
  4675  0037C0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4676  0037C2  6E26               	movwf	(_MoveEveryone$1803+1)^0,c
  4677  0037C4                     
  4678                           ;main.c: 268:                 right(&objs[i]);
  4679  0037C4  C025  F013         	movff	_MoveEveryone$1803,right@pl
  4680  0037C8  C026  F014         	movff	_MoveEveryone$1803+1,right@pl+1
  4681  0037CC  EC13  F017         	call	_right	;wreg free
  4682                           
  4683                           ;main.c: 269:                 break;
  4684  0037D0  EFAC  F01C         	goto	i2l2992
  4685  0037D4                     i2l2964:
  4686                           
  4687                           ;main.c: 271:                 up(&objs[i]);
  4688  0037D4  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4689  0037D8  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4690  0037DC  0E00               	movlw	0
  4691  0037DE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4692  0037E0  0E07               	movlw	7
  4693  0037E2  6E03               	movwf	i2___wmul@multiplicand^0,c
  4694  0037E4  EC34  F021         	call	i2___wmul	;wreg free
  4695  0037E8  0E84               	movlw	low _objs
  4696  0037EA  2401               	addwf	?i2___wmul^0,w,c
  4697  0037EC  6E27               	movwf	_MoveEveryone$1804^0,c
  4698  0037EE  0E00               	movlw	high _objs
  4699  0037F0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4700  0037F2  6E28               	movwf	(_MoveEveryone$1804+1)^0,c
  4701  0037F4                     
  4702                           ;main.c: 271:                 up(&objs[i]);
  4703  0037F4  C027  F013         	movff	_MoveEveryone$1804,up@pl
  4704  0037F8  C028  F014         	movff	_MoveEveryone$1804+1,up@pl+1
  4705  0037FC  EC55  F012         	call	_up	;wreg free
  4706                           
  4707                           ;main.c: 272:                 break;
  4708  003800  EFAC  F01C         	goto	i2l2992
  4709  003804                     i2l2968:
  4710                           
  4711                           ;main.c: 274:                 down(&objs[i]);
  4712  003804  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4713  003808  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4714  00380C  0E00               	movlw	0
  4715  00380E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4716  003810  0E07               	movlw	7
  4717  003812  6E03               	movwf	i2___wmul@multiplicand^0,c
  4718  003814  EC34  F021         	call	i2___wmul	;wreg free
  4719  003818  0E84               	movlw	low _objs
  4720  00381A  2401               	addwf	?i2___wmul^0,w,c
  4721  00381C  6E29               	movwf	_MoveEveryone$1805^0,c
  4722  00381E  0E00               	movlw	high _objs
  4723  003820  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4724  003822  6E2A               	movwf	(_MoveEveryone$1805+1)^0,c
  4725  003824                     
  4726                           ;main.c: 274:                 down(&objs[i]);
  4727  003824  C029  F013         	movff	_MoveEveryone$1805,down@pl
  4728  003828  C02A  F014         	movff	_MoveEveryone$1805+1,down@pl+1
  4729  00382C  ECA0  F018         	call	_down	;wreg free
  4730                           
  4731                           ;main.c: 275:                 break;
  4732  003830  EFAC  F01C         	goto	i2l2992
  4733  003834                     i2l2972:
  4734                           
  4735                           ;main.c: 277:                 upleft(&objs[i]);
  4736  003834  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4737  003838  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4738  00383C  0E00               	movlw	0
  4739  00383E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4740  003840  0E07               	movlw	7
  4741  003842  6E03               	movwf	i2___wmul@multiplicand^0,c
  4742  003844  EC34  F021         	call	i2___wmul	;wreg free
  4743  003848  0E84               	movlw	low _objs
  4744  00384A  2401               	addwf	?i2___wmul^0,w,c
  4745  00384C  6E2B               	movwf	_MoveEveryone$1806^0,c
  4746  00384E  0E00               	movlw	high _objs
  4747  003850  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4748  003852  6E2C               	movwf	(_MoveEveryone$1806+1)^0,c
  4749  003854                     
  4750                           ;main.c: 277:                 upleft(&objs[i]);
  4751  003854  C02B  F013         	movff	_MoveEveryone$1806,upleft@pl
  4752  003858  C02C  F014         	movff	_MoveEveryone$1806+1,upleft@pl+1
  4753  00385C  EC0A  F00F         	call	_upleft	;wreg free
  4754                           
  4755                           ;main.c: 278:                 break;
  4756  003860  EFAC  F01C         	goto	i2l2992
  4757  003864                     i2l2976:
  4758                           
  4759                           ;main.c: 280:                 upright(&objs[i]);
  4760  003864  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4761  003868  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4762  00386C  0E00               	movlw	0
  4763  00386E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4764  003870  0E07               	movlw	7
  4765  003872  6E03               	movwf	i2___wmul@multiplicand^0,c
  4766  003874  EC34  F021         	call	i2___wmul	;wreg free
  4767  003878  0E84               	movlw	low _objs
  4768  00387A  2401               	addwf	?i2___wmul^0,w,c
  4769  00387C  6E2D               	movwf	_MoveEveryone$1807^0,c
  4770  00387E  0E00               	movlw	high _objs
  4771  003880  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4772  003882  6E2E               	movwf	(_MoveEveryone$1807+1)^0,c
  4773  003884                     
  4774                           ;main.c: 280:                 upright(&objs[i]);
  4775  003884  C02D  F013         	movff	_MoveEveryone$1807,upright@pl
  4776  003888  C02E  F014         	movff	_MoveEveryone$1807+1,upright@pl+1
  4777  00388C  ECB3  F010         	call	_upright	;wreg free
  4778                           
  4779                           ;main.c: 281:                 break;
  4780  003890  EFAC  F01C         	goto	i2l2992
  4781  003894                     i2l2980:
  4782                           
  4783                           ;main.c: 283:                 downleft(&objs[i]);
  4784  003894  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4785  003898  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4786  00389C  0E00               	movlw	0
  4787  00389E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4788  0038A0  0E07               	movlw	7
  4789  0038A2  6E03               	movwf	i2___wmul@multiplicand^0,c
  4790  0038A4  EC34  F021         	call	i2___wmul	;wreg free
  4791  0038A8  0E84               	movlw	low _objs
  4792  0038AA  2401               	addwf	?i2___wmul^0,w,c
  4793  0038AC  6E2F               	movwf	_MoveEveryone$1808^0,c
  4794  0038AE  0E00               	movlw	high _objs
  4795  0038B0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4796  0038B2  6E30               	movwf	(_MoveEveryone$1808+1)^0,c
  4797  0038B4                     
  4798                           ;main.c: 283:                 downleft(&objs[i]);
  4799  0038B4  C02F  F013         	movff	_MoveEveryone$1808,downleft@pl
  4800  0038B8  C030  F014         	movff	_MoveEveryone$1808+1,downleft@pl+1
  4801  0038BC  EC81  F015         	call	_downleft	;wreg free
  4802                           
  4803                           ;main.c: 284:                 break;
  4804  0038C0  EFAC  F01C         	goto	i2l2992
  4805  0038C4                     i2l2984:
  4806                           
  4807                           ;main.c: 286:                 downright(&objs[i]);
  4808  0038C4  C033  F001         	movff	MoveEveryone@i,i2___wmul@multiplier
  4809  0038C8  C034  F002         	movff	MoveEveryone@i+1,i2___wmul@multiplier+1
  4810  0038CC  0E00               	movlw	0
  4811  0038CE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4812  0038D0  0E07               	movlw	7
  4813  0038D2  6E03               	movwf	i2___wmul@multiplicand^0,c
  4814  0038D4  EC34  F021         	call	i2___wmul	;wreg free
  4815  0038D8  0E84               	movlw	low _objs
  4816  0038DA  2401               	addwf	?i2___wmul^0,w,c
  4817  0038DC  6E31               	movwf	_MoveEveryone$1809^0,c
  4818  0038DE  0E00               	movlw	high _objs
  4819  0038E0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4820  0038E2  6E32               	movwf	(_MoveEveryone$1809+1)^0,c
  4821  0038E4                     
  4822                           ;main.c: 286:                 downright(&objs[i]);
  4823  0038E4  C031  F013         	movff	_MoveEveryone$1809,downright@pl
  4824  0038E8  C032  F014         	movff	_MoveEveryone$1809+1,downright@pl+1
  4825  0038EC  EC21  F01A         	call	_downright	;wreg free
  4826                           
  4827                           ;main.c: 287:                 break;
  4828  0038F0  EFAC  F01C         	goto	i2l2992
  4829  0038F4                     i2l2990:
  4830  0038F4  C021  F01F         	movff	MoveEveryone@val,??_MoveEveryone
  4831  0038F8  C022  F020         	movff	MoveEveryone@val+1,??_MoveEveryone+1
  4832                           
  4833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4834                           ; Switch size 1, requested type "simple"
  4835                           ; Number of cases is 1, Range of values is 0 to 0
  4836                           ; switch strategies available:
  4837                           ; Name         Instructions Cycles
  4838                           ; simple_byte            4     3 (average)
  4839                           ;	Chosen strategy is simple_byte
  4840  0038FC  5020               	movf	(??_MoveEveryone+1)^0,w,c
  4841  0038FE  0A00               	xorlw	0	; case 0
  4842  003900  B4D8               	btfsc	status,2,c
  4843  003902  EF85  F01C         	goto	i2l4302
  4844  003906  EFAC  F01C         	goto	i2l2992
  4845  00390A                     i2l4302:
  4846                           
  4847                           ; Switch size 1, requested type "simple"
  4848                           ; Number of cases is 9, Range of values is 0 to 8
  4849                           ; switch strategies available:
  4850                           ; Name         Instructions Cycles
  4851                           ; simple_byte           28    15 (average)
  4852                           ;	Chosen strategy is simple_byte
  4853  00390A  501F               	movf	??_MoveEveryone^0,w,c
  4854  00390C  0A00               	xorlw	0	; case 0
  4855  00390E  B4D8               	btfsc	status,2,c
  4856  003910  EFBA  F01B         	goto	i2l2956
  4857  003914  0A01               	xorlw	1	; case 1
  4858  003916  B4D8               	btfsc	status,2,c
  4859  003918  EFD2  F01B         	goto	i2l2960
  4860  00391C  0A03               	xorlw	3	; case 2
  4861  00391E  B4D8               	btfsc	status,2,c
  4862  003920  EFEA  F01B         	goto	i2l2964
  4863  003924  0A01               	xorlw	1	; case 3
  4864  003926  B4D8               	btfsc	status,2,c
  4865  003928  EF02  F01C         	goto	i2l2968
  4866  00392C  0A07               	xorlw	7	; case 4
  4867  00392E  B4D8               	btfsc	status,2,c
  4868  003930  EF1A  F01C         	goto	i2l2972
  4869  003934  0A01               	xorlw	1	; case 5
  4870  003936  B4D8               	btfsc	status,2,c
  4871  003938  EF32  F01C         	goto	i2l2976
  4872  00393C  0A03               	xorlw	3	; case 6
  4873  00393E  B4D8               	btfsc	status,2,c
  4874  003940  EF4A  F01C         	goto	i2l2980
  4875  003944  0A01               	xorlw	1	; case 7
  4876  003946  B4D8               	btfsc	status,2,c
  4877  003948  EF62  F01C         	goto	i2l2984
  4878  00394C  0A0F               	xorlw	15	; case 8
  4879  00394E  B4D8               	btfsc	status,2,c
  4880  003950  EFAC  F01C         	goto	i2l2992
  4881  003954  EFAC  F01C         	goto	i2l2992
  4882  003958                     i2l2992:
  4883  003958  4A33               	infsnz	MoveEveryone@i^0,f,c
  4884  00395A  2A34               	incf	(MoveEveryone@i+1)^0,f,c
  4885  00395C  BE34               	btfsc	(MoveEveryone@i+1)^0,7,c
  4886  00395E  EFBA  F01C         	goto	i2u296_41
  4887  003962  5034               	movf	(MoveEveryone@i+1)^0,w,c
  4888  003964  E109               	bnz	i2u296_40
  4889  003966  0E04               	movlw	4
  4890  003968  5C33               	subwf	MoveEveryone@i^0,w,c
  4891  00396A  A0D8               	btfss	status,0,c
  4892  00396C  EFBA  F01C         	goto	i2u296_41
  4893  003970  EFBC  F01C         	goto	i2u296_40
  4894  003974                     i2u296_41:
  4895  003974  EFA0  F01B         	goto	i2l2950
  4896  003978                     i2u296_40:
  4897  003978  0012               	return		;funcret
  4898  00397A                     __end_of_MoveEveryone:
  4899                           	callstack 0
  4900                           
  4901 ;; *************** function _upright *****************
  4902 ;; Defined at:
  4903 ;;		line 760 in file "main.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  pl              2   18[COMRAM] PTR struct GameElement
  4906 ;;		 -> objs(42), 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;Total ram usage:       11 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    2
  4925 ;; This function calls:
  4926 ;;		_CatchFrisbee
  4927 ;; This function is called by:
  4928 ;;		_MoveEveryone
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text16
  4933  002166                     __ptext16:
  4934                           	callstack 0
  4935  002166                     _upright:
  4936                           	callstack 21
  4937  002166                     
  4938                           ;main.c: 761:     if (pl->x == 16 || pl->y == 1) return;
  4939  002166  C013  FFD9         	movff	upright@pl,fsr2l
  4940  00216A  C014  FFDA         	movff	upright@pl+1,fsr2h
  4941  00216E  0E10               	movlw	16
  4942  002170  18DE               	xorwf	postinc2,w,c
  4943  002172  B4D8               	btfsc	status,2,c
  4944  002174  EFBE  F010         	goto	i2u251_41
  4945  002178  EFC0  F010         	goto	i2u251_40
  4946  00217C                     i2u251_41:
  4947  00217C  EF54  F012         	goto	i2l487
  4948  002180                     i2u251_40:
  4949  002180  EE20 F001          	lfsr	2,1
  4950  002184  5013               	movf	upright@pl^0,w,c
  4951  002186  26D9               	addwf	fsr2l,f,c
  4952  002188  5014               	movf	(upright@pl+1)^0,w,c
  4953  00218A  22DA               	addwfc	fsr2h,f,c
  4954  00218C  04DE               	decf	postinc2,w,c
  4955  00218E  A4D8               	btfss	status,2,c
  4956  002190  EFCC  F010         	goto	i2u252_41
  4957  002194  EFCE  F010         	goto	i2u252_40
  4958  002198                     i2u252_41:
  4959  002198  EFD0  F010         	goto	i2l2726
  4960  00219C                     i2u252_40:
  4961  00219C  EF54  F012         	goto	i2l487
  4962  0021A0                     i2l2726:
  4963                           
  4964                           ;main.c: 762:     if (display[pl->y-2][pl->x] != ((void*)0)) {
  4965  0021A0  EE20 F001          	lfsr	2,1
  4966  0021A4  5013               	movf	upright@pl^0,w,c
  4967  0021A6  26D9               	addwf	fsr2l,f,c
  4968  0021A8  5014               	movf	(upright@pl+1)^0,w,c
  4969  0021AA  22DA               	addwfc	fsr2h,f,c
  4970  0021AC  50DF               	movf	indf2,w,c
  4971  0021AE  6E15               	movwf	??_upright^0,c
  4972  0021B0  6A16               	clrf	(??_upright+1)^0,c
  4973  0021B2  0E05               	movlw	5
  4974  0021B4                     i2u253_45:
  4975  0021B4  90D8               	bcf	status,0,c
  4976  0021B6  3615               	rlcf	??_upright^0,f,c
  4977  0021B8  3616               	rlcf	(??_upright+1)^0,f,c
  4978  0021BA  2EE8               	decfsz	wreg,f,c
  4979  0021BC  EFDA  F010         	goto	i2u253_45
  4980  0021C0  C013  FFD9         	movff	upright@pl,fsr2l
  4981  0021C4  C014  FFDA         	movff	upright@pl+1,fsr2h
  4982  0021C8  50DF               	movf	indf2,w,c
  4983  0021CA  6E17               	movwf	(??_upright+2)^0,c
  4984  0021CC  5017               	movf	(??_upright+2)^0,w,c
  4985  0021CE  0D02               	mullw	2
  4986  0021D0  0EC0               	movlw	192
  4987  0021D2  6E18               	movwf	(??_upright+3)^0,c
  4988  0021D4  0EFF               	movlw	255
  4989  0021D6  6E19               	movwf	(??_upright+4)^0,c
  4990  0021D8  0E00               	movlw	low _display
  4991  0021DA  6E1A               	movwf	(??_upright+5)^0,c
  4992  0021DC  0E01               	movlw	high _display
  4993  0021DE  6E1B               	movwf	(??_upright+6)^0,c
  4994  0021E0  5018               	movf	(??_upright+3)^0,w,c
  4995  0021E2  261A               	addwf	(??_upright+5)^0,f,c
  4996  0021E4  5019               	movf	(??_upright+4)^0,w,c
  4997  0021E6  221B               	addwfc	(??_upright+6)^0,f,c
  4998  0021E8  50F3               	movf	243,w,c
  4999  0021EA  261A               	addwf	(??_upright+5)^0,f,c
  5000  0021EC  50F4               	movf	244,w,c
  5001  0021EE  221B               	addwfc	(??_upright+6)^0,f,c
  5002  0021F0  5015               	movf	??_upright^0,w,c
  5003  0021F2  241A               	addwf	(??_upright+5)^0,w,c
  5004  0021F4  6ED9               	movwf	fsr2l,c
  5005  0021F6  5016               	movf	(??_upright+1)^0,w,c
  5006  0021F8  201B               	addwfc	(??_upright+6)^0,w,c
  5007  0021FA  6EDA               	movwf	fsr2h,c
  5008  0021FC  50DE               	movf	postinc2,w,c
  5009  0021FE  10DE               	iorwf	postinc2,w,c
  5010  002200  B4D8               	btfsc	status,2,c
  5011  002202  EF05  F011         	goto	i2u254_41
  5012  002206  EF07  F011         	goto	i2u254_40
  5013  00220A                     i2u254_41:
  5014  00220A  EFC6  F011         	goto	i2l2740
  5015  00220E                     i2u254_40:
  5016  00220E                     
  5017                           ;main.c: 763:         if (display[pl->y-2][pl->x]->type == OT_PLAYERA) return;
  5018  00220E  EE20 F001          	lfsr	2,1
  5019  002212  5013               	movf	upright@pl^0,w,c
  5020  002214  26D9               	addwf	fsr2l,f,c
  5021  002216  5014               	movf	(upright@pl+1)^0,w,c
  5022  002218  22DA               	addwfc	fsr2h,f,c
  5023  00221A  50DF               	movf	indf2,w,c
  5024  00221C  6E15               	movwf	??_upright^0,c
  5025  00221E  6A16               	clrf	(??_upright+1)^0,c
  5026  002220  0E05               	movlw	5
  5027  002222                     i2u255_45:
  5028  002222  90D8               	bcf	status,0,c
  5029  002224  3615               	rlcf	??_upright^0,f,c
  5030  002226  3616               	rlcf	(??_upright+1)^0,f,c
  5031  002228  2EE8               	decfsz	wreg,f,c
  5032  00222A  EF11  F011         	goto	i2u255_45
  5033  00222E  C013  FFD9         	movff	upright@pl,fsr2l
  5034  002232  C014  FFDA         	movff	upright@pl+1,fsr2h
  5035  002236  50DF               	movf	indf2,w,c
  5036  002238  6E17               	movwf	(??_upright+2)^0,c
  5037  00223A  5017               	movf	(??_upright+2)^0,w,c
  5038  00223C  0D02               	mullw	2
  5039  00223E  0EC0               	movlw	192
  5040  002240  6E18               	movwf	(??_upright+3)^0,c
  5041  002242  0EFF               	movlw	255
  5042  002244  6E19               	movwf	(??_upright+4)^0,c
  5043  002246  0E00               	movlw	low _display
  5044  002248  6E1A               	movwf	(??_upright+5)^0,c
  5045  00224A  0E01               	movlw	high _display
  5046  00224C  6E1B               	movwf	(??_upright+6)^0,c
  5047  00224E  5018               	movf	(??_upright+3)^0,w,c
  5048  002250  261A               	addwf	(??_upright+5)^0,f,c
  5049  002252  5019               	movf	(??_upright+4)^0,w,c
  5050  002254  221B               	addwfc	(??_upright+6)^0,f,c
  5051  002256  50F3               	movf	243,w,c
  5052  002258  261A               	addwf	(??_upright+5)^0,f,c
  5053  00225A  50F4               	movf	244,w,c
  5054  00225C  221B               	addwfc	(??_upright+6)^0,f,c
  5055  00225E  5015               	movf	??_upright^0,w,c
  5056  002260  241A               	addwf	(??_upright+5)^0,w,c
  5057  002262  6ED9               	movwf	fsr2l,c
  5058  002264  5016               	movf	(??_upright+1)^0,w,c
  5059  002266  201B               	addwfc	(??_upright+6)^0,w,c
  5060  002268  6EDA               	movwf	fsr2h,c
  5061  00226A  EE10 F005          	lfsr	1,5
  5062  00226E  50DE               	movf	postinc2,w,c
  5063  002270  26E1               	addwf	fsr1l,f,c
  5064  002272  50DD               	movf	postdec2,w,c
  5065  002274  22E2               	addwfc	fsr1h,f,c
  5066  002276  50E7               	movf	indf1,w,c
  5067  002278  A4D8               	btfss	status,2,c
  5068  00227A  EF41  F011         	goto	i2u256_41
  5069  00227E  EF43  F011         	goto	i2u256_40
  5070  002282                     i2u256_41:
  5071  002282  EF45  F011         	goto	i2l2732
  5072  002286                     i2u256_40:
  5073  002286  EF54  F012         	goto	i2l487
  5074  00228A                     i2l2732:
  5075                           
  5076                           ;main.c: 764:         if (display[pl->y-2][pl->x]->type == OT_PLAYERB) return;
  5077  00228A  EE20 F001          	lfsr	2,1
  5078  00228E  5013               	movf	upright@pl^0,w,c
  5079  002290  26D9               	addwf	fsr2l,f,c
  5080  002292  5014               	movf	(upright@pl+1)^0,w,c
  5081  002294  22DA               	addwfc	fsr2h,f,c
  5082  002296  50DF               	movf	indf2,w,c
  5083  002298  6E15               	movwf	??_upright^0,c
  5084  00229A  6A16               	clrf	(??_upright+1)^0,c
  5085  00229C  0E05               	movlw	5
  5086  00229E                     i2u257_45:
  5087  00229E  90D8               	bcf	status,0,c
  5088  0022A0  3615               	rlcf	??_upright^0,f,c
  5089  0022A2  3616               	rlcf	(??_upright+1)^0,f,c
  5090  0022A4  2EE8               	decfsz	wreg,f,c
  5091  0022A6  EF4F  F011         	goto	i2u257_45
  5092  0022AA  C013  FFD9         	movff	upright@pl,fsr2l
  5093  0022AE  C014  FFDA         	movff	upright@pl+1,fsr2h
  5094  0022B2  50DF               	movf	indf2,w,c
  5095  0022B4  6E17               	movwf	(??_upright+2)^0,c
  5096  0022B6  5017               	movf	(??_upright+2)^0,w,c
  5097  0022B8  0D02               	mullw	2
  5098  0022BA  0EC0               	movlw	192
  5099  0022BC  6E18               	movwf	(??_upright+3)^0,c
  5100  0022BE  0EFF               	movlw	255
  5101  0022C0  6E19               	movwf	(??_upright+4)^0,c
  5102  0022C2  0E00               	movlw	low _display
  5103  0022C4  6E1A               	movwf	(??_upright+5)^0,c
  5104  0022C6  0E01               	movlw	high _display
  5105  0022C8  6E1B               	movwf	(??_upright+6)^0,c
  5106  0022CA  5018               	movf	(??_upright+3)^0,w,c
  5107  0022CC  261A               	addwf	(??_upright+5)^0,f,c
  5108  0022CE  5019               	movf	(??_upright+4)^0,w,c
  5109  0022D0  221B               	addwfc	(??_upright+6)^0,f,c
  5110  0022D2  50F3               	movf	243,w,c
  5111  0022D4  261A               	addwf	(??_upright+5)^0,f,c
  5112  0022D6  50F4               	movf	244,w,c
  5113  0022D8  221B               	addwfc	(??_upright+6)^0,f,c
  5114  0022DA  5015               	movf	??_upright^0,w,c
  5115  0022DC  241A               	addwf	(??_upright+5)^0,w,c
  5116  0022DE  6ED9               	movwf	fsr2l,c
  5117  0022E0  5016               	movf	(??_upright+1)^0,w,c
  5118  0022E2  201B               	addwfc	(??_upright+6)^0,w,c
  5119  0022E4  6EDA               	movwf	fsr2h,c
  5120  0022E6  EE10 F005          	lfsr	1,5
  5121  0022EA  50DE               	movf	postinc2,w,c
  5122  0022EC  26E1               	addwf	fsr1l,f,c
  5123  0022EE  50DD               	movf	postdec2,w,c
  5124  0022F0  22E2               	addwfc	fsr1h,f,c
  5125  0022F2  04E6               	decf	postinc1,w,c
  5126  0022F4  A4D8               	btfss	status,2,c
  5127  0022F6  EF7F  F011         	goto	i2u258_41
  5128  0022FA  EF81  F011         	goto	i2u258_40
  5129  0022FE                     i2u258_41:
  5130  0022FE  EF83  F011         	goto	i2l2736
  5131  002302                     i2u258_40:
  5132  002302  EF54  F012         	goto	i2l487
  5133  002306                     i2l2736:
  5134                           
  5135                           ;main.c: 765:         if (display[pl->y-2][pl->x]->type == OT_FRISBEE) {
  5136  002306  EE20 F001          	lfsr	2,1
  5137  00230A  5013               	movf	upright@pl^0,w,c
  5138  00230C  26D9               	addwf	fsr2l,f,c
  5139  00230E  5014               	movf	(upright@pl+1)^0,w,c
  5140  002310  22DA               	addwfc	fsr2h,f,c
  5141  002312  50DF               	movf	indf2,w,c
  5142  002314  6E15               	movwf	??_upright^0,c
  5143  002316  6A16               	clrf	(??_upright+1)^0,c
  5144  002318  0E05               	movlw	5
  5145  00231A                     i2u259_45:
  5146  00231A  90D8               	bcf	status,0,c
  5147  00231C  3615               	rlcf	??_upright^0,f,c
  5148  00231E  3616               	rlcf	(??_upright+1)^0,f,c
  5149  002320  2EE8               	decfsz	wreg,f,c
  5150  002322  EF8D  F011         	goto	i2u259_45
  5151  002326  C013  FFD9         	movff	upright@pl,fsr2l
  5152  00232A  C014  FFDA         	movff	upright@pl+1,fsr2h
  5153  00232E  50DF               	movf	indf2,w,c
  5154  002330  6E17               	movwf	(??_upright+2)^0,c
  5155  002332  5017               	movf	(??_upright+2)^0,w,c
  5156  002334  0D02               	mullw	2
  5157  002336  0EC0               	movlw	192
  5158  002338  6E18               	movwf	(??_upright+3)^0,c
  5159  00233A  0EFF               	movlw	255
  5160  00233C  6E19               	movwf	(??_upright+4)^0,c
  5161  00233E  0E00               	movlw	low _display
  5162  002340  6E1A               	movwf	(??_upright+5)^0,c
  5163  002342  0E01               	movlw	high _display
  5164  002344  6E1B               	movwf	(??_upright+6)^0,c
  5165  002346  5018               	movf	(??_upright+3)^0,w,c
  5166  002348  261A               	addwf	(??_upright+5)^0,f,c
  5167  00234A  5019               	movf	(??_upright+4)^0,w,c
  5168  00234C  221B               	addwfc	(??_upright+6)^0,f,c
  5169  00234E  50F3               	movf	243,w,c
  5170  002350  261A               	addwf	(??_upright+5)^0,f,c
  5171  002352  50F4               	movf	244,w,c
  5172  002354  221B               	addwfc	(??_upright+6)^0,f,c
  5173  002356  5015               	movf	??_upright^0,w,c
  5174  002358  241A               	addwf	(??_upright+5)^0,w,c
  5175  00235A  6ED9               	movwf	fsr2l,c
  5176  00235C  5016               	movf	(??_upright+1)^0,w,c
  5177  00235E  201B               	addwfc	(??_upright+6)^0,w,c
  5178  002360  6EDA               	movwf	fsr2h,c
  5179  002362  EE10 F005          	lfsr	1,5
  5180  002366  50DE               	movf	postinc2,w,c
  5181  002368  26E1               	addwf	fsr1l,f,c
  5182  00236A  50DD               	movf	postdec2,w,c
  5183  00236C  22E2               	addwfc	fsr1h,f,c
  5184  00236E  0E02               	movlw	2
  5185  002370  18E6               	xorwf	postinc1,w,c
  5186  002372  A4D8               	btfss	status,2,c
  5187  002374  EFBE  F011         	goto	i2u260_41
  5188  002378  EFC0  F011         	goto	i2u260_40
  5189  00237C                     i2u260_41:
  5190  00237C  EFC6  F011         	goto	i2l2740
  5191  002380                     i2u260_40:
  5192  002380                     
  5193                           ;main.c: 766:             CatchFrisbee(pl);
  5194  002380  C013  F007         	movff	upright@pl,CatchFrisbee@pl
  5195  002384  C014  F008         	movff	upright@pl+1,CatchFrisbee@pl+1
  5196  002388  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  5197  00238C                     i2l2740:
  5198                           
  5199                           ;main.c: 769:     display[pl->y-1][pl->x-1] = ((void*)0);
  5200  00238C  EE20 F001          	lfsr	2,1
  5201  002390  5013               	movf	upright@pl^0,w,c
  5202  002392  26D9               	addwf	fsr2l,f,c
  5203  002394  5014               	movf	(upright@pl+1)^0,w,c
  5204  002396  22DA               	addwfc	fsr2h,f,c
  5205  002398  50DF               	movf	indf2,w,c
  5206  00239A  6E15               	movwf	??_upright^0,c
  5207  00239C  6A16               	clrf	(??_upright+1)^0,c
  5208  00239E  0E05               	movlw	5
  5209  0023A0                     i2u261_45:
  5210  0023A0  90D8               	bcf	status,0,c
  5211  0023A2  3615               	rlcf	??_upright^0,f,c
  5212  0023A4  3616               	rlcf	(??_upright+1)^0,f,c
  5213  0023A6  2EE8               	decfsz	wreg,f,c
  5214  0023A8  EFD0  F011         	goto	i2u261_45
  5215  0023AC  C013  FFD9         	movff	upright@pl,fsr2l
  5216  0023B0  C014  FFDA         	movff	upright@pl+1,fsr2h
  5217  0023B4  50DF               	movf	indf2,w,c
  5218  0023B6  6E17               	movwf	(??_upright+2)^0,c
  5219  0023B8  6A18               	clrf	(??_upright+3)^0,c
  5220  0023BA  90D8               	bcf	status,0,c
  5221  0023BC  3617               	rlcf	(??_upright+2)^0,f,c
  5222  0023BE  3618               	rlcf	(??_upright+3)^0,f,c
  5223  0023C0  0EDE               	movlw	222
  5224  0023C2  6E19               	movwf	(??_upright+4)^0,c
  5225  0023C4  0EFF               	movlw	255
  5226  0023C6  6E1A               	movwf	(??_upright+5)^0,c
  5227  0023C8  0E00               	movlw	low _display
  5228  0023CA  6E1B               	movwf	(??_upright+6)^0,c
  5229  0023CC  0E01               	movlw	high _display
  5230  0023CE  6E1C               	movwf	(??_upright+7)^0,c
  5231  0023D0  5019               	movf	(??_upright+4)^0,w,c
  5232  0023D2  261B               	addwf	(??_upright+6)^0,f,c
  5233  0023D4  501A               	movf	(??_upright+5)^0,w,c
  5234  0023D6  221C               	addwfc	(??_upright+7)^0,f,c
  5235  0023D8  5017               	movf	(??_upright+2)^0,w,c
  5236  0023DA  261B               	addwf	(??_upright+6)^0,f,c
  5237  0023DC  5018               	movf	(??_upright+3)^0,w,c
  5238  0023DE  221C               	addwfc	(??_upright+7)^0,f,c
  5239  0023E0  5015               	movf	??_upright^0,w,c
  5240  0023E2  241B               	addwf	(??_upright+6)^0,w,c
  5241  0023E4  6ED9               	movwf	fsr2l,c
  5242  0023E6  5016               	movf	(??_upright+1)^0,w,c
  5243  0023E8  201C               	addwfc	(??_upright+7)^0,w,c
  5244  0023EA  6EDA               	movwf	fsr2h,c
  5245  0023EC  0E00               	movlw	0
  5246  0023EE  6EDE               	movwf	postinc2,c
  5247  0023F0  0E00               	movlw	0
  5248  0023F2  6EDD               	movwf	postdec2,c
  5249  0023F4                     
  5250                           ;main.c: 770:     pl->oldX = pl->x;
  5251  0023F4  C013  FFD9         	movff	upright@pl,fsr2l
  5252  0023F8  C014  FFDA         	movff	upright@pl+1,fsr2h
  5253  0023FC  EE10 F002          	lfsr	1,2
  5254  002400  5013               	movf	upright@pl^0,w,c
  5255  002402  26E1               	addwf	fsr1l,f,c
  5256  002404  5014               	movf	(upright@pl+1)^0,w,c
  5257  002406  22E2               	addwfc	fsr1h,f,c
  5258  002408  CFDF FFE7          	movff	indf2,indf1
  5259  00240C                     
  5260                           ;main.c: 771:     pl->oldY = pl->y;
  5261  00240C  EE20 F001          	lfsr	2,1
  5262  002410  5013               	movf	upright@pl^0,w,c
  5263  002412  26D9               	addwf	fsr2l,f,c
  5264  002414  5014               	movf	(upright@pl+1)^0,w,c
  5265  002416  22DA               	addwfc	fsr2h,f,c
  5266  002418  EE10 F003          	lfsr	1,3
  5267  00241C  5013               	movf	upright@pl^0,w,c
  5268  00241E  26E1               	addwf	fsr1l,f,c
  5269  002420  5014               	movf	(upright@pl+1)^0,w,c
  5270  002422  22E2               	addwfc	fsr1h,f,c
  5271  002424  CFDF FFE7          	movff	indf2,indf1
  5272  002428                     
  5273                           ;main.c: 772:     pl->x++;
  5274  002428  C013  FFD9         	movff	upright@pl,fsr2l
  5275  00242C  C014  FFDA         	movff	upright@pl+1,fsr2h
  5276  002430  2ADF               	incf	indf2,f,c
  5277  002432                     
  5278                           ;main.c: 773:     pl->y--;
  5279  002432  EE20 F001          	lfsr	2,1
  5280  002436  5013               	movf	upright@pl^0,w,c
  5281  002438  26D9               	addwf	fsr2l,f,c
  5282  00243A  5014               	movf	(upright@pl+1)^0,w,c
  5283  00243C  22DA               	addwfc	fsr2h,f,c
  5284  00243E  06DF               	decf	indf2,f,c
  5285  002440                     
  5286                           ;main.c: 774:     display[pl->y-1][pl->x-1] = pl;
  5287  002440  EE20 F001          	lfsr	2,1
  5288  002444  5013               	movf	upright@pl^0,w,c
  5289  002446  26D9               	addwf	fsr2l,f,c
  5290  002448  5014               	movf	(upright@pl+1)^0,w,c
  5291  00244A  22DA               	addwfc	fsr2h,f,c
  5292  00244C  50DF               	movf	indf2,w,c
  5293  00244E  6E15               	movwf	??_upright^0,c
  5294  002450  6A16               	clrf	(??_upright+1)^0,c
  5295  002452  0E05               	movlw	5
  5296  002454                     i2u262_45:
  5297  002454  90D8               	bcf	status,0,c
  5298  002456  3615               	rlcf	??_upright^0,f,c
  5299  002458  3616               	rlcf	(??_upright+1)^0,f,c
  5300  00245A  2EE8               	decfsz	wreg,f,c
  5301  00245C  EF2A  F012         	goto	i2u262_45
  5302  002460  C013  FFD9         	movff	upright@pl,fsr2l
  5303  002464  C014  FFDA         	movff	upright@pl+1,fsr2h
  5304  002468  50DF               	movf	indf2,w,c
  5305  00246A  6E17               	movwf	(??_upright+2)^0,c
  5306  00246C  6A18               	clrf	(??_upright+3)^0,c
  5307  00246E  90D8               	bcf	status,0,c
  5308  002470  3617               	rlcf	(??_upright+2)^0,f,c
  5309  002472  3618               	rlcf	(??_upright+3)^0,f,c
  5310  002474  0EDE               	movlw	222
  5311  002476  6E19               	movwf	(??_upright+4)^0,c
  5312  002478  0EFF               	movlw	255
  5313  00247A  6E1A               	movwf	(??_upright+5)^0,c
  5314  00247C  0E00               	movlw	low _display
  5315  00247E  6E1B               	movwf	(??_upright+6)^0,c
  5316  002480  0E01               	movlw	high _display
  5317  002482  6E1C               	movwf	(??_upright+7)^0,c
  5318  002484  5019               	movf	(??_upright+4)^0,w,c
  5319  002486  261B               	addwf	(??_upright+6)^0,f,c
  5320  002488  501A               	movf	(??_upright+5)^0,w,c
  5321  00248A  221C               	addwfc	(??_upright+7)^0,f,c
  5322  00248C  5017               	movf	(??_upright+2)^0,w,c
  5323  00248E  261B               	addwf	(??_upright+6)^0,f,c
  5324  002490  5018               	movf	(??_upright+3)^0,w,c
  5325  002492  221C               	addwfc	(??_upright+7)^0,f,c
  5326  002494  5015               	movf	??_upright^0,w,c
  5327  002496  241B               	addwf	(??_upright+6)^0,w,c
  5328  002498  6ED9               	movwf	fsr2l,c
  5329  00249A  5016               	movf	(??_upright+1)^0,w,c
  5330  00249C  201C               	addwfc	(??_upright+7)^0,w,c
  5331  00249E  6EDA               	movwf	fsr2h,c
  5332  0024A0  C013  FFDE         	movff	upright@pl,postinc2
  5333  0024A4  C014  FFDD         	movff	upright@pl+1,postdec2
  5334  0024A8                     i2l487:
  5335  0024A8  0012               	return		;funcret
  5336  0024AA                     __end_of_upright:
  5337                           	callstack 0
  5338                           
  5339 ;; *************** function _upleft *****************
  5340 ;; Defined at:
  5341 ;;		line 743 in file "main.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  pl              2   18[COMRAM] PTR struct GameElement
  5344 ;;		 -> objs(42), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;Total ram usage:       12 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    2
  5363 ;; This function calls:
  5364 ;;		_CatchFrisbee
  5365 ;; This function is called by:
  5366 ;;		_MoveEveryone
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text17
  5371  001E14                     __ptext17:
  5372                           	callstack 0
  5373  001E14                     _upleft:
  5374                           	callstack 21
  5375  001E14                     
  5376                           ;main.c: 744:     if (pl->x == 1 || pl->y == 1) return;
  5377  001E14  C013  FFD9         	movff	upleft@pl,fsr2l
  5378  001E18  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5379  001E1C  04DE               	decf	postinc2,w,c
  5380  001E1E  B4D8               	btfsc	status,2,c
  5381  001E20  EF14  F00F         	goto	i2u239_41
  5382  001E24  EF16  F00F         	goto	i2u239_40
  5383  001E28                     i2u239_41:
  5384  001E28  EFB2  F010         	goto	i2l477
  5385  001E2C                     i2u239_40:
  5386  001E2C  EE20 F001          	lfsr	2,1
  5387  001E30  5013               	movf	upleft@pl^0,w,c
  5388  001E32  26D9               	addwf	fsr2l,f,c
  5389  001E34  5014               	movf	(upleft@pl+1)^0,w,c
  5390  001E36  22DA               	addwfc	fsr2h,f,c
  5391  001E38  04DE               	decf	postinc2,w,c
  5392  001E3A  A4D8               	btfss	status,2,c
  5393  001E3C  EF22  F00F         	goto	i2u240_41
  5394  001E40  EF24  F00F         	goto	i2u240_40
  5395  001E44                     i2u240_41:
  5396  001E44  EF26  F00F         	goto	i2l2694
  5397  001E48                     i2u240_40:
  5398  001E48  EFB2  F010         	goto	i2l477
  5399  001E4C                     i2l2694:
  5400                           
  5401                           ;main.c: 745:     if (display[pl->y-2][pl->x-2] != ((void*)0)) {
  5402  001E4C  EE20 F001          	lfsr	2,1
  5403  001E50  5013               	movf	upleft@pl^0,w,c
  5404  001E52  26D9               	addwf	fsr2l,f,c
  5405  001E54  5014               	movf	(upleft@pl+1)^0,w,c
  5406  001E56  22DA               	addwfc	fsr2h,f,c
  5407  001E58  50DF               	movf	indf2,w,c
  5408  001E5A  6E15               	movwf	??_upleft^0,c
  5409  001E5C  6A16               	clrf	(??_upleft+1)^0,c
  5410  001E5E  0E05               	movlw	5
  5411  001E60                     i2u241_45:
  5412  001E60  90D8               	bcf	status,0,c
  5413  001E62  3615               	rlcf	??_upleft^0,f,c
  5414  001E64  3616               	rlcf	(??_upleft+1)^0,f,c
  5415  001E66  2EE8               	decfsz	wreg,f,c
  5416  001E68  EF30  F00F         	goto	i2u241_45
  5417  001E6C  C013  FFD9         	movff	upleft@pl,fsr2l
  5418  001E70  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5419  001E74  50DF               	movf	indf2,w,c
  5420  001E76  6E17               	movwf	(??_upleft+2)^0,c
  5421  001E78  6A18               	clrf	(??_upleft+3)^0,c
  5422  001E7A  90D8               	bcf	status,0,c
  5423  001E7C  3617               	rlcf	(??_upleft+2)^0,f,c
  5424  001E7E  3618               	rlcf	(??_upleft+3)^0,f,c
  5425  001E80  0EBC               	movlw	188
  5426  001E82  6E19               	movwf	(??_upleft+4)^0,c
  5427  001E84  0EFF               	movlw	255
  5428  001E86  6E1A               	movwf	(??_upleft+5)^0,c
  5429  001E88  0E00               	movlw	low _display
  5430  001E8A  6E1B               	movwf	(??_upleft+6)^0,c
  5431  001E8C  0E01               	movlw	high _display
  5432  001E8E  6E1C               	movwf	(??_upleft+7)^0,c
  5433  001E90  5019               	movf	(??_upleft+4)^0,w,c
  5434  001E92  261B               	addwf	(??_upleft+6)^0,f,c
  5435  001E94  501A               	movf	(??_upleft+5)^0,w,c
  5436  001E96  221C               	addwfc	(??_upleft+7)^0,f,c
  5437  001E98  5017               	movf	(??_upleft+2)^0,w,c
  5438  001E9A  261B               	addwf	(??_upleft+6)^0,f,c
  5439  001E9C  5018               	movf	(??_upleft+3)^0,w,c
  5440  001E9E  221C               	addwfc	(??_upleft+7)^0,f,c
  5441  001EA0  5015               	movf	??_upleft^0,w,c
  5442  001EA2  241B               	addwf	(??_upleft+6)^0,w,c
  5443  001EA4  6ED9               	movwf	fsr2l,c
  5444  001EA6  5016               	movf	(??_upleft+1)^0,w,c
  5445  001EA8  201C               	addwfc	(??_upleft+7)^0,w,c
  5446  001EAA  6EDA               	movwf	fsr2h,c
  5447  001EAC  50DE               	movf	postinc2,w,c
  5448  001EAE  10DE               	iorwf	postinc2,w,c
  5449  001EB0  B4D8               	btfsc	status,2,c
  5450  001EB2  EF5D  F00F         	goto	i2u242_41
  5451  001EB6  EF5F  F00F         	goto	i2u242_40
  5452  001EBA                     i2u242_41:
  5453  001EBA  EF24  F010         	goto	i2l2708
  5454  001EBE                     i2u242_40:
  5455  001EBE                     
  5456                           ;main.c: 746:         if (display[pl->y-2][pl->x-2]->type == OT_PLAYERA) return;
  5457  001EBE  EE20 F001          	lfsr	2,1
  5458  001EC2  5013               	movf	upleft@pl^0,w,c
  5459  001EC4  26D9               	addwf	fsr2l,f,c
  5460  001EC6  5014               	movf	(upleft@pl+1)^0,w,c
  5461  001EC8  22DA               	addwfc	fsr2h,f,c
  5462  001ECA  50DF               	movf	indf2,w,c
  5463  001ECC  6E15               	movwf	??_upleft^0,c
  5464  001ECE  6A16               	clrf	(??_upleft+1)^0,c
  5465  001ED0  0E05               	movlw	5
  5466  001ED2                     i2u243_45:
  5467  001ED2  90D8               	bcf	status,0,c
  5468  001ED4  3615               	rlcf	??_upleft^0,f,c
  5469  001ED6  3616               	rlcf	(??_upleft+1)^0,f,c
  5470  001ED8  2EE8               	decfsz	wreg,f,c
  5471  001EDA  EF69  F00F         	goto	i2u243_45
  5472  001EDE  C013  FFD9         	movff	upleft@pl,fsr2l
  5473  001EE2  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5474  001EE6  50DF               	movf	indf2,w,c
  5475  001EE8  6E17               	movwf	(??_upleft+2)^0,c
  5476  001EEA  6A18               	clrf	(??_upleft+3)^0,c
  5477  001EEC  90D8               	bcf	status,0,c
  5478  001EEE  3617               	rlcf	(??_upleft+2)^0,f,c
  5479  001EF0  3618               	rlcf	(??_upleft+3)^0,f,c
  5480  001EF2  0EBC               	movlw	188
  5481  001EF4  6E19               	movwf	(??_upleft+4)^0,c
  5482  001EF6  0EFF               	movlw	255
  5483  001EF8  6E1A               	movwf	(??_upleft+5)^0,c
  5484  001EFA  0E00               	movlw	low _display
  5485  001EFC  6E1B               	movwf	(??_upleft+6)^0,c
  5486  001EFE  0E01               	movlw	high _display
  5487  001F00  6E1C               	movwf	(??_upleft+7)^0,c
  5488  001F02  5019               	movf	(??_upleft+4)^0,w,c
  5489  001F04  261B               	addwf	(??_upleft+6)^0,f,c
  5490  001F06  501A               	movf	(??_upleft+5)^0,w,c
  5491  001F08  221C               	addwfc	(??_upleft+7)^0,f,c
  5492  001F0A  5017               	movf	(??_upleft+2)^0,w,c
  5493  001F0C  261B               	addwf	(??_upleft+6)^0,f,c
  5494  001F0E  5018               	movf	(??_upleft+3)^0,w,c
  5495  001F10  221C               	addwfc	(??_upleft+7)^0,f,c
  5496  001F12  5015               	movf	??_upleft^0,w,c
  5497  001F14  241B               	addwf	(??_upleft+6)^0,w,c
  5498  001F16  6ED9               	movwf	fsr2l,c
  5499  001F18  5016               	movf	(??_upleft+1)^0,w,c
  5500  001F1A  201C               	addwfc	(??_upleft+7)^0,w,c
  5501  001F1C  6EDA               	movwf	fsr2h,c
  5502  001F1E  EE10 F005          	lfsr	1,5
  5503  001F22  50DE               	movf	postinc2,w,c
  5504  001F24  26E1               	addwf	fsr1l,f,c
  5505  001F26  50DD               	movf	postdec2,w,c
  5506  001F28  22E2               	addwfc	fsr1h,f,c
  5507  001F2A  50E7               	movf	indf1,w,c
  5508  001F2C  A4D8               	btfss	status,2,c
  5509  001F2E  EF9B  F00F         	goto	i2u244_41
  5510  001F32  EF9D  F00F         	goto	i2u244_40
  5511  001F36                     i2u244_41:
  5512  001F36  EF9F  F00F         	goto	i2l2700
  5513  001F3A                     i2u244_40:
  5514  001F3A  EFB2  F010         	goto	i2l477
  5515  001F3E                     i2l2700:
  5516                           
  5517                           ;main.c: 747:         if (display[pl->y-2][pl->x-2]->type == OT_PLAYERB) return;
  5518  001F3E  EE20 F001          	lfsr	2,1
  5519  001F42  5013               	movf	upleft@pl^0,w,c
  5520  001F44  26D9               	addwf	fsr2l,f,c
  5521  001F46  5014               	movf	(upleft@pl+1)^0,w,c
  5522  001F48  22DA               	addwfc	fsr2h,f,c
  5523  001F4A  50DF               	movf	indf2,w,c
  5524  001F4C  6E15               	movwf	??_upleft^0,c
  5525  001F4E  6A16               	clrf	(??_upleft+1)^0,c
  5526  001F50  0E05               	movlw	5
  5527  001F52                     i2u245_45:
  5528  001F52  90D8               	bcf	status,0,c
  5529  001F54  3615               	rlcf	??_upleft^0,f,c
  5530  001F56  3616               	rlcf	(??_upleft+1)^0,f,c
  5531  001F58  2EE8               	decfsz	wreg,f,c
  5532  001F5A  EFA9  F00F         	goto	i2u245_45
  5533  001F5E  C013  FFD9         	movff	upleft@pl,fsr2l
  5534  001F62  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5535  001F66  50DF               	movf	indf2,w,c
  5536  001F68  6E17               	movwf	(??_upleft+2)^0,c
  5537  001F6A  6A18               	clrf	(??_upleft+3)^0,c
  5538  001F6C  90D8               	bcf	status,0,c
  5539  001F6E  3617               	rlcf	(??_upleft+2)^0,f,c
  5540  001F70  3618               	rlcf	(??_upleft+3)^0,f,c
  5541  001F72  0EBC               	movlw	188
  5542  001F74  6E19               	movwf	(??_upleft+4)^0,c
  5543  001F76  0EFF               	movlw	255
  5544  001F78  6E1A               	movwf	(??_upleft+5)^0,c
  5545  001F7A  0E00               	movlw	low _display
  5546  001F7C  6E1B               	movwf	(??_upleft+6)^0,c
  5547  001F7E  0E01               	movlw	high _display
  5548  001F80  6E1C               	movwf	(??_upleft+7)^0,c
  5549  001F82  5019               	movf	(??_upleft+4)^0,w,c
  5550  001F84  261B               	addwf	(??_upleft+6)^0,f,c
  5551  001F86  501A               	movf	(??_upleft+5)^0,w,c
  5552  001F88  221C               	addwfc	(??_upleft+7)^0,f,c
  5553  001F8A  5017               	movf	(??_upleft+2)^0,w,c
  5554  001F8C  261B               	addwf	(??_upleft+6)^0,f,c
  5555  001F8E  5018               	movf	(??_upleft+3)^0,w,c
  5556  001F90  221C               	addwfc	(??_upleft+7)^0,f,c
  5557  001F92  5015               	movf	??_upleft^0,w,c
  5558  001F94  241B               	addwf	(??_upleft+6)^0,w,c
  5559  001F96  6ED9               	movwf	fsr2l,c
  5560  001F98  5016               	movf	(??_upleft+1)^0,w,c
  5561  001F9A  201C               	addwfc	(??_upleft+7)^0,w,c
  5562  001F9C  6EDA               	movwf	fsr2h,c
  5563  001F9E  EE10 F005          	lfsr	1,5
  5564  001FA2  50DE               	movf	postinc2,w,c
  5565  001FA4  26E1               	addwf	fsr1l,f,c
  5566  001FA6  50DD               	movf	postdec2,w,c
  5567  001FA8  22E2               	addwfc	fsr1h,f,c
  5568  001FAA  04E6               	decf	postinc1,w,c
  5569  001FAC  A4D8               	btfss	status,2,c
  5570  001FAE  EFDB  F00F         	goto	i2u246_41
  5571  001FB2  EFDD  F00F         	goto	i2u246_40
  5572  001FB6                     i2u246_41:
  5573  001FB6  EFDF  F00F         	goto	i2l2704
  5574  001FBA                     i2u246_40:
  5575  001FBA  EFB2  F010         	goto	i2l477
  5576  001FBE                     i2l2704:
  5577                           
  5578                           ;main.c: 748:         if (display[pl->y-2][pl->x-2]->type == OT_FRISBEE) {
  5579  001FBE  EE20 F001          	lfsr	2,1
  5580  001FC2  5013               	movf	upleft@pl^0,w,c
  5581  001FC4  26D9               	addwf	fsr2l,f,c
  5582  001FC6  5014               	movf	(upleft@pl+1)^0,w,c
  5583  001FC8  22DA               	addwfc	fsr2h,f,c
  5584  001FCA  50DF               	movf	indf2,w,c
  5585  001FCC  6E15               	movwf	??_upleft^0,c
  5586  001FCE  6A16               	clrf	(??_upleft+1)^0,c
  5587  001FD0  0E05               	movlw	5
  5588  001FD2                     i2u247_45:
  5589  001FD2  90D8               	bcf	status,0,c
  5590  001FD4  3615               	rlcf	??_upleft^0,f,c
  5591  001FD6  3616               	rlcf	(??_upleft+1)^0,f,c
  5592  001FD8  2EE8               	decfsz	wreg,f,c
  5593  001FDA  EFE9  F00F         	goto	i2u247_45
  5594  001FDE  C013  FFD9         	movff	upleft@pl,fsr2l
  5595  001FE2  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5596  001FE6  50DF               	movf	indf2,w,c
  5597  001FE8  6E17               	movwf	(??_upleft+2)^0,c
  5598  001FEA  6A18               	clrf	(??_upleft+3)^0,c
  5599  001FEC  90D8               	bcf	status,0,c
  5600  001FEE  3617               	rlcf	(??_upleft+2)^0,f,c
  5601  001FF0  3618               	rlcf	(??_upleft+3)^0,f,c
  5602  001FF2  0EBC               	movlw	188
  5603  001FF4  6E19               	movwf	(??_upleft+4)^0,c
  5604  001FF6  0EFF               	movlw	255
  5605  001FF8  6E1A               	movwf	(??_upleft+5)^0,c
  5606  001FFA  0E00               	movlw	low _display
  5607  001FFC  6E1B               	movwf	(??_upleft+6)^0,c
  5608  001FFE  0E01               	movlw	high _display
  5609  002000  6E1C               	movwf	(??_upleft+7)^0,c
  5610  002002  5019               	movf	(??_upleft+4)^0,w,c
  5611  002004  261B               	addwf	(??_upleft+6)^0,f,c
  5612  002006  501A               	movf	(??_upleft+5)^0,w,c
  5613  002008  221C               	addwfc	(??_upleft+7)^0,f,c
  5614  00200A  5017               	movf	(??_upleft+2)^0,w,c
  5615  00200C  261B               	addwf	(??_upleft+6)^0,f,c
  5616  00200E  5018               	movf	(??_upleft+3)^0,w,c
  5617  002010  221C               	addwfc	(??_upleft+7)^0,f,c
  5618  002012  5015               	movf	??_upleft^0,w,c
  5619  002014  241B               	addwf	(??_upleft+6)^0,w,c
  5620  002016  6ED9               	movwf	fsr2l,c
  5621  002018  5016               	movf	(??_upleft+1)^0,w,c
  5622  00201A  201C               	addwfc	(??_upleft+7)^0,w,c
  5623  00201C  6EDA               	movwf	fsr2h,c
  5624  00201E  EE10 F005          	lfsr	1,5
  5625  002022  50DE               	movf	postinc2,w,c
  5626  002024  26E1               	addwf	fsr1l,f,c
  5627  002026  50DD               	movf	postdec2,w,c
  5628  002028  22E2               	addwfc	fsr1h,f,c
  5629  00202A  0E02               	movlw	2
  5630  00202C  18E6               	xorwf	postinc1,w,c
  5631  00202E  A4D8               	btfss	status,2,c
  5632  002030  EF1C  F010         	goto	i2u248_41
  5633  002034  EF1E  F010         	goto	i2u248_40
  5634  002038                     i2u248_41:
  5635  002038  EF24  F010         	goto	i2l2708
  5636  00203C                     i2u248_40:
  5637  00203C                     
  5638                           ;main.c: 749:             CatchFrisbee(pl);
  5639  00203C  C013  F007         	movff	upleft@pl,CatchFrisbee@pl
  5640  002040  C014  F008         	movff	upleft@pl+1,CatchFrisbee@pl+1
  5641  002044  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  5642  002048                     i2l2708:
  5643                           
  5644                           ;main.c: 752:     display[pl->y-1][pl->x-1] = ((void*)0);
  5645  002048  EE20 F001          	lfsr	2,1
  5646  00204C  5013               	movf	upleft@pl^0,w,c
  5647  00204E  26D9               	addwf	fsr2l,f,c
  5648  002050  5014               	movf	(upleft@pl+1)^0,w,c
  5649  002052  22DA               	addwfc	fsr2h,f,c
  5650  002054  50DF               	movf	indf2,w,c
  5651  002056  6E15               	movwf	??_upleft^0,c
  5652  002058  6A16               	clrf	(??_upleft+1)^0,c
  5653  00205A  0E05               	movlw	5
  5654  00205C                     i2u249_45:
  5655  00205C  90D8               	bcf	status,0,c
  5656  00205E  3615               	rlcf	??_upleft^0,f,c
  5657  002060  3616               	rlcf	(??_upleft+1)^0,f,c
  5658  002062  2EE8               	decfsz	wreg,f,c
  5659  002064  EF2E  F010         	goto	i2u249_45
  5660  002068  C013  FFD9         	movff	upleft@pl,fsr2l
  5661  00206C  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5662  002070  50DF               	movf	indf2,w,c
  5663  002072  6E17               	movwf	(??_upleft+2)^0,c
  5664  002074  6A18               	clrf	(??_upleft+3)^0,c
  5665  002076  90D8               	bcf	status,0,c
  5666  002078  3617               	rlcf	(??_upleft+2)^0,f,c
  5667  00207A  3618               	rlcf	(??_upleft+3)^0,f,c
  5668  00207C  0EDE               	movlw	222
  5669  00207E  6E19               	movwf	(??_upleft+4)^0,c
  5670  002080  0EFF               	movlw	255
  5671  002082  6E1A               	movwf	(??_upleft+5)^0,c
  5672  002084  0E00               	movlw	low _display
  5673  002086  6E1B               	movwf	(??_upleft+6)^0,c
  5674  002088  0E01               	movlw	high _display
  5675  00208A  6E1C               	movwf	(??_upleft+7)^0,c
  5676  00208C  5019               	movf	(??_upleft+4)^0,w,c
  5677  00208E  261B               	addwf	(??_upleft+6)^0,f,c
  5678  002090  501A               	movf	(??_upleft+5)^0,w,c
  5679  002092  221C               	addwfc	(??_upleft+7)^0,f,c
  5680  002094  5017               	movf	(??_upleft+2)^0,w,c
  5681  002096  261B               	addwf	(??_upleft+6)^0,f,c
  5682  002098  5018               	movf	(??_upleft+3)^0,w,c
  5683  00209A  221C               	addwfc	(??_upleft+7)^0,f,c
  5684  00209C  5015               	movf	??_upleft^0,w,c
  5685  00209E  241B               	addwf	(??_upleft+6)^0,w,c
  5686  0020A0  6ED9               	movwf	fsr2l,c
  5687  0020A2  5016               	movf	(??_upleft+1)^0,w,c
  5688  0020A4  201C               	addwfc	(??_upleft+7)^0,w,c
  5689  0020A6  6EDA               	movwf	fsr2h,c
  5690  0020A8  0E00               	movlw	0
  5691  0020AA  6EDE               	movwf	postinc2,c
  5692  0020AC  0E00               	movlw	0
  5693  0020AE  6EDD               	movwf	postdec2,c
  5694  0020B0                     
  5695                           ;main.c: 753:     pl->oldX = pl->x;
  5696  0020B0  C013  FFD9         	movff	upleft@pl,fsr2l
  5697  0020B4  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5698  0020B8  EE10 F002          	lfsr	1,2
  5699  0020BC  5013               	movf	upleft@pl^0,w,c
  5700  0020BE  26E1               	addwf	fsr1l,f,c
  5701  0020C0  5014               	movf	(upleft@pl+1)^0,w,c
  5702  0020C2  22E2               	addwfc	fsr1h,f,c
  5703  0020C4  CFDF FFE7          	movff	indf2,indf1
  5704  0020C8                     
  5705                           ;main.c: 754:     pl->oldY = pl->y;
  5706  0020C8  EE20 F001          	lfsr	2,1
  5707  0020CC  5013               	movf	upleft@pl^0,w,c
  5708  0020CE  26D9               	addwf	fsr2l,f,c
  5709  0020D0  5014               	movf	(upleft@pl+1)^0,w,c
  5710  0020D2  22DA               	addwfc	fsr2h,f,c
  5711  0020D4  EE10 F003          	lfsr	1,3
  5712  0020D8  5013               	movf	upleft@pl^0,w,c
  5713  0020DA  26E1               	addwf	fsr1l,f,c
  5714  0020DC  5014               	movf	(upleft@pl+1)^0,w,c
  5715  0020DE  22E2               	addwfc	fsr1h,f,c
  5716  0020E0  CFDF FFE7          	movff	indf2,indf1
  5717  0020E4                     
  5718                           ;main.c: 755:     pl->x--;
  5719  0020E4  C013  FFD9         	movff	upleft@pl,fsr2l
  5720  0020E8  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5721  0020EC  06DF               	decf	indf2,f,c
  5722  0020EE                     
  5723                           ;main.c: 756:     pl->y--;
  5724  0020EE  EE20 F001          	lfsr	2,1
  5725  0020F2  5013               	movf	upleft@pl^0,w,c
  5726  0020F4  26D9               	addwf	fsr2l,f,c
  5727  0020F6  5014               	movf	(upleft@pl+1)^0,w,c
  5728  0020F8  22DA               	addwfc	fsr2h,f,c
  5729  0020FA  06DF               	decf	indf2,f,c
  5730  0020FC                     
  5731                           ;main.c: 757:     display[pl->y-1][pl->x-1] = pl;
  5732  0020FC  EE20 F001          	lfsr	2,1
  5733  002100  5013               	movf	upleft@pl^0,w,c
  5734  002102  26D9               	addwf	fsr2l,f,c
  5735  002104  5014               	movf	(upleft@pl+1)^0,w,c
  5736  002106  22DA               	addwfc	fsr2h,f,c
  5737  002108  50DF               	movf	indf2,w,c
  5738  00210A  6E15               	movwf	??_upleft^0,c
  5739  00210C  6A16               	clrf	(??_upleft+1)^0,c
  5740  00210E  0E05               	movlw	5
  5741  002110                     i2u250_45:
  5742  002110  90D8               	bcf	status,0,c
  5743  002112  3615               	rlcf	??_upleft^0,f,c
  5744  002114  3616               	rlcf	(??_upleft+1)^0,f,c
  5745  002116  2EE8               	decfsz	wreg,f,c
  5746  002118  EF88  F010         	goto	i2u250_45
  5747  00211C  C013  FFD9         	movff	upleft@pl,fsr2l
  5748  002120  C014  FFDA         	movff	upleft@pl+1,fsr2h
  5749  002124  50DF               	movf	indf2,w,c
  5750  002126  6E17               	movwf	(??_upleft+2)^0,c
  5751  002128  6A18               	clrf	(??_upleft+3)^0,c
  5752  00212A  90D8               	bcf	status,0,c
  5753  00212C  3617               	rlcf	(??_upleft+2)^0,f,c
  5754  00212E  3618               	rlcf	(??_upleft+3)^0,f,c
  5755  002130  0EDE               	movlw	222
  5756  002132  6E19               	movwf	(??_upleft+4)^0,c
  5757  002134  0EFF               	movlw	255
  5758  002136  6E1A               	movwf	(??_upleft+5)^0,c
  5759  002138  0E00               	movlw	low _display
  5760  00213A  6E1B               	movwf	(??_upleft+6)^0,c
  5761  00213C  0E01               	movlw	high _display
  5762  00213E  6E1C               	movwf	(??_upleft+7)^0,c
  5763  002140  5019               	movf	(??_upleft+4)^0,w,c
  5764  002142  261B               	addwf	(??_upleft+6)^0,f,c
  5765  002144  501A               	movf	(??_upleft+5)^0,w,c
  5766  002146  221C               	addwfc	(??_upleft+7)^0,f,c
  5767  002148  5017               	movf	(??_upleft+2)^0,w,c
  5768  00214A  261B               	addwf	(??_upleft+6)^0,f,c
  5769  00214C  5018               	movf	(??_upleft+3)^0,w,c
  5770  00214E  221C               	addwfc	(??_upleft+7)^0,f,c
  5771  002150  5015               	movf	??_upleft^0,w,c
  5772  002152  241B               	addwf	(??_upleft+6)^0,w,c
  5773  002154  6ED9               	movwf	fsr2l,c
  5774  002156  5016               	movf	(??_upleft+1)^0,w,c
  5775  002158  201C               	addwfc	(??_upleft+7)^0,w,c
  5776  00215A  6EDA               	movwf	fsr2h,c
  5777  00215C  C013  FFDE         	movff	upleft@pl,postinc2
  5778  002160  C014  FFDD         	movff	upleft@pl+1,postdec2
  5779  002164                     i2l477:
  5780  002164  0012               	return		;funcret
  5781  002166                     __end_of_upleft:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _up *****************
  5785 ;; Defined at:
  5786 ;;		line 709 in file "main.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  pl              2   18[COMRAM] PTR struct GameElement
  5789 ;;		 -> objs(42), 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;Total ram usage:       12 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    2
  5808 ;; This function calls:
  5809 ;;		_CatchFrisbee
  5810 ;; This function is called by:
  5811 ;;		_highIsr
  5812 ;;		_MoveEveryone
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text18
  5817  0024AA                     __ptext18:
  5818                           	callstack 0
  5819  0024AA                     _up:
  5820                           	callstack 22
  5821  0024AA                     
  5822                           ;main.c: 710:     if (pl->y == 1) return;
  5823  0024AA  EE20 F001          	lfsr	2,1
  5824  0024AE  5013               	movf	up@pl^0,w,c
  5825  0024B0  26D9               	addwf	fsr2l,f,c
  5826  0024B2  5014               	movf	(up@pl+1)^0,w,c
  5827  0024B4  22DA               	addwfc	fsr2h,f,c
  5828  0024B6  04DE               	decf	postinc2,w,c
  5829  0024B8  A4D8               	btfss	status,2,c
  5830  0024BA  EF61  F012         	goto	i2u199_41
  5831  0024BE  EF63  F012         	goto	i2u199_40
  5832  0024C2                     i2u199_41:
  5833  0024C2  EF65  F012         	goto	i2l2574
  5834  0024C6                     i2u199_40:
  5835  0024C6  EFEC  F013         	goto	i2l459
  5836  0024CA                     i2l2574:
  5837                           
  5838                           ;main.c: 711:     if (display[pl->y-2][pl->x-1] != ((void*)0)) {
  5839  0024CA  EE20 F001          	lfsr	2,1
  5840  0024CE  5013               	movf	up@pl^0,w,c
  5841  0024D0  26D9               	addwf	fsr2l,f,c
  5842  0024D2  5014               	movf	(up@pl+1)^0,w,c
  5843  0024D4  22DA               	addwfc	fsr2h,f,c
  5844  0024D6  50DF               	movf	indf2,w,c
  5845  0024D8  6E15               	movwf	??_up^0,c
  5846  0024DA  6A16               	clrf	(??_up+1)^0,c
  5847  0024DC  0E05               	movlw	5
  5848  0024DE                     i2u200_45:
  5849  0024DE  90D8               	bcf	status,0,c
  5850  0024E0  3615               	rlcf	??_up^0,f,c
  5851  0024E2  3616               	rlcf	(??_up+1)^0,f,c
  5852  0024E4  2EE8               	decfsz	wreg,f,c
  5853  0024E6  EF6F  F012         	goto	i2u200_45
  5854  0024EA  C013  FFD9         	movff	up@pl,fsr2l
  5855  0024EE  C014  FFDA         	movff	up@pl+1,fsr2h
  5856  0024F2  50DF               	movf	indf2,w,c
  5857  0024F4  6E17               	movwf	(??_up+2)^0,c
  5858  0024F6  6A18               	clrf	(??_up+3)^0,c
  5859  0024F8  90D8               	bcf	status,0,c
  5860  0024FA  3617               	rlcf	(??_up+2)^0,f,c
  5861  0024FC  3618               	rlcf	(??_up+3)^0,f,c
  5862  0024FE  0EBE               	movlw	190
  5863  002500  6E19               	movwf	(??_up+4)^0,c
  5864  002502  0EFF               	movlw	255
  5865  002504  6E1A               	movwf	(??_up+5)^0,c
  5866  002506  0E00               	movlw	low _display
  5867  002508  6E1B               	movwf	(??_up+6)^0,c
  5868  00250A  0E01               	movlw	high _display
  5869  00250C  6E1C               	movwf	(??_up+7)^0,c
  5870  00250E  5019               	movf	(??_up+4)^0,w,c
  5871  002510  261B               	addwf	(??_up+6)^0,f,c
  5872  002512  501A               	movf	(??_up+5)^0,w,c
  5873  002514  221C               	addwfc	(??_up+7)^0,f,c
  5874  002516  5017               	movf	(??_up+2)^0,w,c
  5875  002518  261B               	addwf	(??_up+6)^0,f,c
  5876  00251A  5018               	movf	(??_up+3)^0,w,c
  5877  00251C  221C               	addwfc	(??_up+7)^0,f,c
  5878  00251E  5015               	movf	??_up^0,w,c
  5879  002520  241B               	addwf	(??_up+6)^0,w,c
  5880  002522  6ED9               	movwf	fsr2l,c
  5881  002524  5016               	movf	(??_up+1)^0,w,c
  5882  002526  201C               	addwfc	(??_up+7)^0,w,c
  5883  002528  6EDA               	movwf	fsr2h,c
  5884  00252A  50DE               	movf	postinc2,w,c
  5885  00252C  10DE               	iorwf	postinc2,w,c
  5886  00252E  B4D8               	btfsc	status,2,c
  5887  002530  EF9C  F012         	goto	i2u201_41
  5888  002534  EF9E  F012         	goto	i2u201_40
  5889  002538                     i2u201_41:
  5890  002538  EF63  F013         	goto	i2l2588
  5891  00253C                     i2u201_40:
  5892  00253C                     
  5893                           ;main.c: 712:         if (display[pl->y-2][pl->x-1]->type == OT_PLAYERA) return;
  5894  00253C  EE20 F001          	lfsr	2,1
  5895  002540  5013               	movf	up@pl^0,w,c
  5896  002542  26D9               	addwf	fsr2l,f,c
  5897  002544  5014               	movf	(up@pl+1)^0,w,c
  5898  002546  22DA               	addwfc	fsr2h,f,c
  5899  002548  50DF               	movf	indf2,w,c
  5900  00254A  6E15               	movwf	??_up^0,c
  5901  00254C  6A16               	clrf	(??_up+1)^0,c
  5902  00254E  0E05               	movlw	5
  5903  002550                     i2u202_45:
  5904  002550  90D8               	bcf	status,0,c
  5905  002552  3615               	rlcf	??_up^0,f,c
  5906  002554  3616               	rlcf	(??_up+1)^0,f,c
  5907  002556  2EE8               	decfsz	wreg,f,c
  5908  002558  EFA8  F012         	goto	i2u202_45
  5909  00255C  C013  FFD9         	movff	up@pl,fsr2l
  5910  002560  C014  FFDA         	movff	up@pl+1,fsr2h
  5911  002564  50DF               	movf	indf2,w,c
  5912  002566  6E17               	movwf	(??_up+2)^0,c
  5913  002568  6A18               	clrf	(??_up+3)^0,c
  5914  00256A  90D8               	bcf	status,0,c
  5915  00256C  3617               	rlcf	(??_up+2)^0,f,c
  5916  00256E  3618               	rlcf	(??_up+3)^0,f,c
  5917  002570  0EBE               	movlw	190
  5918  002572  6E19               	movwf	(??_up+4)^0,c
  5919  002574  0EFF               	movlw	255
  5920  002576  6E1A               	movwf	(??_up+5)^0,c
  5921  002578  0E00               	movlw	low _display
  5922  00257A  6E1B               	movwf	(??_up+6)^0,c
  5923  00257C  0E01               	movlw	high _display
  5924  00257E  6E1C               	movwf	(??_up+7)^0,c
  5925  002580  5019               	movf	(??_up+4)^0,w,c
  5926  002582  261B               	addwf	(??_up+6)^0,f,c
  5927  002584  501A               	movf	(??_up+5)^0,w,c
  5928  002586  221C               	addwfc	(??_up+7)^0,f,c
  5929  002588  5017               	movf	(??_up+2)^0,w,c
  5930  00258A  261B               	addwf	(??_up+6)^0,f,c
  5931  00258C  5018               	movf	(??_up+3)^0,w,c
  5932  00258E  221C               	addwfc	(??_up+7)^0,f,c
  5933  002590  5015               	movf	??_up^0,w,c
  5934  002592  241B               	addwf	(??_up+6)^0,w,c
  5935  002594  6ED9               	movwf	fsr2l,c
  5936  002596  5016               	movf	(??_up+1)^0,w,c
  5937  002598  201C               	addwfc	(??_up+7)^0,w,c
  5938  00259A  6EDA               	movwf	fsr2h,c
  5939  00259C  EE10 F005          	lfsr	1,5
  5940  0025A0  50DE               	movf	postinc2,w,c
  5941  0025A2  26E1               	addwf	fsr1l,f,c
  5942  0025A4  50DD               	movf	postdec2,w,c
  5943  0025A6  22E2               	addwfc	fsr1h,f,c
  5944  0025A8  50E7               	movf	indf1,w,c
  5945  0025AA  A4D8               	btfss	status,2,c
  5946  0025AC  EFDA  F012         	goto	i2u203_41
  5947  0025B0  EFDC  F012         	goto	i2u203_40
  5948  0025B4                     i2u203_41:
  5949  0025B4  EFDE  F012         	goto	i2l2580
  5950  0025B8                     i2u203_40:
  5951  0025B8  EFEC  F013         	goto	i2l459
  5952  0025BC                     i2l2580:
  5953                           
  5954                           ;main.c: 713:         if (display[pl->y-2][pl->x-1]->type == OT_PLAYERB) return;
  5955  0025BC  EE20 F001          	lfsr	2,1
  5956  0025C0  5013               	movf	up@pl^0,w,c
  5957  0025C2  26D9               	addwf	fsr2l,f,c
  5958  0025C4  5014               	movf	(up@pl+1)^0,w,c
  5959  0025C6  22DA               	addwfc	fsr2h,f,c
  5960  0025C8  50DF               	movf	indf2,w,c
  5961  0025CA  6E15               	movwf	??_up^0,c
  5962  0025CC  6A16               	clrf	(??_up+1)^0,c
  5963  0025CE  0E05               	movlw	5
  5964  0025D0                     i2u204_45:
  5965  0025D0  90D8               	bcf	status,0,c
  5966  0025D2  3615               	rlcf	??_up^0,f,c
  5967  0025D4  3616               	rlcf	(??_up+1)^0,f,c
  5968  0025D6  2EE8               	decfsz	wreg,f,c
  5969  0025D8  EFE8  F012         	goto	i2u204_45
  5970  0025DC  C013  FFD9         	movff	up@pl,fsr2l
  5971  0025E0  C014  FFDA         	movff	up@pl+1,fsr2h
  5972  0025E4  50DF               	movf	indf2,w,c
  5973  0025E6  6E17               	movwf	(??_up+2)^0,c
  5974  0025E8  6A18               	clrf	(??_up+3)^0,c
  5975  0025EA  90D8               	bcf	status,0,c
  5976  0025EC  3617               	rlcf	(??_up+2)^0,f,c
  5977  0025EE  3618               	rlcf	(??_up+3)^0,f,c
  5978  0025F0  0EBE               	movlw	190
  5979  0025F2  6E19               	movwf	(??_up+4)^0,c
  5980  0025F4  0EFF               	movlw	255
  5981  0025F6  6E1A               	movwf	(??_up+5)^0,c
  5982  0025F8  0E00               	movlw	low _display
  5983  0025FA  6E1B               	movwf	(??_up+6)^0,c
  5984  0025FC  0E01               	movlw	high _display
  5985  0025FE  6E1C               	movwf	(??_up+7)^0,c
  5986  002600  5019               	movf	(??_up+4)^0,w,c
  5987  002602  261B               	addwf	(??_up+6)^0,f,c
  5988  002604  501A               	movf	(??_up+5)^0,w,c
  5989  002606  221C               	addwfc	(??_up+7)^0,f,c
  5990  002608  5017               	movf	(??_up+2)^0,w,c
  5991  00260A  261B               	addwf	(??_up+6)^0,f,c
  5992  00260C  5018               	movf	(??_up+3)^0,w,c
  5993  00260E  221C               	addwfc	(??_up+7)^0,f,c
  5994  002610  5015               	movf	??_up^0,w,c
  5995  002612  241B               	addwf	(??_up+6)^0,w,c
  5996  002614  6ED9               	movwf	fsr2l,c
  5997  002616  5016               	movf	(??_up+1)^0,w,c
  5998  002618  201C               	addwfc	(??_up+7)^0,w,c
  5999  00261A  6EDA               	movwf	fsr2h,c
  6000  00261C  EE10 F005          	lfsr	1,5
  6001  002620  50DE               	movf	postinc2,w,c
  6002  002622  26E1               	addwf	fsr1l,f,c
  6003  002624  50DD               	movf	postdec2,w,c
  6004  002626  22E2               	addwfc	fsr1h,f,c
  6005  002628  04E6               	decf	postinc1,w,c
  6006  00262A  A4D8               	btfss	status,2,c
  6007  00262C  EF1A  F013         	goto	i2u205_41
  6008  002630  EF1C  F013         	goto	i2u205_40
  6009  002634                     i2u205_41:
  6010  002634  EF1E  F013         	goto	i2l2584
  6011  002638                     i2u205_40:
  6012  002638  EFEC  F013         	goto	i2l459
  6013  00263C                     i2l2584:
  6014                           
  6015                           ;main.c: 714:         if (display[pl->y-2][pl->x-1]->type == OT_FRISBEE) {
  6016  00263C  EE20 F001          	lfsr	2,1
  6017  002640  5013               	movf	up@pl^0,w,c
  6018  002642  26D9               	addwf	fsr2l,f,c
  6019  002644  5014               	movf	(up@pl+1)^0,w,c
  6020  002646  22DA               	addwfc	fsr2h,f,c
  6021  002648  50DF               	movf	indf2,w,c
  6022  00264A  6E15               	movwf	??_up^0,c
  6023  00264C  6A16               	clrf	(??_up+1)^0,c
  6024  00264E  0E05               	movlw	5
  6025  002650                     i2u206_45:
  6026  002650  90D8               	bcf	status,0,c
  6027  002652  3615               	rlcf	??_up^0,f,c
  6028  002654  3616               	rlcf	(??_up+1)^0,f,c
  6029  002656  2EE8               	decfsz	wreg,f,c
  6030  002658  EF28  F013         	goto	i2u206_45
  6031  00265C  C013  FFD9         	movff	up@pl,fsr2l
  6032  002660  C014  FFDA         	movff	up@pl+1,fsr2h
  6033  002664  50DF               	movf	indf2,w,c
  6034  002666  6E17               	movwf	(??_up+2)^0,c
  6035  002668  6A18               	clrf	(??_up+3)^0,c
  6036  00266A  90D8               	bcf	status,0,c
  6037  00266C  3617               	rlcf	(??_up+2)^0,f,c
  6038  00266E  3618               	rlcf	(??_up+3)^0,f,c
  6039  002670  0EBE               	movlw	190
  6040  002672  6E19               	movwf	(??_up+4)^0,c
  6041  002674  0EFF               	movlw	255
  6042  002676  6E1A               	movwf	(??_up+5)^0,c
  6043  002678  0E00               	movlw	low _display
  6044  00267A  6E1B               	movwf	(??_up+6)^0,c
  6045  00267C  0E01               	movlw	high _display
  6046  00267E  6E1C               	movwf	(??_up+7)^0,c
  6047  002680  5019               	movf	(??_up+4)^0,w,c
  6048  002682  261B               	addwf	(??_up+6)^0,f,c
  6049  002684  501A               	movf	(??_up+5)^0,w,c
  6050  002686  221C               	addwfc	(??_up+7)^0,f,c
  6051  002688  5017               	movf	(??_up+2)^0,w,c
  6052  00268A  261B               	addwf	(??_up+6)^0,f,c
  6053  00268C  5018               	movf	(??_up+3)^0,w,c
  6054  00268E  221C               	addwfc	(??_up+7)^0,f,c
  6055  002690  5015               	movf	??_up^0,w,c
  6056  002692  241B               	addwf	(??_up+6)^0,w,c
  6057  002694  6ED9               	movwf	fsr2l,c
  6058  002696  5016               	movf	(??_up+1)^0,w,c
  6059  002698  201C               	addwfc	(??_up+7)^0,w,c
  6060  00269A  6EDA               	movwf	fsr2h,c
  6061  00269C  EE10 F005          	lfsr	1,5
  6062  0026A0  50DE               	movf	postinc2,w,c
  6063  0026A2  26E1               	addwf	fsr1l,f,c
  6064  0026A4  50DD               	movf	postdec2,w,c
  6065  0026A6  22E2               	addwfc	fsr1h,f,c
  6066  0026A8  0E02               	movlw	2
  6067  0026AA  18E6               	xorwf	postinc1,w,c
  6068  0026AC  A4D8               	btfss	status,2,c
  6069  0026AE  EF5B  F013         	goto	i2u207_41
  6070  0026B2  EF5D  F013         	goto	i2u207_40
  6071  0026B6                     i2u207_41:
  6072  0026B6  EF63  F013         	goto	i2l2588
  6073  0026BA                     i2u207_40:
  6074  0026BA                     
  6075                           ;main.c: 715:             CatchFrisbee(pl);
  6076  0026BA  C013  F007         	movff	up@pl,CatchFrisbee@pl
  6077  0026BE  C014  F008         	movff	up@pl+1,CatchFrisbee@pl+1
  6078  0026C2  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  6079  0026C6                     i2l2588:
  6080                           
  6081                           ;main.c: 718:     display[pl->y-1][pl->x-1] = ((void*)0);
  6082  0026C6  EE20 F001          	lfsr	2,1
  6083  0026CA  5013               	movf	up@pl^0,w,c
  6084  0026CC  26D9               	addwf	fsr2l,f,c
  6085  0026CE  5014               	movf	(up@pl+1)^0,w,c
  6086  0026D0  22DA               	addwfc	fsr2h,f,c
  6087  0026D2  50DF               	movf	indf2,w,c
  6088  0026D4  6E15               	movwf	??_up^0,c
  6089  0026D6  6A16               	clrf	(??_up+1)^0,c
  6090  0026D8  0E05               	movlw	5
  6091  0026DA                     i2u208_45:
  6092  0026DA  90D8               	bcf	status,0,c
  6093  0026DC  3615               	rlcf	??_up^0,f,c
  6094  0026DE  3616               	rlcf	(??_up+1)^0,f,c
  6095  0026E0  2EE8               	decfsz	wreg,f,c
  6096  0026E2  EF6D  F013         	goto	i2u208_45
  6097  0026E6  C013  FFD9         	movff	up@pl,fsr2l
  6098  0026EA  C014  FFDA         	movff	up@pl+1,fsr2h
  6099  0026EE  50DF               	movf	indf2,w,c
  6100  0026F0  6E17               	movwf	(??_up+2)^0,c
  6101  0026F2  6A18               	clrf	(??_up+3)^0,c
  6102  0026F4  90D8               	bcf	status,0,c
  6103  0026F6  3617               	rlcf	(??_up+2)^0,f,c
  6104  0026F8  3618               	rlcf	(??_up+3)^0,f,c
  6105  0026FA  0EDE               	movlw	222
  6106  0026FC  6E19               	movwf	(??_up+4)^0,c
  6107  0026FE  0EFF               	movlw	255
  6108  002700  6E1A               	movwf	(??_up+5)^0,c
  6109  002702  0E00               	movlw	low _display
  6110  002704  6E1B               	movwf	(??_up+6)^0,c
  6111  002706  0E01               	movlw	high _display
  6112  002708  6E1C               	movwf	(??_up+7)^0,c
  6113  00270A  5019               	movf	(??_up+4)^0,w,c
  6114  00270C  261B               	addwf	(??_up+6)^0,f,c
  6115  00270E  501A               	movf	(??_up+5)^0,w,c
  6116  002710  221C               	addwfc	(??_up+7)^0,f,c
  6117  002712  5017               	movf	(??_up+2)^0,w,c
  6118  002714  261B               	addwf	(??_up+6)^0,f,c
  6119  002716  5018               	movf	(??_up+3)^0,w,c
  6120  002718  221C               	addwfc	(??_up+7)^0,f,c
  6121  00271A  5015               	movf	??_up^0,w,c
  6122  00271C  241B               	addwf	(??_up+6)^0,w,c
  6123  00271E  6ED9               	movwf	fsr2l,c
  6124  002720  5016               	movf	(??_up+1)^0,w,c
  6125  002722  201C               	addwfc	(??_up+7)^0,w,c
  6126  002724  6EDA               	movwf	fsr2h,c
  6127  002726  0E00               	movlw	0
  6128  002728  6EDE               	movwf	postinc2,c
  6129  00272A  0E00               	movlw	0
  6130  00272C  6EDD               	movwf	postdec2,c
  6131  00272E                     
  6132                           ;main.c: 719:     pl->oldX = pl->x;
  6133  00272E  C013  FFD9         	movff	up@pl,fsr2l
  6134  002732  C014  FFDA         	movff	up@pl+1,fsr2h
  6135  002736  EE10 F002          	lfsr	1,2
  6136  00273A  5013               	movf	up@pl^0,w,c
  6137  00273C  26E1               	addwf	fsr1l,f,c
  6138  00273E  5014               	movf	(up@pl+1)^0,w,c
  6139  002740  22E2               	addwfc	fsr1h,f,c
  6140  002742  CFDF FFE7          	movff	indf2,indf1
  6141  002746                     
  6142                           ;main.c: 720:     pl->oldY = pl->y;
  6143  002746  EE20 F001          	lfsr	2,1
  6144  00274A  5013               	movf	up@pl^0,w,c
  6145  00274C  26D9               	addwf	fsr2l,f,c
  6146  00274E  5014               	movf	(up@pl+1)^0,w,c
  6147  002750  22DA               	addwfc	fsr2h,f,c
  6148  002752  EE10 F003          	lfsr	1,3
  6149  002756  5013               	movf	up@pl^0,w,c
  6150  002758  26E1               	addwf	fsr1l,f,c
  6151  00275A  5014               	movf	(up@pl+1)^0,w,c
  6152  00275C  22E2               	addwfc	fsr1h,f,c
  6153  00275E  CFDF FFE7          	movff	indf2,indf1
  6154  002762                     
  6155                           ;main.c: 721:     pl->y--;
  6156  002762  EE20 F001          	lfsr	2,1
  6157  002766  5013               	movf	up@pl^0,w,c
  6158  002768  26D9               	addwf	fsr2l,f,c
  6159  00276A  5014               	movf	(up@pl+1)^0,w,c
  6160  00276C  22DA               	addwfc	fsr2h,f,c
  6161  00276E  06DF               	decf	indf2,f,c
  6162  002770                     
  6163                           ;main.c: 722:     display[pl->y-1][pl->x-1] = pl;
  6164  002770  EE20 F001          	lfsr	2,1
  6165  002774  5013               	movf	up@pl^0,w,c
  6166  002776  26D9               	addwf	fsr2l,f,c
  6167  002778  5014               	movf	(up@pl+1)^0,w,c
  6168  00277A  22DA               	addwfc	fsr2h,f,c
  6169  00277C  50DF               	movf	indf2,w,c
  6170  00277E  6E15               	movwf	??_up^0,c
  6171  002780  6A16               	clrf	(??_up+1)^0,c
  6172  002782  0E05               	movlw	5
  6173  002784                     i2u209_45:
  6174  002784  90D8               	bcf	status,0,c
  6175  002786  3615               	rlcf	??_up^0,f,c
  6176  002788  3616               	rlcf	(??_up+1)^0,f,c
  6177  00278A  2EE8               	decfsz	wreg,f,c
  6178  00278C  EFC2  F013         	goto	i2u209_45
  6179  002790  C013  FFD9         	movff	up@pl,fsr2l
  6180  002794  C014  FFDA         	movff	up@pl+1,fsr2h
  6181  002798  50DF               	movf	indf2,w,c
  6182  00279A  6E17               	movwf	(??_up+2)^0,c
  6183  00279C  6A18               	clrf	(??_up+3)^0,c
  6184  00279E  90D8               	bcf	status,0,c
  6185  0027A0  3617               	rlcf	(??_up+2)^0,f,c
  6186  0027A2  3618               	rlcf	(??_up+3)^0,f,c
  6187  0027A4  0EDE               	movlw	222
  6188  0027A6  6E19               	movwf	(??_up+4)^0,c
  6189  0027A8  0EFF               	movlw	255
  6190  0027AA  6E1A               	movwf	(??_up+5)^0,c
  6191  0027AC  0E00               	movlw	low _display
  6192  0027AE  6E1B               	movwf	(??_up+6)^0,c
  6193  0027B0  0E01               	movlw	high _display
  6194  0027B2  6E1C               	movwf	(??_up+7)^0,c
  6195  0027B4  5019               	movf	(??_up+4)^0,w,c
  6196  0027B6  261B               	addwf	(??_up+6)^0,f,c
  6197  0027B8  501A               	movf	(??_up+5)^0,w,c
  6198  0027BA  221C               	addwfc	(??_up+7)^0,f,c
  6199  0027BC  5017               	movf	(??_up+2)^0,w,c
  6200  0027BE  261B               	addwf	(??_up+6)^0,f,c
  6201  0027C0  5018               	movf	(??_up+3)^0,w,c
  6202  0027C2  221C               	addwfc	(??_up+7)^0,f,c
  6203  0027C4  5015               	movf	??_up^0,w,c
  6204  0027C6  241B               	addwf	(??_up+6)^0,w,c
  6205  0027C8  6ED9               	movwf	fsr2l,c
  6206  0027CA  5016               	movf	(??_up+1)^0,w,c
  6207  0027CC  201C               	addwfc	(??_up+7)^0,w,c
  6208  0027CE  6EDA               	movwf	fsr2h,c
  6209  0027D0  C013  FFDE         	movff	up@pl,postinc2
  6210  0027D4  C014  FFDD         	movff	up@pl+1,postdec2
  6211  0027D8                     i2l459:
  6212  0027D8  0012               	return		;funcret
  6213  0027DA                     __end_of_up:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _right *****************
  6217 ;; Defined at:
  6218 ;;		line 693 in file "main.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  pl              2   18[COMRAM] PTR struct GameElement
  6221 ;;		 -> objs(42), 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;Total ram usage:       11 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    2
  6240 ;; This function calls:
  6241 ;;		_CatchFrisbee
  6242 ;; This function is called by:
  6243 ;;		_highIsr
  6244 ;;		_MoveEveryone
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text19
  6249  002E26                     __ptext19:
  6250                           	callstack 0
  6251  002E26                     _right:
  6252                           	callstack 22
  6253  002E26                     
  6254                           ;main.c: 694:     if (pl->x == 16) return;
  6255  002E26  C013  FFD9         	movff	right@pl,fsr2l
  6256  002E2A  C014  FFDA         	movff	right@pl+1,fsr2h
  6257  002E2E  0E10               	movlw	16
  6258  002E30  18DE               	xorwf	postinc2,w,c
  6259  002E32  A4D8               	btfss	status,2,c
  6260  002E34  EF1E  F017         	goto	i2u210_41
  6261  002E38  EF20  F017         	goto	i2u210_40
  6262  002E3C                     i2u210_41:
  6263  002E3C  EF22  F017         	goto	i2l2604
  6264  002E40                     i2u210_40:
  6265  002E40  EF9F  F018         	goto	i2l451
  6266  002E44                     i2l2604:
  6267                           
  6268                           ;main.c: 695:     if (display[pl->y-1][pl->x] != ((void*)0)) {
  6269  002E44  EE20 F001          	lfsr	2,1
  6270  002E48  5013               	movf	right@pl^0,w,c
  6271  002E4A  26D9               	addwf	fsr2l,f,c
  6272  002E4C  5014               	movf	(right@pl+1)^0,w,c
  6273  002E4E  22DA               	addwfc	fsr2h,f,c
  6274  002E50  50DF               	movf	indf2,w,c
  6275  002E52  6E15               	movwf	??_right^0,c
  6276  002E54  6A16               	clrf	(??_right+1)^0,c
  6277  002E56  0E05               	movlw	5
  6278  002E58                     i2u211_45:
  6279  002E58  90D8               	bcf	status,0,c
  6280  002E5A  3615               	rlcf	??_right^0,f,c
  6281  002E5C  3616               	rlcf	(??_right+1)^0,f,c
  6282  002E5E  2EE8               	decfsz	wreg,f,c
  6283  002E60  EF2C  F017         	goto	i2u211_45
  6284  002E64  C013  FFD9         	movff	right@pl,fsr2l
  6285  002E68  C014  FFDA         	movff	right@pl+1,fsr2h
  6286  002E6C  50DF               	movf	indf2,w,c
  6287  002E6E  6E17               	movwf	(??_right+2)^0,c
  6288  002E70  5017               	movf	(??_right+2)^0,w,c
  6289  002E72  0D02               	mullw	2
  6290  002E74  0EE0               	movlw	224
  6291  002E76  6E18               	movwf	(??_right+3)^0,c
  6292  002E78  0EFF               	movlw	255
  6293  002E7A  6E19               	movwf	(??_right+4)^0,c
  6294  002E7C  0E00               	movlw	low _display
  6295  002E7E  6E1A               	movwf	(??_right+5)^0,c
  6296  002E80  0E01               	movlw	high _display
  6297  002E82  6E1B               	movwf	(??_right+6)^0,c
  6298  002E84  5018               	movf	(??_right+3)^0,w,c
  6299  002E86  261A               	addwf	(??_right+5)^0,f,c
  6300  002E88  5019               	movf	(??_right+4)^0,w,c
  6301  002E8A  221B               	addwfc	(??_right+6)^0,f,c
  6302  002E8C  50F3               	movf	243,w,c
  6303  002E8E  261A               	addwf	(??_right+5)^0,f,c
  6304  002E90  50F4               	movf	244,w,c
  6305  002E92  221B               	addwfc	(??_right+6)^0,f,c
  6306  002E94  5015               	movf	??_right^0,w,c
  6307  002E96  241A               	addwf	(??_right+5)^0,w,c
  6308  002E98  6ED9               	movwf	fsr2l,c
  6309  002E9A  5016               	movf	(??_right+1)^0,w,c
  6310  002E9C  201B               	addwfc	(??_right+6)^0,w,c
  6311  002E9E  6EDA               	movwf	fsr2h,c
  6312  002EA0  50DE               	movf	postinc2,w,c
  6313  002EA2  10DE               	iorwf	postinc2,w,c
  6314  002EA4  B4D8               	btfsc	status,2,c
  6315  002EA6  EF57  F017         	goto	i2u212_41
  6316  002EAA  EF59  F017         	goto	i2u212_40
  6317  002EAE                     i2u212_41:
  6318  002EAE  EF18  F018         	goto	i2l2618
  6319  002EB2                     i2u212_40:
  6320  002EB2                     
  6321                           ;main.c: 696:         if (display[pl->y-1][pl->x]->type == OT_PLAYERA) return;
  6322  002EB2  EE20 F001          	lfsr	2,1
  6323  002EB6  5013               	movf	right@pl^0,w,c
  6324  002EB8  26D9               	addwf	fsr2l,f,c
  6325  002EBA  5014               	movf	(right@pl+1)^0,w,c
  6326  002EBC  22DA               	addwfc	fsr2h,f,c
  6327  002EBE  50DF               	movf	indf2,w,c
  6328  002EC0  6E15               	movwf	??_right^0,c
  6329  002EC2  6A16               	clrf	(??_right+1)^0,c
  6330  002EC4  0E05               	movlw	5
  6331  002EC6                     i2u213_45:
  6332  002EC6  90D8               	bcf	status,0,c
  6333  002EC8  3615               	rlcf	??_right^0,f,c
  6334  002ECA  3616               	rlcf	(??_right+1)^0,f,c
  6335  002ECC  2EE8               	decfsz	wreg,f,c
  6336  002ECE  EF63  F017         	goto	i2u213_45
  6337  002ED2  C013  FFD9         	movff	right@pl,fsr2l
  6338  002ED6  C014  FFDA         	movff	right@pl+1,fsr2h
  6339  002EDA  50DF               	movf	indf2,w,c
  6340  002EDC  6E17               	movwf	(??_right+2)^0,c
  6341  002EDE  5017               	movf	(??_right+2)^0,w,c
  6342  002EE0  0D02               	mullw	2
  6343  002EE2  0EE0               	movlw	224
  6344  002EE4  6E18               	movwf	(??_right+3)^0,c
  6345  002EE6  0EFF               	movlw	255
  6346  002EE8  6E19               	movwf	(??_right+4)^0,c
  6347  002EEA  0E00               	movlw	low _display
  6348  002EEC  6E1A               	movwf	(??_right+5)^0,c
  6349  002EEE  0E01               	movlw	high _display
  6350  002EF0  6E1B               	movwf	(??_right+6)^0,c
  6351  002EF2  5018               	movf	(??_right+3)^0,w,c
  6352  002EF4  261A               	addwf	(??_right+5)^0,f,c
  6353  002EF6  5019               	movf	(??_right+4)^0,w,c
  6354  002EF8  221B               	addwfc	(??_right+6)^0,f,c
  6355  002EFA  50F3               	movf	243,w,c
  6356  002EFC  261A               	addwf	(??_right+5)^0,f,c
  6357  002EFE  50F4               	movf	244,w,c
  6358  002F00  221B               	addwfc	(??_right+6)^0,f,c
  6359  002F02  5015               	movf	??_right^0,w,c
  6360  002F04  241A               	addwf	(??_right+5)^0,w,c
  6361  002F06  6ED9               	movwf	fsr2l,c
  6362  002F08  5016               	movf	(??_right+1)^0,w,c
  6363  002F0A  201B               	addwfc	(??_right+6)^0,w,c
  6364  002F0C  6EDA               	movwf	fsr2h,c
  6365  002F0E  EE10 F005          	lfsr	1,5
  6366  002F12  50DE               	movf	postinc2,w,c
  6367  002F14  26E1               	addwf	fsr1l,f,c
  6368  002F16  50DD               	movf	postdec2,w,c
  6369  002F18  22E2               	addwfc	fsr1h,f,c
  6370  002F1A  50E7               	movf	indf1,w,c
  6371  002F1C  A4D8               	btfss	status,2,c
  6372  002F1E  EF93  F017         	goto	i2u214_41
  6373  002F22  EF95  F017         	goto	i2u214_40
  6374  002F26                     i2u214_41:
  6375  002F26  EF97  F017         	goto	i2l2610
  6376  002F2A                     i2u214_40:
  6377  002F2A  EF9F  F018         	goto	i2l451
  6378  002F2E                     i2l2610:
  6379                           
  6380                           ;main.c: 697:         if (display[pl->y-1][pl->x]->type == OT_PLAYERB) return;
  6381  002F2E  EE20 F001          	lfsr	2,1
  6382  002F32  5013               	movf	right@pl^0,w,c
  6383  002F34  26D9               	addwf	fsr2l,f,c
  6384  002F36  5014               	movf	(right@pl+1)^0,w,c
  6385  002F38  22DA               	addwfc	fsr2h,f,c
  6386  002F3A  50DF               	movf	indf2,w,c
  6387  002F3C  6E15               	movwf	??_right^0,c
  6388  002F3E  6A16               	clrf	(??_right+1)^0,c
  6389  002F40  0E05               	movlw	5
  6390  002F42                     i2u215_45:
  6391  002F42  90D8               	bcf	status,0,c
  6392  002F44  3615               	rlcf	??_right^0,f,c
  6393  002F46  3616               	rlcf	(??_right+1)^0,f,c
  6394  002F48  2EE8               	decfsz	wreg,f,c
  6395  002F4A  EFA1  F017         	goto	i2u215_45
  6396  002F4E  C013  FFD9         	movff	right@pl,fsr2l
  6397  002F52  C014  FFDA         	movff	right@pl+1,fsr2h
  6398  002F56  50DF               	movf	indf2,w,c
  6399  002F58  6E17               	movwf	(??_right+2)^0,c
  6400  002F5A  5017               	movf	(??_right+2)^0,w,c
  6401  002F5C  0D02               	mullw	2
  6402  002F5E  0EE0               	movlw	224
  6403  002F60  6E18               	movwf	(??_right+3)^0,c
  6404  002F62  0EFF               	movlw	255
  6405  002F64  6E19               	movwf	(??_right+4)^0,c
  6406  002F66  0E00               	movlw	low _display
  6407  002F68  6E1A               	movwf	(??_right+5)^0,c
  6408  002F6A  0E01               	movlw	high _display
  6409  002F6C  6E1B               	movwf	(??_right+6)^0,c
  6410  002F6E  5018               	movf	(??_right+3)^0,w,c
  6411  002F70  261A               	addwf	(??_right+5)^0,f,c
  6412  002F72  5019               	movf	(??_right+4)^0,w,c
  6413  002F74  221B               	addwfc	(??_right+6)^0,f,c
  6414  002F76  50F3               	movf	243,w,c
  6415  002F78  261A               	addwf	(??_right+5)^0,f,c
  6416  002F7A  50F4               	movf	244,w,c
  6417  002F7C  221B               	addwfc	(??_right+6)^0,f,c
  6418  002F7E  5015               	movf	??_right^0,w,c
  6419  002F80  241A               	addwf	(??_right+5)^0,w,c
  6420  002F82  6ED9               	movwf	fsr2l,c
  6421  002F84  5016               	movf	(??_right+1)^0,w,c
  6422  002F86  201B               	addwfc	(??_right+6)^0,w,c
  6423  002F88  6EDA               	movwf	fsr2h,c
  6424  002F8A  EE10 F005          	lfsr	1,5
  6425  002F8E  50DE               	movf	postinc2,w,c
  6426  002F90  26E1               	addwf	fsr1l,f,c
  6427  002F92  50DD               	movf	postdec2,w,c
  6428  002F94  22E2               	addwfc	fsr1h,f,c
  6429  002F96  04E6               	decf	postinc1,w,c
  6430  002F98  A4D8               	btfss	status,2,c
  6431  002F9A  EFD1  F017         	goto	i2u216_41
  6432  002F9E  EFD3  F017         	goto	i2u216_40
  6433  002FA2                     i2u216_41:
  6434  002FA2  EFD5  F017         	goto	i2l2614
  6435  002FA6                     i2u216_40:
  6436  002FA6  EF9F  F018         	goto	i2l451
  6437  002FAA                     i2l2614:
  6438                           
  6439                           ;main.c: 698:         if (display[pl->y-1][pl->x]->type == OT_FRISBEE) {
  6440  002FAA  EE20 F001          	lfsr	2,1
  6441  002FAE  5013               	movf	right@pl^0,w,c
  6442  002FB0  26D9               	addwf	fsr2l,f,c
  6443  002FB2  5014               	movf	(right@pl+1)^0,w,c
  6444  002FB4  22DA               	addwfc	fsr2h,f,c
  6445  002FB6  50DF               	movf	indf2,w,c
  6446  002FB8  6E15               	movwf	??_right^0,c
  6447  002FBA  6A16               	clrf	(??_right+1)^0,c
  6448  002FBC  0E05               	movlw	5
  6449  002FBE                     i2u217_45:
  6450  002FBE  90D8               	bcf	status,0,c
  6451  002FC0  3615               	rlcf	??_right^0,f,c
  6452  002FC2  3616               	rlcf	(??_right+1)^0,f,c
  6453  002FC4  2EE8               	decfsz	wreg,f,c
  6454  002FC6  EFDF  F017         	goto	i2u217_45
  6455  002FCA  C013  FFD9         	movff	right@pl,fsr2l
  6456  002FCE  C014  FFDA         	movff	right@pl+1,fsr2h
  6457  002FD2  50DF               	movf	indf2,w,c
  6458  002FD4  6E17               	movwf	(??_right+2)^0,c
  6459  002FD6  5017               	movf	(??_right+2)^0,w,c
  6460  002FD8  0D02               	mullw	2
  6461  002FDA  0EE0               	movlw	224
  6462  002FDC  6E18               	movwf	(??_right+3)^0,c
  6463  002FDE  0EFF               	movlw	255
  6464  002FE0  6E19               	movwf	(??_right+4)^0,c
  6465  002FE2  0E00               	movlw	low _display
  6466  002FE4  6E1A               	movwf	(??_right+5)^0,c
  6467  002FE6  0E01               	movlw	high _display
  6468  002FE8  6E1B               	movwf	(??_right+6)^0,c
  6469  002FEA  5018               	movf	(??_right+3)^0,w,c
  6470  002FEC  261A               	addwf	(??_right+5)^0,f,c
  6471  002FEE  5019               	movf	(??_right+4)^0,w,c
  6472  002FF0  221B               	addwfc	(??_right+6)^0,f,c
  6473  002FF2  50F3               	movf	243,w,c
  6474  002FF4  261A               	addwf	(??_right+5)^0,f,c
  6475  002FF6  50F4               	movf	244,w,c
  6476  002FF8  221B               	addwfc	(??_right+6)^0,f,c
  6477  002FFA  5015               	movf	??_right^0,w,c
  6478  002FFC  241A               	addwf	(??_right+5)^0,w,c
  6479  002FFE  6ED9               	movwf	fsr2l,c
  6480  003000  5016               	movf	(??_right+1)^0,w,c
  6481  003002  201B               	addwfc	(??_right+6)^0,w,c
  6482  003004  6EDA               	movwf	fsr2h,c
  6483  003006  EE10 F005          	lfsr	1,5
  6484  00300A  50DE               	movf	postinc2,w,c
  6485  00300C  26E1               	addwf	fsr1l,f,c
  6486  00300E  50DD               	movf	postdec2,w,c
  6487  003010  22E2               	addwfc	fsr1h,f,c
  6488  003012  0E02               	movlw	2
  6489  003014  18E6               	xorwf	postinc1,w,c
  6490  003016  A4D8               	btfss	status,2,c
  6491  003018  EF10  F018         	goto	i2u218_41
  6492  00301C  EF12  F018         	goto	i2u218_40
  6493  003020                     i2u218_41:
  6494  003020  EF18  F018         	goto	i2l2618
  6495  003024                     i2u218_40:
  6496  003024                     
  6497                           ;main.c: 699:             CatchFrisbee(pl);
  6498  003024  C013  F007         	movff	right@pl,CatchFrisbee@pl
  6499  003028  C014  F008         	movff	right@pl+1,CatchFrisbee@pl+1
  6500  00302C  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  6501  003030                     i2l2618:
  6502                           
  6503                           ;main.c: 702:     display[pl->y-1][pl->x-1] = ((void*)0);
  6504  003030  EE20 F001          	lfsr	2,1
  6505  003034  5013               	movf	right@pl^0,w,c
  6506  003036  26D9               	addwf	fsr2l,f,c
  6507  003038  5014               	movf	(right@pl+1)^0,w,c
  6508  00303A  22DA               	addwfc	fsr2h,f,c
  6509  00303C  50DF               	movf	indf2,w,c
  6510  00303E  6E15               	movwf	??_right^0,c
  6511  003040  6A16               	clrf	(??_right+1)^0,c
  6512  003042  0E05               	movlw	5
  6513  003044                     i2u219_45:
  6514  003044  90D8               	bcf	status,0,c
  6515  003046  3615               	rlcf	??_right^0,f,c
  6516  003048  3616               	rlcf	(??_right+1)^0,f,c
  6517  00304A  2EE8               	decfsz	wreg,f,c
  6518  00304C  EF22  F018         	goto	i2u219_45
  6519  003050  C013  FFD9         	movff	right@pl,fsr2l
  6520  003054  C014  FFDA         	movff	right@pl+1,fsr2h
  6521  003058  50DF               	movf	indf2,w,c
  6522  00305A  6E17               	movwf	(??_right+2)^0,c
  6523  00305C  6A18               	clrf	(??_right+3)^0,c
  6524  00305E  90D8               	bcf	status,0,c
  6525  003060  3617               	rlcf	(??_right+2)^0,f,c
  6526  003062  3618               	rlcf	(??_right+3)^0,f,c
  6527  003064  0EDE               	movlw	222
  6528  003066  6E19               	movwf	(??_right+4)^0,c
  6529  003068  0EFF               	movlw	255
  6530  00306A  6E1A               	movwf	(??_right+5)^0,c
  6531  00306C  0E00               	movlw	low _display
  6532  00306E  6E1B               	movwf	(??_right+6)^0,c
  6533  003070  0E01               	movlw	high _display
  6534  003072  6E1C               	movwf	(??_right+7)^0,c
  6535  003074  5019               	movf	(??_right+4)^0,w,c
  6536  003076  261B               	addwf	(??_right+6)^0,f,c
  6537  003078  501A               	movf	(??_right+5)^0,w,c
  6538  00307A  221C               	addwfc	(??_right+7)^0,f,c
  6539  00307C  5017               	movf	(??_right+2)^0,w,c
  6540  00307E  261B               	addwf	(??_right+6)^0,f,c
  6541  003080  5018               	movf	(??_right+3)^0,w,c
  6542  003082  221C               	addwfc	(??_right+7)^0,f,c
  6543  003084  5015               	movf	??_right^0,w,c
  6544  003086  241B               	addwf	(??_right+6)^0,w,c
  6545  003088  6ED9               	movwf	fsr2l,c
  6546  00308A  5016               	movf	(??_right+1)^0,w,c
  6547  00308C  201C               	addwfc	(??_right+7)^0,w,c
  6548  00308E  6EDA               	movwf	fsr2h,c
  6549  003090  0E00               	movlw	0
  6550  003092  6EDE               	movwf	postinc2,c
  6551  003094  0E00               	movlw	0
  6552  003096  6EDD               	movwf	postdec2,c
  6553  003098                     
  6554                           ;main.c: 703:     pl->oldX = pl->x;
  6555  003098  C013  FFD9         	movff	right@pl,fsr2l
  6556  00309C  C014  FFDA         	movff	right@pl+1,fsr2h
  6557  0030A0  EE10 F002          	lfsr	1,2
  6558  0030A4  5013               	movf	right@pl^0,w,c
  6559  0030A6  26E1               	addwf	fsr1l,f,c
  6560  0030A8  5014               	movf	(right@pl+1)^0,w,c
  6561  0030AA  22E2               	addwfc	fsr1h,f,c
  6562  0030AC  CFDF FFE7          	movff	indf2,indf1
  6563  0030B0                     
  6564                           ;main.c: 704:     pl->oldY = pl->y;
  6565  0030B0  EE20 F001          	lfsr	2,1
  6566  0030B4  5013               	movf	right@pl^0,w,c
  6567  0030B6  26D9               	addwf	fsr2l,f,c
  6568  0030B8  5014               	movf	(right@pl+1)^0,w,c
  6569  0030BA  22DA               	addwfc	fsr2h,f,c
  6570  0030BC  EE10 F003          	lfsr	1,3
  6571  0030C0  5013               	movf	right@pl^0,w,c
  6572  0030C2  26E1               	addwf	fsr1l,f,c
  6573  0030C4  5014               	movf	(right@pl+1)^0,w,c
  6574  0030C6  22E2               	addwfc	fsr1h,f,c
  6575  0030C8  CFDF FFE7          	movff	indf2,indf1
  6576  0030CC                     
  6577                           ;main.c: 705:     pl->x++;
  6578  0030CC  C013  FFD9         	movff	right@pl,fsr2l
  6579  0030D0  C014  FFDA         	movff	right@pl+1,fsr2h
  6580  0030D4  2ADF               	incf	indf2,f,c
  6581  0030D6                     
  6582                           ;main.c: 706:     display[pl->y-1][pl->x-1] = pl;
  6583  0030D6  EE20 F001          	lfsr	2,1
  6584  0030DA  5013               	movf	right@pl^0,w,c
  6585  0030DC  26D9               	addwf	fsr2l,f,c
  6586  0030DE  5014               	movf	(right@pl+1)^0,w,c
  6587  0030E0  22DA               	addwfc	fsr2h,f,c
  6588  0030E2  50DF               	movf	indf2,w,c
  6589  0030E4  6E15               	movwf	??_right^0,c
  6590  0030E6  6A16               	clrf	(??_right+1)^0,c
  6591  0030E8  0E05               	movlw	5
  6592  0030EA                     i2u220_45:
  6593  0030EA  90D8               	bcf	status,0,c
  6594  0030EC  3615               	rlcf	??_right^0,f,c
  6595  0030EE  3616               	rlcf	(??_right+1)^0,f,c
  6596  0030F0  2EE8               	decfsz	wreg,f,c
  6597  0030F2  EF75  F018         	goto	i2u220_45
  6598  0030F6  C013  FFD9         	movff	right@pl,fsr2l
  6599  0030FA  C014  FFDA         	movff	right@pl+1,fsr2h
  6600  0030FE  50DF               	movf	indf2,w,c
  6601  003100  6E17               	movwf	(??_right+2)^0,c
  6602  003102  6A18               	clrf	(??_right+3)^0,c
  6603  003104  90D8               	bcf	status,0,c
  6604  003106  3617               	rlcf	(??_right+2)^0,f,c
  6605  003108  3618               	rlcf	(??_right+3)^0,f,c
  6606  00310A  0EDE               	movlw	222
  6607  00310C  6E19               	movwf	(??_right+4)^0,c
  6608  00310E  0EFF               	movlw	255
  6609  003110  6E1A               	movwf	(??_right+5)^0,c
  6610  003112  0E00               	movlw	low _display
  6611  003114  6E1B               	movwf	(??_right+6)^0,c
  6612  003116  0E01               	movlw	high _display
  6613  003118  6E1C               	movwf	(??_right+7)^0,c
  6614  00311A  5019               	movf	(??_right+4)^0,w,c
  6615  00311C  261B               	addwf	(??_right+6)^0,f,c
  6616  00311E  501A               	movf	(??_right+5)^0,w,c
  6617  003120  221C               	addwfc	(??_right+7)^0,f,c
  6618  003122  5017               	movf	(??_right+2)^0,w,c
  6619  003124  261B               	addwf	(??_right+6)^0,f,c
  6620  003126  5018               	movf	(??_right+3)^0,w,c
  6621  003128  221C               	addwfc	(??_right+7)^0,f,c
  6622  00312A  5015               	movf	??_right^0,w,c
  6623  00312C  241B               	addwf	(??_right+6)^0,w,c
  6624  00312E  6ED9               	movwf	fsr2l,c
  6625  003130  5016               	movf	(??_right+1)^0,w,c
  6626  003132  201C               	addwfc	(??_right+7)^0,w,c
  6627  003134  6EDA               	movwf	fsr2h,c
  6628  003136  C013  FFDE         	movff	right@pl,postinc2
  6629  00313A  C014  FFDD         	movff	right@pl+1,postdec2
  6630  00313E                     i2l451:
  6631  00313E  0012               	return		;funcret
  6632  003140                     __end_of_right:
  6633                           	callstack 0
  6634                           
  6635 ;; *************** function _random_generator *****************
  6636 ;; Defined at:
  6637 ;;		line 237 in file "./the3.h"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  modulo          2    5[COMRAM] unsigned short 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  i               2    9[COMRAM] unsigned short 
  6642 ;;  res             1   12[COMRAM] unsigned char 
  6643 ;;  temp            1   11[COMRAM] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  2    5[COMRAM] unsigned short 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;Total ram usage:        8 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    1
  6660 ;; This function calls:
  6661 ;;		___lwmod
  6662 ;; This function is called by:
  6663 ;;		_compute_frisbee_target_and_route
  6664 ;;		_MoveEveryone
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text20
  6669  0040CC                     __ptext20:
  6670                           	callstack 0
  6671  0040CC                     _random_generator:
  6672                           	callstack 22
  6673  0040CC                     
  6674                           ;./the3.h: 241:     byte temp;;./the3.h: 242:     byte res;;./the3.h: 244:     T3CONbits
      +                          .TMR3ON = 0;
  6675  0040CC  90B1               	bcf	177,0,c	;volatile
  6676  0040CE                     
  6677                           ;./the3.h: 246:     res = TMR3L % modulo;
  6678  0040CE  CFB2 F001          	movff	4018,___lwmod@dividend	;volatile
  6679  0040D2  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6680  0040D4  C006  F003         	movff	random_generator@modulo,___lwmod@divisor
  6681  0040D8  C007  F004         	movff	random_generator@modulo+1,___lwmod@divisor+1
  6682  0040DC  EC9B  F020         	call	___lwmod	;wreg free
  6683  0040E0  5001               	movf	?___lwmod^0,w,c
  6684  0040E2  6E0D               	movwf	random_generator@res^0,c
  6685  0040E4                     
  6686                           ;./the3.h: 247:     TMR3H = TMR3L;
  6687  0040E4  CFB2 FFB3          	movff	4018,4019	;volatile
  6688  0040E8                     
  6689                           ;./the3.h: 249:     for (unsigned short i = 0; i < (modulo & 0b111); i++) {
  6690  0040E8  0E00               	movlw	0
  6691  0040EA  6E0B               	movwf	(random_generator@i+1)^0,c
  6692  0040EC  0E00               	movlw	0
  6693  0040EE  6E0A               	movwf	random_generator@i^0,c
  6694  0040F0  EF85  F020         	goto	i2l2552
  6695  0040F4                     i2l2548:
  6696                           
  6697                           ;./the3.h: 250:         temp = TMR3L & 0b10000000;
  6698  0040F4  50B2               	movf	178,w,c	;volatile
  6699  0040F6  0B80               	andlw	128
  6700  0040F8  6E0C               	movwf	random_generator@temp^0,c
  6701                           
  6702                           ;./the3.h: 251:         TMR3L <<= 1;
  6703  0040FA  90D8               	bcf	status,0,c
  6704  0040FC  36B2               	rlcf	178,f,c
  6705                           
  6706                           ;volatile
  6707                           ;./the3.h: 252:         TMR3L = TMR3L | (temp >> 7);
  6708  0040FE  440C               	rlncf	random_generator@temp^0,w,c
  6709  004100  0B01               	andlw	1
  6710  004102  10B2               	iorwf	178,w,c	;volatile
  6711  004104  6EB2               	movwf	178,c	;volatile
  6712  004106                     
  6713                           ;./the3.h: 253:     }
  6714  004106  4A0A               	infsnz	random_generator@i^0,f,c
  6715  004108  2A0B               	incf	(random_generator@i+1)^0,f,c
  6716  00410A                     i2l2552:
  6717  00410A  0E07               	movlw	7
  6718  00410C  1406               	andwf	random_generator@modulo^0,w,c
  6719  00410E  6E08               	movwf	??_random_generator^0,c
  6720  004110  0E00               	movlw	0
  6721  004112  1407               	andwf	(random_generator@modulo+1)^0,w,c
  6722  004114  6E09               	movwf	(??_random_generator+1)^0,c
  6723  004116  5008               	movf	??_random_generator^0,w,c
  6724  004118  5C0A               	subwf	random_generator@i^0,w,c
  6725  00411A  5009               	movf	(??_random_generator+1)^0,w,c
  6726  00411C  580B               	subwfb	(random_generator@i+1)^0,w,c
  6727  00411E  A0D8               	btfss	status,0,c
  6728  004120  EF94  F020         	goto	i2u197_41
  6729  004124  EF96  F020         	goto	i2u197_40
  6730  004128                     i2u197_41:
  6731  004128  EF7A  F020         	goto	i2l2548
  6732  00412C                     i2u197_40:
  6733  00412C                     
  6734                           ;./the3.h: 256:     T3CONbits.TMR3ON = 1;
  6735  00412C  80B1               	bsf	177,0,c	;volatile
  6736                           
  6737                           ;./the3.h: 257:     return res;
  6738  00412E  C00D  F006         	movff	random_generator@res,?_random_generator
  6739  004132  6A07               	clrf	(?_random_generator+1)^0,c
  6740  004134  0012               	return		;funcret
  6741  004136                     __end_of_random_generator:
  6742                           	callstack 0
  6743                           
  6744 ;; *************** function ___lwmod *****************
  6745 ;; Defined at:
  6746 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/lwmod.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  dividend        2    0[COMRAM] unsigned int 
  6749 ;;  divisor         2    2[COMRAM] unsigned int 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  counter         1    4[COMRAM] unsigned char 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  2    0[COMRAM] unsigned int 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;Total ram usage:        5 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_random_generator
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text21
  6775  004136                     __ptext21:
  6776                           	callstack 0
  6777  004136                     ___lwmod:
  6778                           	callstack 22
  6779  004136  5003               	movf	___lwmod@divisor^0,w,c
  6780  004138  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6781  00413A  B4D8               	btfsc	status,2,c
  6782  00413C  EFA2  F020         	goto	i2u194_41
  6783  004140  EFA4  F020         	goto	i2u194_40
  6784  004144                     i2u194_41:
  6785  004144  EFC8  F020         	goto	i2l1015
  6786  004148                     i2u194_40:
  6787  004148  0E01               	movlw	1
  6788  00414A  6E05               	movwf	___lwmod@counter^0,c
  6789  00414C  EFAC  F020         	goto	i2l2530
  6790  004150                     i2l2528:
  6791  004150  90D8               	bcf	status,0,c
  6792  004152  3603               	rlcf	___lwmod@divisor^0,f,c
  6793  004154  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6794  004156  2A05               	incf	___lwmod@counter^0,f,c
  6795  004158                     i2l2530:
  6796  004158  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6797  00415A  EFB1  F020         	goto	i2u195_41
  6798  00415E  EFB3  F020         	goto	i2u195_40
  6799  004162                     i2u195_41:
  6800  004162  EFA8  F020         	goto	i2l2528
  6801  004166                     i2u195_40:
  6802  004166                     i2l2532:
  6803  004166  5003               	movf	___lwmod@divisor^0,w,c
  6804  004168  5C01               	subwf	___lwmod@dividend^0,w,c
  6805  00416A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6806  00416C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6807  00416E  A0D8               	btfss	status,0,c
  6808  004170  EFBC  F020         	goto	i2u196_41
  6809  004174  EFBE  F020         	goto	i2u196_40
  6810  004178                     i2u196_41:
  6811  004178  EFC2  F020         	goto	i2l2536
  6812  00417C                     i2u196_40:
  6813  00417C  5003               	movf	___lwmod@divisor^0,w,c
  6814  00417E  5E01               	subwf	___lwmod@dividend^0,f,c
  6815  004180  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6816  004182  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6817  004184                     i2l2536:
  6818  004184  90D8               	bcf	status,0,c
  6819  004186  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6820  004188  3203               	rrcf	___lwmod@divisor^0,f,c
  6821  00418A  2E05               	decfsz	___lwmod@counter^0,f,c
  6822  00418C  EFB3  F020         	goto	i2l2532
  6823  004190                     i2l1015:
  6824  004190  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6825  004194  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6826  004198  0012               	return		;funcret
  6827  00419A                     __end_of___lwmod:
  6828                           	callstack 0
  6829                           
  6830 ;; *************** function _left *****************
  6831 ;; Defined at:
  6832 ;;		line 677 in file "main.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  pl              2   18[COMRAM] PTR struct GameElement
  6835 ;;		 -> objs(42), 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;Total ram usage:       12 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    2
  6854 ;; This function calls:
  6855 ;;		_CatchFrisbee
  6856 ;; This function is called by:
  6857 ;;		_highIsr
  6858 ;;		_MoveEveryone
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text22
  6863  0027DA                     __ptext22:
  6864                           	callstack 0
  6865  0027DA                     _left:
  6866                           	callstack 22
  6867  0027DA                     
  6868                           ;main.c: 678:     if (pl->x == 1) return;
  6869  0027DA  C013  FFD9         	movff	left@pl,fsr2l
  6870  0027DE  C014  FFDA         	movff	left@pl+1,fsr2h
  6871  0027E2  04DE               	decf	postinc2,w,c
  6872  0027E4  A4D8               	btfss	status,2,c
  6873  0027E6  EFF7  F013         	goto	i2u228_41
  6874  0027EA  EFF9  F013         	goto	i2u228_40
  6875  0027EE                     i2u228_41:
  6876  0027EE  EFFB  F013         	goto	i2l2664
  6877  0027F2                     i2u228_40:
  6878  0027F2  EF80  F015         	goto	i2l443
  6879  0027F6                     i2l2664:
  6880                           
  6881                           ;main.c: 679:     if (display[pl->y-1][pl->x-2] != ((void*)0)) {
  6882  0027F6  EE20 F001          	lfsr	2,1
  6883  0027FA  5013               	movf	left@pl^0,w,c
  6884  0027FC  26D9               	addwf	fsr2l,f,c
  6885  0027FE  5014               	movf	(left@pl+1)^0,w,c
  6886  002800  22DA               	addwfc	fsr2h,f,c
  6887  002802  50DF               	movf	indf2,w,c
  6888  002804  6E15               	movwf	??_left^0,c
  6889  002806  6A16               	clrf	(??_left+1)^0,c
  6890  002808  0E05               	movlw	5
  6891  00280A                     i2u229_45:
  6892  00280A  90D8               	bcf	status,0,c
  6893  00280C  3615               	rlcf	??_left^0,f,c
  6894  00280E  3616               	rlcf	(??_left+1)^0,f,c
  6895  002810  2EE8               	decfsz	wreg,f,c
  6896  002812  EF05  F014         	goto	i2u229_45
  6897  002816  C013  FFD9         	movff	left@pl,fsr2l
  6898  00281A  C014  FFDA         	movff	left@pl+1,fsr2h
  6899  00281E  50DF               	movf	indf2,w,c
  6900  002820  6E17               	movwf	(??_left+2)^0,c
  6901  002822  6A18               	clrf	(??_left+3)^0,c
  6902  002824  90D8               	bcf	status,0,c
  6903  002826  3617               	rlcf	(??_left+2)^0,f,c
  6904  002828  3618               	rlcf	(??_left+3)^0,f,c
  6905  00282A  0EDC               	movlw	220
  6906  00282C  6E19               	movwf	(??_left+4)^0,c
  6907  00282E  0EFF               	movlw	255
  6908  002830  6E1A               	movwf	(??_left+5)^0,c
  6909  002832  0E00               	movlw	low _display
  6910  002834  6E1B               	movwf	(??_left+6)^0,c
  6911  002836  0E01               	movlw	high _display
  6912  002838  6E1C               	movwf	(??_left+7)^0,c
  6913  00283A  5019               	movf	(??_left+4)^0,w,c
  6914  00283C  261B               	addwf	(??_left+6)^0,f,c
  6915  00283E  501A               	movf	(??_left+5)^0,w,c
  6916  002840  221C               	addwfc	(??_left+7)^0,f,c
  6917  002842  5017               	movf	(??_left+2)^0,w,c
  6918  002844  261B               	addwf	(??_left+6)^0,f,c
  6919  002846  5018               	movf	(??_left+3)^0,w,c
  6920  002848  221C               	addwfc	(??_left+7)^0,f,c
  6921  00284A  5015               	movf	??_left^0,w,c
  6922  00284C  241B               	addwf	(??_left+6)^0,w,c
  6923  00284E  6ED9               	movwf	fsr2l,c
  6924  002850  5016               	movf	(??_left+1)^0,w,c
  6925  002852  201C               	addwfc	(??_left+7)^0,w,c
  6926  002854  6EDA               	movwf	fsr2h,c
  6927  002856  50DE               	movf	postinc2,w,c
  6928  002858  10DE               	iorwf	postinc2,w,c
  6929  00285A  B4D8               	btfsc	status,2,c
  6930  00285C  EF32  F014         	goto	i2u230_41
  6931  002860  EF34  F014         	goto	i2u230_40
  6932  002864                     i2u230_41:
  6933  002864  EFF9  F014         	goto	i2l2678
  6934  002868                     i2u230_40:
  6935  002868                     
  6936                           ;main.c: 680:         if (display[pl->y-1][pl->x-2]->type == OT_PLAYERA) return;
  6937  002868  EE20 F001          	lfsr	2,1
  6938  00286C  5013               	movf	left@pl^0,w,c
  6939  00286E  26D9               	addwf	fsr2l,f,c
  6940  002870  5014               	movf	(left@pl+1)^0,w,c
  6941  002872  22DA               	addwfc	fsr2h,f,c
  6942  002874  50DF               	movf	indf2,w,c
  6943  002876  6E15               	movwf	??_left^0,c
  6944  002878  6A16               	clrf	(??_left+1)^0,c
  6945  00287A  0E05               	movlw	5
  6946  00287C                     i2u231_45:
  6947  00287C  90D8               	bcf	status,0,c
  6948  00287E  3615               	rlcf	??_left^0,f,c
  6949  002880  3616               	rlcf	(??_left+1)^0,f,c
  6950  002882  2EE8               	decfsz	wreg,f,c
  6951  002884  EF3E  F014         	goto	i2u231_45
  6952  002888  C013  FFD9         	movff	left@pl,fsr2l
  6953  00288C  C014  FFDA         	movff	left@pl+1,fsr2h
  6954  002890  50DF               	movf	indf2,w,c
  6955  002892  6E17               	movwf	(??_left+2)^0,c
  6956  002894  6A18               	clrf	(??_left+3)^0,c
  6957  002896  90D8               	bcf	status,0,c
  6958  002898  3617               	rlcf	(??_left+2)^0,f,c
  6959  00289A  3618               	rlcf	(??_left+3)^0,f,c
  6960  00289C  0EDC               	movlw	220
  6961  00289E  6E19               	movwf	(??_left+4)^0,c
  6962  0028A0  0EFF               	movlw	255
  6963  0028A2  6E1A               	movwf	(??_left+5)^0,c
  6964  0028A4  0E00               	movlw	low _display
  6965  0028A6  6E1B               	movwf	(??_left+6)^0,c
  6966  0028A8  0E01               	movlw	high _display
  6967  0028AA  6E1C               	movwf	(??_left+7)^0,c
  6968  0028AC  5019               	movf	(??_left+4)^0,w,c
  6969  0028AE  261B               	addwf	(??_left+6)^0,f,c
  6970  0028B0  501A               	movf	(??_left+5)^0,w,c
  6971  0028B2  221C               	addwfc	(??_left+7)^0,f,c
  6972  0028B4  5017               	movf	(??_left+2)^0,w,c
  6973  0028B6  261B               	addwf	(??_left+6)^0,f,c
  6974  0028B8  5018               	movf	(??_left+3)^0,w,c
  6975  0028BA  221C               	addwfc	(??_left+7)^0,f,c
  6976  0028BC  5015               	movf	??_left^0,w,c
  6977  0028BE  241B               	addwf	(??_left+6)^0,w,c
  6978  0028C0  6ED9               	movwf	fsr2l,c
  6979  0028C2  5016               	movf	(??_left+1)^0,w,c
  6980  0028C4  201C               	addwfc	(??_left+7)^0,w,c
  6981  0028C6  6EDA               	movwf	fsr2h,c
  6982  0028C8  EE10 F005          	lfsr	1,5
  6983  0028CC  50DE               	movf	postinc2,w,c
  6984  0028CE  26E1               	addwf	fsr1l,f,c
  6985  0028D0  50DD               	movf	postdec2,w,c
  6986  0028D2  22E2               	addwfc	fsr1h,f,c
  6987  0028D4  50E7               	movf	indf1,w,c
  6988  0028D6  A4D8               	btfss	status,2,c
  6989  0028D8  EF70  F014         	goto	i2u232_41
  6990  0028DC  EF72  F014         	goto	i2u232_40
  6991  0028E0                     i2u232_41:
  6992  0028E0  EF74  F014         	goto	i2l2670
  6993  0028E4                     i2u232_40:
  6994  0028E4  EF80  F015         	goto	i2l443
  6995  0028E8                     i2l2670:
  6996                           
  6997                           ;main.c: 681:         if (display[pl->y-1][pl->x-2]->type == OT_PLAYERB) return;
  6998  0028E8  EE20 F001          	lfsr	2,1
  6999  0028EC  5013               	movf	left@pl^0,w,c
  7000  0028EE  26D9               	addwf	fsr2l,f,c
  7001  0028F0  5014               	movf	(left@pl+1)^0,w,c
  7002  0028F2  22DA               	addwfc	fsr2h,f,c
  7003  0028F4  50DF               	movf	indf2,w,c
  7004  0028F6  6E15               	movwf	??_left^0,c
  7005  0028F8  6A16               	clrf	(??_left+1)^0,c
  7006  0028FA  0E05               	movlw	5
  7007  0028FC                     i2u233_45:
  7008  0028FC  90D8               	bcf	status,0,c
  7009  0028FE  3615               	rlcf	??_left^0,f,c
  7010  002900  3616               	rlcf	(??_left+1)^0,f,c
  7011  002902  2EE8               	decfsz	wreg,f,c
  7012  002904  EF7E  F014         	goto	i2u233_45
  7013  002908  C013  FFD9         	movff	left@pl,fsr2l
  7014  00290C  C014  FFDA         	movff	left@pl+1,fsr2h
  7015  002910  50DF               	movf	indf2,w,c
  7016  002912  6E17               	movwf	(??_left+2)^0,c
  7017  002914  6A18               	clrf	(??_left+3)^0,c
  7018  002916  90D8               	bcf	status,0,c
  7019  002918  3617               	rlcf	(??_left+2)^0,f,c
  7020  00291A  3618               	rlcf	(??_left+3)^0,f,c
  7021  00291C  0EDC               	movlw	220
  7022  00291E  6E19               	movwf	(??_left+4)^0,c
  7023  002920  0EFF               	movlw	255
  7024  002922  6E1A               	movwf	(??_left+5)^0,c
  7025  002924  0E00               	movlw	low _display
  7026  002926  6E1B               	movwf	(??_left+6)^0,c
  7027  002928  0E01               	movlw	high _display
  7028  00292A  6E1C               	movwf	(??_left+7)^0,c
  7029  00292C  5019               	movf	(??_left+4)^0,w,c
  7030  00292E  261B               	addwf	(??_left+6)^0,f,c
  7031  002930  501A               	movf	(??_left+5)^0,w,c
  7032  002932  221C               	addwfc	(??_left+7)^0,f,c
  7033  002934  5017               	movf	(??_left+2)^0,w,c
  7034  002936  261B               	addwf	(??_left+6)^0,f,c
  7035  002938  5018               	movf	(??_left+3)^0,w,c
  7036  00293A  221C               	addwfc	(??_left+7)^0,f,c
  7037  00293C  5015               	movf	??_left^0,w,c
  7038  00293E  241B               	addwf	(??_left+6)^0,w,c
  7039  002940  6ED9               	movwf	fsr2l,c
  7040  002942  5016               	movf	(??_left+1)^0,w,c
  7041  002944  201C               	addwfc	(??_left+7)^0,w,c
  7042  002946  6EDA               	movwf	fsr2h,c
  7043  002948  EE10 F005          	lfsr	1,5
  7044  00294C  50DE               	movf	postinc2,w,c
  7045  00294E  26E1               	addwf	fsr1l,f,c
  7046  002950  50DD               	movf	postdec2,w,c
  7047  002952  22E2               	addwfc	fsr1h,f,c
  7048  002954  04E6               	decf	postinc1,w,c
  7049  002956  A4D8               	btfss	status,2,c
  7050  002958  EFB0  F014         	goto	i2u234_41
  7051  00295C  EFB2  F014         	goto	i2u234_40
  7052  002960                     i2u234_41:
  7053  002960  EFB4  F014         	goto	i2l2674
  7054  002964                     i2u234_40:
  7055  002964  EF80  F015         	goto	i2l443
  7056  002968                     i2l2674:
  7057                           
  7058                           ;main.c: 682:         if (display[pl->y-1][pl->x-2]->type == OT_FRISBEE) {
  7059  002968  EE20 F001          	lfsr	2,1
  7060  00296C  5013               	movf	left@pl^0,w,c
  7061  00296E  26D9               	addwf	fsr2l,f,c
  7062  002970  5014               	movf	(left@pl+1)^0,w,c
  7063  002972  22DA               	addwfc	fsr2h,f,c
  7064  002974  50DF               	movf	indf2,w,c
  7065  002976  6E15               	movwf	??_left^0,c
  7066  002978  6A16               	clrf	(??_left+1)^0,c
  7067  00297A  0E05               	movlw	5
  7068  00297C                     i2u235_45:
  7069  00297C  90D8               	bcf	status,0,c
  7070  00297E  3615               	rlcf	??_left^0,f,c
  7071  002980  3616               	rlcf	(??_left+1)^0,f,c
  7072  002982  2EE8               	decfsz	wreg,f,c
  7073  002984  EFBE  F014         	goto	i2u235_45
  7074  002988  C013  FFD9         	movff	left@pl,fsr2l
  7075  00298C  C014  FFDA         	movff	left@pl+1,fsr2h
  7076  002990  50DF               	movf	indf2,w,c
  7077  002992  6E17               	movwf	(??_left+2)^0,c
  7078  002994  6A18               	clrf	(??_left+3)^0,c
  7079  002996  90D8               	bcf	status,0,c
  7080  002998  3617               	rlcf	(??_left+2)^0,f,c
  7081  00299A  3618               	rlcf	(??_left+3)^0,f,c
  7082  00299C  0EDC               	movlw	220
  7083  00299E  6E19               	movwf	(??_left+4)^0,c
  7084  0029A0  0EFF               	movlw	255
  7085  0029A2  6E1A               	movwf	(??_left+5)^0,c
  7086  0029A4  0E00               	movlw	low _display
  7087  0029A6  6E1B               	movwf	(??_left+6)^0,c
  7088  0029A8  0E01               	movlw	high _display
  7089  0029AA  6E1C               	movwf	(??_left+7)^0,c
  7090  0029AC  5019               	movf	(??_left+4)^0,w,c
  7091  0029AE  261B               	addwf	(??_left+6)^0,f,c
  7092  0029B0  501A               	movf	(??_left+5)^0,w,c
  7093  0029B2  221C               	addwfc	(??_left+7)^0,f,c
  7094  0029B4  5017               	movf	(??_left+2)^0,w,c
  7095  0029B6  261B               	addwf	(??_left+6)^0,f,c
  7096  0029B8  5018               	movf	(??_left+3)^0,w,c
  7097  0029BA  221C               	addwfc	(??_left+7)^0,f,c
  7098  0029BC  5015               	movf	??_left^0,w,c
  7099  0029BE  241B               	addwf	(??_left+6)^0,w,c
  7100  0029C0  6ED9               	movwf	fsr2l,c
  7101  0029C2  5016               	movf	(??_left+1)^0,w,c
  7102  0029C4  201C               	addwfc	(??_left+7)^0,w,c
  7103  0029C6  6EDA               	movwf	fsr2h,c
  7104  0029C8  EE10 F005          	lfsr	1,5
  7105  0029CC  50DE               	movf	postinc2,w,c
  7106  0029CE  26E1               	addwf	fsr1l,f,c
  7107  0029D0  50DD               	movf	postdec2,w,c
  7108  0029D2  22E2               	addwfc	fsr1h,f,c
  7109  0029D4  0E02               	movlw	2
  7110  0029D6  18E6               	xorwf	postinc1,w,c
  7111  0029D8  A4D8               	btfss	status,2,c
  7112  0029DA  EFF1  F014         	goto	i2u236_41
  7113  0029DE  EFF3  F014         	goto	i2u236_40
  7114  0029E2                     i2u236_41:
  7115  0029E2  EFF9  F014         	goto	i2l2678
  7116  0029E6                     i2u236_40:
  7117  0029E6                     
  7118                           ;main.c: 683:             CatchFrisbee(pl);
  7119  0029E6  C013  F007         	movff	left@pl,CatchFrisbee@pl
  7120  0029EA  C014  F008         	movff	left@pl+1,CatchFrisbee@pl+1
  7121  0029EE  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  7122  0029F2                     i2l2678:
  7123                           
  7124                           ;main.c: 686:     display[pl->y-1][pl->x-1] = ((void*)0);
  7125  0029F2  EE20 F001          	lfsr	2,1
  7126  0029F6  5013               	movf	left@pl^0,w,c
  7127  0029F8  26D9               	addwf	fsr2l,f,c
  7128  0029FA  5014               	movf	(left@pl+1)^0,w,c
  7129  0029FC  22DA               	addwfc	fsr2h,f,c
  7130  0029FE  50DF               	movf	indf2,w,c
  7131  002A00  6E15               	movwf	??_left^0,c
  7132  002A02  6A16               	clrf	(??_left+1)^0,c
  7133  002A04  0E05               	movlw	5
  7134  002A06                     i2u237_45:
  7135  002A06  90D8               	bcf	status,0,c
  7136  002A08  3615               	rlcf	??_left^0,f,c
  7137  002A0A  3616               	rlcf	(??_left+1)^0,f,c
  7138  002A0C  2EE8               	decfsz	wreg,f,c
  7139  002A0E  EF03  F015         	goto	i2u237_45
  7140  002A12  C013  FFD9         	movff	left@pl,fsr2l
  7141  002A16  C014  FFDA         	movff	left@pl+1,fsr2h
  7142  002A1A  50DF               	movf	indf2,w,c
  7143  002A1C  6E17               	movwf	(??_left+2)^0,c
  7144  002A1E  6A18               	clrf	(??_left+3)^0,c
  7145  002A20  90D8               	bcf	status,0,c
  7146  002A22  3617               	rlcf	(??_left+2)^0,f,c
  7147  002A24  3618               	rlcf	(??_left+3)^0,f,c
  7148  002A26  0EDE               	movlw	222
  7149  002A28  6E19               	movwf	(??_left+4)^0,c
  7150  002A2A  0EFF               	movlw	255
  7151  002A2C  6E1A               	movwf	(??_left+5)^0,c
  7152  002A2E  0E00               	movlw	low _display
  7153  002A30  6E1B               	movwf	(??_left+6)^0,c
  7154  002A32  0E01               	movlw	high _display
  7155  002A34  6E1C               	movwf	(??_left+7)^0,c
  7156  002A36  5019               	movf	(??_left+4)^0,w,c
  7157  002A38  261B               	addwf	(??_left+6)^0,f,c
  7158  002A3A  501A               	movf	(??_left+5)^0,w,c
  7159  002A3C  221C               	addwfc	(??_left+7)^0,f,c
  7160  002A3E  5017               	movf	(??_left+2)^0,w,c
  7161  002A40  261B               	addwf	(??_left+6)^0,f,c
  7162  002A42  5018               	movf	(??_left+3)^0,w,c
  7163  002A44  221C               	addwfc	(??_left+7)^0,f,c
  7164  002A46  5015               	movf	??_left^0,w,c
  7165  002A48  241B               	addwf	(??_left+6)^0,w,c
  7166  002A4A  6ED9               	movwf	fsr2l,c
  7167  002A4C  5016               	movf	(??_left+1)^0,w,c
  7168  002A4E  201C               	addwfc	(??_left+7)^0,w,c
  7169  002A50  6EDA               	movwf	fsr2h,c
  7170  002A52  0E00               	movlw	0
  7171  002A54  6EDE               	movwf	postinc2,c
  7172  002A56  0E00               	movlw	0
  7173  002A58  6EDD               	movwf	postdec2,c
  7174  002A5A                     
  7175                           ;main.c: 687:     pl->oldX = pl->x;
  7176  002A5A  C013  FFD9         	movff	left@pl,fsr2l
  7177  002A5E  C014  FFDA         	movff	left@pl+1,fsr2h
  7178  002A62  EE10 F002          	lfsr	1,2
  7179  002A66  5013               	movf	left@pl^0,w,c
  7180  002A68  26E1               	addwf	fsr1l,f,c
  7181  002A6A  5014               	movf	(left@pl+1)^0,w,c
  7182  002A6C  22E2               	addwfc	fsr1h,f,c
  7183  002A6E  CFDF FFE7          	movff	indf2,indf1
  7184  002A72                     
  7185                           ;main.c: 688:     pl->oldY = pl->y;
  7186  002A72  EE20 F001          	lfsr	2,1
  7187  002A76  5013               	movf	left@pl^0,w,c
  7188  002A78  26D9               	addwf	fsr2l,f,c
  7189  002A7A  5014               	movf	(left@pl+1)^0,w,c
  7190  002A7C  22DA               	addwfc	fsr2h,f,c
  7191  002A7E  EE10 F003          	lfsr	1,3
  7192  002A82  5013               	movf	left@pl^0,w,c
  7193  002A84  26E1               	addwf	fsr1l,f,c
  7194  002A86  5014               	movf	(left@pl+1)^0,w,c
  7195  002A88  22E2               	addwfc	fsr1h,f,c
  7196  002A8A  CFDF FFE7          	movff	indf2,indf1
  7197  002A8E                     
  7198                           ;main.c: 689:     pl->x--;
  7199  002A8E  C013  FFD9         	movff	left@pl,fsr2l
  7200  002A92  C014  FFDA         	movff	left@pl+1,fsr2h
  7201  002A96  06DF               	decf	indf2,f,c
  7202  002A98                     
  7203                           ;main.c: 690:     display[pl->y-1][pl->x-1] = pl;
  7204  002A98  EE20 F001          	lfsr	2,1
  7205  002A9C  5013               	movf	left@pl^0,w,c
  7206  002A9E  26D9               	addwf	fsr2l,f,c
  7207  002AA0  5014               	movf	(left@pl+1)^0,w,c
  7208  002AA2  22DA               	addwfc	fsr2h,f,c
  7209  002AA4  50DF               	movf	indf2,w,c
  7210  002AA6  6E15               	movwf	??_left^0,c
  7211  002AA8  6A16               	clrf	(??_left+1)^0,c
  7212  002AAA  0E05               	movlw	5
  7213  002AAC                     i2u238_45:
  7214  002AAC  90D8               	bcf	status,0,c
  7215  002AAE  3615               	rlcf	??_left^0,f,c
  7216  002AB0  3616               	rlcf	(??_left+1)^0,f,c
  7217  002AB2  2EE8               	decfsz	wreg,f,c
  7218  002AB4  EF56  F015         	goto	i2u238_45
  7219  002AB8  C013  FFD9         	movff	left@pl,fsr2l
  7220  002ABC  C014  FFDA         	movff	left@pl+1,fsr2h
  7221  002AC0  50DF               	movf	indf2,w,c
  7222  002AC2  6E17               	movwf	(??_left+2)^0,c
  7223  002AC4  6A18               	clrf	(??_left+3)^0,c
  7224  002AC6  90D8               	bcf	status,0,c
  7225  002AC8  3617               	rlcf	(??_left+2)^0,f,c
  7226  002ACA  3618               	rlcf	(??_left+3)^0,f,c
  7227  002ACC  0EDE               	movlw	222
  7228  002ACE  6E19               	movwf	(??_left+4)^0,c
  7229  002AD0  0EFF               	movlw	255
  7230  002AD2  6E1A               	movwf	(??_left+5)^0,c
  7231  002AD4  0E00               	movlw	low _display
  7232  002AD6  6E1B               	movwf	(??_left+6)^0,c
  7233  002AD8  0E01               	movlw	high _display
  7234  002ADA  6E1C               	movwf	(??_left+7)^0,c
  7235  002ADC  5019               	movf	(??_left+4)^0,w,c
  7236  002ADE  261B               	addwf	(??_left+6)^0,f,c
  7237  002AE0  501A               	movf	(??_left+5)^0,w,c
  7238  002AE2  221C               	addwfc	(??_left+7)^0,f,c
  7239  002AE4  5017               	movf	(??_left+2)^0,w,c
  7240  002AE6  261B               	addwf	(??_left+6)^0,f,c
  7241  002AE8  5018               	movf	(??_left+3)^0,w,c
  7242  002AEA  221C               	addwfc	(??_left+7)^0,f,c
  7243  002AEC  5015               	movf	??_left^0,w,c
  7244  002AEE  241B               	addwf	(??_left+6)^0,w,c
  7245  002AF0  6ED9               	movwf	fsr2l,c
  7246  002AF2  5016               	movf	(??_left+1)^0,w,c
  7247  002AF4  201C               	addwfc	(??_left+7)^0,w,c
  7248  002AF6  6EDA               	movwf	fsr2h,c
  7249  002AF8  C013  FFDE         	movff	left@pl,postinc2
  7250  002AFC  C014  FFDD         	movff	left@pl+1,postdec2
  7251  002B00                     i2l443:
  7252  002B00  0012               	return		;funcret
  7253  002B02                     __end_of_left:
  7254                           	callstack 0
  7255                           
  7256 ;; *************** function _downright *****************
  7257 ;; Defined at:
  7258 ;;		line 795 in file "main.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  pl              2   18[COMRAM] PTR struct GameElement
  7261 ;;		 -> objs(42), 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;Total ram usage:       10 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    2
  7280 ;; This function calls:
  7281 ;;		_CatchFrisbee
  7282 ;; This function is called by:
  7283 ;;		_MoveEveryone
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text23
  7288  003442                     __ptext23:
  7289                           	callstack 0
  7290  003442                     _downright:
  7291                           	callstack 21
  7292  003442                     
  7293                           ;main.c: 796:     if (pl->x == 16 || pl->y == 4) return;
  7294  003442  C013  FFD9         	movff	downright@pl,fsr2l
  7295  003446  C014  FFDA         	movff	downright@pl+1,fsr2h
  7296  00344A  0E10               	movlw	16
  7297  00344C  18DE               	xorwf	postinc2,w,c
  7298  00344E  B4D8               	btfsc	status,2,c
  7299  003450  EF2C  F01A         	goto	i2u271_41
  7300  003454  EF2E  F01A         	goto	i2u271_40
  7301  003458                     i2u271_41:
  7302  003458  EF9B  F01B         	goto	i2l507
  7303  00345C                     i2u271_40:
  7304  00345C  EE20 F001          	lfsr	2,1
  7305  003460  5013               	movf	downright@pl^0,w,c
  7306  003462  26D9               	addwf	fsr2l,f,c
  7307  003464  5014               	movf	(downright@pl+1)^0,w,c
  7308  003466  22DA               	addwfc	fsr2h,f,c
  7309  003468  0E04               	movlw	4
  7310  00346A  18DE               	xorwf	postinc2,w,c
  7311  00346C  A4D8               	btfss	status,2,c
  7312  00346E  EF3B  F01A         	goto	i2u272_41
  7313  003472  EF3D  F01A         	goto	i2u272_40
  7314  003476                     i2u272_41:
  7315  003476  EF3F  F01A         	goto	i2l2790
  7316  00347A                     i2u272_40:
  7317  00347A  EF9B  F01B         	goto	i2l507
  7318  00347E                     i2l2790:
  7319                           
  7320                           ;main.c: 797:     if (display[pl->y][pl->x] != ((void*)0)) {
  7321  00347E  C013  FFD9         	movff	downright@pl,fsr2l
  7322  003482  C014  FFDA         	movff	downright@pl+1,fsr2h
  7323  003486  50DF               	movf	indf2,w,c
  7324  003488  6E15               	movwf	??_downright^0,c
  7325  00348A  5015               	movf	??_downright^0,w,c
  7326  00348C  0D02               	mullw	2
  7327  00348E  CFF3 F016          	movff	prodl,??_downright+1
  7328  003492  CFF4 F017          	movff	prodh,??_downright+2
  7329  003496  EE20 F001          	lfsr	2,1
  7330  00349A  5013               	movf	downright@pl^0,w,c
  7331  00349C  26D9               	addwf	fsr2l,f,c
  7332  00349E  5014               	movf	(downright@pl+1)^0,w,c
  7333  0034A0  22DA               	addwfc	fsr2h,f,c
  7334  0034A2  50DF               	movf	indf2,w,c
  7335  0034A4  6E18               	movwf	(??_downright+3)^0,c
  7336  0034A6  5018               	movf	(??_downright+3)^0,w,c
  7337  0034A8  0D20               	mullw	32
  7338  0034AA  0E00               	movlw	low _display
  7339  0034AC  6E19               	movwf	(??_downright+4)^0,c
  7340  0034AE  0E01               	movlw	high _display
  7341  0034B0  6E1A               	movwf	(??_downright+5)^0,c
  7342  0034B2  50F3               	movf	243,w,c
  7343  0034B4  2619               	addwf	(??_downright+4)^0,f,c
  7344  0034B6  50F4               	movf	244,w,c
  7345  0034B8  221A               	addwfc	(??_downright+5)^0,f,c
  7346  0034BA  5016               	movf	(??_downright+1)^0,w,c
  7347  0034BC  2419               	addwf	(??_downright+4)^0,w,c
  7348  0034BE  6ED9               	movwf	fsr2l,c
  7349  0034C0  5017               	movf	(??_downright+2)^0,w,c
  7350  0034C2  201A               	addwfc	(??_downright+5)^0,w,c
  7351  0034C4  6EDA               	movwf	fsr2h,c
  7352  0034C6  50DE               	movf	postinc2,w,c
  7353  0034C8  10DE               	iorwf	postinc2,w,c
  7354  0034CA  B4D8               	btfsc	status,2,c
  7355  0034CC  EF6A  F01A         	goto	i2u273_41
  7356  0034D0  EF6C  F01A         	goto	i2u273_40
  7357  0034D4                     i2u273_41:
  7358  0034D4  EF0D  F01B         	goto	i2l2804
  7359  0034D8                     i2u273_40:
  7360  0034D8                     
  7361                           ;main.c: 798:         if (display[pl->y][pl->x]->type == OT_PLAYERA) return;
  7362  0034D8  C013  FFD9         	movff	downright@pl,fsr2l
  7363  0034DC  C014  FFDA         	movff	downright@pl+1,fsr2h
  7364  0034E0  50DF               	movf	indf2,w,c
  7365  0034E2  6E15               	movwf	??_downright^0,c
  7366  0034E4  5015               	movf	??_downright^0,w,c
  7367  0034E6  0D02               	mullw	2
  7368  0034E8  CFF3 F016          	movff	prodl,??_downright+1
  7369  0034EC  CFF4 F017          	movff	prodh,??_downright+2
  7370  0034F0  EE20 F001          	lfsr	2,1
  7371  0034F4  5013               	movf	downright@pl^0,w,c
  7372  0034F6  26D9               	addwf	fsr2l,f,c
  7373  0034F8  5014               	movf	(downright@pl+1)^0,w,c
  7374  0034FA  22DA               	addwfc	fsr2h,f,c
  7375  0034FC  50DF               	movf	indf2,w,c
  7376  0034FE  6E18               	movwf	(??_downright+3)^0,c
  7377  003500  5018               	movf	(??_downright+3)^0,w,c
  7378  003502  0D20               	mullw	32
  7379  003504  0E00               	movlw	low _display
  7380  003506  6E19               	movwf	(??_downright+4)^0,c
  7381  003508  0E01               	movlw	high _display
  7382  00350A  6E1A               	movwf	(??_downright+5)^0,c
  7383  00350C  50F3               	movf	243,w,c
  7384  00350E  2619               	addwf	(??_downright+4)^0,f,c
  7385  003510  50F4               	movf	244,w,c
  7386  003512  221A               	addwfc	(??_downright+5)^0,f,c
  7387  003514  5016               	movf	(??_downright+1)^0,w,c
  7388  003516  2419               	addwf	(??_downright+4)^0,w,c
  7389  003518  6ED9               	movwf	fsr2l,c
  7390  00351A  5017               	movf	(??_downright+2)^0,w,c
  7391  00351C  201A               	addwfc	(??_downright+5)^0,w,c
  7392  00351E  6EDA               	movwf	fsr2h,c
  7393  003520  EE10 F005          	lfsr	1,5
  7394  003524  50DE               	movf	postinc2,w,c
  7395  003526  26E1               	addwf	fsr1l,f,c
  7396  003528  50DD               	movf	postdec2,w,c
  7397  00352A  22E2               	addwfc	fsr1h,f,c
  7398  00352C  50E7               	movf	indf1,w,c
  7399  00352E  A4D8               	btfss	status,2,c
  7400  003530  EF9C  F01A         	goto	i2u274_41
  7401  003534  EF9E  F01A         	goto	i2u274_40
  7402  003538                     i2u274_41:
  7403  003538  EFA0  F01A         	goto	i2l2796
  7404  00353C                     i2u274_40:
  7405  00353C  EF9B  F01B         	goto	i2l507
  7406  003540                     i2l2796:
  7407                           
  7408                           ;main.c: 799:         if (display[pl->y][pl->x]->type == OT_PLAYERB) return;
  7409  003540  C013  FFD9         	movff	downright@pl,fsr2l
  7410  003544  C014  FFDA         	movff	downright@pl+1,fsr2h
  7411  003548  50DF               	movf	indf2,w,c
  7412  00354A  6E15               	movwf	??_downright^0,c
  7413  00354C  5015               	movf	??_downright^0,w,c
  7414  00354E  0D02               	mullw	2
  7415  003550  CFF3 F016          	movff	prodl,??_downright+1
  7416  003554  CFF4 F017          	movff	prodh,??_downright+2
  7417  003558  EE20 F001          	lfsr	2,1
  7418  00355C  5013               	movf	downright@pl^0,w,c
  7419  00355E  26D9               	addwf	fsr2l,f,c
  7420  003560  5014               	movf	(downright@pl+1)^0,w,c
  7421  003562  22DA               	addwfc	fsr2h,f,c
  7422  003564  50DF               	movf	indf2,w,c
  7423  003566  6E18               	movwf	(??_downright+3)^0,c
  7424  003568  5018               	movf	(??_downright+3)^0,w,c
  7425  00356A  0D20               	mullw	32
  7426  00356C  0E00               	movlw	low _display
  7427  00356E  6E19               	movwf	(??_downright+4)^0,c
  7428  003570  0E01               	movlw	high _display
  7429  003572  6E1A               	movwf	(??_downright+5)^0,c
  7430  003574  50F3               	movf	243,w,c
  7431  003576  2619               	addwf	(??_downright+4)^0,f,c
  7432  003578  50F4               	movf	244,w,c
  7433  00357A  221A               	addwfc	(??_downright+5)^0,f,c
  7434  00357C  5016               	movf	(??_downright+1)^0,w,c
  7435  00357E  2419               	addwf	(??_downright+4)^0,w,c
  7436  003580  6ED9               	movwf	fsr2l,c
  7437  003582  5017               	movf	(??_downright+2)^0,w,c
  7438  003584  201A               	addwfc	(??_downright+5)^0,w,c
  7439  003586  6EDA               	movwf	fsr2h,c
  7440  003588  EE10 F005          	lfsr	1,5
  7441  00358C  50DE               	movf	postinc2,w,c
  7442  00358E  26E1               	addwf	fsr1l,f,c
  7443  003590  50DD               	movf	postdec2,w,c
  7444  003592  22E2               	addwfc	fsr1h,f,c
  7445  003594  04E6               	decf	postinc1,w,c
  7446  003596  A4D8               	btfss	status,2,c
  7447  003598  EFD0  F01A         	goto	i2u275_41
  7448  00359C  EFD2  F01A         	goto	i2u275_40
  7449  0035A0                     i2u275_41:
  7450  0035A0  EFD4  F01A         	goto	i2l2800
  7451  0035A4                     i2u275_40:
  7452  0035A4  EF9B  F01B         	goto	i2l507
  7453  0035A8                     i2l2800:
  7454                           
  7455                           ;main.c: 800:         if (display[pl->y][pl->x]->type == OT_FRISBEE) {
  7456  0035A8  C013  FFD9         	movff	downright@pl,fsr2l
  7457  0035AC  C014  FFDA         	movff	downright@pl+1,fsr2h
  7458  0035B0  50DF               	movf	indf2,w,c
  7459  0035B2  6E15               	movwf	??_downright^0,c
  7460  0035B4  5015               	movf	??_downright^0,w,c
  7461  0035B6  0D02               	mullw	2
  7462  0035B8  CFF3 F016          	movff	prodl,??_downright+1
  7463  0035BC  CFF4 F017          	movff	prodh,??_downright+2
  7464  0035C0  EE20 F001          	lfsr	2,1
  7465  0035C4  5013               	movf	downright@pl^0,w,c
  7466  0035C6  26D9               	addwf	fsr2l,f,c
  7467  0035C8  5014               	movf	(downright@pl+1)^0,w,c
  7468  0035CA  22DA               	addwfc	fsr2h,f,c
  7469  0035CC  50DF               	movf	indf2,w,c
  7470  0035CE  6E18               	movwf	(??_downright+3)^0,c
  7471  0035D0  5018               	movf	(??_downright+3)^0,w,c
  7472  0035D2  0D20               	mullw	32
  7473  0035D4  0E00               	movlw	low _display
  7474  0035D6  6E19               	movwf	(??_downright+4)^0,c
  7475  0035D8  0E01               	movlw	high _display
  7476  0035DA  6E1A               	movwf	(??_downright+5)^0,c
  7477  0035DC  50F3               	movf	243,w,c
  7478  0035DE  2619               	addwf	(??_downright+4)^0,f,c
  7479  0035E0  50F4               	movf	244,w,c
  7480  0035E2  221A               	addwfc	(??_downright+5)^0,f,c
  7481  0035E4  5016               	movf	(??_downright+1)^0,w,c
  7482  0035E6  2419               	addwf	(??_downright+4)^0,w,c
  7483  0035E8  6ED9               	movwf	fsr2l,c
  7484  0035EA  5017               	movf	(??_downright+2)^0,w,c
  7485  0035EC  201A               	addwfc	(??_downright+5)^0,w,c
  7486  0035EE  6EDA               	movwf	fsr2h,c
  7487  0035F0  EE10 F005          	lfsr	1,5
  7488  0035F4  50DE               	movf	postinc2,w,c
  7489  0035F6  26E1               	addwf	fsr1l,f,c
  7490  0035F8  50DD               	movf	postdec2,w,c
  7491  0035FA  22E2               	addwfc	fsr1h,f,c
  7492  0035FC  0E02               	movlw	2
  7493  0035FE  18E6               	xorwf	postinc1,w,c
  7494  003600  A4D8               	btfss	status,2,c
  7495  003602  EF05  F01B         	goto	i2u276_41
  7496  003606  EF07  F01B         	goto	i2u276_40
  7497  00360A                     i2u276_41:
  7498  00360A  EF0D  F01B         	goto	i2l2804
  7499  00360E                     i2u276_40:
  7500  00360E                     
  7501                           ;main.c: 801:             CatchFrisbee(pl);
  7502  00360E  C013  F007         	movff	downright@pl,CatchFrisbee@pl
  7503  003612  C014  F008         	movff	downright@pl+1,CatchFrisbee@pl+1
  7504  003616  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  7505  00361A                     i2l2804:
  7506                           
  7507                           ;main.c: 804:     display[pl->y-1][pl->x-1] = ((void*)0);
  7508  00361A  EE20 F001          	lfsr	2,1
  7509  00361E  5013               	movf	downright@pl^0,w,c
  7510  003620  26D9               	addwf	fsr2l,f,c
  7511  003622  5014               	movf	(downright@pl+1)^0,w,c
  7512  003624  22DA               	addwfc	fsr2h,f,c
  7513  003626  50DF               	movf	indf2,w,c
  7514  003628  6E15               	movwf	??_downright^0,c
  7515  00362A  6A16               	clrf	(??_downright+1)^0,c
  7516  00362C  0E05               	movlw	5
  7517  00362E                     i2u277_45:
  7518  00362E  90D8               	bcf	status,0,c
  7519  003630  3615               	rlcf	??_downright^0,f,c
  7520  003632  3616               	rlcf	(??_downright+1)^0,f,c
  7521  003634  2EE8               	decfsz	wreg,f,c
  7522  003636  EF17  F01B         	goto	i2u277_45
  7523  00363A  C013  FFD9         	movff	downright@pl,fsr2l
  7524  00363E  C014  FFDA         	movff	downright@pl+1,fsr2h
  7525  003642  50DF               	movf	indf2,w,c
  7526  003644  6E17               	movwf	(??_downright+2)^0,c
  7527  003646  6A18               	clrf	(??_downright+3)^0,c
  7528  003648  90D8               	bcf	status,0,c
  7529  00364A  3617               	rlcf	(??_downright+2)^0,f,c
  7530  00364C  3618               	rlcf	(??_downright+3)^0,f,c
  7531  00364E  0EDE               	movlw	222
  7532  003650  6E19               	movwf	(??_downright+4)^0,c
  7533  003652  0EFF               	movlw	255
  7534  003654  6E1A               	movwf	(??_downright+5)^0,c
  7535  003656  0E00               	movlw	low _display
  7536  003658  6E1B               	movwf	(??_downright+6)^0,c
  7537  00365A  0E01               	movlw	high _display
  7538  00365C  6E1C               	movwf	(??_downright+7)^0,c
  7539  00365E  5019               	movf	(??_downright+4)^0,w,c
  7540  003660  261B               	addwf	(??_downright+6)^0,f,c
  7541  003662  501A               	movf	(??_downright+5)^0,w,c
  7542  003664  221C               	addwfc	(??_downright+7)^0,f,c
  7543  003666  5017               	movf	(??_downright+2)^0,w,c
  7544  003668  261B               	addwf	(??_downright+6)^0,f,c
  7545  00366A  5018               	movf	(??_downright+3)^0,w,c
  7546  00366C  221C               	addwfc	(??_downright+7)^0,f,c
  7547  00366E  5015               	movf	??_downright^0,w,c
  7548  003670  241B               	addwf	(??_downright+6)^0,w,c
  7549  003672  6ED9               	movwf	fsr2l,c
  7550  003674  5016               	movf	(??_downright+1)^0,w,c
  7551  003676  201C               	addwfc	(??_downright+7)^0,w,c
  7552  003678  6EDA               	movwf	fsr2h,c
  7553  00367A  0E00               	movlw	0
  7554  00367C  6EDE               	movwf	postinc2,c
  7555  00367E  0E00               	movlw	0
  7556  003680  6EDD               	movwf	postdec2,c
  7557  003682                     
  7558                           ;main.c: 805:     pl->oldX = pl->x;
  7559  003682  C013  FFD9         	movff	downright@pl,fsr2l
  7560  003686  C014  FFDA         	movff	downright@pl+1,fsr2h
  7561  00368A  EE10 F002          	lfsr	1,2
  7562  00368E  5013               	movf	downright@pl^0,w,c
  7563  003690  26E1               	addwf	fsr1l,f,c
  7564  003692  5014               	movf	(downright@pl+1)^0,w,c
  7565  003694  22E2               	addwfc	fsr1h,f,c
  7566  003696  CFDF FFE7          	movff	indf2,indf1
  7567  00369A                     
  7568                           ;main.c: 806:     pl->oldY = pl->y;
  7569  00369A  EE20 F001          	lfsr	2,1
  7570  00369E  5013               	movf	downright@pl^0,w,c
  7571  0036A0  26D9               	addwf	fsr2l,f,c
  7572  0036A2  5014               	movf	(downright@pl+1)^0,w,c
  7573  0036A4  22DA               	addwfc	fsr2h,f,c
  7574  0036A6  EE10 F003          	lfsr	1,3
  7575  0036AA  5013               	movf	downright@pl^0,w,c
  7576  0036AC  26E1               	addwf	fsr1l,f,c
  7577  0036AE  5014               	movf	(downright@pl+1)^0,w,c
  7578  0036B0  22E2               	addwfc	fsr1h,f,c
  7579  0036B2  CFDF FFE7          	movff	indf2,indf1
  7580  0036B6                     
  7581                           ;main.c: 807:     pl->x++;
  7582  0036B6  C013  FFD9         	movff	downright@pl,fsr2l
  7583  0036BA  C014  FFDA         	movff	downright@pl+1,fsr2h
  7584  0036BE  2ADF               	incf	indf2,f,c
  7585  0036C0                     
  7586                           ;main.c: 808:     pl->y++;
  7587  0036C0  EE20 F001          	lfsr	2,1
  7588  0036C4  5013               	movf	downright@pl^0,w,c
  7589  0036C6  26D9               	addwf	fsr2l,f,c
  7590  0036C8  5014               	movf	(downright@pl+1)^0,w,c
  7591  0036CA  22DA               	addwfc	fsr2h,f,c
  7592  0036CC  2ADF               	incf	indf2,f,c
  7593  0036CE                     
  7594                           ;main.c: 809:     display[pl->y-1][pl->x-1] = pl;
  7595  0036CE  EE20 F001          	lfsr	2,1
  7596  0036D2  5013               	movf	downright@pl^0,w,c
  7597  0036D4  26D9               	addwf	fsr2l,f,c
  7598  0036D6  5014               	movf	(downright@pl+1)^0,w,c
  7599  0036D8  22DA               	addwfc	fsr2h,f,c
  7600  0036DA  50DF               	movf	indf2,w,c
  7601  0036DC  6E15               	movwf	??_downright^0,c
  7602  0036DE  6A16               	clrf	(??_downright+1)^0,c
  7603  0036E0  0E05               	movlw	5
  7604  0036E2                     i2u278_45:
  7605  0036E2  90D8               	bcf	status,0,c
  7606  0036E4  3615               	rlcf	??_downright^0,f,c
  7607  0036E6  3616               	rlcf	(??_downright+1)^0,f,c
  7608  0036E8  2EE8               	decfsz	wreg,f,c
  7609  0036EA  EF71  F01B         	goto	i2u278_45
  7610  0036EE  C013  FFD9         	movff	downright@pl,fsr2l
  7611  0036F2  C014  FFDA         	movff	downright@pl+1,fsr2h
  7612  0036F6  50DF               	movf	indf2,w,c
  7613  0036F8  6E17               	movwf	(??_downright+2)^0,c
  7614  0036FA  6A18               	clrf	(??_downright+3)^0,c
  7615  0036FC  90D8               	bcf	status,0,c
  7616  0036FE  3617               	rlcf	(??_downright+2)^0,f,c
  7617  003700  3618               	rlcf	(??_downright+3)^0,f,c
  7618  003702  0EDE               	movlw	222
  7619  003704  6E19               	movwf	(??_downright+4)^0,c
  7620  003706  0EFF               	movlw	255
  7621  003708  6E1A               	movwf	(??_downright+5)^0,c
  7622  00370A  0E00               	movlw	low _display
  7623  00370C  6E1B               	movwf	(??_downright+6)^0,c
  7624  00370E  0E01               	movlw	high _display
  7625  003710  6E1C               	movwf	(??_downright+7)^0,c
  7626  003712  5019               	movf	(??_downright+4)^0,w,c
  7627  003714  261B               	addwf	(??_downright+6)^0,f,c
  7628  003716  501A               	movf	(??_downright+5)^0,w,c
  7629  003718  221C               	addwfc	(??_downright+7)^0,f,c
  7630  00371A  5017               	movf	(??_downright+2)^0,w,c
  7631  00371C  261B               	addwf	(??_downright+6)^0,f,c
  7632  00371E  5018               	movf	(??_downright+3)^0,w,c
  7633  003720  221C               	addwfc	(??_downright+7)^0,f,c
  7634  003722  5015               	movf	??_downright^0,w,c
  7635  003724  241B               	addwf	(??_downright+6)^0,w,c
  7636  003726  6ED9               	movwf	fsr2l,c
  7637  003728  5016               	movf	(??_downright+1)^0,w,c
  7638  00372A  201C               	addwfc	(??_downright+7)^0,w,c
  7639  00372C  6EDA               	movwf	fsr2h,c
  7640  00372E  C013  FFDE         	movff	downright@pl,postinc2
  7641  003732  C014  FFDD         	movff	downright@pl+1,postdec2
  7642  003736                     i2l507:
  7643  003736  0012               	return		;funcret
  7644  003738                     __end_of_downright:
  7645                           	callstack 0
  7646                           
  7647 ;; *************** function _downleft *****************
  7648 ;; Defined at:
  7649 ;;		line 778 in file "main.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  pl              2   18[COMRAM] PTR struct GameElement
  7652 ;;		 -> objs(42), 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;Total ram usage:       11 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    2
  7671 ;; This function calls:
  7672 ;;		_CatchFrisbee
  7673 ;; This function is called by:
  7674 ;;		_MoveEveryone
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text24
  7679  002B02                     __ptext24:
  7680                           	callstack 0
  7681  002B02                     _downleft:
  7682                           	callstack 21
  7683  002B02                     
  7684                           ;main.c: 779:     if (pl->x == 1 || pl->y == 4) return;
  7685  002B02  C013  FFD9         	movff	downleft@pl,fsr2l
  7686  002B06  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7687  002B0A  04DE               	decf	postinc2,w,c
  7688  002B0C  B4D8               	btfsc	status,2,c
  7689  002B0E  EF8B  F015         	goto	i2u263_41
  7690  002B12  EF8D  F015         	goto	i2u263_40
  7691  002B16                     i2u263_41:
  7692  002B16  EF12  F017         	goto	i2l497
  7693  002B1A                     i2u263_40:
  7694  002B1A  EE20 F001          	lfsr	2,1
  7695  002B1E  5013               	movf	downleft@pl^0,w,c
  7696  002B20  26D9               	addwf	fsr2l,f,c
  7697  002B22  5014               	movf	(downleft@pl+1)^0,w,c
  7698  002B24  22DA               	addwfc	fsr2h,f,c
  7699  002B26  0E04               	movlw	4
  7700  002B28  18DE               	xorwf	postinc2,w,c
  7701  002B2A  A4D8               	btfss	status,2,c
  7702  002B2C  EF9A  F015         	goto	i2u264_41
  7703  002B30  EF9C  F015         	goto	i2u264_40
  7704  002B34                     i2u264_41:
  7705  002B34  EF9E  F015         	goto	i2l2758
  7706  002B38                     i2u264_40:
  7707  002B38  EF12  F017         	goto	i2l497
  7708  002B3C                     i2l2758:
  7709                           
  7710                           ;main.c: 780:     if (display[pl->y][pl->x-2] != ((void*)0)) {
  7711  002B3C  C013  FFD9         	movff	downleft@pl,fsr2l
  7712  002B40  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7713  002B44  50DF               	movf	indf2,w,c
  7714  002B46  6E15               	movwf	??_downleft^0,c
  7715  002B48  6A16               	clrf	(??_downleft+1)^0,c
  7716  002B4A  90D8               	bcf	status,0,c
  7717  002B4C  3615               	rlcf	??_downleft^0,f,c
  7718  002B4E  3616               	rlcf	(??_downleft+1)^0,f,c
  7719  002B50  EE20 F001          	lfsr	2,1
  7720  002B54  5013               	movf	downleft@pl^0,w,c
  7721  002B56  26D9               	addwf	fsr2l,f,c
  7722  002B58  5014               	movf	(downleft@pl+1)^0,w,c
  7723  002B5A  22DA               	addwfc	fsr2h,f,c
  7724  002B5C  50DF               	movf	indf2,w,c
  7725  002B5E  6E17               	movwf	(??_downleft+2)^0,c
  7726  002B60  5017               	movf	(??_downleft+2)^0,w,c
  7727  002B62  0D20               	mullw	32
  7728  002B64  0EFC               	movlw	252
  7729  002B66  6E18               	movwf	(??_downleft+3)^0,c
  7730  002B68  0EFF               	movlw	255
  7731  002B6A  6E19               	movwf	(??_downleft+4)^0,c
  7732  002B6C  0E00               	movlw	low _display
  7733  002B6E  6E1A               	movwf	(??_downleft+5)^0,c
  7734  002B70  0E01               	movlw	high _display
  7735  002B72  6E1B               	movwf	(??_downleft+6)^0,c
  7736  002B74  5018               	movf	(??_downleft+3)^0,w,c
  7737  002B76  261A               	addwf	(??_downleft+5)^0,f,c
  7738  002B78  5019               	movf	(??_downleft+4)^0,w,c
  7739  002B7A  221B               	addwfc	(??_downleft+6)^0,f,c
  7740  002B7C  50F3               	movf	243,w,c
  7741  002B7E  261A               	addwf	(??_downleft+5)^0,f,c
  7742  002B80  50F4               	movf	244,w,c
  7743  002B82  221B               	addwfc	(??_downleft+6)^0,f,c
  7744  002B84  5015               	movf	??_downleft^0,w,c
  7745  002B86  241A               	addwf	(??_downleft+5)^0,w,c
  7746  002B88  6ED9               	movwf	fsr2l,c
  7747  002B8A  5016               	movf	(??_downleft+1)^0,w,c
  7748  002B8C  201B               	addwfc	(??_downleft+6)^0,w,c
  7749  002B8E  6EDA               	movwf	fsr2h,c
  7750  002B90  50DE               	movf	postinc2,w,c
  7751  002B92  10DE               	iorwf	postinc2,w,c
  7752  002B94  B4D8               	btfsc	status,2,c
  7753  002B96  EFCF  F015         	goto	i2u265_41
  7754  002B9A  EFD1  F015         	goto	i2u265_40
  7755  002B9E                     i2u265_41:
  7756  002B9E  EF84  F016         	goto	i2l2772
  7757  002BA2                     i2u265_40:
  7758  002BA2                     
  7759                           ;main.c: 781:         if (display[pl->y][pl->x-2]->type == OT_PLAYERA) return;
  7760  002BA2  C013  FFD9         	movff	downleft@pl,fsr2l
  7761  002BA6  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7762  002BAA  50DF               	movf	indf2,w,c
  7763  002BAC  6E15               	movwf	??_downleft^0,c
  7764  002BAE  6A16               	clrf	(??_downleft+1)^0,c
  7765  002BB0  90D8               	bcf	status,0,c
  7766  002BB2  3615               	rlcf	??_downleft^0,f,c
  7767  002BB4  3616               	rlcf	(??_downleft+1)^0,f,c
  7768  002BB6  EE20 F001          	lfsr	2,1
  7769  002BBA  5013               	movf	downleft@pl^0,w,c
  7770  002BBC  26D9               	addwf	fsr2l,f,c
  7771  002BBE  5014               	movf	(downleft@pl+1)^0,w,c
  7772  002BC0  22DA               	addwfc	fsr2h,f,c
  7773  002BC2  50DF               	movf	indf2,w,c
  7774  002BC4  6E17               	movwf	(??_downleft+2)^0,c
  7775  002BC6  5017               	movf	(??_downleft+2)^0,w,c
  7776  002BC8  0D20               	mullw	32
  7777  002BCA  0EFC               	movlw	252
  7778  002BCC  6E18               	movwf	(??_downleft+3)^0,c
  7779  002BCE  0EFF               	movlw	255
  7780  002BD0  6E19               	movwf	(??_downleft+4)^0,c
  7781  002BD2  0E00               	movlw	low _display
  7782  002BD4  6E1A               	movwf	(??_downleft+5)^0,c
  7783  002BD6  0E01               	movlw	high _display
  7784  002BD8  6E1B               	movwf	(??_downleft+6)^0,c
  7785  002BDA  5018               	movf	(??_downleft+3)^0,w,c
  7786  002BDC  261A               	addwf	(??_downleft+5)^0,f,c
  7787  002BDE  5019               	movf	(??_downleft+4)^0,w,c
  7788  002BE0  221B               	addwfc	(??_downleft+6)^0,f,c
  7789  002BE2  50F3               	movf	243,w,c
  7790  002BE4  261A               	addwf	(??_downleft+5)^0,f,c
  7791  002BE6  50F4               	movf	244,w,c
  7792  002BE8  221B               	addwfc	(??_downleft+6)^0,f,c
  7793  002BEA  5015               	movf	??_downleft^0,w,c
  7794  002BEC  241A               	addwf	(??_downleft+5)^0,w,c
  7795  002BEE  6ED9               	movwf	fsr2l,c
  7796  002BF0  5016               	movf	(??_downleft+1)^0,w,c
  7797  002BF2  201B               	addwfc	(??_downleft+6)^0,w,c
  7798  002BF4  6EDA               	movwf	fsr2h,c
  7799  002BF6  EE10 F005          	lfsr	1,5
  7800  002BFA  50DE               	movf	postinc2,w,c
  7801  002BFC  26E1               	addwf	fsr1l,f,c
  7802  002BFE  50DD               	movf	postdec2,w,c
  7803  002C00  22E2               	addwfc	fsr1h,f,c
  7804  002C02  50E7               	movf	indf1,w,c
  7805  002C04  A4D8               	btfss	status,2,c
  7806  002C06  EF07  F016         	goto	i2u266_41
  7807  002C0A  EF09  F016         	goto	i2u266_40
  7808  002C0E                     i2u266_41:
  7809  002C0E  EF0B  F016         	goto	i2l2764
  7810  002C12                     i2u266_40:
  7811  002C12  EF12  F017         	goto	i2l497
  7812  002C16                     i2l2764:
  7813                           
  7814                           ;main.c: 782:         if (display[pl->y][pl->x-2]->type == OT_PLAYERB) return;
  7815  002C16  C013  FFD9         	movff	downleft@pl,fsr2l
  7816  002C1A  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7817  002C1E  50DF               	movf	indf2,w,c
  7818  002C20  6E15               	movwf	??_downleft^0,c
  7819  002C22  6A16               	clrf	(??_downleft+1)^0,c
  7820  002C24  90D8               	bcf	status,0,c
  7821  002C26  3615               	rlcf	??_downleft^0,f,c
  7822  002C28  3616               	rlcf	(??_downleft+1)^0,f,c
  7823  002C2A  EE20 F001          	lfsr	2,1
  7824  002C2E  5013               	movf	downleft@pl^0,w,c
  7825  002C30  26D9               	addwf	fsr2l,f,c
  7826  002C32  5014               	movf	(downleft@pl+1)^0,w,c
  7827  002C34  22DA               	addwfc	fsr2h,f,c
  7828  002C36  50DF               	movf	indf2,w,c
  7829  002C38  6E17               	movwf	(??_downleft+2)^0,c
  7830  002C3A  5017               	movf	(??_downleft+2)^0,w,c
  7831  002C3C  0D20               	mullw	32
  7832  002C3E  0EFC               	movlw	252
  7833  002C40  6E18               	movwf	(??_downleft+3)^0,c
  7834  002C42  0EFF               	movlw	255
  7835  002C44  6E19               	movwf	(??_downleft+4)^0,c
  7836  002C46  0E00               	movlw	low _display
  7837  002C48  6E1A               	movwf	(??_downleft+5)^0,c
  7838  002C4A  0E01               	movlw	high _display
  7839  002C4C  6E1B               	movwf	(??_downleft+6)^0,c
  7840  002C4E  5018               	movf	(??_downleft+3)^0,w,c
  7841  002C50  261A               	addwf	(??_downleft+5)^0,f,c
  7842  002C52  5019               	movf	(??_downleft+4)^0,w,c
  7843  002C54  221B               	addwfc	(??_downleft+6)^0,f,c
  7844  002C56  50F3               	movf	243,w,c
  7845  002C58  261A               	addwf	(??_downleft+5)^0,f,c
  7846  002C5A  50F4               	movf	244,w,c
  7847  002C5C  221B               	addwfc	(??_downleft+6)^0,f,c
  7848  002C5E  5015               	movf	??_downleft^0,w,c
  7849  002C60  241A               	addwf	(??_downleft+5)^0,w,c
  7850  002C62  6ED9               	movwf	fsr2l,c
  7851  002C64  5016               	movf	(??_downleft+1)^0,w,c
  7852  002C66  201B               	addwfc	(??_downleft+6)^0,w,c
  7853  002C68  6EDA               	movwf	fsr2h,c
  7854  002C6A  EE10 F005          	lfsr	1,5
  7855  002C6E  50DE               	movf	postinc2,w,c
  7856  002C70  26E1               	addwf	fsr1l,f,c
  7857  002C72  50DD               	movf	postdec2,w,c
  7858  002C74  22E2               	addwfc	fsr1h,f,c
  7859  002C76  04E6               	decf	postinc1,w,c
  7860  002C78  A4D8               	btfss	status,2,c
  7861  002C7A  EF41  F016         	goto	i2u267_41
  7862  002C7E  EF43  F016         	goto	i2u267_40
  7863  002C82                     i2u267_41:
  7864  002C82  EF45  F016         	goto	i2l2768
  7865  002C86                     i2u267_40:
  7866  002C86  EF12  F017         	goto	i2l497
  7867  002C8A                     i2l2768:
  7868                           
  7869                           ;main.c: 783:         if (display[pl->y][pl->x-2]->type == OT_FRISBEE) {
  7870  002C8A  C013  FFD9         	movff	downleft@pl,fsr2l
  7871  002C8E  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7872  002C92  50DF               	movf	indf2,w,c
  7873  002C94  6E15               	movwf	??_downleft^0,c
  7874  002C96  6A16               	clrf	(??_downleft+1)^0,c
  7875  002C98  90D8               	bcf	status,0,c
  7876  002C9A  3615               	rlcf	??_downleft^0,f,c
  7877  002C9C  3616               	rlcf	(??_downleft+1)^0,f,c
  7878  002C9E  EE20 F001          	lfsr	2,1
  7879  002CA2  5013               	movf	downleft@pl^0,w,c
  7880  002CA4  26D9               	addwf	fsr2l,f,c
  7881  002CA6  5014               	movf	(downleft@pl+1)^0,w,c
  7882  002CA8  22DA               	addwfc	fsr2h,f,c
  7883  002CAA  50DF               	movf	indf2,w,c
  7884  002CAC  6E17               	movwf	(??_downleft+2)^0,c
  7885  002CAE  5017               	movf	(??_downleft+2)^0,w,c
  7886  002CB0  0D20               	mullw	32
  7887  002CB2  0EFC               	movlw	252
  7888  002CB4  6E18               	movwf	(??_downleft+3)^0,c
  7889  002CB6  0EFF               	movlw	255
  7890  002CB8  6E19               	movwf	(??_downleft+4)^0,c
  7891  002CBA  0E00               	movlw	low _display
  7892  002CBC  6E1A               	movwf	(??_downleft+5)^0,c
  7893  002CBE  0E01               	movlw	high _display
  7894  002CC0  6E1B               	movwf	(??_downleft+6)^0,c
  7895  002CC2  5018               	movf	(??_downleft+3)^0,w,c
  7896  002CC4  261A               	addwf	(??_downleft+5)^0,f,c
  7897  002CC6  5019               	movf	(??_downleft+4)^0,w,c
  7898  002CC8  221B               	addwfc	(??_downleft+6)^0,f,c
  7899  002CCA  50F3               	movf	243,w,c
  7900  002CCC  261A               	addwf	(??_downleft+5)^0,f,c
  7901  002CCE  50F4               	movf	244,w,c
  7902  002CD0  221B               	addwfc	(??_downleft+6)^0,f,c
  7903  002CD2  5015               	movf	??_downleft^0,w,c
  7904  002CD4  241A               	addwf	(??_downleft+5)^0,w,c
  7905  002CD6  6ED9               	movwf	fsr2l,c
  7906  002CD8  5016               	movf	(??_downleft+1)^0,w,c
  7907  002CDA  201B               	addwfc	(??_downleft+6)^0,w,c
  7908  002CDC  6EDA               	movwf	fsr2h,c
  7909  002CDE  EE10 F005          	lfsr	1,5
  7910  002CE2  50DE               	movf	postinc2,w,c
  7911  002CE4  26E1               	addwf	fsr1l,f,c
  7912  002CE6  50DD               	movf	postdec2,w,c
  7913  002CE8  22E2               	addwfc	fsr1h,f,c
  7914  002CEA  0E02               	movlw	2
  7915  002CEC  18E6               	xorwf	postinc1,w,c
  7916  002CEE  A4D8               	btfss	status,2,c
  7917  002CF0  EF7C  F016         	goto	i2u268_41
  7918  002CF4  EF7E  F016         	goto	i2u268_40
  7919  002CF8                     i2u268_41:
  7920  002CF8  EF84  F016         	goto	i2l2772
  7921  002CFC                     i2u268_40:
  7922  002CFC                     
  7923                           ;main.c: 784:             CatchFrisbee(pl);
  7924  002CFC  C013  F007         	movff	downleft@pl,CatchFrisbee@pl
  7925  002D00  C014  F008         	movff	downleft@pl+1,CatchFrisbee@pl+1
  7926  002D04  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  7927  002D08                     i2l2772:
  7928                           
  7929                           ;main.c: 787:     display[pl->y-1][pl->x-1] = ((void*)0);
  7930  002D08  EE20 F001          	lfsr	2,1
  7931  002D0C  5013               	movf	downleft@pl^0,w,c
  7932  002D0E  26D9               	addwf	fsr2l,f,c
  7933  002D10  5014               	movf	(downleft@pl+1)^0,w,c
  7934  002D12  22DA               	addwfc	fsr2h,f,c
  7935  002D14  50DF               	movf	indf2,w,c
  7936  002D16  6E15               	movwf	??_downleft^0,c
  7937  002D18  6A16               	clrf	(??_downleft+1)^0,c
  7938  002D1A  0E05               	movlw	5
  7939  002D1C                     i2u269_45:
  7940  002D1C  90D8               	bcf	status,0,c
  7941  002D1E  3615               	rlcf	??_downleft^0,f,c
  7942  002D20  3616               	rlcf	(??_downleft+1)^0,f,c
  7943  002D22  2EE8               	decfsz	wreg,f,c
  7944  002D24  EF8E  F016         	goto	i2u269_45
  7945  002D28  C013  FFD9         	movff	downleft@pl,fsr2l
  7946  002D2C  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7947  002D30  50DF               	movf	indf2,w,c
  7948  002D32  6E17               	movwf	(??_downleft+2)^0,c
  7949  002D34  6A18               	clrf	(??_downleft+3)^0,c
  7950  002D36  90D8               	bcf	status,0,c
  7951  002D38  3617               	rlcf	(??_downleft+2)^0,f,c
  7952  002D3A  3618               	rlcf	(??_downleft+3)^0,f,c
  7953  002D3C  0EDE               	movlw	222
  7954  002D3E  6E19               	movwf	(??_downleft+4)^0,c
  7955  002D40  0EFF               	movlw	255
  7956  002D42  6E1A               	movwf	(??_downleft+5)^0,c
  7957  002D44  0E00               	movlw	low _display
  7958  002D46  6E1B               	movwf	(??_downleft+6)^0,c
  7959  002D48  0E01               	movlw	high _display
  7960  002D4A  6E1C               	movwf	(??_downleft+7)^0,c
  7961  002D4C  5019               	movf	(??_downleft+4)^0,w,c
  7962  002D4E  261B               	addwf	(??_downleft+6)^0,f,c
  7963  002D50  501A               	movf	(??_downleft+5)^0,w,c
  7964  002D52  221C               	addwfc	(??_downleft+7)^0,f,c
  7965  002D54  5017               	movf	(??_downleft+2)^0,w,c
  7966  002D56  261B               	addwf	(??_downleft+6)^0,f,c
  7967  002D58  5018               	movf	(??_downleft+3)^0,w,c
  7968  002D5A  221C               	addwfc	(??_downleft+7)^0,f,c
  7969  002D5C  5015               	movf	??_downleft^0,w,c
  7970  002D5E  241B               	addwf	(??_downleft+6)^0,w,c
  7971  002D60  6ED9               	movwf	fsr2l,c
  7972  002D62  5016               	movf	(??_downleft+1)^0,w,c
  7973  002D64  201C               	addwfc	(??_downleft+7)^0,w,c
  7974  002D66  6EDA               	movwf	fsr2h,c
  7975  002D68  0E00               	movlw	0
  7976  002D6A  6EDE               	movwf	postinc2,c
  7977  002D6C  0E00               	movlw	0
  7978  002D6E  6EDD               	movwf	postdec2,c
  7979  002D70                     
  7980                           ;main.c: 788:     pl->oldX = pl->x;
  7981  002D70  C013  FFD9         	movff	downleft@pl,fsr2l
  7982  002D74  C014  FFDA         	movff	downleft@pl+1,fsr2h
  7983  002D78  EE10 F002          	lfsr	1,2
  7984  002D7C  5013               	movf	downleft@pl^0,w,c
  7985  002D7E  26E1               	addwf	fsr1l,f,c
  7986  002D80  5014               	movf	(downleft@pl+1)^0,w,c
  7987  002D82  22E2               	addwfc	fsr1h,f,c
  7988  002D84  CFDF FFE7          	movff	indf2,indf1
  7989  002D88                     
  7990                           ;main.c: 789:     pl->oldY = pl->y;
  7991  002D88  EE20 F001          	lfsr	2,1
  7992  002D8C  5013               	movf	downleft@pl^0,w,c
  7993  002D8E  26D9               	addwf	fsr2l,f,c
  7994  002D90  5014               	movf	(downleft@pl+1)^0,w,c
  7995  002D92  22DA               	addwfc	fsr2h,f,c
  7996  002D94  EE10 F003          	lfsr	1,3
  7997  002D98  5013               	movf	downleft@pl^0,w,c
  7998  002D9A  26E1               	addwf	fsr1l,f,c
  7999  002D9C  5014               	movf	(downleft@pl+1)^0,w,c
  8000  002D9E  22E2               	addwfc	fsr1h,f,c
  8001  002DA0  CFDF FFE7          	movff	indf2,indf1
  8002  002DA4                     
  8003                           ;main.c: 790:     pl->x--;
  8004  002DA4  C013  FFD9         	movff	downleft@pl,fsr2l
  8005  002DA8  C014  FFDA         	movff	downleft@pl+1,fsr2h
  8006  002DAC  06DF               	decf	indf2,f,c
  8007  002DAE                     
  8008                           ;main.c: 791:     pl->y++;
  8009  002DAE  EE20 F001          	lfsr	2,1
  8010  002DB2  5013               	movf	downleft@pl^0,w,c
  8011  002DB4  26D9               	addwf	fsr2l,f,c
  8012  002DB6  5014               	movf	(downleft@pl+1)^0,w,c
  8013  002DB8  22DA               	addwfc	fsr2h,f,c
  8014  002DBA  2ADF               	incf	indf2,f,c
  8015  002DBC                     
  8016                           ;main.c: 792:     display[pl->y-1][pl->x-1] = pl;
  8017  002DBC  EE20 F001          	lfsr	2,1
  8018  002DC0  5013               	movf	downleft@pl^0,w,c
  8019  002DC2  26D9               	addwf	fsr2l,f,c
  8020  002DC4  5014               	movf	(downleft@pl+1)^0,w,c
  8021  002DC6  22DA               	addwfc	fsr2h,f,c
  8022  002DC8  50DF               	movf	indf2,w,c
  8023  002DCA  6E15               	movwf	??_downleft^0,c
  8024  002DCC  6A16               	clrf	(??_downleft+1)^0,c
  8025  002DCE  0E05               	movlw	5
  8026  002DD0                     i2u270_45:
  8027  002DD0  90D8               	bcf	status,0,c
  8028  002DD2  3615               	rlcf	??_downleft^0,f,c
  8029  002DD4  3616               	rlcf	(??_downleft+1)^0,f,c
  8030  002DD6  2EE8               	decfsz	wreg,f,c
  8031  002DD8  EFE8  F016         	goto	i2u270_45
  8032  002DDC  C013  FFD9         	movff	downleft@pl,fsr2l
  8033  002DE0  C014  FFDA         	movff	downleft@pl+1,fsr2h
  8034  002DE4  50DF               	movf	indf2,w,c
  8035  002DE6  6E17               	movwf	(??_downleft+2)^0,c
  8036  002DE8  6A18               	clrf	(??_downleft+3)^0,c
  8037  002DEA  90D8               	bcf	status,0,c
  8038  002DEC  3617               	rlcf	(??_downleft+2)^0,f,c
  8039  002DEE  3618               	rlcf	(??_downleft+3)^0,f,c
  8040  002DF0  0EDE               	movlw	222
  8041  002DF2  6E19               	movwf	(??_downleft+4)^0,c
  8042  002DF4  0EFF               	movlw	255
  8043  002DF6  6E1A               	movwf	(??_downleft+5)^0,c
  8044  002DF8  0E00               	movlw	low _display
  8045  002DFA  6E1B               	movwf	(??_downleft+6)^0,c
  8046  002DFC  0E01               	movlw	high _display
  8047  002DFE  6E1C               	movwf	(??_downleft+7)^0,c
  8048  002E00  5019               	movf	(??_downleft+4)^0,w,c
  8049  002E02  261B               	addwf	(??_downleft+6)^0,f,c
  8050  002E04  501A               	movf	(??_downleft+5)^0,w,c
  8051  002E06  221C               	addwfc	(??_downleft+7)^0,f,c
  8052  002E08  5017               	movf	(??_downleft+2)^0,w,c
  8053  002E0A  261B               	addwf	(??_downleft+6)^0,f,c
  8054  002E0C  5018               	movf	(??_downleft+3)^0,w,c
  8055  002E0E  221C               	addwfc	(??_downleft+7)^0,f,c
  8056  002E10  5015               	movf	??_downleft^0,w,c
  8057  002E12  241B               	addwf	(??_downleft+6)^0,w,c
  8058  002E14  6ED9               	movwf	fsr2l,c
  8059  002E16  5016               	movf	(??_downleft+1)^0,w,c
  8060  002E18  201C               	addwfc	(??_downleft+7)^0,w,c
  8061  002E1A  6EDA               	movwf	fsr2h,c
  8062  002E1C  C013  FFDE         	movff	downleft@pl,postinc2
  8063  002E20  C014  FFDD         	movff	downleft@pl+1,postdec2
  8064  002E24                     i2l497:
  8065  002E24  0012               	return		;funcret
  8066  002E26                     __end_of_downleft:
  8067                           	callstack 0
  8068                           
  8069 ;; *************** function _down *****************
  8070 ;; Defined at:
  8071 ;;		line 725 in file "main.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  pl              2   18[COMRAM] PTR struct GameElement
  8074 ;;		 -> objs(42), 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;		None
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      void 
  8079 ;; Registers used:
  8080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;Total ram usage:       11 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    2
  8093 ;; This function calls:
  8094 ;;		_CatchFrisbee
  8095 ;; This function is called by:
  8096 ;;		_highIsr
  8097 ;;		_MoveEveryone
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text25
  8102  003140                     __ptext25:
  8103                           	callstack 0
  8104  003140                     _down:
  8105                           	callstack 22
  8106  003140                     
  8107                           ;main.c: 726:     if (pl->y == 4) return;
  8108  003140  EE20 F001          	lfsr	2,1
  8109  003144  5013               	movf	down@pl^0,w,c
  8110  003146  26D9               	addwf	fsr2l,f,c
  8111  003148  5014               	movf	(down@pl+1)^0,w,c
  8112  00314A  22DA               	addwfc	fsr2h,f,c
  8113  00314C  0E04               	movlw	4
  8114  00314E  18DE               	xorwf	postinc2,w,c
  8115  003150  A4D8               	btfss	status,2,c
  8116  003152  EFAD  F018         	goto	i2u221_41
  8117  003156  EFAF  F018         	goto	i2u221_40
  8118  00315A                     i2u221_41:
  8119  00315A  EFB1  F018         	goto	i2l2634
  8120  00315E                     i2u221_40:
  8121  00315E  EF20  F01A         	goto	i2l467
  8122  003162                     i2l2634:
  8123                           
  8124                           ;main.c: 727:     if (display[pl->y][pl->x-1] != ((void*)0)) {
  8125  003162  C013  FFD9         	movff	down@pl,fsr2l
  8126  003166  C014  FFDA         	movff	down@pl+1,fsr2h
  8127  00316A  50DF               	movf	indf2,w,c
  8128  00316C  6E15               	movwf	??_down^0,c
  8129  00316E  6A16               	clrf	(??_down+1)^0,c
  8130  003170  90D8               	bcf	status,0,c
  8131  003172  3615               	rlcf	??_down^0,f,c
  8132  003174  3616               	rlcf	(??_down+1)^0,f,c
  8133  003176  EE20 F001          	lfsr	2,1
  8134  00317A  5013               	movf	down@pl^0,w,c
  8135  00317C  26D9               	addwf	fsr2l,f,c
  8136  00317E  5014               	movf	(down@pl+1)^0,w,c
  8137  003180  22DA               	addwfc	fsr2h,f,c
  8138  003182  50DF               	movf	indf2,w,c
  8139  003184  6E17               	movwf	(??_down+2)^0,c
  8140  003186  5017               	movf	(??_down+2)^0,w,c
  8141  003188  0D20               	mullw	32
  8142  00318A  0EFE               	movlw	254
  8143  00318C  6E18               	movwf	(??_down+3)^0,c
  8144  00318E  0EFF               	movlw	255
  8145  003190  6E19               	movwf	(??_down+4)^0,c
  8146  003192  0E00               	movlw	low _display
  8147  003194  6E1A               	movwf	(??_down+5)^0,c
  8148  003196  0E01               	movlw	high _display
  8149  003198  6E1B               	movwf	(??_down+6)^0,c
  8150  00319A  5018               	movf	(??_down+3)^0,w,c
  8151  00319C  261A               	addwf	(??_down+5)^0,f,c
  8152  00319E  5019               	movf	(??_down+4)^0,w,c
  8153  0031A0  221B               	addwfc	(??_down+6)^0,f,c
  8154  0031A2  50F3               	movf	243,w,c
  8155  0031A4  261A               	addwf	(??_down+5)^0,f,c
  8156  0031A6  50F4               	movf	244,w,c
  8157  0031A8  221B               	addwfc	(??_down+6)^0,f,c
  8158  0031AA  5015               	movf	??_down^0,w,c
  8159  0031AC  241A               	addwf	(??_down+5)^0,w,c
  8160  0031AE  6ED9               	movwf	fsr2l,c
  8161  0031B0  5016               	movf	(??_down+1)^0,w,c
  8162  0031B2  201B               	addwfc	(??_down+6)^0,w,c
  8163  0031B4  6EDA               	movwf	fsr2h,c
  8164  0031B6  50DE               	movf	postinc2,w,c
  8165  0031B8  10DE               	iorwf	postinc2,w,c
  8166  0031BA  B4D8               	btfsc	status,2,c
  8167  0031BC  EFE2  F018         	goto	i2u222_41
  8168  0031C0  EFE4  F018         	goto	i2u222_40
  8169  0031C4                     i2u222_41:
  8170  0031C4  EF97  F019         	goto	i2l2648
  8171  0031C8                     i2u222_40:
  8172  0031C8                     
  8173                           ;main.c: 728:         if (display[pl->y][pl->x-1]->type == OT_PLAYERA) return;
  8174  0031C8  C013  FFD9         	movff	down@pl,fsr2l
  8175  0031CC  C014  FFDA         	movff	down@pl+1,fsr2h
  8176  0031D0  50DF               	movf	indf2,w,c
  8177  0031D2  6E15               	movwf	??_down^0,c
  8178  0031D4  6A16               	clrf	(??_down+1)^0,c
  8179  0031D6  90D8               	bcf	status,0,c
  8180  0031D8  3615               	rlcf	??_down^0,f,c
  8181  0031DA  3616               	rlcf	(??_down+1)^0,f,c
  8182  0031DC  EE20 F001          	lfsr	2,1
  8183  0031E0  5013               	movf	down@pl^0,w,c
  8184  0031E2  26D9               	addwf	fsr2l,f,c
  8185  0031E4  5014               	movf	(down@pl+1)^0,w,c
  8186  0031E6  22DA               	addwfc	fsr2h,f,c
  8187  0031E8  50DF               	movf	indf2,w,c
  8188  0031EA  6E17               	movwf	(??_down+2)^0,c
  8189  0031EC  5017               	movf	(??_down+2)^0,w,c
  8190  0031EE  0D20               	mullw	32
  8191  0031F0  0EFE               	movlw	254
  8192  0031F2  6E18               	movwf	(??_down+3)^0,c
  8193  0031F4  0EFF               	movlw	255
  8194  0031F6  6E19               	movwf	(??_down+4)^0,c
  8195  0031F8  0E00               	movlw	low _display
  8196  0031FA  6E1A               	movwf	(??_down+5)^0,c
  8197  0031FC  0E01               	movlw	high _display
  8198  0031FE  6E1B               	movwf	(??_down+6)^0,c
  8199  003200  5018               	movf	(??_down+3)^0,w,c
  8200  003202  261A               	addwf	(??_down+5)^0,f,c
  8201  003204  5019               	movf	(??_down+4)^0,w,c
  8202  003206  221B               	addwfc	(??_down+6)^0,f,c
  8203  003208  50F3               	movf	243,w,c
  8204  00320A  261A               	addwf	(??_down+5)^0,f,c
  8205  00320C  50F4               	movf	244,w,c
  8206  00320E  221B               	addwfc	(??_down+6)^0,f,c
  8207  003210  5015               	movf	??_down^0,w,c
  8208  003212  241A               	addwf	(??_down+5)^0,w,c
  8209  003214  6ED9               	movwf	fsr2l,c
  8210  003216  5016               	movf	(??_down+1)^0,w,c
  8211  003218  201B               	addwfc	(??_down+6)^0,w,c
  8212  00321A  6EDA               	movwf	fsr2h,c
  8213  00321C  EE10 F005          	lfsr	1,5
  8214  003220  50DE               	movf	postinc2,w,c
  8215  003222  26E1               	addwf	fsr1l,f,c
  8216  003224  50DD               	movf	postdec2,w,c
  8217  003226  22E2               	addwfc	fsr1h,f,c
  8218  003228  50E7               	movf	indf1,w,c
  8219  00322A  A4D8               	btfss	status,2,c
  8220  00322C  EF1A  F019         	goto	i2u223_41
  8221  003230  EF1C  F019         	goto	i2u223_40
  8222  003234                     i2u223_41:
  8223  003234  EF1E  F019         	goto	i2l2640
  8224  003238                     i2u223_40:
  8225  003238  EF20  F01A         	goto	i2l467
  8226  00323C                     i2l2640:
  8227                           
  8228                           ;main.c: 729:         if (display[pl->y][pl->x-1]->type == OT_PLAYERB) return;
  8229  00323C  C013  FFD9         	movff	down@pl,fsr2l
  8230  003240  C014  FFDA         	movff	down@pl+1,fsr2h
  8231  003244  50DF               	movf	indf2,w,c
  8232  003246  6E15               	movwf	??_down^0,c
  8233  003248  6A16               	clrf	(??_down+1)^0,c
  8234  00324A  90D8               	bcf	status,0,c
  8235  00324C  3615               	rlcf	??_down^0,f,c
  8236  00324E  3616               	rlcf	(??_down+1)^0,f,c
  8237  003250  EE20 F001          	lfsr	2,1
  8238  003254  5013               	movf	down@pl^0,w,c
  8239  003256  26D9               	addwf	fsr2l,f,c
  8240  003258  5014               	movf	(down@pl+1)^0,w,c
  8241  00325A  22DA               	addwfc	fsr2h,f,c
  8242  00325C  50DF               	movf	indf2,w,c
  8243  00325E  6E17               	movwf	(??_down+2)^0,c
  8244  003260  5017               	movf	(??_down+2)^0,w,c
  8245  003262  0D20               	mullw	32
  8246  003264  0EFE               	movlw	254
  8247  003266  6E18               	movwf	(??_down+3)^0,c
  8248  003268  0EFF               	movlw	255
  8249  00326A  6E19               	movwf	(??_down+4)^0,c
  8250  00326C  0E00               	movlw	low _display
  8251  00326E  6E1A               	movwf	(??_down+5)^0,c
  8252  003270  0E01               	movlw	high _display
  8253  003272  6E1B               	movwf	(??_down+6)^0,c
  8254  003274  5018               	movf	(??_down+3)^0,w,c
  8255  003276  261A               	addwf	(??_down+5)^0,f,c
  8256  003278  5019               	movf	(??_down+4)^0,w,c
  8257  00327A  221B               	addwfc	(??_down+6)^0,f,c
  8258  00327C  50F3               	movf	243,w,c
  8259  00327E  261A               	addwf	(??_down+5)^0,f,c
  8260  003280  50F4               	movf	244,w,c
  8261  003282  221B               	addwfc	(??_down+6)^0,f,c
  8262  003284  5015               	movf	??_down^0,w,c
  8263  003286  241A               	addwf	(??_down+5)^0,w,c
  8264  003288  6ED9               	movwf	fsr2l,c
  8265  00328A  5016               	movf	(??_down+1)^0,w,c
  8266  00328C  201B               	addwfc	(??_down+6)^0,w,c
  8267  00328E  6EDA               	movwf	fsr2h,c
  8268  003290  EE10 F005          	lfsr	1,5
  8269  003294  50DE               	movf	postinc2,w,c
  8270  003296  26E1               	addwf	fsr1l,f,c
  8271  003298  50DD               	movf	postdec2,w,c
  8272  00329A  22E2               	addwfc	fsr1h,f,c
  8273  00329C  04E6               	decf	postinc1,w,c
  8274  00329E  A4D8               	btfss	status,2,c
  8275  0032A0  EF54  F019         	goto	i2u224_41
  8276  0032A4  EF56  F019         	goto	i2u224_40
  8277  0032A8                     i2u224_41:
  8278  0032A8  EF58  F019         	goto	i2l2644
  8279  0032AC                     i2u224_40:
  8280  0032AC  EF20  F01A         	goto	i2l467
  8281  0032B0                     i2l2644:
  8282                           
  8283                           ;main.c: 730:         if (display[pl->y][pl->x-1]->type == OT_FRISBEE) {
  8284  0032B0  C013  FFD9         	movff	down@pl,fsr2l
  8285  0032B4  C014  FFDA         	movff	down@pl+1,fsr2h
  8286  0032B8  50DF               	movf	indf2,w,c
  8287  0032BA  6E15               	movwf	??_down^0,c
  8288  0032BC  6A16               	clrf	(??_down+1)^0,c
  8289  0032BE  90D8               	bcf	status,0,c
  8290  0032C0  3615               	rlcf	??_down^0,f,c
  8291  0032C2  3616               	rlcf	(??_down+1)^0,f,c
  8292  0032C4  EE20 F001          	lfsr	2,1
  8293  0032C8  5013               	movf	down@pl^0,w,c
  8294  0032CA  26D9               	addwf	fsr2l,f,c
  8295  0032CC  5014               	movf	(down@pl+1)^0,w,c
  8296  0032CE  22DA               	addwfc	fsr2h,f,c
  8297  0032D0  50DF               	movf	indf2,w,c
  8298  0032D2  6E17               	movwf	(??_down+2)^0,c
  8299  0032D4  5017               	movf	(??_down+2)^0,w,c
  8300  0032D6  0D20               	mullw	32
  8301  0032D8  0EFE               	movlw	254
  8302  0032DA  6E18               	movwf	(??_down+3)^0,c
  8303  0032DC  0EFF               	movlw	255
  8304  0032DE  6E19               	movwf	(??_down+4)^0,c
  8305  0032E0  0E00               	movlw	low _display
  8306  0032E2  6E1A               	movwf	(??_down+5)^0,c
  8307  0032E4  0E01               	movlw	high _display
  8308  0032E6  6E1B               	movwf	(??_down+6)^0,c
  8309  0032E8  5018               	movf	(??_down+3)^0,w,c
  8310  0032EA  261A               	addwf	(??_down+5)^0,f,c
  8311  0032EC  5019               	movf	(??_down+4)^0,w,c
  8312  0032EE  221B               	addwfc	(??_down+6)^0,f,c
  8313  0032F0  50F3               	movf	243,w,c
  8314  0032F2  261A               	addwf	(??_down+5)^0,f,c
  8315  0032F4  50F4               	movf	244,w,c
  8316  0032F6  221B               	addwfc	(??_down+6)^0,f,c
  8317  0032F8  5015               	movf	??_down^0,w,c
  8318  0032FA  241A               	addwf	(??_down+5)^0,w,c
  8319  0032FC  6ED9               	movwf	fsr2l,c
  8320  0032FE  5016               	movf	(??_down+1)^0,w,c
  8321  003300  201B               	addwfc	(??_down+6)^0,w,c
  8322  003302  6EDA               	movwf	fsr2h,c
  8323  003304  EE10 F005          	lfsr	1,5
  8324  003308  50DE               	movf	postinc2,w,c
  8325  00330A  26E1               	addwf	fsr1l,f,c
  8326  00330C  50DD               	movf	postdec2,w,c
  8327  00330E  22E2               	addwfc	fsr1h,f,c
  8328  003310  0E02               	movlw	2
  8329  003312  18E6               	xorwf	postinc1,w,c
  8330  003314  A4D8               	btfss	status,2,c
  8331  003316  EF8F  F019         	goto	i2u225_41
  8332  00331A  EF91  F019         	goto	i2u225_40
  8333  00331E                     i2u225_41:
  8334  00331E  EF97  F019         	goto	i2l2648
  8335  003322                     i2u225_40:
  8336  003322                     
  8337                           ;main.c: 731:             CatchFrisbee(pl);
  8338  003322  C013  F007         	movff	down@pl,CatchFrisbee@pl
  8339  003326  C014  F008         	movff	down@pl+1,CatchFrisbee@pl+1
  8340  00332A  ECC0  F01D         	call	_CatchFrisbee	;wreg free
  8341  00332E                     i2l2648:
  8342                           
  8343                           ;main.c: 734:     display[pl->y-1][pl->x-1] = ((void*)0);
  8344  00332E  EE20 F001          	lfsr	2,1
  8345  003332  5013               	movf	down@pl^0,w,c
  8346  003334  26D9               	addwf	fsr2l,f,c
  8347  003336  5014               	movf	(down@pl+1)^0,w,c
  8348  003338  22DA               	addwfc	fsr2h,f,c
  8349  00333A  50DF               	movf	indf2,w,c
  8350  00333C  6E15               	movwf	??_down^0,c
  8351  00333E  6A16               	clrf	(??_down+1)^0,c
  8352  003340  0E05               	movlw	5
  8353  003342                     i2u226_45:
  8354  003342  90D8               	bcf	status,0,c
  8355  003344  3615               	rlcf	??_down^0,f,c
  8356  003346  3616               	rlcf	(??_down+1)^0,f,c
  8357  003348  2EE8               	decfsz	wreg,f,c
  8358  00334A  EFA1  F019         	goto	i2u226_45
  8359  00334E  C013  FFD9         	movff	down@pl,fsr2l
  8360  003352  C014  FFDA         	movff	down@pl+1,fsr2h
  8361  003356  50DF               	movf	indf2,w,c
  8362  003358  6E17               	movwf	(??_down+2)^0,c
  8363  00335A  6A18               	clrf	(??_down+3)^0,c
  8364  00335C  90D8               	bcf	status,0,c
  8365  00335E  3617               	rlcf	(??_down+2)^0,f,c
  8366  003360  3618               	rlcf	(??_down+3)^0,f,c
  8367  003362  0EDE               	movlw	222
  8368  003364  6E19               	movwf	(??_down+4)^0,c
  8369  003366  0EFF               	movlw	255
  8370  003368  6E1A               	movwf	(??_down+5)^0,c
  8371  00336A  0E00               	movlw	low _display
  8372  00336C  6E1B               	movwf	(??_down+6)^0,c
  8373  00336E  0E01               	movlw	high _display
  8374  003370  6E1C               	movwf	(??_down+7)^0,c
  8375  003372  5019               	movf	(??_down+4)^0,w,c
  8376  003374  261B               	addwf	(??_down+6)^0,f,c
  8377  003376  501A               	movf	(??_down+5)^0,w,c
  8378  003378  221C               	addwfc	(??_down+7)^0,f,c
  8379  00337A  5017               	movf	(??_down+2)^0,w,c
  8380  00337C  261B               	addwf	(??_down+6)^0,f,c
  8381  00337E  5018               	movf	(??_down+3)^0,w,c
  8382  003380  221C               	addwfc	(??_down+7)^0,f,c
  8383  003382  5015               	movf	??_down^0,w,c
  8384  003384  241B               	addwf	(??_down+6)^0,w,c
  8385  003386  6ED9               	movwf	fsr2l,c
  8386  003388  5016               	movf	(??_down+1)^0,w,c
  8387  00338A  201C               	addwfc	(??_down+7)^0,w,c
  8388  00338C  6EDA               	movwf	fsr2h,c
  8389  00338E  0E00               	movlw	0
  8390  003390  6EDE               	movwf	postinc2,c
  8391  003392  0E00               	movlw	0
  8392  003394  6EDD               	movwf	postdec2,c
  8393  003396                     
  8394                           ;main.c: 735:     pl->oldX = pl->x;
  8395  003396  C013  FFD9         	movff	down@pl,fsr2l
  8396  00339A  C014  FFDA         	movff	down@pl+1,fsr2h
  8397  00339E  EE10 F002          	lfsr	1,2
  8398  0033A2  5013               	movf	down@pl^0,w,c
  8399  0033A4  26E1               	addwf	fsr1l,f,c
  8400  0033A6  5014               	movf	(down@pl+1)^0,w,c
  8401  0033A8  22E2               	addwfc	fsr1h,f,c
  8402  0033AA  CFDF FFE7          	movff	indf2,indf1
  8403  0033AE                     
  8404                           ;main.c: 736:     pl->oldY = pl->y;
  8405  0033AE  EE20 F001          	lfsr	2,1
  8406  0033B2  5013               	movf	down@pl^0,w,c
  8407  0033B4  26D9               	addwf	fsr2l,f,c
  8408  0033B6  5014               	movf	(down@pl+1)^0,w,c
  8409  0033B8  22DA               	addwfc	fsr2h,f,c
  8410  0033BA  EE10 F003          	lfsr	1,3
  8411  0033BE  5013               	movf	down@pl^0,w,c
  8412  0033C0  26E1               	addwf	fsr1l,f,c
  8413  0033C2  5014               	movf	(down@pl+1)^0,w,c
  8414  0033C4  22E2               	addwfc	fsr1h,f,c
  8415  0033C6  CFDF FFE7          	movff	indf2,indf1
  8416  0033CA                     
  8417                           ;main.c: 737:     pl->y++;
  8418  0033CA  EE20 F001          	lfsr	2,1
  8419  0033CE  5013               	movf	down@pl^0,w,c
  8420  0033D0  26D9               	addwf	fsr2l,f,c
  8421  0033D2  5014               	movf	(down@pl+1)^0,w,c
  8422  0033D4  22DA               	addwfc	fsr2h,f,c
  8423  0033D6  2ADF               	incf	indf2,f,c
  8424  0033D8                     
  8425                           ;main.c: 738:     display[pl->y-1][pl->x-1] = pl;
  8426  0033D8  EE20 F001          	lfsr	2,1
  8427  0033DC  5013               	movf	down@pl^0,w,c
  8428  0033DE  26D9               	addwf	fsr2l,f,c
  8429  0033E0  5014               	movf	(down@pl+1)^0,w,c
  8430  0033E2  22DA               	addwfc	fsr2h,f,c
  8431  0033E4  50DF               	movf	indf2,w,c
  8432  0033E6  6E15               	movwf	??_down^0,c
  8433  0033E8  6A16               	clrf	(??_down+1)^0,c
  8434  0033EA  0E05               	movlw	5
  8435  0033EC                     i2u227_45:
  8436  0033EC  90D8               	bcf	status,0,c
  8437  0033EE  3615               	rlcf	??_down^0,f,c
  8438  0033F0  3616               	rlcf	(??_down+1)^0,f,c
  8439  0033F2  2EE8               	decfsz	wreg,f,c
  8440  0033F4  EFF6  F019         	goto	i2u227_45
  8441  0033F8  C013  FFD9         	movff	down@pl,fsr2l
  8442  0033FC  C014  FFDA         	movff	down@pl+1,fsr2h
  8443  003400  50DF               	movf	indf2,w,c
  8444  003402  6E17               	movwf	(??_down+2)^0,c
  8445  003404  6A18               	clrf	(??_down+3)^0,c
  8446  003406  90D8               	bcf	status,0,c
  8447  003408  3617               	rlcf	(??_down+2)^0,f,c
  8448  00340A  3618               	rlcf	(??_down+3)^0,f,c
  8449  00340C  0EDE               	movlw	222
  8450  00340E  6E19               	movwf	(??_down+4)^0,c
  8451  003410  0EFF               	movlw	255
  8452  003412  6E1A               	movwf	(??_down+5)^0,c
  8453  003414  0E00               	movlw	low _display
  8454  003416  6E1B               	movwf	(??_down+6)^0,c
  8455  003418  0E01               	movlw	high _display
  8456  00341A  6E1C               	movwf	(??_down+7)^0,c
  8457  00341C  5019               	movf	(??_down+4)^0,w,c
  8458  00341E  261B               	addwf	(??_down+6)^0,f,c
  8459  003420  501A               	movf	(??_down+5)^0,w,c
  8460  003422  221C               	addwfc	(??_down+7)^0,f,c
  8461  003424  5017               	movf	(??_down+2)^0,w,c
  8462  003426  261B               	addwf	(??_down+6)^0,f,c
  8463  003428  5018               	movf	(??_down+3)^0,w,c
  8464  00342A  221C               	addwfc	(??_down+7)^0,f,c
  8465  00342C  5015               	movf	??_down^0,w,c
  8466  00342E  241B               	addwf	(??_down+6)^0,w,c
  8467  003430  6ED9               	movwf	fsr2l,c
  8468  003432  5016               	movf	(??_down+1)^0,w,c
  8469  003434  201C               	addwfc	(??_down+7)^0,w,c
  8470  003436  6EDA               	movwf	fsr2h,c
  8471  003438  C013  FFDE         	movff	down@pl,postinc2
  8472  00343C  C014  FFDD         	movff	down@pl+1,postdec2
  8473  003440                     i2l467:
  8474  003440  0012               	return		;funcret
  8475  003442                     __end_of_down:
  8476                           	callstack 0
  8477                           
  8478 ;; *************** function _CatchFrisbee *****************
  8479 ;; Defined at:
  8480 ;;		line 648 in file "main.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  pl              2    6[COMRAM] PTR struct GameElement
  8483 ;;		 -> objs(42), 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  i               2   16[COMRAM] int 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;Total ram usage:       12 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    1
  8502 ;; This function calls:
  8503 ;;		i2___wmul
  8504 ;; This function is called by:
  8505 ;;		_left
  8506 ;;		_right
  8507 ;;		_up
  8508 ;;		_down
  8509 ;;		_upleft
  8510 ;;		_upright
  8511 ;;		_downleft
  8512 ;;		_downright
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text26
  8517  003B80                     __ptext26:
  8518                           	callstack 0
  8519  003B80                     _CatchFrisbee:
  8520                           	callstack 22
  8521  003B80                     
  8522                           ;main.c: 649:     if (game_state == GS_INACTIVE) {
  8523  003B80  044F               	decf	_game_state^0,w,c
  8524  003B82  A4D8               	btfss	status,2,c
  8525  003B84  EFC6  F01D         	goto	i2u188_41
  8526  003B88  EFC8  F01D         	goto	i2u188_40
  8527  003B8C                     i2u188_41:
  8528  003B8C  EF09  F01E         	goto	i2l2490
  8529  003B90                     i2u188_40:
  8530  003B90                     
  8531                           ;main.c: 650:         pl->state = OS_SEL_W_FRISBEE;
  8532  003B90  EE20 F006          	lfsr	2,6
  8533  003B94  5007               	movf	CatchFrisbee@pl^0,w,c
  8534  003B96  26D9               	addwf	fsr2l,f,c
  8535  003B98  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8536  003B9A  22DA               	addwfc	fsr2h,f,c
  8537  003B9C  0E02               	movlw	2
  8538  003B9E  6EDF               	movwf	indf2,c
  8539                           
  8540                           ;main.c: 651:         display[objs[5].y-1][objs[5].x-1] = pl;
  8541  003BA0  0100               	movlb	0	; () banked
  8542  003BA2  51A8               	movf	(_objs+36)& (0+255),w,b
  8543  003BA4  6E09               	movwf	??_CatchFrisbee^0,c
  8544  003BA6  6A0A               	clrf	(??_CatchFrisbee+1)^0,c
  8545  003BA8  0E05               	movlw	5
  8546  003BAA                     i2u189_45:
  8547  003BAA  90D8               	bcf	status,0,c
  8548  003BAC  3609               	rlcf	??_CatchFrisbee^0,f,c
  8549  003BAE  360A               	rlcf	(??_CatchFrisbee+1)^0,f,c
  8550  003BB0  2EE8               	decfsz	wreg,f,c
  8551  003BB2  EFD5  F01D         	goto	i2u189_45
  8552  003BB6  51A7               	movf	(_objs+35)& (0+255),w,b
  8553  003BB8  6E0B               	movwf	(??_CatchFrisbee+2)^0,c
  8554  003BBA  6A0C               	clrf	(??_CatchFrisbee+3)^0,c
  8555  003BBC  90D8               	bcf	status,0,c
  8556  003BBE  360B               	rlcf	(??_CatchFrisbee+2)^0,f,c
  8557  003BC0  360C               	rlcf	(??_CatchFrisbee+3)^0,f,c
  8558  003BC2  0EDE               	movlw	222
  8559  003BC4  6E0D               	movwf	(??_CatchFrisbee+4)^0,c
  8560  003BC6  0EFF               	movlw	255
  8561  003BC8  6E0E               	movwf	(??_CatchFrisbee+5)^0,c
  8562  003BCA  0E00               	movlw	low _display
  8563  003BCC  6E0F               	movwf	(??_CatchFrisbee+6)^0,c
  8564  003BCE  0E01               	movlw	high _display
  8565  003BD0  6E10               	movwf	(??_CatchFrisbee+7)^0,c
  8566  003BD2  500D               	movf	(??_CatchFrisbee+4)^0,w,c
  8567  003BD4  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8568  003BD6  500E               	movf	(??_CatchFrisbee+5)^0,w,c
  8569  003BD8  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8570  003BDA  500B               	movf	(??_CatchFrisbee+2)^0,w,c
  8571  003BDC  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8572  003BDE  500C               	movf	(??_CatchFrisbee+3)^0,w,c
  8573  003BE0  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8574  003BE2  5009               	movf	??_CatchFrisbee^0,w,c
  8575  003BE4  240F               	addwf	(??_CatchFrisbee+6)^0,w,c
  8576  003BE6  6ED9               	movwf	fsr2l,c
  8577  003BE8  500A               	movf	(??_CatchFrisbee+1)^0,w,c
  8578  003BEA  2010               	addwfc	(??_CatchFrisbee+7)^0,w,c
  8579  003BEC  6EDA               	movwf	fsr2h,c
  8580  003BEE  C007  FFDE         	movff	CatchFrisbee@pl,postinc2
  8581  003BF2  C008  FFDD         	movff	CatchFrisbee@pl+1,postdec2
  8582  003BF6                     
  8583                           ; BSR set to: 0
  8584                           ;main.c: 652:         objs[5].active = 0;
  8585  003BF6  0E00               	movlw	0
  8586  003BF8  6FAB               	movwf	(_objs+39)& (0+255),b
  8587  003BFA                     
  8588                           ; BSR set to: 0
  8589                           ;main.c: 653:         objs[5].state = OS_FELL;
  8590  003BFA  0E04               	movlw	4
  8591  003BFC  6FAD               	movwf	(_objs+41)& (0+255),b
  8592  003BFE                     
  8593                           ; BSR set to: 0
  8594                           ;main.c: 654:         objs[5].x = objs[5].y = objs[5].oldX = objs[5].oldY = 0;
  8595  003BFE  0E00               	movlw	0
  8596  003C00  6FAA               	movwf	(_objs+38)& (0+255),b
  8597  003C02  C0AA  F0A9         	movff	_objs+38,_objs+37
  8598  003C06  C0A9  F0A8         	movff	_objs+37,_objs+36
  8599  003C0A  C0A8  F0A7         	movff	_objs+36,_objs+35
  8600                           
  8601                           ;main.c: 655:     } else {
  8602  003C0E  EFA6  F01E         	goto	i2l439
  8603  003C12                     i2l2490:
  8604                           
  8605                           ;main.c: 656:         objs[selectedPlayer].state = OS_DEFAULT;
  8606  003C12  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  8607  003C16  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  8608  003C1A  0E00               	movlw	0
  8609  003C1C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8610  003C1E  0E07               	movlw	7
  8611  003C20  6E03               	movwf	i2___wmul@multiplicand^0,c
  8612  003C22  EC34  F021         	call	i2___wmul	;wreg free
  8613  003C26  0E8A               	movlw	low (_objs+6)
  8614  003C28  2401               	addwf	?i2___wmul^0,w,c
  8615  003C2A  6ED9               	movwf	fsr2l,c
  8616  003C2C  0E00               	movlw	high (_objs+6)
  8617  003C2E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8618  003C30  6EDA               	movwf	fsr2h,c
  8619  003C32  0E00               	movlw	0
  8620  003C34  6EDF               	movwf	indf2,c
  8621  003C36                     
  8622                           ;main.c: 657:         pl->state = OS_SEL_W_FRISBEE;
  8623  003C36  EE20 F006          	lfsr	2,6
  8624  003C3A  5007               	movf	CatchFrisbee@pl^0,w,c
  8625  003C3C  26D9               	addwf	fsr2l,f,c
  8626  003C3E  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8627  003C40  22DA               	addwfc	fsr2h,f,c
  8628  003C42  0E02               	movlw	2
  8629  003C44  6EDF               	movwf	indf2,c
  8630  003C46                     
  8631                           ;main.c: 658:         for (int i = 0; i < 4; i++) {
  8632  003C46  0E00               	movlw	0
  8633  003C48  6E12               	movwf	(CatchFrisbee@i+1)^0,c
  8634  003C4A  0E00               	movlw	0
  8635  003C4C  6E11               	movwf	CatchFrisbee@i^0,c
  8636  003C4E                     i2l2500:
  8637                           
  8638                           ;main.c: 659:             if (&objs[i] == pl) {
  8639  003C4E  C011  F001         	movff	CatchFrisbee@i,i2___wmul@multiplier
  8640  003C52  C012  F002         	movff	CatchFrisbee@i+1,i2___wmul@multiplier+1
  8641  003C56  0E00               	movlw	0
  8642  003C58  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8643  003C5A  0E07               	movlw	7
  8644  003C5C  6E03               	movwf	i2___wmul@multiplicand^0,c
  8645  003C5E  EC34  F021         	call	i2___wmul	;wreg free
  8646  003C62  0E84               	movlw	low _objs
  8647  003C64  6E09               	movwf	??_CatchFrisbee^0,c
  8648  003C66  0E00               	movlw	high _objs
  8649  003C68  6E0A               	movwf	(??_CatchFrisbee+1)^0,c
  8650  003C6A  5001               	movf	?i2___wmul^0,w,c
  8651  003C6C  2609               	addwf	??_CatchFrisbee^0,f,c
  8652  003C6E  5002               	movf	(?i2___wmul+1)^0,w,c
  8653  003C70  220A               	addwfc	(??_CatchFrisbee+1)^0,f,c
  8654  003C72  5007               	movf	CatchFrisbee@pl^0,w,c
  8655  003C74  1809               	xorwf	??_CatchFrisbee^0,w,c
  8656  003C76  E107               	bnz	i2u190_41
  8657  003C78  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8658  003C7A  180A               	xorwf	(??_CatchFrisbee+1)^0,w,c
  8659  003C7C  A4D8               	btfss	status,2,c
  8660  003C7E  EF43  F01E         	goto	i2u190_41
  8661  003C82  EF45  F01E         	goto	i2u190_40
  8662  003C86                     i2u190_41:
  8663  003C86  EF4B  F01E         	goto	i2l2504
  8664  003C8A                     i2u190_40:
  8665  003C8A                     
  8666                           ;main.c: 660:                 selectedPlayer = i;
  8667  003C8A  C011  F072         	movff	CatchFrisbee@i,_selectedPlayer
  8668  003C8E  C012  F073         	movff	CatchFrisbee@i+1,_selectedPlayer+1
  8669                           
  8670                           ;main.c: 661:                 break;
  8671  003C92  EF5B  F01E         	goto	i2l2508
  8672  003C96                     i2l2504:
  8673                           
  8674                           ;main.c: 663:         }
  8675  003C96  4A11               	infsnz	CatchFrisbee@i^0,f,c
  8676  003C98  2A12               	incf	(CatchFrisbee@i+1)^0,f,c
  8677  003C9A  BE12               	btfsc	(CatchFrisbee@i+1)^0,7,c
  8678  003C9C  EF59  F01E         	goto	i2u191_41
  8679  003CA0  5012               	movf	(CatchFrisbee@i+1)^0,w,c
  8680  003CA2  E109               	bnz	i2u191_40
  8681  003CA4  0E04               	movlw	4
  8682  003CA6  5C11               	subwf	CatchFrisbee@i^0,w,c
  8683  003CA8  A0D8               	btfss	status,0,c
  8684  003CAA  EF59  F01E         	goto	i2u191_41
  8685  003CAE  EF5B  F01E         	goto	i2u191_40
  8686  003CB2                     i2u191_41:
  8687  003CB2  EF27  F01E         	goto	i2l2500
  8688  003CB6                     i2u191_40:
  8689  003CB6                     i2l2508:
  8690                           
  8691                           ;main.c: 664:         display[objs[5].y-1][objs[5].x-1] = pl;
  8692  003CB6  0100               	movlb	0	; () banked
  8693  003CB8  51A8               	movf	(_objs+36)& (0+255),w,b
  8694  003CBA  6E09               	movwf	??_CatchFrisbee^0,c
  8695  003CBC  6A0A               	clrf	(??_CatchFrisbee+1)^0,c
  8696  003CBE  0E05               	movlw	5
  8697  003CC0                     i2u192_45:
  8698  003CC0  90D8               	bcf	status,0,c
  8699  003CC2  3609               	rlcf	??_CatchFrisbee^0,f,c
  8700  003CC4  360A               	rlcf	(??_CatchFrisbee+1)^0,f,c
  8701  003CC6  2EE8               	decfsz	wreg,f,c
  8702  003CC8  EF60  F01E         	goto	i2u192_45
  8703  003CCC  51A7               	movf	(_objs+35)& (0+255),w,b
  8704  003CCE  6E0B               	movwf	(??_CatchFrisbee+2)^0,c
  8705  003CD0  6A0C               	clrf	(??_CatchFrisbee+3)^0,c
  8706  003CD2  90D8               	bcf	status,0,c
  8707  003CD4  360B               	rlcf	(??_CatchFrisbee+2)^0,f,c
  8708  003CD6  360C               	rlcf	(??_CatchFrisbee+3)^0,f,c
  8709  003CD8  0EDE               	movlw	222
  8710  003CDA  6E0D               	movwf	(??_CatchFrisbee+4)^0,c
  8711  003CDC  0EFF               	movlw	255
  8712  003CDE  6E0E               	movwf	(??_CatchFrisbee+5)^0,c
  8713  003CE0  0E00               	movlw	low _display
  8714  003CE2  6E0F               	movwf	(??_CatchFrisbee+6)^0,c
  8715  003CE4  0E01               	movlw	high _display
  8716  003CE6  6E10               	movwf	(??_CatchFrisbee+7)^0,c
  8717  003CE8  500D               	movf	(??_CatchFrisbee+4)^0,w,c
  8718  003CEA  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8719  003CEC  500E               	movf	(??_CatchFrisbee+5)^0,w,c
  8720  003CEE  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8721  003CF0  500B               	movf	(??_CatchFrisbee+2)^0,w,c
  8722  003CF2  260F               	addwf	(??_CatchFrisbee+6)^0,f,c
  8723  003CF4  500C               	movf	(??_CatchFrisbee+3)^0,w,c
  8724  003CF6  2210               	addwfc	(??_CatchFrisbee+7)^0,f,c
  8725  003CF8  5009               	movf	??_CatchFrisbee^0,w,c
  8726  003CFA  240F               	addwf	(??_CatchFrisbee+6)^0,w,c
  8727  003CFC  6ED9               	movwf	fsr2l,c
  8728  003CFE  500A               	movf	(??_CatchFrisbee+1)^0,w,c
  8729  003D00  2010               	addwfc	(??_CatchFrisbee+7)^0,w,c
  8730  003D02  6EDA               	movwf	fsr2h,c
  8731  003D04  C007  FFDE         	movff	CatchFrisbee@pl,postinc2
  8732  003D08  C008  FFDD         	movff	CatchFrisbee@pl+1,postdec2
  8733  003D0C                     
  8734                           ; BSR set to: 0
  8735                           ;main.c: 665:         objs[5].active = 0;
  8736  003D0C  0E00               	movlw	0
  8737  003D0E  6FAB               	movwf	(_objs+39)& (0+255),b
  8738  003D10                     
  8739                           ; BSR set to: 0
  8740                           ;main.c: 666:         objs[5].x = objs[5].y = 0;
  8741  003D10  0E00               	movlw	0
  8742  003D12  6FA8               	movwf	(_objs+36)& (0+255),b
  8743  003D14  C0A8  F0A7         	movff	_objs+36,_objs+35
  8744  003D18                     
  8745                           ; BSR set to: 0
  8746                           ;main.c: 667:         objs[5].state = OS_FELL;
  8747  003D18  0E04               	movlw	4
  8748  003D1A  6FAD               	movwf	(_objs+41)& (0+255),b
  8749  003D1C                     
  8750                           ; BSR set to: 0
  8751                           ;main.c: 668:         objs[4].active = 0;
  8752  003D1C  0E00               	movlw	0
  8753  003D1E  6FA4               	movwf	(_objs+32)& (0+255),b
  8754                           
  8755                           ;main.c: 669:         if (pl->type == OT_PLAYERA) scoreA++;
  8756  003D20  EE20 F005          	lfsr	2,5
  8757  003D24  5007               	movf	CatchFrisbee@pl^0,w,c
  8758  003D26  26D9               	addwf	fsr2l,f,c
  8759  003D28  5008               	movf	(CatchFrisbee@pl+1)^0,w,c
  8760  003D2A  22DA               	addwfc	fsr2h,f,c
  8761  003D2C  50DF               	movf	indf2,w,c
  8762  003D2E  A4D8               	btfss	status,2,c
  8763  003D30  EF9C  F01E         	goto	i2u193_41
  8764  003D34  EF9E  F01E         	goto	i2u193_40
  8765  003D38                     i2u193_41:
  8766  003D38  EFA2  F01E         	goto	i2l2520
  8767  003D3C                     i2u193_40:
  8768  003D3C                     
  8769                           ; BSR set to: 0
  8770  003D3C  4B82               	infsnz	_scoreA& (0+255),f,b
  8771  003D3E  2B83               	incf	(_scoreA+1)& (0+255),f,b
  8772  003D40  EFA4  F01E         	goto	i2l2522
  8773  003D44                     i2l2520:
  8774                           
  8775                           ; BSR set to: 0
  8776  003D44  4B80               	infsnz	_scoreB& (0+255),f,b
  8777  003D46  2B81               	incf	(_scoreB+1)& (0+255),f,b
  8778  003D48                     i2l2522:
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;main.c: 671:         game_state = GS_INACTIVE;
  8782  003D48  0E01               	movlw	1
  8783  003D4A  6E4F               	movwf	_game_state^0,c
  8784  003D4C                     i2l439:
  8785                           
  8786                           ; BSR set to: 0
  8787  003D4C  0012               	return		;funcret
  8788  003D4E                     __end_of_CatchFrisbee:
  8789                           	callstack 0
  8790                           
  8791 ;; *************** function _CheckIfCaughtFrisbee *****************
  8792 ;; Defined at:
  8793 ;;		line 619 in file "main.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;		None
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  i               2    7[COMRAM] int 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  2   42[None  ] PTR struct GameElement
  8800 ;; Registers used:
  8801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;Total ram usage:        3 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:    1
  8814 ;; This function calls:
  8815 ;;		i2___wmul
  8816 ;; This function is called by:
  8817 ;;		_highIsr
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text27
  8822  003D4E                     __ptext27:
  8823                           	callstack 0
  8824  003D4E                     _CheckIfCaughtFrisbee:
  8825                           	callstack 23
  8826  003D4E                     
  8827                           ;main.c: 622:     for (int i = 0; i < 4; i++) {
  8828  003D4E  0E00               	movlw	0
  8829  003D50  6E09               	movwf	(CheckIfCaughtFrisbee@i+1)^0,c
  8830  003D52  0E00               	movlw	0
  8831  003D54  6E08               	movwf	CheckIfCaughtFrisbee@i^0,c
  8832  003D56                     i2l3006:
  8833                           
  8834                           ;main.c: 623:         if (objs[i].x == objs[5].x && objs[i].y == objs[5].y) {
  8835  003D56  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8836  003D5A  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8837  003D5E  0E00               	movlw	0
  8838  003D60  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8839  003D62  0E07               	movlw	7
  8840  003D64  6E03               	movwf	i2___wmul@multiplicand^0,c
  8841  003D66  EC34  F021         	call	i2___wmul	;wreg free
  8842  003D6A  0E84               	movlw	low _objs
  8843  003D6C  2401               	addwf	?i2___wmul^0,w,c
  8844  003D6E  6ED9               	movwf	fsr2l,c
  8845  003D70  0E00               	movlw	high _objs
  8846  003D72  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8847  003D74  6EDA               	movwf	fsr2h,c
  8848  003D76  0100               	movlb	0	; () banked
  8849  003D78  51A7               	movf	(_objs+35)& (0+255),w,b
  8850  003D7A  18DE               	xorwf	postinc2,w,c
  8851  003D7C  A4D8               	btfss	status,2,c
  8852  003D7E  EFC3  F01E         	goto	i2u297_41
  8853  003D82  EFC5  F01E         	goto	i2u297_40
  8854  003D86                     i2u297_41:
  8855  003D86  EF3D  F01F         	goto	i2l3034
  8856  003D8A                     i2u297_40:
  8857  003D8A                     
  8858                           ; BSR set to: 0
  8859  003D8A  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8860  003D8E  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8861  003D92  0E00               	movlw	0
  8862  003D94  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8863  003D96  0E07               	movlw	7
  8864  003D98  6E03               	movwf	i2___wmul@multiplicand^0,c
  8865  003D9A  EC34  F021         	call	i2___wmul	;wreg free
  8866  003D9E  0E85               	movlw	low (_objs+1)
  8867  003DA0  2401               	addwf	?i2___wmul^0,w,c
  8868  003DA2  6ED9               	movwf	fsr2l,c
  8869  003DA4  0E00               	movlw	high (_objs+1)
  8870  003DA6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8871  003DA8  6EDA               	movwf	fsr2h,c
  8872  003DAA  0100               	movlb	0	; () banked
  8873  003DAC  51A8               	movf	(_objs+36)& (0+255),w,b
  8874  003DAE  18DE               	xorwf	postinc2,w,c
  8875  003DB0  A4D8               	btfss	status,2,c
  8876  003DB2  EFDD  F01E         	goto	i2u298_41
  8877  003DB6  EFDF  F01E         	goto	i2u298_40
  8878  003DBA                     i2u298_41:
  8879  003DBA  EF3D  F01F         	goto	i2l3034
  8880  003DBE                     i2u298_40:
  8881  003DBE                     
  8882                           ; BSR set to: 0
  8883                           ;main.c: 624:             if (objs[i].type == OT_PLAYERA) {
  8884  003DBE  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8885  003DC2  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8886  003DC6  0E00               	movlw	0
  8887  003DC8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8888  003DCA  0E07               	movlw	7
  8889  003DCC  6E03               	movwf	i2___wmul@multiplicand^0,c
  8890  003DCE  EC34  F021         	call	i2___wmul	;wreg free
  8891  003DD2  0E89               	movlw	low (_objs+5)
  8892  003DD4  2401               	addwf	?i2___wmul^0,w,c
  8893  003DD6  6ED9               	movwf	fsr2l,c
  8894  003DD8  0E00               	movlw	high (_objs+5)
  8895  003DDA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8896  003DDC  6EDA               	movwf	fsr2h,c
  8897  003DDE  50DF               	movf	indf2,w,c
  8898  003DE0  A4D8               	btfss	status,2,c
  8899  003DE2  EFF5  F01E         	goto	i2u299_41
  8900  003DE6  EFF7  F01E         	goto	i2u299_40
  8901  003DEA                     i2u299_41:
  8902  003DEA  EFFC  F01E         	goto	i2l3014
  8903  003DEE                     i2u299_40:
  8904  003DEE                     
  8905                           ;main.c: 625:                 scoreA++;
  8906  003DEE  0100               	movlb	0	; () banked
  8907  003DF0  4B82               	infsnz	_scoreA& (0+255),f,b
  8908  003DF2  2B83               	incf	(_scoreA+1)& (0+255),f,b
  8909                           
  8910                           ;main.c: 626:             }
  8911  003DF4  EFFF  F01E         	goto	i2l3016
  8912  003DF8                     i2l3014:
  8913                           
  8914                           ;main.c: 628:                 scoreB++;
  8915  003DF8  0100               	movlb	0	; () banked
  8916  003DFA  4B80               	infsnz	_scoreB& (0+255),f,b
  8917  003DFC  2B81               	incf	(_scoreB+1)& (0+255),f,b
  8918  003DFE                     i2l3016:
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;main.c: 630:             game_state = GS_INACTIVE;
  8922  003DFE  0E01               	movlw	1
  8923  003E00  6E4F               	movwf	_game_state^0,c
  8924  003E02                     
  8925                           ; BSR set to: 0
  8926                           ;main.c: 631:             curFrisbeeSteps = 0;
  8927  003E02  0E00               	movlw	0
  8928  003E04  6E6B               	movwf	(_curFrisbeeSteps+1)^0,c
  8929  003E06  0E00               	movlw	0
  8930  003E08  6E6A               	movwf	_curFrisbeeSteps^0,c
  8931  003E0A                     
  8932                           ; BSR set to: 0
  8933                           ;main.c: 632:             objs[4].active = 0;
  8934  003E0A  0E00               	movlw	0
  8935  003E0C  6FA4               	movwf	(_objs+32)& (0+255),b
  8936  003E0E                     
  8937                           ; BSR set to: 0
  8938                           ;main.c: 633:             objs[5].active = 0;
  8939  003E0E  0E00               	movlw	0
  8940  003E10  6FAB               	movwf	(_objs+39)& (0+255),b
  8941  003E12                     
  8942                           ; BSR set to: 0
  8943                           ;main.c: 635:             objs[selectedPlayer].state = OS_DEFAULT;
  8944  003E12  C072  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  8945  003E16  C073  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  8946  003E1A  0E00               	movlw	0
  8947  003E1C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8948  003E1E  0E07               	movlw	7
  8949  003E20  6E03               	movwf	i2___wmul@multiplicand^0,c
  8950  003E22  EC34  F021         	call	i2___wmul	;wreg free
  8951  003E26  0E8A               	movlw	low (_objs+6)
  8952  003E28  2401               	addwf	?i2___wmul^0,w,c
  8953  003E2A  6ED9               	movwf	fsr2l,c
  8954  003E2C  0E00               	movlw	high (_objs+6)
  8955  003E2E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8956  003E30  6EDA               	movwf	fsr2h,c
  8957  003E32  0E00               	movlw	0
  8958  003E34  6EDF               	movwf	indf2,c
  8959  003E36                     
  8960                           ;main.c: 636:             objs[i].state = OS_SEL_W_FRISBEE;
  8961  003E36  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8962  003E3A  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8963  003E3E  0E00               	movlw	0
  8964  003E40  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8965  003E42  0E07               	movlw	7
  8966  003E44  6E03               	movwf	i2___wmul@multiplicand^0,c
  8967  003E46  EC34  F021         	call	i2___wmul	;wreg free
  8968  003E4A  0E8A               	movlw	low (_objs+6)
  8969  003E4C  2401               	addwf	?i2___wmul^0,w,c
  8970  003E4E  6ED9               	movwf	fsr2l,c
  8971  003E50  0E00               	movlw	high (_objs+6)
  8972  003E52  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8973  003E54  6EDA               	movwf	fsr2h,c
  8974  003E56  0E02               	movlw	2
  8975  003E58  6EDF               	movwf	indf2,c
  8976  003E5A                     
  8977                           ;main.c: 637:             selectedPlayer = i;
  8978  003E5A  C008  F072         	movff	CheckIfCaughtFrisbee@i,_selectedPlayer
  8979  003E5E  C009  F073         	movff	CheckIfCaughtFrisbee@i+1,_selectedPlayer+1
  8980  003E62                     
  8981                           ;main.c: 641:             return &objs[i];;	Return value of _CheckIfCaughtFrisbee is nev
      +                          er used
  8982  003E62  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  8983  003E66  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  8984  003E6A  0E00               	movlw	0
  8985  003E6C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8986  003E6E  0E07               	movlw	7
  8987  003E70  6E03               	movwf	i2___wmul@multiplicand^0,c
  8988  003E72  EC34  F021         	call	i2___wmul	;wreg free
  8989  003E76  EF4D  F01F         	goto	i2l429
  8990  003E7A                     i2l3034:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;main.c: 643:     }
  8994  003E7A  4A08               	infsnz	CheckIfCaughtFrisbee@i^0,f,c
  8995  003E7C  2A09               	incf	(CheckIfCaughtFrisbee@i+1)^0,f,c
  8996  003E7E                     
  8997                           ; BSR set to: 0
  8998  003E7E  BE09               	btfsc	(CheckIfCaughtFrisbee@i+1)^0,7,c
  8999  003E80  EF4B  F01F         	goto	i2u300_41
  9000  003E84  5009               	movf	(CheckIfCaughtFrisbee@i+1)^0,w,c
  9001  003E86  E109               	bnz	i2u300_40
  9002  003E88  0E04               	movlw	4
  9003  003E8A  5C08               	subwf	CheckIfCaughtFrisbee@i^0,w,c
  9004  003E8C  A0D8               	btfss	status,0,c
  9005  003E8E  EF4B  F01F         	goto	i2u300_41
  9006  003E92  EF4D  F01F         	goto	i2u300_40
  9007  003E96                     i2u300_41:
  9008  003E96  EFAB  F01E         	goto	i2l3006
  9009  003E9A                     i2u300_40:
  9010  003E9A                     i2l429:
  9011  003E9A  0012               	return		;funcret
  9012  003E9C                     __end_of_CheckIfCaughtFrisbee:
  9013                           	callstack 0
  9014                           
  9015 ;; *************** function i2___wmul *****************
  9016 ;; Defined at:
  9017 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  multiplier      2    0[COMRAM] unsigned int 
  9020 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  product         2    4[COMRAM] unsigned int 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  2    0[COMRAM] unsigned int 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, prodl, prodh
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;Total ram usage:        6 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_highIsr
  9042 ;;		_MoveEveryone
  9043 ;;		_CheckIfCaughtFrisbee
  9044 ;;		_CatchFrisbee
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text28
  9049  004268                     __ptext28:
  9050                           	callstack 0
  9051  004268                     i2___wmul:
  9052                           	callstack 24
  9053  004268  5001               	movf	i2___wmul@multiplier^0,w,c
  9054  00426A  0203               	mulwf	i2___wmul@multiplicand^0,c
  9055  00426C  CFF3 F005          	movff	prodl,i2___wmul@product
  9056  004270  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9057  004274  5001               	movf	i2___wmul@multiplier^0,w,c
  9058  004276  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9059  004278  50F3               	movf	243,w,c
  9060  00427A  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9061  00427C  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9062  00427E  0203               	mulwf	i2___wmul@multiplicand^0,c
  9063  004280  50F3               	movf	243,w,c
  9064  004282  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9065  004284  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9066  004288  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9067  00428C  0012               	return		;funcret
  9068  00428E                     __end_ofi2___wmul:
  9069                           	callstack 0
  9070                           
  9071                           	psect	rparam
  9072  0000                     
  9073                           	psect	temp
  9074  00007C                     btemp:
  9075                           	callstack 0
  9076  00007C                     	ds	1
  9077  0000                     int$flags	set	btemp
  9078  0000                     wtemp8	set	btemp+1
  9079  0000                     ttemp5	set	btemp+1
  9080  0000                     ttemp6	set	btemp+4
  9081  0000                     ttemp7	set	btemp+8
  9082                           
  9083                           	psect	idloc
  9084                           
  9085                           ;Config register IDLOC0 @ 0x200000
  9086                           ;	unspecified, using default values
  9087  200000                     	org	2097152
  9088  200000  FF                 	db	255
  9089                           
  9090                           ;Config register IDLOC1 @ 0x200001
  9091                           ;	unspecified, using default values
  9092  200001                     	org	2097153
  9093  200001  FF                 	db	255
  9094                           
  9095                           ;Config register IDLOC2 @ 0x200002
  9096                           ;	unspecified, using default values
  9097  200002                     	org	2097154
  9098  200002  FF                 	db	255
  9099                           
  9100                           ;Config register IDLOC3 @ 0x200003
  9101                           ;	unspecified, using default values
  9102  200003                     	org	2097155
  9103  200003  FF                 	db	255
  9104                           
  9105                           ;Config register IDLOC4 @ 0x200004
  9106                           ;	unspecified, using default values
  9107  200004                     	org	2097156
  9108  200004  FF                 	db	255
  9109                           
  9110                           ;Config register IDLOC5 @ 0x200005
  9111                           ;	unspecified, using default values
  9112  200005                     	org	2097157
  9113  200005  FF                 	db	255
  9114                           
  9115                           ;Config register IDLOC6 @ 0x200006
  9116                           ;	unspecified, using default values
  9117  200006                     	org	2097158
  9118  200006  FF                 	db	255
  9119                           
  9120                           ;Config register IDLOC7 @ 0x200007
  9121                           ;	unspecified, using default values
  9122  200007                     	org	2097159
  9123  200007  FF                 	db	255
  9124                           
  9125                           	psect	config
  9126                           
  9127                           ; Padding undefined space
  9128  300000                     	org	3145728
  9129  300000  FF                 	db	255
  9130                           
  9131                           ;Config register CONFIG1H @ 0x300001
  9132                           ;	unspecified, using default values
  9133                           ;	Oscillator Selection bits
  9134                           ;	OSC = 0x7, unprogrammed default
  9135                           ;	Fail-Safe Clock Monitor Enable bit
  9136                           ;	FCMEN = 0x0, unprogrammed default
  9137                           ;	Internal/External Oscillator Switchover bit
  9138                           ;	IESO = 0x0, unprogrammed default
  9139  300001                     	org	3145729
  9140  300001  07                 	db	7
  9141                           
  9142                           ;Config register CONFIG2L @ 0x300002
  9143                           ;	unspecified, using default values
  9144                           ;	Power-up Timer Enable bit
  9145                           ;	PWRT = 0x1, unprogrammed default
  9146                           ;	Brown-out Reset Enable bits
  9147                           ;	BOREN = 0x3, unprogrammed default
  9148                           ;	Brown Out Reset Voltage bits
  9149                           ;	BORV = 0x3, unprogrammed default
  9150  300002                     	org	3145730
  9151  300002  1F                 	db	31
  9152                           
  9153                           ;Config register CONFIG2H @ 0x300003
  9154                           ;	unspecified, using default values
  9155                           ;	Watchdog Timer Enable bit
  9156                           ;	WDT = 0x1, unprogrammed default
  9157                           ;	Watchdog Timer Postscale Select bits
  9158                           ;	WDTPS = 0xF, unprogrammed default
  9159  300003                     	org	3145731
  9160  300003  1F                 	db	31
  9161                           
  9162                           ; Padding undefined space
  9163  300004                     	org	3145732
  9164  300004  FF                 	db	255
  9165                           
  9166                           ;Config register CONFIG3H @ 0x300005
  9167                           ;	unspecified, using default values
  9168                           ;	CCP2 MUX bit
  9169                           ;	CCP2MX = 0x1, unprogrammed default
  9170                           ;	PORTB A/D Enable bit
  9171                           ;	PBADEN = 0x1, unprogrammed default
  9172                           ;	Low-Power Timer1 Oscillator Enable bit
  9173                           ;	LPT1OSC = 0x0, unprogrammed default
  9174                           ;	MCLR Pin Enable bit
  9175                           ;	MCLRE = 0x1, unprogrammed default
  9176  300005                     	org	3145733
  9177  300005  83                 	db	131
  9178                           
  9179                           ;Config register CONFIG4L @ 0x300006
  9180                           ;	unspecified, using default values
  9181                           ;	Stack Full/Underflow Reset Enable bit
  9182                           ;	STVREN = 0x1, unprogrammed default
  9183                           ;	Single-Supply ICSP Enable bit
  9184                           ;	LVP = 0x1, unprogrammed default
  9185                           ;	Extended Instruction Set Enable bit
  9186                           ;	XINST = 0x0, unprogrammed default
  9187                           ;	Background Debugger Enable bit
  9188                           ;	DEBUG = 0x1, unprogrammed default
  9189  300006                     	org	3145734
  9190  300006  85                 	db	133
  9191                           
  9192                           ; Padding undefined space
  9193  300007                     	org	3145735
  9194  300007  FF                 	db	255
  9195                           
  9196                           ;Config register CONFIG5L @ 0x300008
  9197                           ;	unspecified, using default values
  9198                           ;	Code Protection bit
  9199                           ;	CP0 = 0x1, unprogrammed default
  9200                           ;	Code Protection bit
  9201                           ;	CP1 = 0x1, unprogrammed default
  9202                           ;	Code Protection bit
  9203                           ;	CP2 = 0x1, unprogrammed default
  9204                           ;	Code Protection bit
  9205                           ;	CP3 = 0x1, unprogrammed default
  9206  300008                     	org	3145736
  9207  300008  0F                 	db	15
  9208                           
  9209                           ;Config register CONFIG5H @ 0x300009
  9210                           ;	unspecified, using default values
  9211                           ;	Boot Block Code Protection bit
  9212                           ;	CPB = 0x1, unprogrammed default
  9213                           ;	Data EEPROM Code Protection bit
  9214                           ;	CPD = 0x1, unprogrammed default
  9215  300009                     	org	3145737
  9216  300009  C0                 	db	192
  9217                           
  9218                           ;Config register CONFIG6L @ 0x30000A
  9219                           ;	unspecified, using default values
  9220                           ;	Write Protection bit
  9221                           ;	WRT0 = 0x1, unprogrammed default
  9222                           ;	Write Protection bit
  9223                           ;	WRT1 = 0x1, unprogrammed default
  9224                           ;	Write Protection bit
  9225                           ;	WRT2 = 0x1, unprogrammed default
  9226                           ;	Write Protection bit
  9227                           ;	WRT3 = 0x1, unprogrammed default
  9228  30000A                     	org	3145738
  9229  30000A  0F                 	db	15
  9230                           
  9231                           ;Config register CONFIG6H @ 0x30000B
  9232                           ;	unspecified, using default values
  9233                           ;	Configuration Register Write Protection bit
  9234                           ;	WRTC = 0x1, unprogrammed default
  9235                           ;	Boot Block Write Protection bit
  9236                           ;	WRTB = 0x1, unprogrammed default
  9237                           ;	Data EEPROM Write Protection bit
  9238                           ;	WRTD = 0x1, unprogrammed default
  9239  30000B                     	org	3145739
  9240  30000B  E0                 	db	224
  9241                           
  9242                           ;Config register CONFIG7L @ 0x30000C
  9243                           ;	unspecified, using default values
  9244                           ;	Table Read Protection bit
  9245                           ;	EBTR0 = 0x1, unprogrammed default
  9246                           ;	Table Read Protection bit
  9247                           ;	EBTR1 = 0x1, unprogrammed default
  9248                           ;	Table Read Protection bit
  9249                           ;	EBTR2 = 0x1, unprogrammed default
  9250                           ;	Table Read Protection bit
  9251                           ;	EBTR3 = 0x1, unprogrammed default
  9252  30000C                     	org	3145740
  9253  30000C  0F                 	db	15
  9254                           
  9255                           ;Config register CONFIG7H @ 0x30000D
  9256                           ;	unspecified, using default values
  9257                           ;	Boot Block Table Read Protection bit
  9258                           ;	EBTRB = 0x1, unprogrammed default
  9259  30000D                     	org	3145741
  9260  30000D  40                 	db	64
  9261                           tosu	equ	0xFFF
  9262                           tosh	equ	0xFFE
  9263                           tosl	equ	0xFFD
  9264                           stkptr	equ	0xFFC
  9265                           pclatu	equ	0xFFB
  9266                           pclath	equ	0xFFA
  9267                           pcl	equ	0xFF9
  9268                           tblptru	equ	0xFF8
  9269                           tblptrh	equ	0xFF7
  9270                           tblptrl	equ	0xFF6
  9271                           tablat	equ	0xFF5
  9272                           prodh	equ	0xFF4
  9273                           prodl	equ	0xFF3
  9274                           indf0	equ	0xFEF
  9275                           postinc0	equ	0xFEE
  9276                           postdec0	equ	0xFED
  9277                           preinc0	equ	0xFEC
  9278                           plusw0	equ	0xFEB
  9279                           fsr0h	equ	0xFEA
  9280                           fsr0l	equ	0xFE9
  9281                           wreg	equ	0xFE8
  9282                           indf1	equ	0xFE7
  9283                           postinc1	equ	0xFE6
  9284                           postdec1	equ	0xFE5
  9285                           preinc1	equ	0xFE4
  9286                           plusw1	equ	0xFE3
  9287                           fsr1h	equ	0xFE2
  9288                           fsr1l	equ	0xFE1
  9289                           bsr	equ	0xFE0
  9290                           indf2	equ	0xFDF
  9291                           postinc2	equ	0xFDE
  9292                           postdec2	equ	0xFDD
  9293                           preinc2	equ	0xFDC
  9294                           plusw2	equ	0xFDB
  9295                           fsr2h	equ	0xFDA
  9296                           fsr2l	equ	0xFD9
  9297                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        82
    BSS         254
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     74     123
    BANK0           128     32     120
    BANK1           256     10     209
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    MoveEveryone$1809	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1808	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1807	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1806	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1805	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1804	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1803	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1802	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1801	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1800	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1799	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1798	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1769	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1768	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1767	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1766	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1765	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1764	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1763	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    MoveEveryone$1762	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1761	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1760	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1759	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1758	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1532_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    downright@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    downleft@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    upright@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    upleft@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    down@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    up@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    right@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    left@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    CatchFrisbee@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    display	PTR struct GameElement[16][4] size(2) Largest target is 42
		 -> NULL(NULL[0]), objs(BANK0[42]), 

    sp__CheckIfCaughtFrisbee	PTR struct GameElement size(2) Largest target is 42
		 -> NULL(NULL[0]), objs(BANK0[42]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(COMRAM[8]), frisbeeChar(COMRAM[8]), selected_teamB_player_with_frisbee(COMRAM[8]), selected_teamA_player_with_frisbee(BANK0[8]), 
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), teamB_player(BANK0[8]), teamA_player(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lowIsr in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_MoveEveryone
    _compute_frisbee_target_and_route->_random_generator
    _MoveEveryone->_left
    _MoveEveryone->_up
    _MoveEveryone->_upleft
    _upright->_CatchFrisbee
    _upleft->_CatchFrisbee
    _up->_CatchFrisbee
    _right->_CatchFrisbee
    _random_generator->___lwmod
    _left->_CatchFrisbee
    _downright->_CatchFrisbee
    _downleft->_CatchFrisbee
    _down->_CatchFrisbee
    _CatchFrisbee->i2___wmul
    _CheckIfCaughtFrisbee->i2___wmul

Critical Paths under _main in BANK0

    _main->_InitGameObjects
    _UpdateAndPrintDisplay2D->___wmul
    _InitLCD->_LCDCmd
    _InitGameObjects->___wmul
    _AddCustomCharacters->_LCDAddSpecialCharacter
    _LCDAddSpecialCharacter->_LCDGoto
    _LCDGoto->_LCDCmd

Critical Paths under _lowIsr in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UpdateAndPrintDisplay2D

Critical Paths under _lowIsr in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowIsr in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowIsr in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowIsr in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowIsr in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowIsr in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowIsr in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowIsr in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowIsr in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowIsr in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowIsr in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowIsr in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowIsr in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowIsr in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowIsr in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   46186
                _AddCustomCharacters
                    _InitGameObjects
                     _InitInterrupts
                            _InitLCD
            _UpdateAndPrintDisplay2D
 ---------------------------------------------------------------------------------
 (1) _UpdateAndPrintDisplay2D                             20    20      0   22891
                                             14 BANK0     10    10      0
                                              0 BANK1     10    10      0
                             _LCDDat
                            _LCDGoto
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGameObjects                                     18    18      0   21201
                                             14 BANK0     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4   20842
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _AddCustomCharacters                                  0     0      0    2063
             _LCDAddSpecialCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDAddSpecialCharacter                               4     2      2    2063
                                             11 BANK0      4     2      2
                             _LCDCmd
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1    1120
                                              9 BANK0      2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               1     1      0      31
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               1     1      0      31
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lowIsr                                               8     8      0      46
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _highIsr                                             22    22      0   43796
                                             52 COMRAM    22    22      0
               _CheckIfCaughtFrisbee
                       _MoveEveryone
               _SetupDebouncingTimer
   _compute_frisbee_target_and_route
                               _down
                               _left
                              _right
                                 _up
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) _compute_frisbee_target_and_route                    32    28      4    2041
                                             13 COMRAM    32    28      4
                   _random_generator
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _SetupDebouncingTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MoveEveryone                                        22    22      0   26419
                                             30 COMRAM    22    22      0
                               _down
                           _downleft
                          _downright
                               _left
                   _random_generator
                              _right
                                 _up
                             _upleft
                            _upright
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) _upright                                             11     9      2    2953
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _upleft                                              12    10      2    2953
                                             18 COMRAM    12    10      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (7) _up                                                  12    10      2    2985
                                             18 COMRAM    12    10      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (7) _right                                               11     9      2    2985
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _random_generator                                     8     6      2     653
                                              5 COMRAM     8     6      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _left                                                12    10      2    2985
                                             18 COMRAM    12    10      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _downright                                           10     8      2    2953
                                             18 COMRAM    10     8      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _downleft                                            11     9      2    2953
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (7) _down                                                11     9      2    2985
                                             18 COMRAM    11     9      2
                       _CatchFrisbee
 ---------------------------------------------------------------------------------
 (8) _CatchFrisbee                                        12    10      2    2393
                                              6 COMRAM    12    10      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) _CheckIfCaughtFrisbee                                 3     3      0    1741
                                              6 COMRAM     3     3      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4    1563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddCustomCharacters
     _LCDAddSpecialCharacter
       _LCDCmd
       _LCDDat
       _LCDGoto
         _LCDCmd
   _InitGameObjects
     ___wmul
   _InitInterrupts
   _InitLCD
     _LCDCmd
   _UpdateAndPrintDisplay2D
     _LCDDat
     _LCDGoto
       _LCDCmd
     ___wmul

 _lowIsr (ROOT)

 _highIsr (ROOT)
   _CheckIfCaughtFrisbee
     i2___wmul
   _MoveEveryone
     _down
       _CatchFrisbee
         i2___wmul
     _downleft
       _CatchFrisbee
         i2___wmul
     _downright
       _CatchFrisbee
         i2___wmul
     _left
       _CatchFrisbee
         i2___wmul
     _random_generator
       ___lwmod
     _right
       _CatchFrisbee
         i2___wmul
     _up
       _CatchFrisbee
         i2___wmul
     _upleft
       _CatchFrisbee
         i2___wmul
     _upright
       _CatchFrisbee
         i2___wmul
     i2___wmul
   _SetupDebouncingTimer
   _compute_frisbee_target_and_route
     _random_generator
       ___lwmod
     i2___wmul (ARG)
   _down
     _CatchFrisbee
       i2___wmul
   _left
     _CatchFrisbee
       i2___wmul
   _right
     _CatchFrisbee
       i2___wmul
   _up
     _CatchFrisbee
       i2___wmul
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      D1       7       81.6%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     20      78       5       93.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4A      7B       1       97.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C4      34        0.0%
DATA                 0      0     1C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri May 26 23:59:25 2023

                                                        _a 0078  
                                                        _b 0076  
                                                        _c 0074  
                                             _pulseCounter 006E  
                                                       _up 24AA  
                                                       bsr 000FE0  
                               LCDAddSpecialCharacter@data 00E3  
                                      ___wmul@multiplicand 00E2  
                    LCDAddSpecialCharacter@character_index 00E5  
                          __end_of_UpdateAndPrintDisplay2D 1ABC  
                                                      l200 41E2  
                                                      l203 4052  
                                                      l172 42D2  
                                                      l406 3B7E  
                                                      l175 42B0  
                                                      l184 40CA  
                                                      l514 4266  
                                                      l418 3F3E  
                                                      l195 4214  
                                                      l380 1A78  
                                                      ?_up 0013  
                                                      l397 1ABA  
                                                      wreg 000FE8  
                                                     ??_up 0015  
                                          __end_of_LCDGoto 40CC  
                                                     l3100 3F1E  
                                                     l3110 3F34  
                                                     l3102 3F20  
                                                     l3112 3F38  
                                                     l3104 3F26  
                                                     l3114 3F3A  
                                                     l3106 3F2C  
                                                     l3050 3EDE  
                                                     l3042 3E9C  
                                                     l4010 42F2  
                                                     l3116 3F3C  
                                                     l3108 3F30  
                                                     l3060 3EE8  
                                                     l3052 3EE0  
                                                     l3044 3EB8  
                                                     l4012 42F6  
                                                     l3070 3EF2  
                                                     l3062 3EEA  
                                                     l3054 3EE2  
                                                     l3046 3EC2  
                                                     l4014 42FA  
                                                     l3080 3EFE  
                                                     l3072 3EF4  
                                                     l3064 3EEC  
                                                     l3056 3EE4  
                                                     l3048 3EDC  
                                                     l4016 42FE  
                                                     l3090 3F08  
                                                     l3082 3F00  
                                                     l3074 3EF6  
                                                     l3066 3EEE  
                                                     l3058 3EE6  
                                                     l4018 4302  
                                                     l3092 3F0A  
                                                     l3084 3F02  
                                                     l3076 3EFA  
                                                     l3068 3EF0  
                                                     l3094 3F0C  
                                                     l3086 3F04  
                                                     l3078 3EFC  
                                                     l3096 3F1A  
                                                     l3088 3F06  
                                                     l3098 3F1C  
                                                     l3800 40C6  
                                                     l3810 41B2  
                                                     l3802 419E  
                                                     l3812 41C4  
                                                     l3804 41AC  
                                                     l3820 425E  
                                                     l3900 3B62  
                                                     l3814 41C8  
                                                     l4294 1940  
                                                     l3902 1622  
                                                     l3760 42BA  
                                                     l3816 41D8  
                                                     l4296 19D8  
                                                     l3920 169C  
                                                     l3770 4292  
                                                     l3762 42BE  
                                                     l3818 4240  
                                                     l3850 41EC  
                                                     l4298 1A52  
                                                     l3930 16C4  
                                                     l3922 16A0  
                                                     l3914 1634  
                                                     l3780 42A6  
                                                     l3772 4296  
                                                     l3764 42C0  
                                                     l3860 4202  
                                                     l3852 41EE  
                                                     l3940 1822  
                                                     l3932 16F8  
                                                     l3924 16BC  
                                                     l3916 167A  
                                                     l3908 162C  
                                                     l3782 42AE  
                                                     l3774 429A  
                                                     l3766 42C8  
                                                     l3758 42B6  
                                                     l3790 408A  
                                                     l3862 4208  
                                                     l3854 41F0  
                                                     l3846 41E4  
                                                     l3942 1830  
                                                     l3934 172A  
                                                     l3918 1680  
                                                     l3776 429C  
                                                     l3768 42CA  
                                                     l3792 4098  
                                                     l3784 4058  
                                                     l3880 398C  
                                                     l3864 420E  
                                                     l3856 41F6  
                                                     l3848 41E8  
                                                     l3960 18A8  
                                                     l3936 175C  
                                                     l3778 42A4  
                                                     l3794 40AA  
                                                     l3786 406A  
                                                     l3866 3FD2  
                                                     l3890 3A0C  
                                                     l3882 39CC  
                                                     l3874 3984  
                                                     l3858 41FC  
                                                     l3970 18DA  
                                                     l3962 18B2  
                                                     l3954 1840  
                                                     l3938 181A  
                                                     l3796 40B8  
                                                     l3788 4078  
                                                     l3884 39D0  
                                                     l3868 397A  
                                                     l3980 1972  
                                                     l3964 18BC  
                                                     l3956 184E  
                                                     l3948 1838  
                                                     l3798 40C2  
                                                     l3886 39EC  
                                                     l3974 18E4  
                                                     l3966 18C6  
                                                     l3990 1A78  
                                                     l3958 1858  
                                                     l3896 3AC0  
                                                     l3888 39F0  
                                                     l3992 1A7E  
                                                     l3984 197C  
                                                     l3976 195E  
                                                     l3968 18D0  
                                                     l3898 3B5E  
                                                     l3994 1A9A  
                                                     l3978 1968  
                                                     l3996 1A9E  
                                                     l3988 19F6  
                                                     STR_1 1001  
                                                     _LATA 000F89  
                                                     _LATD 000F8C  
                                                     u4207 42CC  
                                                     u4217 429E  
                                                     u4227 42A8  
                                                     u3700 408A  
                                                     u3701 4086  
                                                     u3710 40AA  
                                                     u3711 40A6  
                                                     u3720 41D8  
                                                     u3721 41D4  
                                                     u3810 169C  
                                                     u3811 1698  
                                                     u3820 16BC  
                                                     u4197 42C2  
                                                     u3821 16B8  
                                                     u3805 163E  
                                                     u3830 16F8  
                                                     u3831 16F4  
                                                     u3840 172A  
                                                     u3905 18EE  
                                                     u3841 1726  
                                                     u3690 406A  
                                                     u3770 39EC  
                                                     u3930 1A9A  
                                                     u3850 175C  
                                                     u3691 4066  
                                                     u3771 39E8  
                                                     u3931 1A96  
                                                     u3915 1986  
                                                     u3851 1758  
                                                     u3780 3A0C  
                                                     u3940 1ABA  
                                                     u3781 3A08  
                                                     u3765 3996  
                                                     u3941 1AB6  
                                                     u3925 1A00  
                                                     u3790 3B7E  
                                                     u3870 1830  
                                                     u3791 3B7A  
                                                     u3871 182C  
                                                     u3865 17AC  
                                                     u3890 18A8  
                                                     u3891 18A4  
                                                     u3885 1862  
                                          _InitGameObjects 397A  
                                                     _main 42F2  
                                                     _left 27DA  
                                                     _down 3140  
                                                     _objs 0084  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     fsr2l 000FD9  
                                                     btemp 007C  
                                                     up@pl 0013  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 00C6  
                                             ___param_bank 000000  
                                          __end_of_InitLCD 4216  
                                                    ?_main 0001  
                                                    ?_left 0013  
                                                    ?_down 0013  
                                                    _T0CON 000FD5  
                                                    _T1CON 000FCD  
                                                    _T2CON 000FCA  
                                                    _T3CON 000FB1  
                                          __end_of___lwmod 419A  
                                                    i2l131 1B50  
                                                    i2l141 1C80  
                                                    i2l134 1BA2  
                                                    i2l127 1ABC  
                                                    i1l287 00AE  
                                                    i2l152 1DB4  
                                                    i2l136 1BAA  
                                                    i2l313 3978  
                                                    i2l129 1B1E  
                                                    i2l147 1CCE  
                                                    i2l164 412C  
                                                    i2l165 4134  
                                                    i2l421 431C  
                                                    i2l158 1E0A  
                                                    i2l159 1E12  
                                                    i2l248 105C  
                                                    i2l265 141C  
                                                    i2l257 1136  
                                                    i2l514 428C  
                                                    i2l282 1606  
                                                    i2l258 1298  
                                                    i2l507 3736  
                                                    i2l443 2B00  
                                                    i2l451 313E  
                                                    i2l429 3E9A  
                                                    i2l269 14CC  
                                                    i2l439 3D4C  
                                                    i2l467 3440  
                                                    i2l459 27D8  
                                                    i2l477 2164  
                                                    i2l487 24A8  
                                                    i2l497 2E24  
                                                    _TMR0H 000FD7  
                                                    _TMR1H 000FCF  
                                                    _TMR0L 000FD6  
                                                    _TMR3H 000FB3  
                                                    _TMR1L 000FCE  
                                                    _TMR3L 000FB2  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                             __end_of_CheckIfCaughtFrisbee 3E9C  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISD 000F95  
                                          __end_of_highIsr 1622  
                             UpdateAndPrintDisplay2D@i_948 01CF  
                             UpdateAndPrintDisplay2D@i_949 01CB  
                             UpdateAndPrintDisplay2D@j_950 01CD  
                                    __size_of_CatchFrisbee 01CE  
                                                    _lcd_x 00AF  
                                                    _lcd_y 00AE  
                                                    _right 2E26  
                                                    tablat 000FF5  
                                         __end_ofi2___wmul 428E  
                                                    ttemp5 007D  
                                                    ttemp6 0080  
                                                    ttemp7 0084  
                                                    status 000FD8  
                                                    wtemp8 007D  
                                          __end_of_upright 24AA  
                                 __end_of_random_generator 4136  
                                          __initialization 3F40  
                                             __end_of_main 430E  
                                             __end_of_left 2B02  
                                             __end_of_down 3442  
                                           _InitInterrupts 3E9C  
                                                   ??_main 00F8  
                                                   ??_left 0015  
                                                   ??_down 0015  
                                             _CatchFrisbee 3B80  
                                            __activetblptr 000002  
                                                ??_LCDGoto 00E2  
                                  __end_of_InitGameObjects 3B80  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   _ADCON2 000FC0  
                                                   _ADRESH 000FC4  
                                                   _ADRESL 000FC3  
                                                   ?_right 0013  
                                                   _LCDDat 428E  
                                                   _LCDCmd 42B2  
                                                   i2l1022 4198  
                                                   i2l1015 4190  
                                                   i1l3440 003E  
                                                   i1l3450 007C  
                                                   i1l3442 0050  
                                                   i1l3460 00AC  
                                                   i1l3452 0080  
                                                   i1l3444 0062  
                                                   i1l3436 002E  
                                                   i1l3454 0092  
                                                   i1l3446 0066  
                                                   i1l3438 003A  
                                                   i2l3000 3D4E  
                                                   i1l3456 00A4  
                                                   i1l3448 006A  
                                                   i2l3010 3DBE  
                                                   i1l3458 00A8  
                                                   i2l3020 3E0A  
                                                   i2l3012 3DEE  
                                                   i2l3030 3E62  
                                                   i2l3022 3E0E  
                                                   i2l3014 3DF8  
                                                   i2l3006 3D56  
                                                   i2l3024 3E12  
                                                   i2l3016 3DFE  
                                                   i2l3008 3D8A  
                                                   i2l3040 431A  
                                                   i2l3026 3E36  
                                                   i2l3018 3E02  
                                                   i2l3034 3E7A  
                                                   i2l3036 3E7E  
                                                   i2l3028 3E5A  
                                                   i2l2500 3C4E  
                                                   i2l3300 1120  
                                                   i2l2510 3D0C  
                                                   i2l2502 3C8A  
                                                   i2l3038 430E  
                                                   i2l3310 1170  
                                                   i2l3302 114E  
                                                   i2l2520 3D44  
                                                   i2l2512 3D10  
                                                   i2l2504 3C96  
                                                   i2l2600 2E26  
                                                   i2l3400 1514  
                                                   i2l3320 11EC  
                                                   i2l3312 1196  
                                                   i2l3304 1156  
                                                   i2l2442 4268  
                                                   i2l2522 3D48  
                                                   i2l2514 3D18  
                                                   i2l2506 3C9A  
                                                   i2l2530 4158  
                                                   i2l2610 2F2E  
                                                   i2l3410 1584  
                                                   i2l3402 1524  
                                                   i2l3330 128C  
                                                   i2l3322 121C  
                                                   i2l3314 11C2  
                                                   i2l3306 1168  
                                                   i2l2444 4284  
                                                   i2l2516 3D1C  
                                                   i2l2508 3CB6  
                                                   i2l2532 4166  
                                                   i2l2524 4136  
                                                   i2l2540 40CC  
                                                   i2l2620 3098  
                                                   i2l2604 2E44  
                                                   i2l2700 1F3E  
                                                   i2l4300 15D0  
                                                   i2l3412 15A4  
                                                   i2l3404 1544  
                                                   i2l3420 15F6  
                                                   i2l3340 12BE  
                                                   i2l3324 1224  
                                                   i2l3316 11C6  
                                                   i2l3308 116C  
                                                   i2l3332 1298  
                                                   i2l3260 1020  
                                                   i2l2518 3D3C  
                                                   i2l2630 3140  
                                                   i2l2534 417C  
                                                   i2l2526 4148  
                                                   i2l2550 4106  
                                                   i2l2542 40CE  
                                                   i2l2622 30B0  
                                                   i2l2614 2FAA  
                                                   i2l2606 2EB2  
                                                   i2l2710 20B0  
                                                   i2l4302 390A  
                                                   i2l3430 1604  
                                                   i2l3414 15B4  
                                                   i2l3406 1554  
                                                   i2l3350 13BE  
                                                   i2l3342 12F0  
                                                   i2l3334 12A6  
                                                   i2l3326 1278  
                                                   i2l3318 11DA  
                                                   i2l3270 1048  
                                                   i2l3262 1032  
                                                   i2l2480 3B80  
                                                   i2l2640 323C  
                                                   i2l2800 35A8  
                                                   i2l2536 4184  
                                                   i2l2528 4150  
                                                   i2l2552 410A  
                                                   i2l2544 40E4  
                                                   i2l2624 30CC  
                                                   i2l2616 3024  
                                                   i2l2712 20C8  
                                                   i2l2704 1FBE  
                                                   i2l3408 1574  
                                                   i2l3360 13F2  
                                                   i2l3352 13C2  
                                                   i2l3344 1350  
                                                   i2l3336 12B6  
                                                   i2l3424 15FE  
                                                   i2l3328 1288  
                                                   i2l3280 106A  
                                                   i2l3272 104C  
                                                   i2l3264 1036  
                                                   i2l2482 3B90  
                                                   i2l2490 3C12  
                                                   i2l2650 3396  
                                                   i2l2634 3162  
                                                   i2l2810 36B6  
                                                   i2l2802 360E  
                                                   i2l2538 418A  
                                                   i2l2546 40E8  
                                                   i2l2626 30D6  
                                                   i2l2618 3030  
                                                   i2l2570 24AA  
                                                   i2l2714 20E4  
                                                   i2l2706 203C  
                                                   i2l2722 2166  
                                                   i2l3426 1600  
                                                   i2l3418 15BC  
                                                   i2l3370 140C  
                                                   i2l3362 13F6  
                                                   i2l3354 13C6  
                                                   i2l3346 1356  
                                                   i2l3338 12BA  
                                                   i2l3290 10DA  
                                                   i2l3282 1092  
                                                   i2l3274 1054  
                                                   i2l3266 1038  
                                                   i2l2492 3C36  
                                                   i2l2484 3BF6  
                                                   i2l2652 33AE  
                                                   i2l2644 32B0  
                                                   i2l2636 31C8  
                                                   i2l2812 36C0  
                                                   i2l2804 361A  
                                                   i2l2660 27DA  
                                                   i2l2548 40F4  
                                                   i2l2580 25BC  
                                                   i2l2716 20EE  
                                                   i2l2708 2048  
                                                   i2l2732 228A  
                                                   i2l2740 238C  
                                                   i2l2724 2180  
                                                   i2l3428 1602  
                                                   i2l3380 143A  
                                                   i2l3372 140E  
                                                   i2l3364 13FA  
                                                   i2l3356 13CA  
                                                   i2l3348 138A  
                                                   i2l3292 10E6  
                                                   i2l3284 109E  
                                                   i2l3276 1056  
                                                   i2l3268 103A  
                                                   i2l2494 3C46  
                                                   i2l2486 3BFA  
                                                   i2l2654 33CA  
                                                   i2l2646 3322  
                                                   i2l2814 36CE  
                                                   i2l2806 3682  
                                                   i2l2670 28E8  
                                                   i2l2590 272E  
                                                   i2l2574 24CA  
                                                   i2l2718 20FC  
                                                   i2l2750 2440  
                                                   i2l2742 23F4  
                                                   i2l2726 21A0  
                                                   i2l2830 1B12  
                                                   i2l3390 14A0  
                                                   i2l3382 143E  
                                                   i2l3374 1412  
                                                   i2l3366 1402  
                                                   i2l3358 13CE  
                                                   i2l3286 10B6  
                                                   i2l3294 10EE  
                                                   i2l3278 105A  
                                                   i2l2488 3BFE  
                                                   i2l2656 33D8  
                                                   i2l2648 332E  
                                                   i2l2760 2BA2  
                                                   i2l2808 369A  
                                                   i2l2680 2A5A  
                                                   i2l2664 27F6  
                                                   i2l2592 2746  
                                                   i2l2584 263C  
                                                   i2l2576 253C  
                                                   i2l2744 240C  
                                                   i2l2736 2306  
                                                   i2l2728 220E  
                                                   i2l2840 1B80  
                                                   i2l2832 1B34  
                                                   i2l2824 1ABC  
                                                   i2l3384 1470  
                                                   i2l3392 14C4  
                                                   i2l3376 1416  
                                                   i2l3368 140A  
                                                   i2l3296 1102  
                                                   i2l3288 10C2  
                                                   i2l2770 2CFC  
                                                   i2l2754 2B02  
                                                   i2l2682 2A72  
                                                   i2l2674 2968  
                                                   i2l2666 2868  
                                                   i2l2594 2762  
                                                   i2l2586 26BA  
                                                   i2l2690 1E14  
                                                   i2l2746 2428  
                                                   i2l2738 2380  
                                                   i2l2850 1BE0  
                                                   i2l2842 1B96  
                                                   i2l2834 1B44  
                                                   i2l2826 1AEC  
                                                   i2l3394 14DA  
                                                   i2l3386 1494  
                                                   i2l3378 142A  
                                                   i2l3298 1110  
                                                   i2l2780 2DAE  
                                                   i2l2764 2C16  
                                                   i2l2772 2D08  
                                                   i2l2756 2B1A  
                                                   i2l2684 2A8E  
                                                   i2l2676 29E6  
                                                   i2l2596 2770  
                                                   i2l2588 26C6  
                                                   i2l2692 1E2C  
                                                   i2l2748 2432  
                                                   i2l2860 1C3E  
                                                   i2l2852 1C08  
                                                   i2l2844 1BB2  
                                                   i2l2836 1B66  
                                                   i2l2828 1B02  
                                                   i2l3396 14EA  
                                                   i2l3388 1498  
                                                   i2l2782 2DBC  
                                                   i2l2774 2D70  
                                                   i2l2758 2B3C  
                                                   i2l2790 347E  
                                                   i2l2686 2A98  
                                                   i2l2678 29F2  
                                                   i2l2694 1E4C  
                                                   i2l2950 3740  
                                                   i2l2870 1CB8  
                                                   i2l2862 1C66  
                                                   i2l2854 1C0C  
                                                   i2l2846 1BC8  
                                                   i2l3398 14F4  
                                                   i2l2776 2D88  
                                                   i2l2768 2C8A  
                                                   i2l2792 34D8  
                                                   i2l2696 1EBE  
                                                   i2l2960 37A4  
                                                   i2l2944 3738  
                                                   i2l2880 1D34  
                                                   i2l2872 1CD6  
                                                   i2l2864 1C6A  
                                                   i2l2848 1BD4  
                                                   i2l2856 1C26  
                                                   i2l2778 2DA4  
                                                   i2l2786 3442  
                                                   i2l2970 3824  
                                                   i2l2962 37C4  
                                                   i2l2954 375C  
                                                   i2l2890 1D9A  
                                                   i2l2882 1D38  
                                                   i2l2874 1CEC  
                                                   i2l2866 1C8C  
                                                   i2l2858 1C32  
                                                   i2l2796 3540  
                                                   i2l2788 345C  
                                                   i2l2980 3894  
                                                   i2l2972 3834  
                                                   i2l2964 37D4  
                                                   i2l2956 3774  
                                                   i2l2892 1D9E  
                                                   i2l2876 1CF8  
                                                   i2l2884 1D52  
                                                   i2l2868 1CB4  
                                                   i2l2982 38B4  
                                                   i2l2974 3854  
                                                   i2l2966 37F4  
                                                   i2l2958 3794  
                                                   i2l2990 38F4  
                                                   i2l2894 1DC0  
                                                   i2l2886 1D5E  
                                                   i2l2878 1D04  
                                                   i2l2984 38C4  
                                                   i2l2976 3864  
                                                   i2l2968 3804  
                                                   i2l2992 3958  
                                                   i2l2896 1DF0  
                                                   i2l2888 1D6A  
                                                   i2l2994 395C  
                                                   i2l2986 38E4  
                                                   i2l2978 3884  
                                                   i2l2898 1DF4  
                                            MoveEveryone@i 0033  
                                                ??_InitLCD 00E1  
                         __size_of_UpdateAndPrintDisplay2D 049A  
                                     random_generator@temp 000C  
                                   __end_of_InitInterrupts 3F40  
                                    CheckIfCaughtFrisbee@i 0008  
                                              downright@pl 0013  
                                                   ___wmul 4240  
                                                ??___lwmod 0005  
                                         __end_of_downleft 2E26  
                                                   clear_0 3FA6  
                                                   clear_1 3FB2  
                                                   clear_2 3FBE  
                                                   _lowIsr 0018  
                                                   _scoreA 0082  
                                                   _scoreB 0080  
compute_frisbee_target_and_route@current_fisbee_x_position 000E  
                                                ??_highIsr 0035  
                                                   _upleft 1E14  
                                                   left@pl 0013  
                                                   down@pl 0013  
compute_frisbee_target_and_route@current_fisbee_y_position 0010  
                                             __pdataCOMRAM 004B  
                                            _frisbee_steps 0180  
                                             __mediumconst 0000  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                ??_upright 0015  
                                                LCDDat@dat 00E0  
                                                LCDCmd@cmd 00E0  
                                               __accesstop 0080  
                                  __end_of__initialization 3FC4  
                                           _selectedPlayer 0072  
                                            ___rparam_used 000001  
                             __size_of_AddCustomCharacters 0082  
                                            ?_MoveEveryone 0001  
                                     _CheckIfCaughtFrisbee 3D4E  
                                          ?_InitInterrupts 0001  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 4216  
                                             __pidataBANK1 431E  
                                 ??_LCDAddSpecialCharacter 00E5  
                                            __end_of_right 3140  
                                               __end_of_up 27DA  
                                                ?i2___wmul 0001  
                                        _MoveEveryone$1802 0023  
                                        _MoveEveryone$1803 0025  
                                        _MoveEveryone$1804 0027  
                                        _MoveEveryone$1805 0029  
                                        _MoveEveryone$1806 002B  
                                        _MoveEveryone$1807 002D  
                                        _MoveEveryone$1808 002F  
                                        _MoveEveryone$1809 0031  
                                         ?_InitGameObjects 0001  
                            __size_of_SetupDebouncingTimer 0010  
                                                  ??_right 0015  
                                                  ?_LCDDat 0001  
                                                  ?_LCDCmd 0001  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 0100  
                                       __size_of_downright 02F6  
                                           ??_MoveEveryone 001F  
                                    ?_CheckIfCaughtFrisbee 0001  
              compute_frisbee_target_and_route@x_step_size 002A  
                                               _game_state 004F  
                                                  ?___wmul 00E0  
                                                  ?_lowIsr 0001  
              compute_frisbee_target_and_route@y_step_size 002C  
                                                  ?_upleft 0013  
                                               ??i2___wmul 0005  
                                                  _LCDGoto 4054  
                                         InitGameObjects@i 00F2  
                                         InitGameObjects@j 00F4  
                                          __size_of_LCDDat 0024  
                                          __size_of_LCDCmd 0022  
                                                ?_downleft 0013  
                                  _UpdateAndPrintDisplay2D 1622  
                                                  _InitLCD 41E4  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                        ?_random_generator 0006  
                                             _highIsr$1800 0047  
                                             _highIsr$1801 0049  
                                             _highIsr$1798 0043  
                                             _highIsr$1799 0045  
                                       ??_random_generator 0008  
                                          __size_of___wmul 0028  
                                                  ___lwmod 4136  
                                             __psmallconst 1000  
                          __size_of_LCDAddSpecialCharacter 004A  
                                                  __pcinit 3F40  
                                                  __ramtop 1000  
                                          __size_of_lowIsr 00AE  
                                                  _digital 0068  
                                                  __ptext0 42F2  
                                                  __ptext1 1622  
                                                  __ptext2 41E4  
                                                  __ptext3 3E9C  
                                                  __ptext4 397A  
                                                  __ptext5 4240  
                                                  __ptext6 3FD2  
                                                  __ptext7 419A  
                                                  __ptext8 4054  
                                                  __ptext9 42B2  
                                                  _highIsr 0008  
                                                  _display 0100  
                                                _T0CONbits 000FD5  
                                          __size_of_upleft 0352  
                                                _T1CONbits 000FCD  
                                        __end_of_downright 3738  
                                                _T3CONbits 000FB1  
                                                  _upright 2166  
                                           __pintcode_body 1006  
                                     end_of_initialization 3FC4  
                                           _frisbee_target 0050  
                                               ??_downleft 0015  
                                            __Lmediumconst 0000  
                                                  int_func 1006  
                                      i2___wmul@multiplier 0001  
                                   ??_CheckIfCaughtFrisbee 0007  
                                                  right@pl 0013  
                                            _nextGameSpeed 004B  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                _PORTEbits 000F84  
                    compute_frisbee_target_and_route@i_782 0016  
                    compute_frisbee_target_and_route@i_783 0018  
                    compute_frisbee_target_and_route@i_785 001A  
                    compute_frisbee_target_and_route@i_786 001C  
                    compute_frisbee_target_and_route@i_787 001E  
                                      _AddCustomCharacters 3FD2  
                                     __end_of_MoveEveryone 397A  
                                                _TRISEbits 000F96  
                                ??_UpdateAndPrintDisplay2D 00E6  
                                   _LCDAddSpecialCharacter 419A  
                                         ??_InitInterrupts 00E0  
                                           __end_of_LCDDat 42B2  
                                           __end_of_LCDCmd 42D4  
                                               LCDGoto@p_1 00E1  
                                               LCDGoto@p_2 00E2  
                                     ?_AddCustomCharacters 0001  
          compute_frisbee_target_and_route@number_of_steps 0020  
                 compute_frisbee_target_and_route@target_x 0022  
                 compute_frisbee_target_and_route@target_y 0024  
                       _selected_teamA_player_with_frisbee 00B0  
                                           __end_of___wmul 4268  
                                            __pidataCOMRAM 42D4  
                 __end_of_compute_frisbee_target_and_route 1E14  
                __size_of_compute_frisbee_target_and_route 0358  
                       ??_compute_frisbee_target_and_route 0012  
                        ?_compute_frisbee_target_and_route 000E  
                         _compute_frisbee_target_and_route 1ABC  
                                           __end_of_lowIsr 00C6  
                                         i2___wmul@product 0005  
                                           __end_of_upleft 2166  
                                      start_initialization 3F40  
                                        __size_ofi2___wmul 0026  
                                                 ??_LCDDat 00E0  
                                                 ??_LCDCmd 00E0  
                                    ??_AddCustomCharacters 00E7  
                                               downleft@pl 0013  
                                      random_generator@res 000D  
                             __end_of_SetupDebouncingTimer 431E  
                                  LCDAddSpecialCharacter@i 00E6  
                                                 ??___wmul 00E4  
                                             _frisbeeSteps 006C  
                                           _currentSegment 0070  
                                              __pdataBANK0 00AE  
                                              __pdataBANK1 01BC  
                                             lowIsr@temp_a 00DF  
                                             lowIsr@temp_d 00DE  
                                                 ??_lowIsr 00D8  
                                                 ??_upleft 0015  
                                                 ?_LCDGoto 00E1  
                                              __pbssCOMRAM 0068  
                                            __pcstackBANK0 00D8  
                                            __pcstackBANK1 01C7  
                                                 ?_InitLCD 0001  
                                 __size_of_InitGameObjects 0206  
                                        __size_of_downleft 0324  
                                 UpdateAndPrintDisplay2D@i 01C7  
                                 UpdateAndPrintDisplay2D@j 01C9  
                                                _gameSpeed 004D  
                                                __pintcode 0008  
                                                 ?___lwmod 0001  
                                    __size_of_MoveEveryone 0242  
                                              __pintcodelo 0018  
                                            ?_CatchFrisbee 0007  
                                                 ?_highIsr 0001  
                                              __smallconst 1000  
                                __size_of_random_generator 006A  
                                                _downright 3442  
                                             _teamA_player 00D0  
                                             _teamB_player 00C8  
                                                 ?_upright 0013  
                                           __size_of_right 031A  
                                                _segValues 01BC  
                                              __size_of_up 0330  
                                           ___wmul@product 00E4  
                                    _selected_teamA_player 00C0  
                                                 _IPR1bits 000F9F  
                                                 _PIE1bits 000F9D  
                                    _selected_teamB_player 00B8  
                                             _MoveEveryone 3738  
                                                 i1u423_27 0058  
                                                 i1u424_27 0072  
                                                 i2u200_45 24DE  
                                                 i2u201_40 253C  
                                                 i2u201_41 2538  
                                                 i1u425_27 009A  
                                                 i2u210_40 2E40  
                                                 i2u210_41 2E3C  
                                                 i2u202_45 2550  
                                                 i2u203_40 25B8  
                                                 i2u203_41 25B4  
                                                 i2u211_45 2E58  
                                                 i2u300_40 3E9A  
                                                 i2u212_40 2EB2  
                                                 i2u300_41 3E96  
                                                 i2u212_41 2EAE  
                                                 i2u220_45 30EA  
                                                 i2u204_45 25D0  
                                                 i2u221_40 315E  
                                                 i2u205_40 2638  
                                                 i2u221_41 315A  
                                                 i2u205_41 2634  
                                                 i2u213_45 2EC6  
                                                 i2u222_40 31C8  
                                                 i2u230_40 2868  
                                                 i2u214_40 2F2A  
                                                 i2u222_41 31C4  
                                                 i2u230_41 2864  
                                                 i2u214_41 2F26  
                                                 i2u206_45 2650  
                                                 i2u223_40 3238  
                                                 i2u207_40 26BA  
                                                 i2u223_41 3234  
                                                 i2u207_41 26B6  
                                                 i2u231_45 287C  
                                                 i2u215_45 2F42  
                                                 i2u224_40 32AC  
                                                 i2u232_40 28E4  
                                                 i2u216_40 2FA6  
                                                 i2u240_40 1E48  
                                                 i2u320_40 1032  
                                                 i2u224_41 32A8  
                                                 i2u232_41 28E0  
                                                 i2u216_41 2FA2  
                                                 i2u240_41 1E44  
                                                 i2u320_41 102E  
                                                 i2u208_45 26DA  
                                                 i2u225_40 3322  
                                                 i2u321_40 1048  
                                                 i2u225_41 331E  
                                                 i2u321_41 1044  
                                                 i2u233_45 28FC  
                                                 i2u217_45 2FBE  
                                                 i2u209_45 2784  
                                                 i2u241_45 1E60  
                                                 i2u234_40 2964  
                                                 i2u218_40 3024  
                                                 i2u242_40 1EBE  
                                                 i2u330_40 1134  
                                                 i2u322_40 106A  
                                                 i2u234_41 2960  
                                                 i2u218_41 3020  
                                                 i2u242_41 1EBA  
                                                 i2u322_41 1066  
                                                 i2u226_45 3342  
                                                 i2u250_45 2110  
                                                 i2u251_40 2180  
                                                 i2u331_40 114E  
                                                 i2u323_40 1092  
                                                 i2u251_41 217C  
                                                 i2u331_41 114A  
                                                 i2u323_41 108E  
                                                 i2u227_45 33EC  
                                                 i2u235_45 297C  
                                                 i2u219_45 3044  
                                                 i2u243_45 1ED2  
                                                 i2u236_40 29E6  
                                                 i2u228_40 27F2  
                                                 i2u244_40 1F3A  
                                                 i2u260_40 2380  
                                                 i2u252_40 219C  
                                                 i2u340_40 142A  
                                                 i2u332_40 1168  
                                                 i2u324_40 10B6  
                                                 i2u236_41 29E2  
                                                 i2u228_41 27EE  
                                                 i2u244_41 1F36  
                                                 i2u260_41 237C  
                                                 i2u252_41 2198  
                                                 i2u340_41 1426  
                                                 i2u332_41 1164  
                                                 i2u324_41 10B2  
                                                 i2u341_40 143A  
                                                 i2u333_40 11DA  
                                                 i2u325_40 10DA  
                                                 i2u341_41 1436  
                                                 i2u333_41 11D6  
                                                 i2u325_41 10D6  
                                                 i2u237_45 2A06  
                                                 i2u229_45 280A  
                                                 i2u245_45 1F52  
                                                 i2u261_45 23A0  
                                                 i2u253_45 21B4  
                                                 i2u190_40 3C8A  
                                                 i2u246_40 1FBA  
                                                 i2u254_40 220E  
                                                 i2u342_40 1470  
                                                 i2u334_40 11EC  
                                                 i2u326_40 1102  
                                                 i2u190_41 3C86  
                                                 i2u246_41 1FB6  
                                                 i2u254_41 220A  
                                                 i2u342_41 146C  
                                                 i2u334_41 11E8  
                                                 i2u326_41 10FE  
                                                 i2u270_45 2DD0  
                                                 i2u238_45 2AAC  
                                                 i2u262_45 2454  
                                                 i2u191_40 3CB6  
                                                 i2u263_40 2B1A  
                                                 i2u271_40 345C  
                                                 i2u239_40 1E2C  
                                                 i2u343_40 14DA  
                                                 i2u335_40 121C  
                                                 i2u327_40 1110  
                                                 i2u191_41 3CB2  
                                                 i2u263_41 2B16  
                                                 i2u271_41 3458  
                                                 i2u239_41 1E28  
                                                 i2u343_41 14D6  
                                                 i2u335_41 1218  
                                                 i2u327_41 110C  
                                                 i2u247_45 1FD2  
                                                 i2u255_45 2222  
                                                 i2u264_40 2B38  
                                                 i2u272_40 347A  
                                                 i2u248_40 203C  
                                                 i2u256_40 2286  
                                                 i2u280_40 1B34  
                                                 i2u344_40 14EA  
                                                 i2u328_40 1120  
                                                 i2u264_41 2B34  
                                                 i2u272_41 3476  
                                                 i2u248_41 2038  
                                                 i2u256_41 2282  
                                                 i2u280_41 1B30  
                                                 i2u344_41 14E6  
                                                 i2u328_41 111C  
                                                 i2u192_45 3CC0  
                                                 i2u336_45 122C  
                                                 i2u193_40 3D3C  
                                                 i2u265_40 2BA2  
                                                 i2u273_40 34D8  
                                                 i2u281_40 1B66  
                                                 i2u337_40 12A6  
                                                 i2u329_40 1132  
                                                 i2u193_41 3D38  
                                                 i2u265_41 2B9E  
                                                 i2u273_41 34D4  
                                                 i2u281_41 1B62  
                                                 i2u337_41 12A2  
                                                 i2u329_41 112C  
                                                 _PIR1bits 000F9E  
                                                 i2u249_45 205C  
                                                 i2u257_45 229E  
                                                 i2u266_40 2C12  
                                                 i2u274_40 353C  
                                                 i2u194_40 4148  
                                                 i2u258_40 2302  
                                                 i2u290_40 1DB4  
                                                 i2u282_40 1B7C  
                                                 i2u338_40 12B6  
                                                 i2u266_41 2C0E  
                                                 i2u274_41 3538  
                                                 i2u194_41 4144  
                                                 i2u258_41 22FE  
                                                 i2u290_41 1DB0  
                                                 i2u282_41 1B78  
                                                 i2u338_41 12B2  
                                                 i2u267_40 2C86  
                                                 i2u275_40 35A4  
                                                 i2u195_40 4166  
                                                 i2u291_40 1E0A  
                                                 i2u283_40 1B96  
                                                 i2u339_40 12F0  
                                                 i2u267_41 2C82  
                                                 i2u275_41 35A0  
                                                 i2u195_41 4162  
                                                 i2u291_41 1E06  
                                                 i2u283_41 1B92  
                                                 i2u339_41 12EC  
                                                 i2u259_45 231A  
                                                 i2u188_40 3B90  
                                                 i2u268_40 2CFC  
                                                 i2u276_40 360E  
                                                 i2u196_40 417C  
                                                 i2u284_40 1BC8  
                                                 i2u188_41 3B8C  
                                                 i2u268_41 2CF8  
                                                 i2u276_41 360A  
                                                 i2u196_41 4178  
                                                 i2u284_41 1BC4  
                                                 i2u197_40 412C  
                                                 i2u285_40 1C22  
                                                 i2u197_41 4128  
                                                 i2u285_41 1C1E  
                                                 i2u189_45 3BAA  
                                                 i2u269_45 2D1C  
                                                 i2u277_45 362E  
                                                 i2u286_40 1C80  
                                                 i2u286_41 1C7C  
                                                 i2u278_45 36E2  
                                                 i2u199_40 24C6  
                                                 i2u295_40 3758  
                                                 i2u287_40 1CCE  
                                                 i2u279_40 1B02  
                                                 i2u199_41 24C2  
                                                 i2u295_41 3754  
                                                 i2u287_41 1CCA  
                                                 i2u279_41 1AFE  
                                                 i2u296_40 3978  
                                                 i2u288_40 1CEC  
                                                 i2u296_41 3974  
                                                 i2u288_41 1CE8  
                                                 i2u297_40 3D8A  
                                                 i2u289_40 1D4E  
                                                 i2u297_41 3D86  
                                                 i2u289_41 1D4A  
                                                 i2u298_40 3DBE  
                                                 i2u298_41 3DBA  
                                                 i2u299_40 3DEE  
                                                 i2u299_41 3DEA  
                                                 _RCONbits 000FD0  
                                          MoveEveryone@val 0021  
                                                _portbVals 007A  
                                           ??_CatchFrisbee 0009  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 00E0  
                                                 i2___wmul 4268  
                                         __size_of_LCDGoto 0078  
                                  ?_LCDAddSpecialCharacter 00E3  
                                               ?_downright 0013  
                                           CatchFrisbee@pl 0007  
                                     _SetupDebouncingTimer 430E  
                                              _INTCON2bits 000FF1  
                                              _INTCON3bits 000FF0  
                                                copy_data0 3F54  
                                                copy_data1 3F74  
                                                copy_data2 3F94  
                                   random_generator@modulo 0006  
                                         __size_of_InitLCD 0032  
                                                 __Hrparam 0000  
                            __size_of_CheckIfCaughtFrisbee 014E  
                                                 __Lrparam 0000  
                                              _frisbeeChar 0058  
                                        ??_InitGameObjects 00E6  
                                    i2___wmul@multiplicand 0003  
                                         __size_of___lwmod 0064  
                                         __size_of_highIsr 161A  
                           __end_of_LCDAddSpecialCharacter 41E4  
                                         _acceptInterrupts 007B  
                                                 __ptext10 428E  
                                                 __ptext20 40CC  
                                                 __ptext21 4136  
                                                 __ptext13 1ABC  
                                                 __ptext22 27DA  
                                                 __ptext14 430E  
                                                 __ptext23 3442  
                                                 __ptext15 3738  
                                                 __ptext24 2B02  
                                                 __ptext16 2166  
                                    ?_SetupDebouncingTimer 0001  
                                                 __ptext25 3140  
                                                 __ptext17 1E14  
                                                 __ptext26 3B80  
                                                 __ptext18 24AA  
                                                 __ptext27 3D4E  
                                                 __ptext19 2E26  
                                                 __ptext28 4268  
                                         __size_of_upright 0344  
                                                 _downleft 2B02  
                                            __size_of_main 001C  
                                            __size_of_left 0328  
                                            __size_of_down 0302  
                       _selected_teamB_player_with_frisbee 0060  
                                                 int$flags 007C  
                                            CatchFrisbee@i 0011  
                                               _INTCONbits 000FF2  
                                         _random_generator 40CC  
                                 ?_UpdateAndPrintDisplay2D 0001  
                                        random_generator@i 000A  
                                              ??_downright 0015  
                              __end_of_AddCustomCharacters 4054  
                                                 intlevel1 0000  
                                                 intlevel2 0000  
                                         ___lwmod@dividend 0001  
                                     __end_of_CatchFrisbee 3D4E  
                                                upright@pl 0013  
                                          _curFrisbeeSteps 006A  
                                     InitGameObjects@i_954 00F6  
                                  __size_of_InitInterrupts 00A4  
                                                 upleft@pl 0013  
                                          ___lwmod@divisor 0003  
                                          ___lwmod@counter 0005  
                                   ??_SetupDebouncingTimer 0001  
                        compute_frisbee_target_and_route@i 0014  
                        compute_frisbee_target_and_route@x 0026  
                        compute_frisbee_target_and_route@y 0028  
