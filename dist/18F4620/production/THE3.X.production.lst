

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu May 25 02:09:19 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4620 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  0020EE                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _game_state
    84  0020EE  01                 	db	1
    85                           
    86                           ;initializer for _lcd_y
    87  0020EF  01                 	db	1
    88                           
    89                           ;initializer for _lcd_x
    90  0020F0  01                 	db	1
    91                           
    92                           ;initializer for _teamA_player
    93  0020F1  11                 	db	17
    94  0020F2  15                 	db	21
    95  0020F3  0A                 	db	10
    96  0020F4  04                 	db	4
    97  0020F5  04                 	db	4
    98  0020F6  04                 	db	4
    99  0020F7  0A                 	db	10
   100  0020F8  0A                 	db	10
   101                           
   102                           	psect	idataBANK0
   103  001F98                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _segValues
   107  001F98  3F                 	db	63
   108  001F99  06                 	db	6
   109  001F9A  5B                 	db	91
   110  001F9B  4F                 	db	79
   111  001F9C  66                 	db	102
   112  001F9D  6D                 	db	109
   113  001F9E  7D                 	db	125
   114  001F9F  07                 	db	7
   115  001FA0  7F                 	db	127
   116  001FA1  6F                 	db	111
   117  001FA2  40                 	db	64
   118                           
   119                           ;initializer for _frisbee_target
   120  001FA3  0E                 	db	14
   121  001FA4  11                 	db	17
   122  001FA5  11                 	db	17
   123  001FA6  11                 	db	17
   124  001FA7  0E                 	db	14
   125  001FA8  00                 	db	0
   126  001FA9  00                 	db	0
   127  001FAA  00                 	db	0
   128                           
   129                           ;initializer for _frisbeeChar
   130  001FAB  0E                 	db	14
   131  001FAC  1F                 	db	31
   132  001FAD  1F                 	db	31
   133  001FAE  1F                 	db	31
   134  001FAF  0E                 	db	14
   135  001FB0  00                 	db	0
   136  001FB1  00                 	db	0
   137  001FB2  00                 	db	0
   138                           
   139                           ;initializer for _selected_teamB_player_with_frisbee
   140  001FB3  1F                 	db	31
   141  001FB4  15                 	db	21
   142  001FB5  0A                 	db	10
   143  001FB6  04                 	db	4
   144  001FB7  0E                 	db	14
   145  001FB8  1F                 	db	31
   146  001FB9  0A                 	db	10
   147  001FBA  1F                 	db	31
   148                           
   149                           ;initializer for _selected_teamA_player_with_frisbee
   150  001FBB  1F                 	db	31
   151  001FBC  15                 	db	21
   152  001FBD  0A                 	db	10
   153  001FBE  04                 	db	4
   154  001FBF  04                 	db	4
   155  001FC0  04                 	db	4
   156  001FC1  0A                 	db	10
   157  001FC2  1F                 	db	31
   158                           
   159                           ;initializer for _selected_teamB_player
   160  001FC3  11                 	db	17
   161  001FC4  15                 	db	21
   162  001FC5  0A                 	db	10
   163  001FC6  04                 	db	4
   164  001FC7  0E                 	db	14
   165  001FC8  1F                 	db	31
   166  001FC9  0A                 	db	10
   167  001FCA  1F                 	db	31
   168                           
   169                           ;initializer for _selected_teamA_player
   170  001FCB  11                 	db	17
   171  001FCC  15                 	db	21
   172  001FCD  0A                 	db	10
   173  001FCE  04                 	db	4
   174  001FCF  04                 	db	4
   175  001FD0  04                 	db	4
   176  001FD1  0A                 	db	10
   177  001FD2  1F                 	db	31
   178                           
   179                           ;initializer for _teamB_player
   180  001FD3  11                 	db	17
   181  001FD4  15                 	db	21
   182  001FD5  0A                 	db	10
   183  001FD6  04                 	db	4
   184  001FD7  0E                 	db	14
   185  001FD8  1F                 	db	31
   186  001FD9  0A                 	db	10
   187  001FDA  0A                 	db	10
   188  0000                     _T2CON	set	4042
   189  0000                     _RCONbits	set	4048
   190  0000                     _PIE1bits	set	3997
   191  0000                     _IPR1bits	set	3999
   192  0000                     _TMR0H	set	4055
   193  0000                     _TMR0L	set	4054
   194  0000                     _T0CON	set	4053
   195  0000                     _TRISA	set	3986
   196  0000                     _TRISB	set	3987
   197  0000                     _T3CON	set	4017
   198  0000                     _INTCON2bits	set	4081
   199  0000                     _ADCON1	set	4033
   200  0000                     _LATD	set	3980
   201  0000                     _LATA	set	3977
   202  0000                     _PORTA	set	3968
   203  0000                     _PIR1bits	set	3998
   204  0000                     _INTCON3bits	set	4080
   205  0000                     _T0CONbits	set	4053
   206  0000                     _INTCONbits	set	4082
   207  0000                     _PORTB	set	3969
   208  0000                     _TRISD	set	3989
   209  0000                     _TRISEbits	set	3990
   210  0000                     _PORTD	set	3971
   211  0000                     _PORTEbits	set	3972
   212  0000                     _TMR3H	set	4019
   213  0000                     _TMR3L	set	4018
   214  0000                     _T3CONbits	set	4017
   215                           
   216                           	psect	smallconst
   217  001000                     __psmallconst:
   218                           	callstack 0
   219  001000  00                 	db	0
   220  001001                     STR_1:
   221  001001  25                 	db	37
   222  001002  64                 	db	100	;'d'
   223  001003  00                 	db	0
   224  001004  00                 	db	0	; dummy byte at the end
   225  0000                     
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229  001EDC                     __pcinit:
   230                           	callstack 0
   231  001EDC                     start_initialization:
   232                           	callstack 0
   233  001EDC                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Initialize objects allocated to BANK0 (67 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238  001EDC  0E98               	movlw	low __pidataBANK0
   239  001EDE  6EF6               	movwf	tblptrl,c
   240  001EE0  0E1F               	movlw	high __pidataBANK0
   241  001EE2  6EF7               	movwf	tblptrh,c
   242  001EE4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243  001EE6  6EF8               	movwf	tblptru,c
   244  001EE8  EE00  F080         	lfsr	0,__pdataBANK0
   245  001EEC  EE10 F043          	lfsr	1,67
   246  001EF0                     copy_data0:
   247  001EF0  0009               	tblrd		*+
   248  001EF2  CFF5 FFEE          	movff	tablat,postinc0
   249  001EF6  50E5               	movf	postdec1,w,c
   250  001EF8  50E1               	movf	fsr1l,w,c
   251  001EFA  E1FA               	bnz	copy_data0
   252                           
   253                           ; Initialize objects allocated to COMRAM (11 bytes)
   254                           ; load TBLPTR registers with __pidataCOMRAM
   255  001EFC  0EEE               	movlw	low __pidataCOMRAM
   256  001EFE  6EF6               	movwf	tblptrl,c
   257  001F00  0E20               	movlw	high __pidataCOMRAM
   258  001F02  6EF7               	movwf	tblptrh,c
   259  001F04  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   260  001F06  6EF8               	movwf	tblptru,c
   261  001F08  EE00  F057         	lfsr	0,__pdataCOMRAM
   262  001F0C  EE10 F00B          	lfsr	1,11
   263  001F10                     copy_data1:
   264  001F10  0009               	tblrd		*+
   265  001F12  CFF5 FFEE          	movff	tablat,postinc0
   266  001F16  50E5               	movf	postdec1,w,c
   267  001F18  50E1               	movf	fsr1l,w,c
   268  001F1A  E1FA               	bnz	copy_data1
   269                           
   270                           ; Clear objects allocated to BANK1 (128 bytes)
   271  001F1C  EE01  F000         	lfsr	0,__pbssBANK1
   272  001F20  0E80               	movlw	128
   273  001F22                     clear_0:
   274  001F22  6AEE               	clrf	postinc0,c
   275  001F24  06E8               	decf	wreg,f,c
   276  001F26  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to BANK0 (60 bytes)
   279  001F28  EE00  F0C3         	lfsr	0,__pbssBANK0
   280  001F2C  0E3C               	movlw	60
   281  001F2E                     clear_1:
   282  001F2E  6AEE               	clrf	postinc0,c
   283  001F30  06E8               	decf	wreg,f,c
   284  001F32  E1FD               	bnz	clear_1
   285                           
   286                           ; Clear objects allocated to COMRAM (45 bytes)
   287  001F34  EE00  F001         	lfsr	0,__pbssCOMRAM
   288  001F38  0E2D               	movlw	45
   289  001F3A                     clear_2:
   290  001F3A  6AEE               	clrf	postinc0,c
   291  001F3C  06E8               	decf	wreg,f,c
   292  001F3E  E1FD               	bnz	clear_2
   293  001F40                     end_of_initialization:
   294                           	callstack 0
   295  001F40                     __end_of__initialization:
   296                           	callstack 0
   297  001F40  9062               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   298  001F42  9262               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299  001F44  0E00               	movlw	low (__Lmediumconst shr (0+16))
   300  001F46  6EF8               	movwf	tblptru,c
   301  001F48  0100               	movlb	0
   302  001F4A  EF61  F010         	goto	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMRAM
   305  000001                     __pbssCOMRAM:
   306                           	callstack 0
   307  000001                     _currentSegment:
   308                           	callstack 0
   309  000001                     	ds	2
   310  000003                     _scoreB:
   311                           	callstack 0
   312  000003                     	ds	2
   313  000005                     _scoreA:
   314                           	callstack 0
   315  000005                     	ds	2
   316  000007                     _selectedPlayer:
   317                           	callstack 0
   318  000007                     	ds	2
   319  000009                     _c:
   320                           	callstack 0
   321  000009                     	ds	2
   322  00000B                     _b:
   323                           	callstack 0
   324  00000B                     	ds	2
   325  00000D                     _a:
   326                           	callstack 0
   327  00000D                     	ds	2
   328  00000F                     _acceptInterrupts:
   329                           	callstack 0
   330  00000F                     	ds	1
   331  000010                     _objs:
   332                           	callstack 0
   333  000010                     	ds	30
   334                           
   335                           	psect	dataCOMRAM
   336  000057                     __pdataCOMRAM:
   337                           	callstack 0
   338  000057                     _game_state:
   339                           	callstack 0
   340  000057                     	ds	1
   341  000058                     _lcd_y:
   342                           	callstack 0
   343  000058                     	ds	1
   344  000059                     _lcd_x:
   345                           	callstack 0
   346  000059                     	ds	1
   347  00005A                     _teamA_player:
   348                           	callstack 0
   349  00005A                     	ds	8
   350                           
   351                           	psect	bssBANK0
   352  0000C3                     __pbssBANK0:
   353                           	callstack 0
   354  0000C3                     _frisbee_steps:
   355                           	callstack 0
   356  0000C3                     	ds	60
   357                           
   358                           	psect	dataBANK0
   359  000080                     __pdataBANK0:
   360                           	callstack 0
   361  000080                     _segValues:
   362                           	callstack 0
   363  000080                     	ds	11
   364  00008B                     _frisbee_target:
   365                           	callstack 0
   366  00008B                     	ds	8
   367  000093                     _frisbeeChar:
   368                           	callstack 0
   369  000093                     	ds	8
   370  00009B                     _selected_teamB_player_with_frisbee:
   371                           	callstack 0
   372  00009B                     	ds	8
   373  0000A3                     _selected_teamA_player_with_frisbee:
   374                           	callstack 0
   375  0000A3                     	ds	8
   376  0000AB                     _selected_teamB_player:
   377                           	callstack 0
   378  0000AB                     	ds	8
   379  0000B3                     _selected_teamA_player:
   380                           	callstack 0
   381  0000B3                     	ds	8
   382  0000BB                     _teamB_player:
   383                           	callstack 0
   384  0000BB                     	ds	8
   385                           
   386                           	psect	bssBANK1
   387  000100                     __pbssBANK1:
   388                           	callstack 0
   389  000100                     _display:
   390                           	callstack 0
   391  000100                     	ds	128
   392                           
   393                           	psect	cstackBANK1
   394  000180                     __pcstackBANK1:
   395                           	callstack 0
   396  000180                     ?___wmul:
   397                           	callstack 0
   398  000180                     LCDCmd@cmd:
   399                           	callstack 0
   400  000180                     LCDDat@dat:
   401                           	callstack 0
   402  000180                     ___wmul@multiplier:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x0
   406  000180                     	ds	1
   407  000181                     LCDGoto@p_1:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x1
   411  000181                     	ds	1
   412  000182                     LCDGoto@p_2:
   413                           	callstack 0
   414  000182                     ___wmul@multiplicand:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418  000182                     	ds	1
   419  000183                     LCDAddSpecialCharacter@data:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x3
   423  000183                     	ds	1
   424  000184                     ___wmul@product:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x4
   428  000184                     	ds	1
   429  000185                     LCDAddSpecialCharacter@character_index:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000185                     	ds	1
   434  000186                     ??_InitGameObjects:
   435  000186                     ??_UpdateAndPrintDisplay:
   436  000186                     LCDAddSpecialCharacter@i:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x6
   440  000186                     	ds	10
   441  000190                     UpdateAndPrintDisplay@i:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x10
   445  000190                     	ds	2
   446  000192                     UpdateAndPrintDisplay@j:
   447                           	callstack 0
   448  000192                     InitGameObjects@i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x12
   452  000192                     	ds	2
   453  000194                     UpdateAndPrintDisplay@i_747:
   454                           	callstack 0
   455  000194                     InitGameObjects@j:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x14
   459  000194                     	ds	2
   460  000196                     UpdateAndPrintDisplay@i_748:
   461                           	callstack 0
   462  000196                     InitGameObjects@i_758:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x16
   466  000196                     	ds	2
   467  000198                     UpdateAndPrintDisplay@j_749:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x18
   471  000198                     	ds	2
   472                           
   473                           	psect	cstackBANK0
   474  0000FF                     __pcstackBANK0:
   475                           	callstack 0
   476  0000FF                     ??_LCDCmd:
   477  0000FF                     ??_LCDDat:
   478  0000FF                     
   479                           ; 1 bytes @ 0x0
   480  0000FF                     	ds	1
   481  000100                     
   482                           ; 1 bytes @ 0x1
   483                           
   484                           	psect	cstackCOMRAM
   485  00002E                     __pcstackCOMRAM:
   486                           	callstack 0
   487  00002E                     ?i2___wmul:
   488                           	callstack 0
   489  00002E                     i2___wmul@multiplier:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x0
   493  00002E                     	ds	2
   494  000030                     i2___wmul@multiplicand:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x2
   498  000030                     	ds	2
   499  000032                     i2___wmul@product:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x4
   503  000032                     	ds	2
   504  000034                     left@pl:
   505                           	callstack 0
   506  000034                     right@pl:
   507                           	callstack 0
   508  000034                     up@pl:
   509                           	callstack 0
   510  000034                     down@pl:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x6
   514  000034                     	ds	2
   515  000036                     ??_up:
   516  000036                     ??_right:
   517  000036                     ??_down:
   518  000036                     ??_left:
   519                           
   520                           ; 1 bytes @ 0x8
   521  000036                     	ds	9
   522  00003F                     ??_highIsr:
   523                           
   524                           ; 1 bytes @ 0x11
   525  00003F                     	ds	8
   526  000047                     highIsr@portbVals:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x19
   530  000047                     	ds	1
   531  000048                     ?___awmod:
   532                           	callstack 0
   533  000048                     ___awmod@dividend:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  000048                     	ds	2
   538  00004A                     ___awmod@divisor:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1C
   542  00004A                     	ds	2
   543  00004C                     ___awmod@counter:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x1E
   547  00004C                     	ds	1
   548  00004D                     ___awmod@sign:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x1F
   552  00004D                     	ds	1
   553  00004E                     ??_lowIsr:
   554                           
   555                           ; 1 bytes @ 0x20
   556  00004E                     	ds	7
   557  000055                     lowIsr@temp_d:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x27
   561  000055                     	ds	1
   562  000056                     lowIsr@temp_a:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x28
   566  000056                     	ds	1
   567                           
   568 ;;
   569 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   570 ;;
   571 ;; *************** function _main *****************
   572 ;; Defined at:
   573 ;;		line 135 in file "main.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels required when called:    8
   593 ;; This function calls:
   594 ;;		_AddCustomCharacters
   595 ;;		_InitGameObjects
   596 ;;		_InitInterrupts
   597 ;;		_InitLCD
   598 ;;		_UpdateAndPrintDisplay
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  0020C2                     __ptext0:
   606                           	callstack 0
   607  0020C2                     _main:
   608                           	callstack 23
   609  0020C2                     
   610                           ;main.c: 137:     InitInterrupts();
   611  0020C2  ECF6  F00E         	call	_InitInterrupts	;wreg free
   612                           
   613                           ;main.c: 138:     InitLCD();
   614  0020C6  EC08  F010         	call	_InitLCD	;wreg free
   615  0020CA                     
   616                           ;main.c: 139:     InitGameObjects();
   617  0020CA  EC28  F00B         	call	_InitGameObjects	;wreg free
   618  0020CE                     
   619                           ;main.c: 141:     AddCustomCharacters();
   620  0020CE  ECB5  F00E         	call	_AddCustomCharacters	;wreg free
   621  0020D2                     l2624:
   622                           
   623                           ;main.c: 148:         UpdateAndPrintDisplay();
   624  0020D2  EC03  F008         	call	_UpdateAndPrintDisplay	;wreg free
   625  0020D6  EF69  F010         	goto	l2624
   626  0020DA  EF76  F000         	goto	start
   627  0020DE                     __end_of_main:
   628                           	callstack 0
   629                           
   630 ;; *************** function _UpdateAndPrintDisplay *****************
   631 ;; Defined at:
   632 ;;		line 153 in file "main.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  j               2   24[BANK1 ] int 
   637 ;;  j               2   18[BANK1 ] int 
   638 ;;  i               2   22[BANK1 ] int 
   639 ;;  i               2   20[BANK1 ] int 
   640 ;;  i               2   16[BANK1 ] int 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:       20 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    6
   657 ;; This function calls:
   658 ;;		_LCDDat
   659 ;;		_LCDGoto
   660 ;;		___wmul
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text1
   667  001006                     __ptext1:
   668                           	callstack 0
   669  001006                     _UpdateAndPrintDisplay:
   670                           	callstack 24
   671  001006                     
   672                           ;main.c: 154:     for (int i = 0; i < 4; i++) {
   673  001006  0E00               	movlw	0
   674  001008  0101               	movlb	1	; () banked
   675  00100A  6F91               	movwf	(UpdateAndPrintDisplay@i+1)& (0+255),b
   676  00100C  0E00               	movlw	0
   677  00100E  6F90               	movwf	UpdateAndPrintDisplay@i& (0+255),b
   678  001010                     l2514:
   679                           
   680                           ; BSR set to: 1
   681                           ;main.c: 155:         for (int j = 0; j < 16; j++) {
   682  001010  0E00               	movlw	0
   683  001012  6F93               	movwf	(UpdateAndPrintDisplay@j+1)& (0+255),b
   684  001014  0E00               	movlw	0
   685  001016  6F92               	movwf	UpdateAndPrintDisplay@j& (0+255),b
   686  001018                     l2520:
   687                           
   688                           ; BSR set to: 1
   689                           ;main.c: 156:             display[i][j] = ((void*)0);
   690  001018  C190  F186         	movff	UpdateAndPrintDisplay@i,??_UpdateAndPrintDisplay
   691  00101C  C191  F187         	movff	UpdateAndPrintDisplay@i+1,??_UpdateAndPrintDisplay+1
   692  001020  0E05               	movlw	5
   693  001022                     u1615:
   694  001022  90D8               	bcf	status,0,c
   695  001024  3786               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
   696  001026  3787               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   697  001028  2EE8               	decfsz	wreg,f,c
   698  00102A  EF11  F008         	goto	u1615
   699  00102E  0E00               	movlw	low _display
   700  001030  6F88               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   701  001032  0E01               	movlw	high _display
   702  001034  6F89               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   703  001036  5186               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
   704  001038  2788               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   705  00103A  5187               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
   706  00103C  2389               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   707  00103E  90D8               	bcf	status,0,c
   708  001040  3592               	rlcf	UpdateAndPrintDisplay@j& (0+255),w,b
   709  001042  6ED9               	movwf	fsr2l,c
   710  001044  3593               	rlcf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   711  001046  6EDA               	movwf	fsr2h,c
   712  001048  5188               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   713  00104A  26D9               	addwf	fsr2l,f,c
   714  00104C  5189               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   715  00104E  22DA               	addwfc	fsr2h,f,c
   716  001050  0E00               	movlw	0
   717  001052  6EDE               	movwf	postinc2,c
   718  001054  0E00               	movlw	0
   719  001056  6EDD               	movwf	postdec2,c
   720  001058                     
   721                           ; BSR set to: 1
   722                           ;main.c: 157:         }
   723  001058  4B92               	infsnz	UpdateAndPrintDisplay@j& (0+255),f,b
   724  00105A  2B93               	incf	(UpdateAndPrintDisplay@j+1)& (0+255),f,b
   725  00105C                     
   726                           ; BSR set to: 1
   727  00105C  BF93               	btfsc	(UpdateAndPrintDisplay@j+1)& (0+255),7,b
   728  00105E  EF3A  F008         	goto	u1621
   729  001062  5193               	movf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   730  001064  E109               	bnz	u1620
   731  001066  0E10               	movlw	16
   732  001068  5D92               	subwf	UpdateAndPrintDisplay@j& (0+255),w,b
   733  00106A  A0D8               	btfss	status,0,c
   734  00106C  EF3A  F008         	goto	u1621
   735  001070  EF3C  F008         	goto	u1620
   736  001074                     u1621:
   737  001074  EF0C  F008         	goto	l2520
   738  001078                     u1620:
   739  001078                     
   740                           ; BSR set to: 1
   741                           ;main.c: 158:     }
   742  001078  4B90               	infsnz	UpdateAndPrintDisplay@i& (0+255),f,b
   743  00107A  2B91               	incf	(UpdateAndPrintDisplay@i+1)& (0+255),f,b
   744  00107C                     
   745                           ; BSR set to: 1
   746  00107C  BF91               	btfsc	(UpdateAndPrintDisplay@i+1)& (0+255),7,b
   747  00107E  EF4A  F008         	goto	u1631
   748  001082  5191               	movf	(UpdateAndPrintDisplay@i+1)& (0+255),w,b
   749  001084  E109               	bnz	u1630
   750  001086  0E04               	movlw	4
   751  001088  5D90               	subwf	UpdateAndPrintDisplay@i& (0+255),w,b
   752  00108A  A0D8               	btfss	status,0,c
   753  00108C  EF4A  F008         	goto	u1631
   754  001090  EF4C  F008         	goto	u1630
   755  001094                     u1631:
   756  001094  EF08  F008         	goto	l2514
   757  001098                     u1630:
   758  001098                     
   759                           ; BSR set to: 1
   760                           ;main.c: 159:     for (int i = 0; i < 6; i++) {
   761  001098  0E00               	movlw	0
   762  00109A  6F95               	movwf	(UpdateAndPrintDisplay@i_747+1)& (0+255),b
   763  00109C  0E00               	movlw	0
   764  00109E  6F94               	movwf	UpdateAndPrintDisplay@i_747& (0+255),b
   765  0010A0                     l2536:
   766                           
   767                           ; BSR set to: 1
   768                           ;main.c: 160:         display[objs[i].y-1][objs[i].x-1] = &objs[i];
   769  0010A0  C194  F180         	movff	UpdateAndPrintDisplay@i_747,___wmul@multiplier
   770  0010A4  C195  F181         	movff	UpdateAndPrintDisplay@i_747+1,___wmul@multiplier+1
   771  0010A8  0E00               	movlw	0
   772  0010AA  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
   773  0010AC  0E05               	movlw	5
   774  0010AE  6F82               	movwf	___wmul@multiplicand& (0+255),b
   775  0010B0  EC3A  F010         	call	___wmul	;wreg free
   776  0010B4  0E10               	movlw	low _objs
   777  0010B6  0101               	movlb	1	; () banked
   778  0010B8  6F86               	movwf	??_UpdateAndPrintDisplay& (0+255),b
   779  0010BA  0E00               	movlw	high _objs
   780  0010BC  6F87               	movwf	(??_UpdateAndPrintDisplay+1)& (0+255),b
   781  0010BE  5180               	movf	?___wmul& (0+255),w,b
   782  0010C0  2786               	addwf	??_UpdateAndPrintDisplay& (0+255),f,b
   783  0010C2  5181               	movf	(?___wmul+1)& (0+255),w,b
   784  0010C4  2387               	addwfc	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   785  0010C6  C194  F180         	movff	UpdateAndPrintDisplay@i_747,___wmul@multiplier
   786  0010CA  C195  F181         	movff	UpdateAndPrintDisplay@i_747+1,___wmul@multiplier+1
   787  0010CE  0E00               	movlw	0
   788  0010D0  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
   789  0010D2  0E05               	movlw	5
   790  0010D4  6F82               	movwf	___wmul@multiplicand& (0+255),b
   791  0010D6  EC3A  F010         	call	___wmul	;wreg free
   792  0010DA  0E11               	movlw	low (_objs+1)
   793  0010DC  0101               	movlb	1	; () banked
   794  0010DE  2580               	addwf	?___wmul& (0+255),w,b
   795  0010E0  6ED9               	movwf	fsr2l,c
   796  0010E2  0E00               	movlw	high (_objs+1)
   797  0010E4  2181               	addwfc	(?___wmul+1)& (0+255),w,b
   798  0010E6  6EDA               	movwf	fsr2h,c
   799  0010E8  50DF               	movf	indf2,w,c
   800  0010EA  6F88               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   801  0010EC  6B89               	clrf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   802  0010EE  0E05               	movlw	5
   803  0010F0                     u1645:
   804  0010F0  90D8               	bcf	status,0,c
   805  0010F2  3788               	rlcf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   806  0010F4  3789               	rlcf	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   807  0010F6  2EE8               	decfsz	wreg,f,c
   808  0010F8  EF78  F008         	goto	u1645
   809  0010FC  C194  F180         	movff	UpdateAndPrintDisplay@i_747,___wmul@multiplier
   810  001100  C195  F181         	movff	UpdateAndPrintDisplay@i_747+1,___wmul@multiplier+1
   811  001104  0E00               	movlw	0
   812  001106  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
   813  001108  0E05               	movlw	5
   814  00110A  6F82               	movwf	___wmul@multiplicand& (0+255),b
   815  00110C  EC3A  F010         	call	___wmul	;wreg free
   816  001110  0E10               	movlw	low _objs
   817  001112  0101               	movlb	1	; () banked
   818  001114  2580               	addwf	?___wmul& (0+255),w,b
   819  001116  6ED9               	movwf	fsr2l,c
   820  001118  0E00               	movlw	high _objs
   821  00111A  2181               	addwfc	(?___wmul+1)& (0+255),w,b
   822  00111C  6EDA               	movwf	fsr2h,c
   823  00111E  50DF               	movf	indf2,w,c
   824  001120  6F8A               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
   825  001122  6B8B               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
   826  001124  90D8               	bcf	status,0,c
   827  001126  378A               	rlcf	(??_UpdateAndPrintDisplay+4)& (0+255),f,b
   828  001128  378B               	rlcf	(??_UpdateAndPrintDisplay+5)& (0+255),f,b
   829  00112A  0EDE               	movlw	222
   830  00112C  6F8C               	movwf	(??_UpdateAndPrintDisplay+6)& (0+255),b
   831  00112E  0EFF               	movlw	255
   832  001130  6F8D               	movwf	(??_UpdateAndPrintDisplay+7)& (0+255),b
   833  001132  0E00               	movlw	low _display
   834  001134  6F8E               	movwf	(??_UpdateAndPrintDisplay+8)& (0+255),b
   835  001136  0E01               	movlw	high _display
   836  001138  6F8F               	movwf	(??_UpdateAndPrintDisplay+9)& (0+255),b
   837  00113A  518C               	movf	(??_UpdateAndPrintDisplay+6)& (0+255),w,b
   838  00113C  278E               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
   839  00113E  518D               	movf	(??_UpdateAndPrintDisplay+7)& (0+255),w,b
   840  001140  238F               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
   841  001142  518A               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
   842  001144  278E               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
   843  001146  518B               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
   844  001148  238F               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
   845  00114A  5188               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   846  00114C  258E               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),w,b
   847  00114E  6ED9               	movwf	fsr2l,c
   848  001150  5189               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   849  001152  218F               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),w,b
   850  001154  6EDA               	movwf	fsr2h,c
   851  001156  C186  FFDE         	movff	??_UpdateAndPrintDisplay,postinc2
   852  00115A  C187  FFDD         	movff	??_UpdateAndPrintDisplay+1,postdec2
   853  00115E                     
   854                           ; BSR set to: 1
   855                           ;main.c: 161:     }
   856  00115E  4B94               	infsnz	UpdateAndPrintDisplay@i_747& (0+255),f,b
   857  001160  2B95               	incf	(UpdateAndPrintDisplay@i_747+1)& (0+255),f,b
   858  001162                     
   859                           ; BSR set to: 1
   860  001162  BF95               	btfsc	(UpdateAndPrintDisplay@i_747+1)& (0+255),7,b
   861  001164  EFBD  F008         	goto	u1651
   862  001168  5195               	movf	(UpdateAndPrintDisplay@i_747+1)& (0+255),w,b
   863  00116A  E109               	bnz	u1650
   864  00116C  0E06               	movlw	6
   865  00116E  5D94               	subwf	UpdateAndPrintDisplay@i_747& (0+255),w,b
   866  001170  A0D8               	btfss	status,0,c
   867  001172  EFBD  F008         	goto	u1651
   868  001176  EFBF  F008         	goto	u1650
   869  00117A                     u1651:
   870  00117A  EF50  F008         	goto	l2536
   871  00117E                     u1650:
   872  00117E                     
   873                           ; BSR set to: 1
   874                           ;main.c: 164:     for (int i = 0; i < 4; i++) {
   875  00117E  0E00               	movlw	0
   876  001180  6F97               	movwf	(UpdateAndPrintDisplay@i_748+1)& (0+255),b
   877  001182  0E00               	movlw	0
   878  001184  6F96               	movwf	UpdateAndPrintDisplay@i_748& (0+255),b
   879  001186                     l2548:
   880                           
   881                           ; BSR set to: 1
   882                           ;main.c: 165:         for (int j = 0; j < 16; j++) {
   883  001186  0E00               	movlw	0
   884  001188  6F99               	movwf	(UpdateAndPrintDisplay@j_749+1)& (0+255),b
   885  00118A  0E00               	movlw	0
   886  00118C  6F98               	movwf	UpdateAndPrintDisplay@j_749& (0+255),b
   887  00118E                     l2554:
   888                           
   889                           ; BSR set to: 1
   890                           ;main.c: 167:             lcd_y = (byte)i+1;
   891  00118E  2996               	incf	UpdateAndPrintDisplay@i_748& (0+255),w,b
   892  001190  6E58               	movwf	_lcd_y^0,c
   893                           
   894                           ;main.c: 168:             lcd_x = (byte)j+1;
   895  001192  2998               	incf	UpdateAndPrintDisplay@j_749& (0+255),w,b
   896  001194  6E59               	movwf	_lcd_x^0,c
   897  001196                     
   898                           ; BSR set to: 1
   899                           ;main.c: 169:             LCDGoto(lcd_x, lcd_y);
   900  001196  C058  F181         	movff	_lcd_y,LCDGoto@p_1
   901  00119A  5059               	movf	_lcd_x^0,w,c
   902  00119C  EC32  F00F         	call	_LCDGoto
   903  0011A0                     
   904                           ;main.c: 171:             if (display[i][j] == ((void*)0) || display[i][j]->active == 0)
      +                           {
   905  0011A0  C196  F186         	movff	UpdateAndPrintDisplay@i_748,??_UpdateAndPrintDisplay
   906  0011A4  C197  F187         	movff	UpdateAndPrintDisplay@i_748+1,??_UpdateAndPrintDisplay+1
   907  0011A8  0E05               	movlw	5
   908  0011AA                     u1665:
   909  0011AA  90D8               	bcf	status,0,c
   910  0011AC  0101               	movlb	1	; () banked
   911  0011AE  3786               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
   912  0011B0  3787               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   913  0011B2  2EE8               	decfsz	wreg,f,c
   914  0011B4  EFD5  F008         	goto	u1665
   915  0011B8  0E00               	movlw	low _display
   916  0011BA  6F88               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   917  0011BC  0E01               	movlw	high _display
   918  0011BE  6F89               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   919  0011C0  5186               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
   920  0011C2  2788               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   921  0011C4  5187               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
   922  0011C6  2389               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   923  0011C8  90D8               	bcf	status,0,c
   924  0011CA  3598               	rlcf	UpdateAndPrintDisplay@j_749& (0+255),w,b
   925  0011CC  6ED9               	movwf	fsr2l,c
   926  0011CE  3599               	rlcf	(UpdateAndPrintDisplay@j_749+1)& (0+255),w,b
   927  0011D0  6EDA               	movwf	fsr2h,c
   928  0011D2  5188               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   929  0011D4  26D9               	addwf	fsr2l,f,c
   930  0011D6  5189               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   931  0011D8  22DA               	addwfc	fsr2h,f,c
   932  0011DA  50DE               	movf	postinc2,w,c
   933  0011DC  10DE               	iorwf	postinc2,w,c
   934  0011DE  B4D8               	btfsc	status,2,c
   935  0011E0  EFF4  F008         	goto	u1671
   936  0011E4  EFF6  F008         	goto	u1670
   937  0011E8                     u1671:
   938  0011E8  EF20  F009         	goto	l2562
   939  0011EC                     u1670:
   940  0011EC                     
   941                           ; BSR set to: 1
   942  0011EC  C196  F186         	movff	UpdateAndPrintDisplay@i_748,??_UpdateAndPrintDisplay
   943  0011F0  C197  F187         	movff	UpdateAndPrintDisplay@i_748+1,??_UpdateAndPrintDisplay+1
   944  0011F4  0E05               	movlw	5
   945  0011F6                     u1685:
   946  0011F6  90D8               	bcf	status,0,c
   947  0011F8  3786               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
   948  0011FA  3787               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   949  0011FC  2EE8               	decfsz	wreg,f,c
   950  0011FE  EFFB  F008         	goto	u1685
   951  001202  0E00               	movlw	low _display
   952  001204  6F88               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   953  001206  0E01               	movlw	high _display
   954  001208  6F89               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   955  00120A  5186               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
   956  00120C  2788               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   957  00120E  5187               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
   958  001210  2389               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   959  001212  90D8               	bcf	status,0,c
   960  001214  3598               	rlcf	UpdateAndPrintDisplay@j_749& (0+255),w,b
   961  001216  6ED9               	movwf	fsr2l,c
   962  001218  3599               	rlcf	(UpdateAndPrintDisplay@j_749+1)& (0+255),w,b
   963  00121A  6EDA               	movwf	fsr2h,c
   964  00121C  5188               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   965  00121E  26D9               	addwf	fsr2l,f,c
   966  001220  5189               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   967  001222  22DA               	addwfc	fsr2h,f,c
   968  001224  EE10 F002          	lfsr	1,2
   969  001228  50DE               	movf	postinc2,w,c
   970  00122A  26E1               	addwf	fsr1l,f,c
   971  00122C  50DD               	movf	postdec2,w,c
   972  00122E  22E2               	addwfc	fsr1h,f,c
   973  001230  50E7               	movf	indf1,w,c
   974  001232  A4D8               	btfss	status,2,c
   975  001234  EF1E  F009         	goto	u1691
   976  001238  EF20  F009         	goto	u1690
   977  00123C                     u1691:
   978  00123C  EFC3  F009         	goto	l2590
   979  001240                     u1690:
   980  001240                     l2562:
   981                           
   982                           ; BSR set to: 1
   983                           ;main.c: 172:                 LCDDat(' ');
   984  001240  0E20               	movlw	32
   985  001242  ECEE  F00F         	call	_LCDDat
   986                           
   987                           ;main.c: 173:                 continue;
   988  001246  EF02  F00A         	goto	l2592
   989  00124A                     l2564:
   990                           
   991                           ; BSR set to: 1
   992                           ;main.c: 180:                     LCDDat(6);
   993  00124A  0E06               	movlw	6
   994  00124C  ECEE  F00F         	call	_LCDDat
   995                           
   996                           ;main.c: 181:                     break;
   997  001250  EF02  F00A         	goto	l2592
   998  001254                     l2566:
   999                           
  1000                           ; BSR set to: 1
  1001                           ;main.c: 184:                     LCDDat(7);
  1002  001254  0E07               	movlw	7
  1003  001256  ECEE  F00F         	call	_LCDDat
  1004                           
  1005                           ;main.c: 185:                     break;
  1006  00125A  EF02  F00A         	goto	l2592
  1007  00125E                     l2568:
  1008                           
  1009                           ; BSR set to: 1
  1010                           ;main.c: 190:                             LCDDat(0);
  1011  00125E  0E00               	movlw	0
  1012  001260  ECEE  F00F         	call	_LCDDat
  1013                           
  1014                           ;main.c: 191:                             break;
  1015  001264  EF02  F00A         	goto	l2592
  1016  001268                     l2570:
  1017                           
  1018                           ; BSR set to: 1
  1019                           ;main.c: 193:                             LCDDat(2);
  1020  001268  0E02               	movlw	2
  1021  00126A  ECEE  F00F         	call	_LCDDat
  1022                           
  1023                           ;main.c: 194:                             break;
  1024  00126E  EF02  F00A         	goto	l2592
  1025  001272                     l2572:
  1026                           
  1027                           ; BSR set to: 1
  1028                           ;main.c: 196:                             LCDDat(4);
  1029  001272  0E04               	movlw	4
  1030  001274  ECEE  F00F         	call	_LCDDat
  1031                           
  1032                           ;main.c: 197:                             break;
  1033  001278  EF02  F00A         	goto	l2592
  1034  00127C                     l2576:
  1035                           
  1036                           ; BSR set to: 1
  1037  00127C  C196  F186         	movff	UpdateAndPrintDisplay@i_748,??_UpdateAndPrintDisplay
  1038  001280  C197  F187         	movff	UpdateAndPrintDisplay@i_748+1,??_UpdateAndPrintDisplay+1
  1039  001284  0E05               	movlw	5
  1040  001286                     u1705:
  1041  001286  90D8               	bcf	status,0,c
  1042  001288  3786               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1043  00128A  3787               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1044  00128C  2EE8               	decfsz	wreg,f,c
  1045  00128E  EF43  F009         	goto	u1705
  1046  001292  0E00               	movlw	low _display
  1047  001294  6F88               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1048  001296  0E01               	movlw	high _display
  1049  001298  6F89               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1050  00129A  5186               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1051  00129C  2788               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1052  00129E  5187               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1053  0012A0  2389               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1054  0012A2  90D8               	bcf	status,0,c
  1055  0012A4  3598               	rlcf	UpdateAndPrintDisplay@j_749& (0+255),w,b
  1056  0012A6  6ED9               	movwf	fsr2l,c
  1057  0012A8  3599               	rlcf	(UpdateAndPrintDisplay@j_749+1)& (0+255),w,b
  1058  0012AA  6EDA               	movwf	fsr2h,c
  1059  0012AC  5188               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1060  0012AE  26D9               	addwf	fsr2l,f,c
  1061  0012B0  5189               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1062  0012B2  22DA               	addwfc	fsr2h,f,c
  1063  0012B4  EE10 F004          	lfsr	1,4
  1064  0012B8  50DE               	movf	postinc2,w,c
  1065  0012BA  26E1               	addwf	fsr1l,f,c
  1066  0012BC  50DD               	movf	postdec2,w,c
  1067  0012BE  22E2               	addwfc	fsr1h,f,c
  1068  0012C0  50E7               	movf	indf1,w,c
  1069  0012C2  6F8A               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1070  0012C4  6B8B               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1071                           
  1072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1073                           ; Switch size 1, requested type "simple"
  1074                           ; Number of cases is 1, Range of values is 0 to 0
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte            4     3 (average)
  1078                           ;	Chosen strategy is simple_byte
  1079  0012C6  518B               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1080  0012C8  0A00               	xorlw	0	; case 0
  1081  0012CA  B4D8               	btfsc	status,2,c
  1082  0012CC  EF6A  F009         	goto	l2800
  1083  0012D0  EF02  F00A         	goto	l256
  1084  0012D4                     l2800:
  1085                           
  1086                           ; BSR set to: 1
  1087                           ; Switch size 1, requested type "simple"
  1088                           ; Number of cases is 3, Range of values is 0 to 2
  1089                           ; switch strategies available:
  1090                           ; Name         Instructions Cycles
  1091                           ; simple_byte           10     6 (average)
  1092                           ;	Chosen strategy is simple_byte
  1093  0012D4  518A               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1094  0012D6  0A00               	xorlw	0	; case 0
  1095  0012D8  B4D8               	btfsc	status,2,c
  1096  0012DA  EF2F  F009         	goto	l2568
  1097  0012DE  0A01               	xorlw	1	; case 1
  1098  0012E0  B4D8               	btfsc	status,2,c
  1099  0012E2  EF34  F009         	goto	l2570
  1100  0012E6  0A03               	xorlw	3	; case 2
  1101  0012E8  B4D8               	btfsc	status,2,c
  1102  0012EA  EF39  F009         	goto	l2572
  1103  0012EE  EF02  F00A         	goto	l256
  1104  0012F2                     l2578:
  1105                           
  1106                           ; BSR set to: 1
  1107                           ;main.c: 207:                             LCDDat(1);
  1108  0012F2  0E01               	movlw	1
  1109  0012F4  ECEE  F00F         	call	_LCDDat
  1110                           
  1111                           ;main.c: 208:                             break;
  1112  0012F8  EF02  F00A         	goto	l2592
  1113  0012FC                     l2580:
  1114                           
  1115                           ; BSR set to: 1
  1116                           ;main.c: 210:                             LCDDat(3);
  1117  0012FC  0E03               	movlw	3
  1118  0012FE  ECEE  F00F         	call	_LCDDat
  1119                           
  1120                           ;main.c: 211:                             break;
  1121  001302  EF02  F00A         	goto	l2592
  1122  001306                     l2582:
  1123                           
  1124                           ; BSR set to: 1
  1125                           ;main.c: 213:                             LCDDat(5);
  1126  001306  0E05               	movlw	5
  1127  001308  ECEE  F00F         	call	_LCDDat
  1128                           
  1129                           ;main.c: 214:                             break;
  1130  00130C  EF02  F00A         	goto	l2592
  1131  001310                     l2586:
  1132                           
  1133                           ; BSR set to: 1
  1134  001310  C196  F186         	movff	UpdateAndPrintDisplay@i_748,??_UpdateAndPrintDisplay
  1135  001314  C197  F187         	movff	UpdateAndPrintDisplay@i_748+1,??_UpdateAndPrintDisplay+1
  1136  001318  0E05               	movlw	5
  1137  00131A                     u1715:
  1138  00131A  90D8               	bcf	status,0,c
  1139  00131C  3786               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1140  00131E  3787               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1141  001320  2EE8               	decfsz	wreg,f,c
  1142  001322  EF8D  F009         	goto	u1715
  1143  001326  0E00               	movlw	low _display
  1144  001328  6F88               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1145  00132A  0E01               	movlw	high _display
  1146  00132C  6F89               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1147  00132E  5186               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1148  001330  2788               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1149  001332  5187               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1150  001334  2389               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1151  001336  90D8               	bcf	status,0,c
  1152  001338  3598               	rlcf	UpdateAndPrintDisplay@j_749& (0+255),w,b
  1153  00133A  6ED9               	movwf	fsr2l,c
  1154  00133C  3599               	rlcf	(UpdateAndPrintDisplay@j_749+1)& (0+255),w,b
  1155  00133E  6EDA               	movwf	fsr2h,c
  1156  001340  5188               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1157  001342  26D9               	addwf	fsr2l,f,c
  1158  001344  5189               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1159  001346  22DA               	addwfc	fsr2h,f,c
  1160  001348  EE10 F004          	lfsr	1,4
  1161  00134C  50DE               	movf	postinc2,w,c
  1162  00134E  26E1               	addwf	fsr1l,f,c
  1163  001350  50DD               	movf	postdec2,w,c
  1164  001352  22E2               	addwfc	fsr1h,f,c
  1165  001354  50E7               	movf	indf1,w,c
  1166  001356  6F8A               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1167  001358  6B8B               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1168                           
  1169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1170                           ; Switch size 1, requested type "simple"
  1171                           ; Number of cases is 1, Range of values is 0 to 0
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte            4     3 (average)
  1175                           ;	Chosen strategy is simple_byte
  1176  00135A  518B               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1177  00135C  0A00               	xorlw	0	; case 0
  1178  00135E  B4D8               	btfsc	status,2,c
  1179  001360  EFB4  F009         	goto	l2802
  1180  001364  EF02  F00A         	goto	l256
  1181  001368                     l2802:
  1182                           
  1183                           ; BSR set to: 1
  1184                           ; Switch size 1, requested type "simple"
  1185                           ; Number of cases is 3, Range of values is 0 to 2
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte           10     6 (average)
  1189                           ;	Chosen strategy is simple_byte
  1190  001368  518A               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1191  00136A  0A00               	xorlw	0	; case 0
  1192  00136C  B4D8               	btfsc	status,2,c
  1193  00136E  EF79  F009         	goto	l2578
  1194  001372  0A01               	xorlw	1	; case 1
  1195  001374  B4D8               	btfsc	status,2,c
  1196  001376  EF7E  F009         	goto	l2580
  1197  00137A  0A03               	xorlw	3	; case 2
  1198  00137C  B4D8               	btfsc	status,2,c
  1199  00137E  EF83  F009         	goto	l2582
  1200  001382  EF02  F00A         	goto	l256
  1201  001386                     l2590:
  1202                           
  1203                           ; BSR set to: 1
  1204  001386  C196  F186         	movff	UpdateAndPrintDisplay@i_748,??_UpdateAndPrintDisplay
  1205  00138A  C197  F187         	movff	UpdateAndPrintDisplay@i_748+1,??_UpdateAndPrintDisplay+1
  1206  00138E  0E05               	movlw	5
  1207  001390                     u1725:
  1208  001390  90D8               	bcf	status,0,c
  1209  001392  3786               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1210  001394  3787               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1211  001396  2EE8               	decfsz	wreg,f,c
  1212  001398  EFC8  F009         	goto	u1725
  1213  00139C  0E00               	movlw	low _display
  1214  00139E  6F88               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1215  0013A0  0E01               	movlw	high _display
  1216  0013A2  6F89               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1217  0013A4  5186               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1218  0013A6  2788               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1219  0013A8  5187               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1220  0013AA  2389               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1221  0013AC  90D8               	bcf	status,0,c
  1222  0013AE  3598               	rlcf	UpdateAndPrintDisplay@j_749& (0+255),w,b
  1223  0013B0  6ED9               	movwf	fsr2l,c
  1224  0013B2  3599               	rlcf	(UpdateAndPrintDisplay@j_749+1)& (0+255),w,b
  1225  0013B4  6EDA               	movwf	fsr2h,c
  1226  0013B6  5188               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1227  0013B8  26D9               	addwf	fsr2l,f,c
  1228  0013BA  5189               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1229  0013BC  22DA               	addwfc	fsr2h,f,c
  1230  0013BE  EE10 F003          	lfsr	1,3
  1231  0013C2  50DE               	movf	postinc2,w,c
  1232  0013C4  26E1               	addwf	fsr1l,f,c
  1233  0013C6  50DD               	movf	postdec2,w,c
  1234  0013C8  22E2               	addwfc	fsr1h,f,c
  1235  0013CA  50E7               	movf	indf1,w,c
  1236  0013CC  6F8A               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1237  0013CE  6B8B               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1238                           
  1239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1240                           ; Switch size 1, requested type "simple"
  1241                           ; Number of cases is 1, Range of values is 0 to 0
  1242                           ; switch strategies available:
  1243                           ; Name         Instructions Cycles
  1244                           ; simple_byte            4     3 (average)
  1245                           ;	Chosen strategy is simple_byte
  1246  0013D0  518B               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1247  0013D2  0A00               	xorlw	0	; case 0
  1248  0013D4  B4D8               	btfsc	status,2,c
  1249  0013D6  EFEF  F009         	goto	l2804
  1250  0013DA  EF02  F00A         	goto	l2592
  1251  0013DE                     l2804:
  1252                           
  1253                           ; BSR set to: 1
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 4, Range of values is 0 to 3
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte           13     7 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260  0013DE  518A               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1261  0013E0  0A00               	xorlw	0	; case 0
  1262  0013E2  B4D8               	btfsc	status,2,c
  1263  0013E4  EF3E  F009         	goto	l2576
  1264  0013E8  0A01               	xorlw	1	; case 1
  1265  0013EA  B4D8               	btfsc	status,2,c
  1266  0013EC  EF88  F009         	goto	l2586
  1267  0013F0  0A03               	xorlw	3	; case 2
  1268  0013F2  B4D8               	btfsc	status,2,c
  1269  0013F4  EF25  F009         	goto	l2564
  1270  0013F8  0A01               	xorlw	1	; case 3
  1271  0013FA  B4D8               	btfsc	status,2,c
  1272  0013FC  EF2A  F009         	goto	l2566
  1273  001400  EF02  F00A         	goto	l2592
  1274  001404                     l256:
  1275  001404                     l2592:
  1276  001404  0101               	movlb	1	; () banked
  1277  001406  4B98               	infsnz	UpdateAndPrintDisplay@j_749& (0+255),f,b
  1278  001408  2B99               	incf	(UpdateAndPrintDisplay@j_749+1)& (0+255),f,b
  1279  00140A                     
  1280                           ; BSR set to: 1
  1281  00140A  BF99               	btfsc	(UpdateAndPrintDisplay@j_749+1)& (0+255),7,b
  1282  00140C  EF11  F00A         	goto	u1731
  1283  001410  5199               	movf	(UpdateAndPrintDisplay@j_749+1)& (0+255),w,b
  1284  001412  E109               	bnz	u1730
  1285  001414  0E10               	movlw	16
  1286  001416  5D98               	subwf	UpdateAndPrintDisplay@j_749& (0+255),w,b
  1287  001418  A0D8               	btfss	status,0,c
  1288  00141A  EF11  F00A         	goto	u1731
  1289  00141E  EF13  F00A         	goto	u1730
  1290  001422                     u1731:
  1291  001422  EFC7  F008         	goto	l2554
  1292  001426                     u1730:
  1293  001426                     
  1294                           ; BSR set to: 1
  1295                           ;main.c: 227:     }
  1296  001426  4B96               	infsnz	UpdateAndPrintDisplay@i_748& (0+255),f,b
  1297  001428  2B97               	incf	(UpdateAndPrintDisplay@i_748+1)& (0+255),f,b
  1298  00142A                     
  1299                           ; BSR set to: 1
  1300  00142A  BF97               	btfsc	(UpdateAndPrintDisplay@i_748+1)& (0+255),7,b
  1301  00142C  EF21  F00A         	goto	u1741
  1302  001430  5197               	movf	(UpdateAndPrintDisplay@i_748+1)& (0+255),w,b
  1303  001432  E109               	bnz	u1740
  1304  001434  0E04               	movlw	4
  1305  001436  5D96               	subwf	UpdateAndPrintDisplay@i_748& (0+255),w,b
  1306  001438  A0D8               	btfss	status,0,c
  1307  00143A  EF21  F00A         	goto	u1741
  1308  00143E  EF23  F00A         	goto	u1740
  1309  001442                     u1741:
  1310  001442  EFC3  F008         	goto	l2548
  1311  001446                     u1740:
  1312  001446                     
  1313                           ; BSR set to: 1
  1314  001446  0012               	return		;funcret
  1315  001448                     __end_of_UpdateAndPrintDisplay:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _InitLCD *****************
  1319 ;; Defined at:
  1320 ;;		line 124 in file "./lcd.h"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    5
  1341 ;; This function calls:
  1342 ;;		_LCDCmd
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text2
  1349  002010                     __ptext2:
  1350                           	callstack 0
  1351  002010                     _InitLCD:
  1352                           	callstack 25
  1353  002010                     
  1354                           ;./lcd.h: 125:   TRISEbits.RE1 = 0;
  1355  002010  9296               	bcf	150,1,c	;volatile
  1356                           
  1357                           ;./lcd.h: 126:   TRISEbits.RE2 = 0;
  1358  002012  9496               	bcf	150,2,c	;volatile
  1359  002014                     
  1360                           ;./lcd.h: 127:   TRISD = 0;
  1361  002014  0E00               	movlw	0
  1362  002016  6E95               	movwf	149,c	;volatile
  1363  002018                     
  1364                           ;./lcd.h: 129:   PORTEbits.RE1 = 0;
  1365  002018  9284               	bcf	132,1,c	;volatile
  1366  00201A                     
  1367                           ;./lcd.h: 130:   PORTEbits.RE2 = 0;
  1368  00201A  9484               	bcf	132,2,c	;volatile
  1369  00201C                     
  1370                           ;./lcd.h: 131:   LCDCmd(0x38);
  1371  00201C  0E38               	movlw	56
  1372  00201E  EC21  F010         	call	_LCDCmd
  1373  002022                     
  1374                           ;./lcd.h: 132:   LCDCmd(0x08);
  1375  002022  0E08               	movlw	8
  1376  002024  EC21  F010         	call	_LCDCmd
  1377  002028                     
  1378                           ;./lcd.h: 133:   LCDCmd(0x0C);
  1379  002028  0E0C               	movlw	12
  1380  00202A  EC21  F010         	call	_LCDCmd
  1381  00202E                     
  1382                           ;./lcd.h: 134:   LCDCmd(0x06);
  1383  00202E  0E06               	movlw	6
  1384  002030  EC21  F010         	call	_LCDCmd
  1385  002034                     
  1386                           ;./lcd.h: 135:   LCDCmd(0x01);
  1387  002034  0E01               	movlw	1
  1388  002036  EC21  F010         	call	_LCDCmd
  1389  00203A                     
  1390                           ;./lcd.h: 136:   LCDCmd(0x80);
  1391  00203A  0E80               	movlw	128
  1392  00203C  EC21  F010         	call	_LCDCmd
  1393  002040  0012               	return		;funcret
  1394  002042                     __end_of_InitLCD:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function _InitInterrupts *****************
  1398 ;; Defined at:
  1399 ;;		line 308 in file "main.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    4
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text3
  1428  001DEC                     __ptext3:
  1429                           	callstack 0
  1430  001DEC                     _InitInterrupts:
  1431                           	callstack 26
  1432  001DEC                     
  1433                           ;main.c: 309:     a = b = c = 0;
  1434  001DEC  0E00               	movlw	0
  1435  001DEE  6E0A               	movwf	(_c+1)^0,c
  1436  001DF0  0E00               	movlw	0
  1437  001DF2  6E09               	movwf	_c^0,c
  1438  001DF4  C009  F00B         	movff	_c,_b
  1439  001DF8  C00A  F00C         	movff	_c+1,_b+1
  1440  001DFC  C00B  F00D         	movff	_b,_a
  1441  001E00  C00C  F00E         	movff	_b+1,_a+1
  1442                           
  1443                           ;main.c: 311:     ADCON1 = 0b0111;
  1444  001E04  0E07               	movlw	7
  1445  001E06  6EC1               	movwf	193,c	;volatile
  1446  001E08                     
  1447                           ;main.c: 312:     INTCON2bits.RBPU = 0;
  1448  001E08  9EF1               	bcf	241,7,c	;volatile
  1449                           
  1450                           ;main.c: 313:     PORTB = 0;
  1451  001E0A  0E00               	movlw	0
  1452  001E0C  6E81               	movwf	129,c	;volatile
  1453                           
  1454                           ;main.c: 315:     T3CON = 0b10000001;
  1455  001E0E  0E81               	movlw	129
  1456  001E10  6EB1               	movwf	177,c	;volatile
  1457  001E12                     
  1458                           ;main.c: 316:     TRISB = 0xff;
  1459  001E12  6893               	setf	147,c	;volatile
  1460                           
  1461                           ;main.c: 317:     TRISA = 0x0;
  1462  001E14  0E00               	movlw	0
  1463  001E16  6E92               	movwf	146,c	;volatile
  1464                           
  1465                           ;main.c: 318:     TRISD = 0x0;
  1466  001E18  0E00               	movlw	0
  1467  001E1A  6E95               	movwf	149,c	;volatile
  1468                           
  1469                           ;main.c: 320:     T0CON = 0b00010011;
  1470  001E1C  0E13               	movlw	19
  1471  001E1E  6ED5               	movwf	213,c	;volatile
  1472                           
  1473                           ;main.c: 321:     acceptInterrupts = 0;
  1474  001E20  0E00               	movlw	0
  1475  001E22  6E0F               	movwf	_acceptInterrupts^0,c
  1476                           
  1477                           ;main.c: 322:     TMR0L = 0;
  1478  001E24  0E00               	movlw	0
  1479  001E26  6ED6               	movwf	214,c	;volatile
  1480                           
  1481                           ;main.c: 323:     TMR0H = 0x80;
  1482  001E28  0E80               	movlw	128
  1483  001E2A  6ED7               	movwf	215,c	;volatile
  1484  001E2C                     
  1485                           ;main.c: 324:     T0CONbits.TMR0ON = 1;
  1486  001E2C  8ED5               	bsf	213,7,c	;volatile
  1487  001E2E                     
  1488                           ;main.c: 326:     INTCONbits.PEIE = 1;
  1489  001E2E  8CF2               	bsf	242,6,c	;volatile
  1490  001E30                     
  1491                           ;main.c: 327:     INTCONbits.INT0E = 1;
  1492  001E30  88F2               	bsf	242,4,c	;volatile
  1493  001E32                     
  1494                           ;main.c: 328:     INTCONbits.RBIE = 1;
  1495  001E32  86F2               	bsf	242,3,c	;volatile
  1496  001E34                     
  1497                           ;main.c: 329:     INTCONbits.T0IE = 1;
  1498  001E34  8AF2               	bsf	242,5,c	;volatile
  1499  001E36                     
  1500                           ;main.c: 330:     INTCON3bits.INT1E = 1;
  1501  001E36  86F0               	bsf	240,3,c	;volatile
  1502  001E38                     
  1503                           ;main.c: 332:     INTCON2bits.INTEDG0 = 0;
  1504  001E38  9CF1               	bcf	241,6,c	;volatile
  1505  001E3A                     
  1506                           ;main.c: 333:     INTCON2bits.INTEDG1 = 0;
  1507  001E3A  9AF1               	bcf	241,5,c	;volatile
  1508  001E3C                     
  1509                           ;main.c: 336:     INTCONbits.RBIF = 0;
  1510  001E3C  90F2               	bcf	242,0,c	;volatile
  1511  001E3E                     
  1512                           ;main.c: 337:     INTCONbits.INT0IF = 0;
  1513  001E3E  92F2               	bcf	242,1,c	;volatile
  1514  001E40                     
  1515                           ;main.c: 338:     INTCON3bits.INT1IF = 0;
  1516  001E40  90F0               	bcf	240,0,c	;volatile
  1517  001E42                     
  1518                           ;main.c: 340:     INTCONbits.RBIE = 0;
  1519  001E42  96F2               	bcf	242,3,c	;volatile
  1520  001E44                     
  1521                           ;main.c: 341:     INTCONbits.GIE = 1;
  1522  001E44  8EF2               	bsf	242,7,c	;volatile
  1523  001E46                     
  1524                           ;main.c: 342:     PORTB = PORTB;
  1525  001E46  CF81 FF81          	movff	3969,3969	;volatile
  1526  001E4A                     
  1527                           ;main.c: 343:     INTCONbits.RBIF = 0;
  1528  001E4A  90F2               	bcf	242,0,c	;volatile
  1529  001E4C                     
  1530                           ;main.c: 344:     INTCONbits.RBIE = 1;
  1531  001E4C  86F2               	bsf	242,3,c	;volatile
  1532  001E4E                     
  1533                           ;main.c: 347:     INTCON2bits.RBIP = 1;
  1534  001E4E  80F1               	bsf	241,0,c	;volatile
  1535  001E50                     
  1536                           ;main.c: 348:     INTCON2bits.TMR0IP = 1;
  1537  001E50  84F1               	bsf	241,2,c	;volatile
  1538  001E52                     
  1539                           ;main.c: 349:     INTCON3bits.INT1IP = 1;
  1540  001E52  8CF0               	bsf	240,6,c	;volatile
  1541  001E54                     
  1542                           ;main.c: 350:     IPR1bits.TMR1IP = 1;
  1543  001E54  809F               	bsf	159,0,c	;volatile
  1544  001E56                     
  1545                           ;main.c: 352:     PIE1bits.TMR2IE = 1;
  1546  001E56  829D               	bsf	157,1,c	;volatile
  1547  001E58                     
  1548                           ;main.c: 353:     PIR1bits.TMR2IF = 0;
  1549  001E58  929E               	bcf	158,1,c	;volatile
  1550  001E5A                     
  1551                           ;main.c: 354:     IPR1bits.TMR2IP = 0;
  1552  001E5A  929F               	bcf	159,1,c	;volatile
  1553  001E5C                     
  1554                           ;main.c: 355:     RCONbits.IPEN = 1;
  1555  001E5C  8ED0               	bsf	208,7,c	;volatile
  1556                           
  1557                           ;main.c: 356:     T2CON = 0b00001111;
  1558  001E5E  0E0F               	movlw	15
  1559  001E60  6ECA               	movwf	202,c	;volatile
  1560  001E62  0012               	return		;funcret
  1561  001E64                     __end_of_InitInterrupts:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _InitGameObjects *****************
  1565 ;; Defined at:
  1566 ;;		line 230 in file "main.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  j               2   20[BANK1 ] int 
  1571 ;;  i               2   22[BANK1 ] int 
  1572 ;;  i               2   18[BANK1 ] int 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;Total ram usage:       18 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    5
  1589 ;; This function calls:
  1590 ;;		___wmul
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text4
  1597  001650                     __ptext4:
  1598                           	callstack 0
  1599  001650                     _InitGameObjects:
  1600                           	callstack 25
  1601  001650                     
  1602                           ;main.c: 231:     for (int i = 0; i < 4; i++) {
  1603  001650  0E00               	movlw	0
  1604  001652  0101               	movlb	1	; () banked
  1605  001654  6F93               	movwf	(InitGameObjects@i+1)& (0+255),b
  1606  001656  0E00               	movlw	0
  1607  001658  6F92               	movwf	InitGameObjects@i& (0+255),b
  1608  00165A                     l2480:
  1609                           
  1610                           ; BSR set to: 1
  1611                           ;main.c: 232:         for (int j = 0; j < 16; j++) {
  1612  00165A  0E00               	movlw	0
  1613  00165C  6F95               	movwf	(InitGameObjects@j+1)& (0+255),b
  1614  00165E  0E00               	movlw	0
  1615  001660  6F94               	movwf	InitGameObjects@j& (0+255),b
  1616  001662                     l2486:
  1617                           
  1618                           ; BSR set to: 1
  1619                           ;main.c: 233:             display[i][j] = ((void*)0);
  1620  001662  C192  F186         	movff	InitGameObjects@i,??_InitGameObjects
  1621  001666  C193  F187         	movff	InitGameObjects@i+1,??_InitGameObjects+1
  1622  00166A  0E05               	movlw	5
  1623  00166C                     u1575:
  1624  00166C  90D8               	bcf	status,0,c
  1625  00166E  3786               	rlcf	??_InitGameObjects& (0+255),f,b
  1626  001670  3787               	rlcf	(??_InitGameObjects+1)& (0+255),f,b
  1627  001672  2EE8               	decfsz	wreg,f,c
  1628  001674  EF36  F00B         	goto	u1575
  1629  001678  0E00               	movlw	low _display
  1630  00167A  6F88               	movwf	(??_InitGameObjects+2)& (0+255),b
  1631  00167C  0E01               	movlw	high _display
  1632  00167E  6F89               	movwf	(??_InitGameObjects+3)& (0+255),b
  1633  001680  5186               	movf	??_InitGameObjects& (0+255),w,b
  1634  001682  2788               	addwf	(??_InitGameObjects+2)& (0+255),f,b
  1635  001684  5187               	movf	(??_InitGameObjects+1)& (0+255),w,b
  1636  001686  2389               	addwfc	(??_InitGameObjects+3)& (0+255),f,b
  1637  001688  90D8               	bcf	status,0,c
  1638  00168A  3594               	rlcf	InitGameObjects@j& (0+255),w,b
  1639  00168C  6ED9               	movwf	fsr2l,c
  1640  00168E  3595               	rlcf	(InitGameObjects@j+1)& (0+255),w,b
  1641  001690  6EDA               	movwf	fsr2h,c
  1642  001692  5188               	movf	(??_InitGameObjects+2)& (0+255),w,b
  1643  001694  26D9               	addwf	fsr2l,f,c
  1644  001696  5189               	movf	(??_InitGameObjects+3)& (0+255),w,b
  1645  001698  22DA               	addwfc	fsr2h,f,c
  1646  00169A  0E00               	movlw	0
  1647  00169C  6EDE               	movwf	postinc2,c
  1648  00169E  0E00               	movlw	0
  1649  0016A0  6EDD               	movwf	postdec2,c
  1650  0016A2                     
  1651                           ; BSR set to: 1
  1652                           ;main.c: 234:         }
  1653  0016A2  4B94               	infsnz	InitGameObjects@j& (0+255),f,b
  1654  0016A4  2B95               	incf	(InitGameObjects@j+1)& (0+255),f,b
  1655  0016A6                     
  1656                           ; BSR set to: 1
  1657  0016A6  BF95               	btfsc	(InitGameObjects@j+1)& (0+255),7,b
  1658  0016A8  EF5F  F00B         	goto	u1581
  1659  0016AC  5195               	movf	(InitGameObjects@j+1)& (0+255),w,b
  1660  0016AE  E109               	bnz	u1580
  1661  0016B0  0E10               	movlw	16
  1662  0016B2  5D94               	subwf	InitGameObjects@j& (0+255),w,b
  1663  0016B4  A0D8               	btfss	status,0,c
  1664  0016B6  EF5F  F00B         	goto	u1581
  1665  0016BA  EF61  F00B         	goto	u1580
  1666  0016BE                     u1581:
  1667  0016BE  EF31  F00B         	goto	l2486
  1668  0016C2                     u1580:
  1669  0016C2                     
  1670                           ; BSR set to: 1
  1671                           ;main.c: 235:     }
  1672  0016C2  4B92               	infsnz	InitGameObjects@i& (0+255),f,b
  1673  0016C4  2B93               	incf	(InitGameObjects@i+1)& (0+255),f,b
  1674  0016C6                     
  1675                           ; BSR set to: 1
  1676  0016C6  BF93               	btfsc	(InitGameObjects@i+1)& (0+255),7,b
  1677  0016C8  EF6F  F00B         	goto	u1591
  1678  0016CC  5193               	movf	(InitGameObjects@i+1)& (0+255),w,b
  1679  0016CE  E109               	bnz	u1590
  1680  0016D0  0E04               	movlw	4
  1681  0016D2  5D92               	subwf	InitGameObjects@i& (0+255),w,b
  1682  0016D4  A0D8               	btfss	status,0,c
  1683  0016D6  EF6F  F00B         	goto	u1591
  1684  0016DA  EF71  F00B         	goto	u1590
  1685  0016DE                     u1591:
  1686  0016DE  EF2D  F00B         	goto	l2480
  1687  0016E2                     u1590:
  1688  0016E2                     
  1689                           ; BSR set to: 1
  1690                           ;main.c: 237:     selectedPlayer = 0;
  1691  0016E2  0E00               	movlw	0
  1692  0016E4  6E08               	movwf	(_selectedPlayer+1)^0,c
  1693  0016E6  0E00               	movlw	0
  1694  0016E8  6E07               	movwf	_selectedPlayer^0,c
  1695                           
  1696                           ;main.c: 239:     objs[0].x = 3;
  1697  0016EA  0E03               	movlw	3
  1698  0016EC  6E10               	movwf	_objs^0,c
  1699                           
  1700                           ;main.c: 240:     objs[0].y = 2;
  1701  0016EE  0E02               	movlw	2
  1702  0016F0  6E11               	movwf	(_objs+1)^0,c
  1703                           
  1704                           ;main.c: 241:     objs[0].type = OT_PLAYERA;
  1705  0016F2  0E00               	movlw	0
  1706  0016F4  6E13               	movwf	(_objs+3)^0,c
  1707                           
  1708                           ;main.c: 242:     objs[0].state = OS_SELECTED;
  1709  0016F6  0E01               	movlw	1
  1710  0016F8  6E14               	movwf	(_objs+4)^0,c
  1711                           
  1712                           ;main.c: 243:     objs[0].active = 1;
  1713  0016FA  0E01               	movlw	1
  1714  0016FC  6E12               	movwf	(_objs+2)^0,c
  1715                           
  1716                           ;main.c: 245:     objs[1].x = 3;
  1717  0016FE  0E03               	movlw	3
  1718  001700  6E15               	movwf	(_objs+5)^0,c
  1719                           
  1720                           ;main.c: 246:     objs[1].y = 3;
  1721  001702  0E03               	movlw	3
  1722  001704  6E16               	movwf	(_objs+6)^0,c
  1723                           
  1724                           ;main.c: 247:     objs[1].type = OT_PLAYERA;
  1725  001706  0E00               	movlw	0
  1726  001708  6E18               	movwf	(_objs+8)^0,c
  1727                           
  1728                           ;main.c: 248:     objs[1].state = OS_DEFAULT;
  1729  00170A  0E00               	movlw	0
  1730  00170C  6E19               	movwf	(_objs+9)^0,c
  1731                           
  1732                           ;main.c: 249:     objs[1].active = 1;
  1733  00170E  0E01               	movlw	1
  1734  001710  6E17               	movwf	(_objs+7)^0,c
  1735                           
  1736                           ;main.c: 251:     objs[2].x = 14;
  1737  001712  0E0E               	movlw	14
  1738  001714  6E1A               	movwf	(_objs+10)^0,c
  1739                           
  1740                           ;main.c: 252:     objs[2].y = 2;
  1741  001716  0E02               	movlw	2
  1742  001718  6E1B               	movwf	(_objs+11)^0,c
  1743                           
  1744                           ;main.c: 253:     objs[2].type = OT_PLAYERB;
  1745  00171A  0E01               	movlw	1
  1746  00171C  6E1D               	movwf	(_objs+13)^0,c
  1747                           
  1748                           ;main.c: 254:     objs[2].state = OS_DEFAULT;
  1749  00171E  0E00               	movlw	0
  1750  001720  6E1E               	movwf	(_objs+14)^0,c
  1751                           
  1752                           ;main.c: 255:     objs[2].active = 1;
  1753  001722  0E01               	movlw	1
  1754  001724  6E1C               	movwf	(_objs+12)^0,c
  1755                           
  1756                           ;main.c: 257:     objs[3].x = 14;
  1757  001726  0E0E               	movlw	14
  1758  001728  6E1F               	movwf	(_objs+15)^0,c
  1759                           
  1760                           ;main.c: 258:     objs[3].y = 3;
  1761  00172A  0E03               	movlw	3
  1762  00172C  6E20               	movwf	(_objs+16)^0,c
  1763                           
  1764                           ;main.c: 259:     objs[3].type = OT_PLAYERB;
  1765  00172E  0E01               	movlw	1
  1766  001730  6E22               	movwf	(_objs+18)^0,c
  1767                           
  1768                           ;main.c: 260:     objs[3].state = OS_DEFAULT;
  1769  001732  0E00               	movlw	0
  1770  001734  6E23               	movwf	(_objs+19)^0,c
  1771                           
  1772                           ;main.c: 261:     objs[3].active = 1;
  1773  001736  0E01               	movlw	1
  1774  001738  6E21               	movwf	(_objs+17)^0,c
  1775                           
  1776                           ;main.c: 263:     objs[5].x = 9;
  1777  00173A  0E09               	movlw	9
  1778  00173C  6E29               	movwf	(_objs+25)^0,c
  1779                           
  1780                           ;main.c: 264:     objs[5].y = 2;
  1781  00173E  0E02               	movlw	2
  1782  001740  6E2A               	movwf	(_objs+26)^0,c
  1783                           
  1784                           ;main.c: 265:     objs[5].type = OT_FRISBEE;
  1785  001742  0E02               	movlw	2
  1786  001744  6E2C               	movwf	(_objs+28)^0,c
  1787                           
  1788                           ;main.c: 266:     objs[5].state = OS_FELL;
  1789  001746  0E04               	movlw	4
  1790  001748  6E2D               	movwf	(_objs+29)^0,c
  1791                           
  1792                           ;main.c: 267:     objs[5].active = 1;
  1793  00174A  0E01               	movlw	1
  1794  00174C  6E2B               	movwf	(_objs+27)^0,c
  1795                           
  1796                           ;main.c: 269:     objs[4].x = 1;
  1797  00174E  0E01               	movlw	1
  1798  001750  6E24               	movwf	(_objs+20)^0,c
  1799                           
  1800                           ;main.c: 270:     objs[4].y = 1;
  1801  001752  0E01               	movlw	1
  1802  001754  6E25               	movwf	(_objs+21)^0,c
  1803                           
  1804                           ;main.c: 271:     objs[4].type = OT_TARGET;
  1805  001756  0E03               	movlw	3
  1806  001758  6E27               	movwf	(_objs+23)^0,c
  1807                           
  1808                           ;main.c: 272:     objs[4].active = 0;
  1809  00175A  0E00               	movlw	0
  1810  00175C  6E26               	movwf	(_objs+22)^0,c
  1811                           
  1812                           ;main.c: 274:     for (int i = 0; i < 6; i++) {
  1813  00175E  0E00               	movlw	0
  1814  001760  6F97               	movwf	(InitGameObjects@i_758+1)& (0+255),b
  1815  001762  0E00               	movlw	0
  1816  001764  6F96               	movwf	InitGameObjects@i_758& (0+255),b
  1817  001766                     l2502:
  1818                           
  1819                           ; BSR set to: 1
  1820                           ;main.c: 275:         display[objs[i].y][objs[i].x] = &objs[i];
  1821  001766  C196  F180         	movff	InitGameObjects@i_758,___wmul@multiplier
  1822  00176A  C197  F181         	movff	InitGameObjects@i_758+1,___wmul@multiplier+1
  1823  00176E  0E00               	movlw	0
  1824  001770  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1825  001772  0E05               	movlw	5
  1826  001774  6F82               	movwf	___wmul@multiplicand& (0+255),b
  1827  001776  EC3A  F010         	call	___wmul	;wreg free
  1828  00177A  0E10               	movlw	low _objs
  1829  00177C  0101               	movlb	1	; () banked
  1830  00177E  6F86               	movwf	??_InitGameObjects& (0+255),b
  1831  001780  0E00               	movlw	high _objs
  1832  001782  6F87               	movwf	(??_InitGameObjects+1)& (0+255),b
  1833  001784  5180               	movf	?___wmul& (0+255),w,b
  1834  001786  2786               	addwf	??_InitGameObjects& (0+255),f,b
  1835  001788  5181               	movf	(?___wmul+1)& (0+255),w,b
  1836  00178A  2387               	addwfc	(??_InitGameObjects+1)& (0+255),f,b
  1837  00178C  0E05               	movlw	5
  1838  00178E  0396               	mulwf	InitGameObjects@i_758& (0+255),b
  1839  001790  CFF3 F188          	movff	prodl,??_InitGameObjects+2
  1840  001794  CFF4 F189          	movff	prodh,??_InitGameObjects+3
  1841  001798  0397               	mulwf	(InitGameObjects@i_758+1)& (0+255),b
  1842  00179A  50F3               	movf	prodl,w,c
  1843  00179C  2789               	addwf	(??_InitGameObjects+3)& (0+255),f,b
  1844  00179E  0E10               	movlw	low _objs
  1845  0017A0  2588               	addwf	(??_InitGameObjects+2)& (0+255),w,b
  1846  0017A2  6ED9               	movwf	fsr2l,c
  1847  0017A4  0E00               	movlw	high _objs
  1848  0017A6  2189               	addwfc	(??_InitGameObjects+3)& (0+255),w,b
  1849  0017A8  6EDA               	movwf	fsr2h,c
  1850  0017AA  50DF               	movf	indf2,w,c
  1851  0017AC  6F8A               	movwf	(??_InitGameObjects+4)& (0+255),b
  1852  0017AE  518A               	movf	(??_InitGameObjects+4)& (0+255),w,b
  1853  0017B0  0D02               	mullw	2
  1854  0017B2  CFF3 F18B          	movff	prodl,??_InitGameObjects+5
  1855  0017B6  CFF4 F18C          	movff	prodh,??_InitGameObjects+6
  1856  0017BA  0E05               	movlw	5
  1857  0017BC  0396               	mulwf	InitGameObjects@i_758& (0+255),b
  1858  0017BE  CFF3 F18D          	movff	prodl,??_InitGameObjects+7
  1859  0017C2  CFF4 F18E          	movff	prodh,??_InitGameObjects+8
  1860  0017C6  0397               	mulwf	(InitGameObjects@i_758+1)& (0+255),b
  1861  0017C8  50F3               	movf	prodl,w,c
  1862  0017CA  278E               	addwf	(??_InitGameObjects+8)& (0+255),f,b
  1863  0017CC  0E11               	movlw	low (_objs+1)
  1864  0017CE  258D               	addwf	(??_InitGameObjects+7)& (0+255),w,b
  1865  0017D0  6ED9               	movwf	fsr2l,c
  1866  0017D2  0E00               	movlw	high (_objs+1)
  1867  0017D4  218E               	addwfc	(??_InitGameObjects+8)& (0+255),w,b
  1868  0017D6  6EDA               	movwf	fsr2h,c
  1869  0017D8  50DF               	movf	indf2,w,c
  1870  0017DA  6F8F               	movwf	(??_InitGameObjects+9)& (0+255),b
  1871  0017DC  518F               	movf	(??_InitGameObjects+9)& (0+255),w,b
  1872  0017DE  0D20               	mullw	32
  1873  0017E0  0E00               	movlw	low _display
  1874  0017E2  6F90               	movwf	(??_InitGameObjects+10)& (0+255),b
  1875  0017E4  0E01               	movlw	high _display
  1876  0017E6  6F91               	movwf	(??_InitGameObjects+11)& (0+255),b
  1877  0017E8  50F3               	movf	243,w,c
  1878  0017EA  2790               	addwf	(??_InitGameObjects+10)& (0+255),f,b
  1879  0017EC  50F4               	movf	244,w,c
  1880  0017EE  2391               	addwfc	(??_InitGameObjects+11)& (0+255),f,b
  1881  0017F0  518B               	movf	(??_InitGameObjects+5)& (0+255),w,b
  1882  0017F2  2590               	addwf	(??_InitGameObjects+10)& (0+255),w,b
  1883  0017F4  6ED9               	movwf	fsr2l,c
  1884  0017F6  518C               	movf	(??_InitGameObjects+6)& (0+255),w,b
  1885  0017F8  2191               	addwfc	(??_InitGameObjects+11)& (0+255),w,b
  1886  0017FA  6EDA               	movwf	fsr2h,c
  1887  0017FC  C186  FFDE         	movff	??_InitGameObjects,postinc2
  1888  001800  C187  FFDD         	movff	??_InitGameObjects+1,postdec2
  1889  001804                     
  1890                           ; BSR set to: 1
  1891                           ;main.c: 276:     }
  1892  001804  4B96               	infsnz	InitGameObjects@i_758& (0+255),f,b
  1893  001806  2B97               	incf	(InitGameObjects@i_758+1)& (0+255),f,b
  1894  001808                     
  1895                           ; BSR set to: 1
  1896  001808  BF97               	btfsc	(InitGameObjects@i_758+1)& (0+255),7,b
  1897  00180A  EF10  F00C         	goto	u1601
  1898  00180E  5197               	movf	(InitGameObjects@i_758+1)& (0+255),w,b
  1899  001810  E109               	bnz	u1600
  1900  001812  0E06               	movlw	6
  1901  001814  5D96               	subwf	InitGameObjects@i_758& (0+255),w,b
  1902  001816  A0D8               	btfss	status,0,c
  1903  001818  EF10  F00C         	goto	u1601
  1904  00181C  EF12  F00C         	goto	u1600
  1905  001820                     u1601:
  1906  001820  EFB3  F00B         	goto	l2502
  1907  001824                     u1600:
  1908  001824                     
  1909                           ; BSR set to: 1
  1910  001824  0012               	return		;funcret
  1911  001826                     __end_of_InitGameObjects:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function ___wmul *****************
  1915 ;; Defined at:
  1916 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  multiplier      2    0[BANK1 ] unsigned int 
  1919 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  product         2    4[BANK1 ] unsigned int 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    0[BANK1 ] unsigned int 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, prodl, prodh
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1931 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;Total ram usage:        6 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    4
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_UpdateAndPrintDisplay
  1942 ;;		_InitGameObjects
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text5
  1947  002074                     __ptext5:
  1948                           	callstack 0
  1949  002074                     ___wmul:
  1950                           	callstack 25
  1951  002074  0101               	movlb	1	; () banked
  1952  002076  5180               	movf	___wmul@multiplier& (0+255),w,b
  1953  002078  0382               	mulwf	___wmul@multiplicand& (0+255),b
  1954  00207A  CFF3 F184          	movff	prodl,___wmul@product
  1955  00207E  CFF4 F185          	movff	prodh,___wmul@product+1
  1956  002082  5180               	movf	___wmul@multiplier& (0+255),w,b
  1957  002084  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1958  002086  50F3               	movf	243,w,c
  1959  002088  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  1960  00208A  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1961  00208C  0382               	mulwf	___wmul@multiplicand& (0+255),b
  1962  00208E  50F3               	movf	243,w,c
  1963  002090  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  1964  002092                     
  1965                           ; BSR set to: 1
  1966  002092  C184  F180         	movff	___wmul@product,?___wmul
  1967  002096  C185  F181         	movff	___wmul@product+1,?___wmul+1
  1968  00209A                     
  1969                           ; BSR set to: 1
  1970  00209A  0012               	return		;funcret
  1971  00209C                     __end_of___wmul:
  1972                           	callstack 0
  1973                           
  1974 ;; *************** function _AddCustomCharacters *****************
  1975 ;; Defined at:
  1976 ;;		line 161 in file "./lcd.h"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    7
  1997 ;; This function calls:
  1998 ;;		_LCDAddSpecialCharacter
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text6
  2005  001D6A                     __ptext6:
  2006                           	callstack 0
  2007  001D6A                     _AddCustomCharacters:
  2008                           	callstack 23
  2009  001D6A                     
  2010                           ;./lcd.h: 162:     LCDAddSpecialCharacter(0, teamA_player);
  2011  001D6A  0E5A               	movlw	low _teamA_player
  2012  001D6C  0101               	movlb	1	; () banked
  2013  001D6E  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2014  001D70  0E00               	movlw	high _teamA_player
  2015  001D72  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2016  001D74  0E00               	movlw	0
  2017  001D76  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2018                           
  2019                           ;./lcd.h: 163:     LCDAddSpecialCharacter(1, teamB_player);
  2020  001D7A  0EBB               	movlw	low _teamB_player
  2021  001D7C  0101               	movlb	1	; () banked
  2022  001D7E  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2023  001D80  0E00               	movlw	high _teamB_player
  2024  001D82  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2025  001D84  0E01               	movlw	1
  2026  001D86  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2027                           
  2028                           ;./lcd.h: 164:     LCDAddSpecialCharacter(2, selected_teamA_player);
  2029  001D8A  0EB3               	movlw	low _selected_teamA_player
  2030  001D8C  0101               	movlb	1	; () banked
  2031  001D8E  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2032  001D90  0E00               	movlw	high _selected_teamA_player
  2033  001D92  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2034  001D94  0E02               	movlw	2
  2035  001D96  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2036                           
  2037                           ;./lcd.h: 165:     LCDAddSpecialCharacter(3, selected_teamB_player);
  2038  001D9A  0EAB               	movlw	low _selected_teamB_player
  2039  001D9C  0101               	movlb	1	; () banked
  2040  001D9E  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2041  001DA0  0E00               	movlw	high _selected_teamB_player
  2042  001DA2  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2043  001DA4  0E03               	movlw	3
  2044  001DA6  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2045                           
  2046                           ;./lcd.h: 166:     LCDAddSpecialCharacter(4, selected_teamA_player_with_frisbee);
  2047  001DAA  0EA3               	movlw	low _selected_teamA_player_with_frisbee
  2048  001DAC  0101               	movlb	1	; () banked
  2049  001DAE  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2050  001DB0  0E00               	movlw	high _selected_teamA_player_with_frisbee
  2051  001DB2  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2052  001DB4  0E04               	movlw	4
  2053  001DB6  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2054                           
  2055                           ;./lcd.h: 167:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
  2056  001DBA  0E9B               	movlw	low _selected_teamB_player_with_frisbee
  2057  001DBC  0101               	movlb	1	; () banked
  2058  001DBE  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2059  001DC0  0E00               	movlw	high _selected_teamB_player_with_frisbee
  2060  001DC2  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2061  001DC4  0E05               	movlw	5
  2062  001DC6  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2063                           
  2064                           ;./lcd.h: 168:     LCDAddSpecialCharacter(6, frisbeeChar);
  2065  001DCA  0E93               	movlw	low _frisbeeChar
  2066  001DCC  0101               	movlb	1	; () banked
  2067  001DCE  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2068  001DD0  0E00               	movlw	high _frisbeeChar
  2069  001DD2  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2070  001DD4  0E06               	movlw	6
  2071  001DD6  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2072                           
  2073                           ;./lcd.h: 169:     LCDAddSpecialCharacter(7, frisbee_target);
  2074  001DDA  0E8B               	movlw	low _frisbee_target
  2075  001DDC  0101               	movlb	1	; () banked
  2076  001DDE  6F83               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2077  001DE0  0E00               	movlw	high _frisbee_target
  2078  001DE2  6F84               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2079  001DE4  0E07               	movlw	7
  2080  001DE6  ECA7  F00F         	call	_LCDAddSpecialCharacter
  2081  001DEA  0012               	return		;funcret
  2082  001DEC                     __end_of_AddCustomCharacters:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _LCDAddSpecialCharacter *****************
  2086 ;; Defined at:
  2087 ;;		line 145 in file "./lcd.h"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  character_in    1    wreg     unsigned char 
  2090 ;;  data            2    3[BANK1 ] PTR unsigned char 
  2091 ;;		 -> frisbee_target(8), frisbeeChar(8), selected_teamB_player_with_frisbee(8), selected_teamA_player_with_frisbee(8),
      + 
  2092 ;;		 -> selected_teamB_player(8), selected_teamA_player(8), teamB_player(8), teamA_player(8), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  character_in    1    5[BANK1 ] unsigned char 
  2095 ;;  i               1    6[BANK1 ] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:        4 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    6
  2112 ;; This function calls:
  2113 ;;		_LCDCmd
  2114 ;;		_LCDDat
  2115 ;;		_LCDGoto
  2116 ;; This function is called by:
  2117 ;;		_AddCustomCharacters
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text7
  2122  001F4E                     __ptext7:
  2123                           	callstack 0
  2124  001F4E                     _LCDAddSpecialCharacter:
  2125                           	callstack 23
  2126                           
  2127                           ;incstack = 0
  2128                           ;LCDAddSpecialCharacter@character_index stored from wreg
  2129  001F4E  0101               	movlb	1	; () banked
  2130  001F50  6F85               	movwf	LCDAddSpecialCharacter@character_index& (0+255),b
  2131  001F52                     
  2132                           ;./lcd.h: 151:     LCDCmd(0b01000000+(character_index*8));
  2133  001F52  0101               	movlb	1	; () banked
  2134  001F54  5185               	movf	LCDAddSpecialCharacter@character_index& (0+255),w,b
  2135  001F56  0D08               	mullw	8
  2136  001F58  50F3               	movf	243,w,c
  2137  001F5A  0F40               	addlw	64
  2138  001F5C  EC21  F010         	call	_LCDCmd
  2139  001F60                     
  2140                           ;./lcd.h: 152:     for(byte i=0; i < 8; i++) {
  2141  001F60  0E00               	movlw	0
  2142  001F62  0101               	movlb	1	; () banked
  2143  001F64  6F86               	movwf	LCDAddSpecialCharacter@i& (0+255),b
  2144  001F66                     l2362:
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;./lcd.h: 153:         LCDDat(data[i]);
  2148  001F66  5186               	movf	LCDAddSpecialCharacter@i& (0+255),w,b
  2149  001F68  2583               	addwf	LCDAddSpecialCharacter@data& (0+255),w,b
  2150  001F6A  6ED9               	movwf	fsr2l,c
  2151  001F6C  0E00               	movlw	0
  2152  001F6E  2184               	addwfc	(LCDAddSpecialCharacter@data+1)& (0+255),w,b
  2153  001F70  6EDA               	movwf	fsr2h,c
  2154  001F72  50DF               	movf	indf2,w,c
  2155  001F74  ECEE  F00F         	call	_LCDDat
  2156  001F78                     
  2157                           ;./lcd.h: 154:     }
  2158  001F78  0101               	movlb	1	; () banked
  2159  001F7A  2B86               	incf	LCDAddSpecialCharacter@i& (0+255),f,b
  2160  001F7C                     
  2161                           ; BSR set to: 1
  2162  001F7C  0E07               	movlw	7
  2163  001F7E  6586               	cpfsgt	LCDAddSpecialCharacter@i& (0+255),b
  2164  001F80  EFC4  F00F         	goto	u1531
  2165  001F84  EFC6  F00F         	goto	u1530
  2166  001F88                     u1531:
  2167  001F88  EFB3  F00F         	goto	l2362
  2168  001F8C                     u1530:
  2169  001F8C                     
  2170                           ; BSR set to: 1
  2171                           ;./lcd.h: 156:     LCDGoto(lcd_x, lcd_y);
  2172  001F8C  C058  F181         	movff	_lcd_y,LCDGoto@p_1
  2173  001F90  5059               	movf	_lcd_x^0,w,c
  2174  001F92  EC32  F00F         	call	_LCDGoto
  2175  001F96  0012               	return		;funcret
  2176  001F98                     __end_of_LCDAddSpecialCharacter:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _LCDGoto *****************
  2180 ;; Defined at:
  2181 ;;		line 88 in file "./lcd.h"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  p_2             1    wreg     unsigned char 
  2184 ;;  p_1             1    1[BANK1 ] unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  p_2             1    2[BANK1 ] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2196 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    5
  2203 ;; This function calls:
  2204 ;;		_LCDCmd
  2205 ;; This function is called by:
  2206 ;;		_LCDAddSpecialCharacter
  2207 ;;		_UpdateAndPrintDisplay
  2208 ;;		_LCDStr
  2209 ;;		_PrintPORTBandIntCounts
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text8
  2214  001E64                     __ptext8:
  2215                           	callstack 0
  2216  001E64                     _LCDGoto:
  2217                           	callstack 24
  2218                           
  2219                           ;incstack = 0
  2220                           ;LCDGoto@p_2 stored from wreg
  2221  001E64  0101               	movlb	1	; () banked
  2222  001E66  6F82               	movwf	LCDGoto@p_2& (0+255),b
  2223  001E68                     
  2224                           ;./lcd.h: 89:   if(p_1==1) {
  2225  001E68  0101               	movlb	1	; () banked
  2226  001E6A  0581               	decf	LCDGoto@p_1& (0+255),w,b
  2227  001E6C  A4D8               	btfss	status,2,c
  2228  001E6E  EF3B  F00F         	goto	u1501
  2229  001E72  EF3D  F00F         	goto	u1500
  2230  001E76                     u1501:
  2231  001E76  EF44  F00F         	goto	l2340
  2232  001E7A                     u1500:
  2233  001E7A                     
  2234                           ; BSR set to: 1
  2235                           ;./lcd.h: 90:     LCDCmd(0x80 +((p_2-1)%16));
  2236  001E7A  0582               	decf	LCDGoto@p_2& (0+255),w,b
  2237  001E7C  0B0F               	andlw	15
  2238  001E7E  0F80               	addlw	128
  2239  001E80  EC21  F010         	call	_LCDCmd
  2240                           
  2241                           ;./lcd.h: 91:   }
  2242  001E84  EF69  F00F         	goto	l2350
  2243  001E88                     l2340:
  2244                           
  2245                           ; BSR set to: 1
  2246  001E88  0E02               	movlw	2
  2247  001E8A  1981               	xorwf	LCDGoto@p_1& (0+255),w,b
  2248  001E8C  A4D8               	btfss	status,2,c
  2249  001E8E  EF4B  F00F         	goto	u1511
  2250  001E92  EF4D  F00F         	goto	u1510
  2251  001E96                     u1511:
  2252  001E96  EF54  F00F         	goto	l2344
  2253  001E9A                     u1510:
  2254  001E9A                     
  2255                           ; BSR set to: 1
  2256                           ;./lcd.h: 93:     LCDCmd(0xC0 +((p_2-1)%16));
  2257  001E9A  0582               	decf	LCDGoto@p_2& (0+255),w,b
  2258  001E9C  0B0F               	andlw	15
  2259  001E9E  0FC0               	addlw	192
  2260  001EA0  EC21  F010         	call	_LCDCmd
  2261                           
  2262                           ;./lcd.h: 94:   }
  2263  001EA4  EF69  F00F         	goto	l2350
  2264  001EA8                     l2344:
  2265                           
  2266                           ; BSR set to: 1
  2267  001EA8  0E03               	movlw	3
  2268  001EAA  1981               	xorwf	LCDGoto@p_1& (0+255),w,b
  2269  001EAC  A4D8               	btfss	status,2,c
  2270  001EAE  EF5B  F00F         	goto	u1521
  2271  001EB2  EF5D  F00F         	goto	u1520
  2272  001EB6                     u1521:
  2273  001EB6  EF64  F00F         	goto	l2348
  2274  001EBA                     u1520:
  2275  001EBA                     
  2276                           ; BSR set to: 1
  2277                           ;./lcd.h: 96:     LCDCmd(0x90 +((p_2-1)%16));
  2278  001EBA  0582               	decf	LCDGoto@p_2& (0+255),w,b
  2279  001EBC  0B0F               	andlw	15
  2280  001EBE  0F90               	addlw	144
  2281  001EC0  EC21  F010         	call	_LCDCmd
  2282                           
  2283                           ;./lcd.h: 97:   }
  2284  001EC4  EF69  F00F         	goto	l2350
  2285  001EC8                     l2348:
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;./lcd.h: 99:     LCDCmd(0xD0 +((p_2-1)%16));
  2289  001EC8  0582               	decf	LCDGoto@p_2& (0+255),w,b
  2290  001ECA  0B0F               	andlw	15
  2291  001ECC  0FD0               	addlw	208
  2292  001ECE  EC21  F010         	call	_LCDCmd
  2293  001ED2                     l2350:
  2294                           
  2295                           ;./lcd.h: 101:   lcd_x = p_2;
  2296  001ED2  C182  F059         	movff	LCDGoto@p_2,_lcd_x
  2297  001ED6                     
  2298                           ;./lcd.h: 102:   lcd_y = p_1;
  2299  001ED6  C181  F058         	movff	LCDGoto@p_1,_lcd_y
  2300  001EDA  0012               	return		;funcret
  2301  001EDC                     __end_of_LCDGoto:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _LCDCmd *****************
  2305 ;; Defined at:
  2306 ;;		line 64 in file "./lcd.h"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  cmd             1    wreg     unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  cmd             1    0[BANK1 ] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;Total ram usage:        2 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    4
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_LCDGoto
  2331 ;;		_InitLCD
  2332 ;;		_LCDAddSpecialCharacter
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text9
  2337  002042                     __ptext9:
  2338                           	callstack 0
  2339  002042                     _LCDCmd:
  2340                           	callstack 24
  2341                           
  2342                           ;incstack = 0
  2343                           ;LCDCmd@cmd stored from wreg
  2344  002042  0101               	movlb	1	; () banked
  2345  002044  6F80               	movwf	LCDCmd@cmd& (0+255),b
  2346  002046                     
  2347                           ;./lcd.h: 65:   PORTEbits.RE1 = 0;
  2348  002046  9284               	bcf	132,1,c	;volatile
  2349                           
  2350                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  2351  002048  9484               	bcf	132,2,c	;volatile
  2352  00204A                     
  2353                           ;./lcd.h: 67:   PORTD = cmd;
  2354  00204A  C180  FF83         	movff	LCDCmd@cmd,3971	;volatile
  2355  00204E                     
  2356                           ;./lcd.h: 68:   PORTEbits.RE1 = 1;
  2357  00204E  8284               	bsf	132,1,c	;volatile
  2358  002050                     
  2359                           ;./lcd.h: 69:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2360  002050  0E07               	movlw	7
  2361  002052  0100               	movlb	0	; () banked
  2362  002054  6FFF               	movwf	??_LCDCmd& (0+255),b
  2363  002056  0E7D               	movlw	125
  2364  002058                     u1787:
  2365  002058  2EE8               	decfsz	wreg,f,c
  2366  00205A  D7FE               	bra	u1787
  2367  00205C  2FFF               	decfsz	??_LCDCmd& (0+255),f,b
  2368  00205E  D7FC               	bra	u1787
  2369  002060                     
  2370                           ;./lcd.h: 70:   PORTEbits.RE1 = 0;
  2371  002060  9284               	bcf	132,1,c	;volatile
  2372  002062                     
  2373                           ;./lcd.h: 71:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2374  002062  0E07               	movlw	7
  2375  002064  0100               	movlb	0	; () banked
  2376  002066  6FFF               	movwf	??_LCDCmd& (0+255),b
  2377  002068  0E7D               	movlw	125
  2378  00206A                     u1797:
  2379  00206A  2EE8               	decfsz	wreg,f,c
  2380  00206C  D7FE               	bra	u1797
  2381  00206E  2FFF               	decfsz	??_LCDCmd& (0+255),f,b
  2382  002070  D7FC               	bra	u1797
  2383  002072  0012               	return		;funcret
  2384  002074                     __end_of_LCDCmd:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _LCDDat *****************
  2388 ;; Defined at:
  2389 ;;		line 74 in file "./lcd.h"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  dat             1    wreg     unsigned char 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  dat             1    0[BANK1 ] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;Total ram usage:        2 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    4
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_LCDAddSpecialCharacter
  2414 ;;		_UpdateAndPrintDisplay
  2415 ;;		_LCDStr
  2416 ;;		_PrintPORTBandIntCounts
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text10
  2421  001FDC                     __ptext10:
  2422                           	callstack 0
  2423  001FDC                     _LCDDat:
  2424                           	callstack 25
  2425                           
  2426                           ;incstack = 0
  2427                           ;LCDDat@dat stored from wreg
  2428  001FDC  0101               	movlb	1	; () banked
  2429  001FDE  6F80               	movwf	LCDDat@dat& (0+255),b
  2430  001FE0                     
  2431                           ;./lcd.h: 75:   PORTEbits.RE1 = 0;
  2432  001FE0  9284               	bcf	132,1,c	;volatile
  2433                           
  2434                           ;./lcd.h: 76:   PORTEbits.RE2 = 1;
  2435  001FE2  8484               	bsf	132,2,c	;volatile
  2436  001FE4                     
  2437                           ;./lcd.h: 77:   PORTD = dat;
  2438  001FE4  C180  FF83         	movff	LCDDat@dat,3971	;volatile
  2439  001FE8                     
  2440                           ;./lcd.h: 78:   PORTEbits.RE1 = 1;
  2441  001FE8  8284               	bsf	132,1,c	;volatile
  2442  001FEA                     
  2443                           ;./lcd.h: 79:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2444  001FEA  0E07               	movlw	7
  2445  001FEC  0100               	movlb	0	; () banked
  2446  001FEE  6FFF               	movwf	??_LCDDat& (0+255),b
  2447  001FF0  0E7D               	movlw	125
  2448  001FF2                     u1807:
  2449  001FF2  2EE8               	decfsz	wreg,f,c
  2450  001FF4  D7FE               	bra	u1807
  2451  001FF6  2FFF               	decfsz	??_LCDDat& (0+255),f,b
  2452  001FF8  D7FC               	bra	u1807
  2453  001FFA                     
  2454                           ;./lcd.h: 80:   PORTEbits.RE1 = 0;
  2455  001FFA  9284               	bcf	132,1,c	;volatile
  2456  001FFC                     
  2457                           ;./lcd.h: 81:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2458  001FFC  0E07               	movlw	7
  2459  001FFE  0100               	movlb	0	; () banked
  2460  002000  6FFF               	movwf	??_LCDDat& (0+255),b
  2461  002002  0E7D               	movlw	125
  2462  002004                     u1817:
  2463  002004  2EE8               	decfsz	wreg,f,c
  2464  002006  D7FE               	bra	u1817
  2465  002008  2FFF               	decfsz	??_LCDDat& (0+255),f,b
  2466  00200A  D7FC               	bra	u1817
  2467  00200C                     
  2468                           ;./lcd.h: 82:   PORTEbits.RE2 = 0;
  2469  00200C  9484               	bcf	132,2,c	;volatile
  2470  00200E  0012               	return		;funcret
  2471  002010                     __end_of_LCDDat:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function _lowIsr *****************
  2475 ;; Defined at:
  2476 ;;		line 103 in file "main.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  temp_a          1   40[COMRAM] unsigned char 
  2481 ;;  temp_d          1   39[COMRAM] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;Total ram usage:        9 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    3
  2498 ;; This function calls:
  2499 ;;		___awmod
  2500 ;; This function is called by:
  2501 ;;		Interrupt level 1
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	intcodelo
  2506  000018                     __pintcodelo:
  2507                           	callstack 0
  2508  000018                     _lowIsr:
  2509                           	callstack 23
  2510                           
  2511                           ;incstack = 0
  2512  000018  8062               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2513  00001A  CFD8 F050          	movff	status,??_lowIsr+2
  2514  00001E  CFE8 F051          	movff	wreg,??_lowIsr+3
  2515  000022  CFE0 F052          	movff	bsr,??_lowIsr+4
  2516  000026  CFD9 F053          	movff	fsr2l,??_lowIsr+5
  2517  00002A  CFDA F054          	movff	fsr2h,??_lowIsr+6
  2518  00002E                     
  2519                           ;main.c: 104:     PIR1bits.TMR2IF = 0;
  2520  00002E  929E               	bcf	158,1,c	;volatile
  2521                           
  2522                           ;main.c: 105:     byte temp_d = PORTD;
  2523  000030  CF83 F055          	movff	3971,lowIsr@temp_d	;volatile
  2524                           
  2525                           ;main.c: 106:     byte temp_a = PORTA;
  2526  000034  CF80 F056          	movff	3968,lowIsr@temp_a	;volatile
  2527                           
  2528                           ;main.c: 108:     switch (currentSegment) {
  2529  000038  EF3C  F000         	goto	i1l2210
  2530  00003C                     i1l2196:
  2531                           
  2532                           ;main.c: 110:             LATA = 0b1000;
  2533  00003C  0E08               	movlw	8
  2534  00003E  6E89               	movwf	137,c	;volatile
  2535  000040                     
  2536                           ;main.c: 111:             LATD = segValues[scoreA];
  2537  000040  0E80               	movlw	low _segValues
  2538  000042  2405               	addwf	_scoreA^0,w,c
  2539  000044  6ED9               	movwf	fsr2l,c
  2540  000046  0E00               	movlw	high _segValues
  2541  000048  2006               	addwfc	(_scoreA+1)^0,w,c
  2542  00004A  6EDA               	movwf	fsr2h,c
  2543  00004C  50DF               	movf	indf2,w,c
  2544  00004E  6E8C               	movwf	140,c	;volatile
  2545                           
  2546                           ;main.c: 112:             break;
  2547  000050  EF56  F000         	goto	i1l2212
  2548  000054                     i1l2200:
  2549                           
  2550                           ;main.c: 114:             LATA = 0b10000;
  2551  000054  0E10               	movlw	16
  2552  000056  6E89               	movwf	137,c	;volatile
  2553  000058                     
  2554                           ;main.c: 115:             LATD = segValues[10];
  2555  000058  C08A  FF8C         	movff	_segValues+10,3980	;volatile
  2556                           
  2557                           ;main.c: 116:             break;
  2558  00005C  EF56  F000         	goto	i1l2212
  2559  000060                     i1l2204:
  2560                           
  2561                           ;main.c: 118:             LATA = 0b100000;
  2562  000060  0E20               	movlw	32
  2563  000062  6E89               	movwf	137,c	;volatile
  2564  000064                     
  2565                           ;main.c: 119:             LATD = segValues[scoreB];
  2566  000064  0E80               	movlw	low _segValues
  2567  000066  2403               	addwf	_scoreB^0,w,c
  2568  000068  6ED9               	movwf	fsr2l,c
  2569  00006A  0E00               	movlw	high _segValues
  2570  00006C  2004               	addwfc	(_scoreB+1)^0,w,c
  2571  00006E  6EDA               	movwf	fsr2h,c
  2572  000070  50DF               	movf	indf2,w,c
  2573  000072  6E8C               	movwf	140,c	;volatile
  2574                           
  2575                           ;main.c: 120:             break;
  2576  000074  EF56  F000         	goto	i1l2212
  2577  000078                     i1l2210:
  2578  000078  C001  F04E         	movff	_currentSegment,??_lowIsr
  2579  00007C  C002  F04F         	movff	_currentSegment+1,??_lowIsr+1
  2580                           
  2581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2582                           ; Switch size 1, requested type "simple"
  2583                           ; Number of cases is 1, Range of values is 0 to 0
  2584                           ; switch strategies available:
  2585                           ; Name         Instructions Cycles
  2586                           ; simple_byte            4     3 (average)
  2587                           ;	Chosen strategy is simple_byte
  2588  000080  504F               	movf	(??_lowIsr+1)^0,w,c
  2589  000082  0A00               	xorlw	0	; case 0
  2590  000084  B4D8               	btfsc	status,2,c
  2591  000086  EF47  F000         	goto	i1l2806
  2592  00008A  EF56  F000         	goto	i1l2212
  2593  00008E                     i1l2806:
  2594                           
  2595                           ; Switch size 1, requested type "simple"
  2596                           ; Number of cases is 3, Range of values is 0 to 2
  2597                           ; switch strategies available:
  2598                           ; Name         Instructions Cycles
  2599                           ; simple_byte           10     6 (average)
  2600                           ;	Chosen strategy is simple_byte
  2601  00008E  504E               	movf	??_lowIsr^0,w,c
  2602  000090  0A00               	xorlw	0	; case 0
  2603  000092  B4D8               	btfsc	status,2,c
  2604  000094  EF1E  F000         	goto	i1l2196
  2605  000098  0A01               	xorlw	1	; case 1
  2606  00009A  B4D8               	btfsc	status,2,c
  2607  00009C  EF2A  F000         	goto	i1l2200
  2608  0000A0  0A03               	xorlw	3	; case 2
  2609  0000A2  B4D8               	btfsc	status,2,c
  2610  0000A4  EF30  F000         	goto	i1l2204
  2611  0000A8  EF56  F000         	goto	i1l2212
  2612  0000AC                     i1l2212:
  2613                           
  2614                           ;main.c: 124:     currentSegment = (currentSegment + 1) % 3;
  2615  0000AC  0E01               	movlw	1
  2616  0000AE  2401               	addwf	_currentSegment^0,w,c
  2617  0000B0  6E48               	movwf	___awmod@dividend^0,c
  2618  0000B2  0E00               	movlw	0
  2619  0000B4  2002               	addwfc	(_currentSegment+1)^0,w,c
  2620  0000B6  6E49               	movwf	(___awmod@dividend+1)^0,c
  2621  0000B8  0E00               	movlw	0
  2622  0000BA  6E4B               	movwf	(___awmod@divisor+1)^0,c
  2623  0000BC  0E03               	movlw	3
  2624  0000BE  6E4A               	movwf	___awmod@divisor^0,c
  2625  0000C0  EC5D  F00E         	call	___awmod	;wreg free
  2626  0000C4  C048  F001         	movff	?___awmod,_currentSegment
  2627  0000C8  C049  F002         	movff	?___awmod+1,_currentSegment+1
  2628  0000CC                     
  2629                           ;main.c: 126:     LATA = temp_a;
  2630  0000CC  C056  FF89         	movff	lowIsr@temp_a,3977	;volatile
  2631  0000D0                     
  2632                           ;main.c: 127:     LATD = temp_d;
  2633  0000D0  C055  FF8C         	movff	lowIsr@temp_d,3980	;volatile
  2634  0000D4  C054  FFDA         	movff	??_lowIsr+6,fsr2h
  2635  0000D8  C053  FFD9         	movff	??_lowIsr+5,fsr2l
  2636  0000DC  C052  FFE0         	movff	??_lowIsr+4,bsr
  2637  0000E0  C051  FFE8         	movff	??_lowIsr+3,wreg
  2638  0000E4  C050  FFD8         	movff	??_lowIsr+2,status
  2639  0000E8  9062               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2640  0000EA  0010               	retfie	
  2641  0000EC                     __end_of_lowIsr:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function ___awmod *****************
  2645 ;; Defined at:
  2646 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  dividend        2   26[COMRAM] int 
  2649 ;;  divisor         2   28[COMRAM] int 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  sign            1   31[COMRAM] unsigned char 
  2652 ;;  counter         1   30[COMRAM] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2   26[COMRAM] int 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        6 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    2
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_lowIsr
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text12
  2677  001CBA                     __ptext12:
  2678                           	callstack 0
  2679  001CBA                     ___awmod:
  2680                           	callstack 23
  2681  001CBA  0E00               	movlw	0
  2682  001CBC  6E4D               	movwf	___awmod@sign^0,c
  2683  001CBE  BE49               	btfsc	(___awmod@dividend+1)^0,7,c
  2684  001CC0  EF66  F00E         	goto	i1u117_20
  2685  001CC4  EF64  F00E         	goto	i1u117_21
  2686  001CC8                     i1u117_21:
  2687  001CC8  EF6C  F00E         	goto	i1l2008
  2688  001CCC                     i1u117_20:
  2689  001CCC  6C48               	negf	___awmod@dividend^0,c
  2690  001CCE  1E49               	comf	(___awmod@dividend+1)^0,f,c
  2691  001CD0  B0D8               	btfsc	status,0,c
  2692  001CD2  2A49               	incf	(___awmod@dividend+1)^0,f,c
  2693  001CD4  0E01               	movlw	1
  2694  001CD6  6E4D               	movwf	___awmod@sign^0,c
  2695  001CD8                     i1l2008:
  2696  001CD8  BE4B               	btfsc	(___awmod@divisor+1)^0,7,c
  2697  001CDA  EF73  F00E         	goto	i1u118_20
  2698  001CDE  EF71  F00E         	goto	i1u118_21
  2699  001CE2                     i1u118_21:
  2700  001CE2  EF77  F00E         	goto	i1l2012
  2701  001CE6                     i1u118_20:
  2702  001CE6  6C4A               	negf	___awmod@divisor^0,c
  2703  001CE8  1E4B               	comf	(___awmod@divisor+1)^0,f,c
  2704  001CEA  B0D8               	btfsc	status,0,c
  2705  001CEC  2A4B               	incf	(___awmod@divisor+1)^0,f,c
  2706  001CEE                     i1l2012:
  2707  001CEE  504A               	movf	___awmod@divisor^0,w,c
  2708  001CF0  104B               	iorwf	(___awmod@divisor+1)^0,w,c
  2709  001CF2  B4D8               	btfsc	status,2,c
  2710  001CF4  EF7E  F00E         	goto	i1u119_21
  2711  001CF8  EF80  F00E         	goto	i1u119_20
  2712  001CFC                     i1u119_21:
  2713  001CFC  EFA4  F00E         	goto	i1l2028
  2714  001D00                     i1u119_20:
  2715  001D00  0E01               	movlw	1
  2716  001D02  6E4C               	movwf	___awmod@counter^0,c
  2717  001D04  EF88  F00E         	goto	i1l2018
  2718  001D08                     i1l2016:
  2719  001D08  90D8               	bcf	status,0,c
  2720  001D0A  364A               	rlcf	___awmod@divisor^0,f,c
  2721  001D0C  364B               	rlcf	(___awmod@divisor+1)^0,f,c
  2722  001D0E  2A4C               	incf	___awmod@counter^0,f,c
  2723  001D10                     i1l2018:
  2724  001D10  AE4B               	btfss	(___awmod@divisor+1)^0,7,c
  2725  001D12  EF8D  F00E         	goto	i1u120_21
  2726  001D16  EF8F  F00E         	goto	i1u120_20
  2727  001D1A                     i1u120_21:
  2728  001D1A  EF84  F00E         	goto	i1l2016
  2729  001D1E                     i1u120_20:
  2730  001D1E                     i1l2020:
  2731  001D1E  504A               	movf	___awmod@divisor^0,w,c
  2732  001D20  5C48               	subwf	___awmod@dividend^0,w,c
  2733  001D22  504B               	movf	(___awmod@divisor+1)^0,w,c
  2734  001D24  5849               	subwfb	(___awmod@dividend+1)^0,w,c
  2735  001D26  A0D8               	btfss	status,0,c
  2736  001D28  EF98  F00E         	goto	i1u121_21
  2737  001D2C  EF9A  F00E         	goto	i1u121_20
  2738  001D30                     i1u121_21:
  2739  001D30  EF9E  F00E         	goto	i1l2024
  2740  001D34                     i1u121_20:
  2741  001D34  504A               	movf	___awmod@divisor^0,w,c
  2742  001D36  5E48               	subwf	___awmod@dividend^0,f,c
  2743  001D38  504B               	movf	(___awmod@divisor+1)^0,w,c
  2744  001D3A  5A49               	subwfb	(___awmod@dividend+1)^0,f,c
  2745  001D3C                     i1l2024:
  2746  001D3C  90D8               	bcf	status,0,c
  2747  001D3E  324B               	rrcf	(___awmod@divisor+1)^0,f,c
  2748  001D40  324A               	rrcf	___awmod@divisor^0,f,c
  2749  001D42  2E4C               	decfsz	___awmod@counter^0,f,c
  2750  001D44  EF8F  F00E         	goto	i1l2020
  2751  001D48                     i1l2028:
  2752  001D48  504D               	movf	___awmod@sign^0,w,c
  2753  001D4A  B4D8               	btfsc	status,2,c
  2754  001D4C  EFAA  F00E         	goto	i1u122_21
  2755  001D50  EFAC  F00E         	goto	i1u122_20
  2756  001D54                     i1u122_21:
  2757  001D54  EFB0  F00E         	goto	i1l2032
  2758  001D58                     i1u122_20:
  2759  001D58  6C48               	negf	___awmod@dividend^0,c
  2760  001D5A  1E49               	comf	(___awmod@dividend+1)^0,f,c
  2761  001D5C  B0D8               	btfsc	status,0,c
  2762  001D5E  2A49               	incf	(___awmod@dividend+1)^0,f,c
  2763  001D60                     i1l2032:
  2764  001D60  C048  F048         	movff	___awmod@dividend,?___awmod
  2765  001D64  C049  F049         	movff	___awmod@dividend+1,?___awmod+1
  2766  001D68  0012               	return		;funcret
  2767  001D6A                     __end_of___awmod:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _highIsr *****************
  2771 ;; Defined at:
  2772 ;;		line 40 in file "main.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  portbVals       1   25[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:        9 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    1
  2793 ;; This function calls:
  2794 ;;		_SetupDebouncingTimer
  2795 ;;		_down
  2796 ;;		_left
  2797 ;;		_right
  2798 ;;		_up
  2799 ;;		i2___wmul
  2800 ;; This function is called by:
  2801 ;;		Interrupt level 2
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	intcode
  2806  000008                     __pintcode:
  2807                           	callstack 0
  2808  000008                     _highIsr:
  2809                           	callstack 23
  2810                           
  2811                           ;incstack = 0
  2812  000008  8262               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2813  00000A  ED24  F00A         	call	int_func,f	;refresh shadow registers
  2814                           
  2815                           	psect	intcode_body
  2816  001448                     __pintcode_body:
  2817                           	callstack 23
  2818  001448                     int_func:
  2819                           	callstack 23
  2820  001448  0006               	pop		; remove dummy address from shadow register refresh
  2821  00144A  CFE1 F041          	movff	fsr1l,??_highIsr+2
  2822  00144E  CFE2 F042          	movff	fsr1h,??_highIsr+3
  2823  001452  CFD9 F043          	movff	fsr2l,??_highIsr+4
  2824  001456  CFDA F044          	movff	fsr2h,??_highIsr+5
  2825  00145A  CFF3 F045          	movff	prodl,??_highIsr+6
  2826  00145E  CFF4 F046          	movff	prodh,??_highIsr+7
  2827  001462                     
  2828                           ;main.c: 41:     byte portbVals = PORTB;
  2829  001462  CF81 F047          	movff	3969,highIsr@portbVals	;volatile
  2830                           
  2831                           ;main.c: 43:     if (INTCONbits.TMR0IF) {
  2832  001466  A4F2               	btfss	242,2,c	;volatile
  2833  001468  EF38  F00A         	goto	i2u137_41
  2834  00146C  EF3A  F00A         	goto	i2u137_40
  2835  001470                     i2u137_41:
  2836  001470  EF3E  F00A         	goto	i2l2140
  2837  001474                     i2u137_40:
  2838  001474                     
  2839                           ;main.c: 44:         acceptInterrupts = 1;
  2840  001474  0E01               	movlw	1
  2841  001476  6E0F               	movwf	_acceptInterrupts^0,c
  2842  001478                     
  2843                           ;main.c: 45:         T0CONbits.TMR0ON = 0;
  2844  001478  9ED5               	bcf	213,7,c	;volatile
  2845  00147A                     
  2846                           ;main.c: 46:         INTCONbits.TMR0IF = 0;
  2847  00147A  94F2               	bcf	242,2,c	;volatile
  2848  00147C                     i2l2140:
  2849                           
  2850                           ;main.c: 49:     if (INTCONbits.INT0IF ){
  2851  00147C  A2F2               	btfss	242,1,c	;volatile
  2852  00147E  EF43  F00A         	goto	i2u138_41
  2853  001482  EF45  F00A         	goto	i2u138_40
  2854  001486                     i2u138_41:
  2855  001486  EF53  F00A         	goto	i2l203
  2856  00148A                     i2u138_40:
  2857  00148A                     
  2858                           ;main.c: 50:         if (acceptInterrupts) {
  2859  00148A  500F               	movf	_acceptInterrupts^0,w,c
  2860  00148C  B4D8               	btfsc	status,2,c
  2861  00148E  EF4B  F00A         	goto	i2u139_41
  2862  001492  EF4D  F00A         	goto	i2u139_40
  2863  001496                     i2u139_41:
  2864  001496  EF17  F00B         	goto	i2l2184
  2865  00149A                     i2u139_40:
  2866  00149A                     
  2867                           ;main.c: 51:             a++;
  2868  00149A  4A0D               	infsnz	_a^0,f,c
  2869  00149C  2A0E               	incf	(_a+1)^0,f,c
  2870  00149E                     i2l2146:
  2871                           
  2872                           ;main.c: 55:             SetupDebouncingTimer();
  2873  00149E  EC6F  F010         	call	_SetupDebouncingTimer	;wreg free
  2874  0014A2  EF17  F00B         	goto	i2l2184
  2875  0014A6                     i2l203:
  2876  0014A6  A0F0               	btfss	240,0,c	;volatile
  2877  0014A8  EF58  F00A         	goto	i2u140_41
  2878  0014AC  EF5A  F00A         	goto	i2u140_40
  2879  0014B0                     i2u140_41:
  2880  0014B0  EF90  F00A         	goto	i2l206
  2881  0014B4                     i2u140_40:
  2882  0014B4                     
  2883                           ;main.c: 60:         if (acceptInterrupts) {
  2884  0014B4  500F               	movf	_acceptInterrupts^0,w,c
  2885  0014B6  B4D8               	btfsc	status,2,c
  2886  0014B8  EF60  F00A         	goto	i2u141_41
  2887  0014BC  EF62  F00A         	goto	i2u141_40
  2888  0014C0                     i2u141_41:
  2889  0014C0  EF17  F00B         	goto	i2l2184
  2890  0014C4                     i2u141_40:
  2891  0014C4                     
  2892                           ;main.c: 61:             b++;
  2893  0014C4  4A0B               	infsnz	_b^0,f,c
  2894  0014C6  2A0C               	incf	(_b+1)^0,f,c
  2895  0014C8                     
  2896                           ;main.c: 63:             objs[selectedPlayer].state = OS_DEFAULT;
  2897  0014C8  C007  F02E         	movff	_selectedPlayer,i2___wmul@multiplier
  2898  0014CC  C008  F02F         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2899  0014D0  0E00               	movlw	0
  2900  0014D2  6E31               	movwf	(i2___wmul@multiplicand+1)^0,c
  2901  0014D4  0E05               	movlw	5
  2902  0014D6  6E30               	movwf	i2___wmul@multiplicand^0,c
  2903  0014D8  EC4E  F010         	call	i2___wmul	;wreg free
  2904  0014DC  0E14               	movlw	low (_objs+4)
  2905  0014DE  242E               	addwf	?i2___wmul^0,w,c
  2906  0014E0  6ED9               	movwf	fsr2l,c
  2907  0014E2  0E00               	movlw	high (_objs+4)
  2908  0014E4  202F               	addwfc	(?i2___wmul+1)^0,w,c
  2909  0014E6  6EDA               	movwf	fsr2h,c
  2910  0014E8  0E00               	movlw	0
  2911  0014EA  6EDF               	movwf	indf2,c
  2912  0014EC                     
  2913                           ;main.c: 64:             selectedPlayer++;
  2914  0014EC  4A07               	infsnz	_selectedPlayer^0,f,c
  2915  0014EE  2A08               	incf	(_selectedPlayer+1)^0,f,c
  2916  0014F0                     
  2917                           ;main.c: 65:             selectedPlayer = selectedPlayer % 4;
  2918  0014F0  0E03               	movlw	3
  2919  0014F2  1407               	andwf	_selectedPlayer^0,w,c
  2920  0014F4  6E07               	movwf	_selectedPlayer^0,c
  2921  0014F6  6A08               	clrf	(_selectedPlayer+1)^0,c
  2922  0014F8                     
  2923                           ;main.c: 66:             objs[selectedPlayer].state = OS_SELECTED;
  2924  0014F8  C007  F02E         	movff	_selectedPlayer,i2___wmul@multiplier
  2925  0014FC  C008  F02F         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2926  001500  0E00               	movlw	0
  2927  001502  6E31               	movwf	(i2___wmul@multiplicand+1)^0,c
  2928  001504  0E05               	movlw	5
  2929  001506  6E30               	movwf	i2___wmul@multiplicand^0,c
  2930  001508  EC4E  F010         	call	i2___wmul	;wreg free
  2931  00150C  0E14               	movlw	low (_objs+4)
  2932  00150E  242E               	addwf	?i2___wmul^0,w,c
  2933  001510  6ED9               	movwf	fsr2l,c
  2934  001512  0E00               	movlw	high (_objs+4)
  2935  001514  202F               	addwfc	(?i2___wmul+1)^0,w,c
  2936  001516  6EDA               	movwf	fsr2h,c
  2937  001518  0E01               	movlw	1
  2938  00151A  6EDF               	movwf	indf2,c
  2939  00151C  EF4F  F00A         	goto	i2l2146
  2940  001520                     i2l206:
  2941  001520  A0F2               	btfss	242,0,c	;volatile
  2942  001522  EF95  F00A         	goto	i2u142_41
  2943  001526  EF97  F00A         	goto	i2u142_40
  2944  00152A                     i2u142_41:
  2945  00152A  EF17  F00B         	goto	i2l2184
  2946  00152E                     i2u142_40:
  2947  00152E                     
  2948                           ;main.c: 73:         if (acceptInterrupts) {
  2949  00152E  500F               	movf	_acceptInterrupts^0,w,c
  2950  001530  B4D8               	btfsc	status,2,c
  2951  001532  EF9D  F00A         	goto	i2u143_41
  2952  001536  EF9F  F00A         	goto	i2u143_40
  2953  00153A                     i2u143_41:
  2954  00153A  EF17  F00B         	goto	i2l2184
  2955  00153E                     i2u143_40:
  2956  00153E                     
  2957                           ;main.c: 74:             portbVals = portbVals >> 4;
  2958  00153E  3847               	swapf	highIsr@portbVals^0,w,c
  2959  001540  0B0F               	andlw	15
  2960  001542  6E47               	movwf	highIsr@portbVals^0,c
  2961                           
  2962                           ;main.c: 75:             switch (portbVals) {
  2963  001544  EFF6  F00A         	goto	i2l2178
  2964  001548                     i2l2166:
  2965                           
  2966                           ;main.c: 77:                     up(&objs[selectedPlayer]);
  2967  001548  C007  F02E         	movff	_selectedPlayer,i2___wmul@multiplier
  2968  00154C  C008  F02F         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2969  001550  0E00               	movlw	0
  2970  001552  6E31               	movwf	(i2___wmul@multiplicand+1)^0,c
  2971  001554  0E05               	movlw	5
  2972  001556  6E30               	movwf	i2___wmul@multiplicand^0,c
  2973  001558  EC4E  F010         	call	i2___wmul	;wreg free
  2974  00155C  0E10               	movlw	low _objs
  2975  00155E  242E               	addwf	?i2___wmul^0,w,c
  2976  001560  6E34               	movwf	up@pl^0,c
  2977  001562  0E00               	movlw	high _objs
  2978  001564  202F               	addwfc	(?i2___wmul+1)^0,w,c
  2979  001566  6E35               	movwf	(up@pl+1)^0,c
  2980  001568  EC13  F00C         	call	_up	;wreg free
  2981                           
  2982                           ;main.c: 78:                     break;
  2983  00156C  EF13  F00B         	goto	i2l2180
  2984  001570                     i2l2168:
  2985                           
  2986                           ;main.c: 80:                     right(&objs[selectedPlayer]);
  2987  001570  C007  F02E         	movff	_selectedPlayer,i2___wmul@multiplier
  2988  001574  C008  F02F         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2989  001578  0E00               	movlw	0
  2990  00157A  6E31               	movwf	(i2___wmul@multiplicand+1)^0,c
  2991  00157C  0E05               	movlw	5
  2992  00157E  6E30               	movwf	i2___wmul@multiplicand^0,c
  2993  001580  EC4E  F010         	call	i2___wmul	;wreg free
  2994  001584  0E10               	movlw	low _objs
  2995  001586  242E               	addwf	?i2___wmul^0,w,c
  2996  001588  6E34               	movwf	right@pl^0,c
  2997  00158A  0E00               	movlw	high _objs
  2998  00158C  202F               	addwfc	(?i2___wmul+1)^0,w,c
  2999  00158E  6E35               	movwf	(right@pl+1)^0,c
  3000  001590  EC3F  F00D         	call	_right	;wreg free
  3001                           
  3002                           ;main.c: 81:                     break;
  3003  001594  EF13  F00B         	goto	i2l2180
  3004  001598                     i2l2170:
  3005                           
  3006                           ;main.c: 83:                     down(&objs[selectedPlayer]);
  3007  001598  C007  F02E         	movff	_selectedPlayer,i2___wmul@multiplier
  3008  00159C  C008  F02F         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3009  0015A0  0E00               	movlw	0
  3010  0015A2  6E31               	movwf	(i2___wmul@multiplicand+1)^0,c
  3011  0015A4  0E05               	movlw	5
  3012  0015A6  6E30               	movwf	i2___wmul@multiplicand^0,c
  3013  0015A8  EC4E  F010         	call	i2___wmul	;wreg free
  3014  0015AC  0E10               	movlw	low _objs
  3015  0015AE  242E               	addwf	?i2___wmul^0,w,c
  3016  0015B0  6E34               	movwf	down@pl^0,c
  3017  0015B2  0E00               	movlw	high _objs
  3018  0015B4  202F               	addwfc	(?i2___wmul+1)^0,w,c
  3019  0015B6  6E35               	movwf	(down@pl+1)^0,c
  3020  0015B8  ECD0  F00D         	call	_down	;wreg free
  3021                           
  3022                           ;main.c: 84:                     break;
  3023  0015BC  EF13  F00B         	goto	i2l2180
  3024  0015C0                     i2l2172:
  3025                           
  3026                           ;main.c: 86:                     left(&objs[selectedPlayer]);
  3027  0015C0  C007  F02E         	movff	_selectedPlayer,i2___wmul@multiplier
  3028  0015C4  C008  F02F         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3029  0015C8  0E00               	movlw	0
  3030  0015CA  6E31               	movwf	(i2___wmul@multiplicand+1)^0,c
  3031  0015CC  0E05               	movlw	5
  3032  0015CE  6E30               	movwf	i2___wmul@multiplicand^0,c
  3033  0015D0  EC4E  F010         	call	i2___wmul	;wreg free
  3034  0015D4  0E10               	movlw	low _objs
  3035  0015D6  242E               	addwf	?i2___wmul^0,w,c
  3036  0015D8  6E34               	movwf	left@pl^0,c
  3037  0015DA  0E00               	movlw	high _objs
  3038  0015DC  202F               	addwfc	(?i2___wmul+1)^0,w,c
  3039  0015DE  6E35               	movwf	(left@pl+1)^0,c
  3040  0015E0  ECAB  F00C         	call	_left	;wreg free
  3041                           
  3042                           ;main.c: 87:                     break;
  3043  0015E4  EF13  F00B         	goto	i2l2180
  3044  0015E8                     i2l2174:
  3045                           
  3046                           ;main.c: 90:                     break;
  3047  0015E8  EF13  F00B         	goto	i2l2180
  3048  0015EC                     i2l2178:
  3049  0015EC  5047               	movf	highIsr@portbVals^0,w,c
  3050  0015EE  6E3F               	movwf	??_highIsr^0,c
  3051  0015F0  6A40               	clrf	(??_highIsr+1)^0,c
  3052                           
  3053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3054                           ; Switch size 1, requested type "simple"
  3055                           ; Number of cases is 1, Range of values is 0 to 0
  3056                           ; switch strategies available:
  3057                           ; Name         Instructions Cycles
  3058                           ; simple_byte            4     3 (average)
  3059                           ;	Chosen strategy is simple_byte
  3060  0015F2  5040               	movf	(??_highIsr+1)^0,w,c
  3061  0015F4  0A00               	xorlw	0	; case 0
  3062  0015F6  B4D8               	btfsc	status,2,c
  3063  0015F8  EF00  F00B         	goto	i2l2808
  3064  0015FC  EFF4  F00A         	goto	i2l2174
  3065  001600                     i2l2808:
  3066                           
  3067                           ; Switch size 1, requested type "simple"
  3068                           ; Number of cases is 4, Range of values is 7 to 14
  3069                           ; switch strategies available:
  3070                           ; Name         Instructions Cycles
  3071                           ; simple_byte           13     7 (average)
  3072                           ;	Chosen strategy is simple_byte
  3073  001600  503F               	movf	??_highIsr^0,w,c
  3074  001602  0A07               	xorlw	7	; case 7
  3075  001604  B4D8               	btfsc	status,2,c
  3076  001606  EFE0  F00A         	goto	i2l2172
  3077  00160A  0A0C               	xorlw	12	; case 11
  3078  00160C  B4D8               	btfsc	status,2,c
  3079  00160E  EFCC  F00A         	goto	i2l2170
  3080  001612  0A06               	xorlw	6	; case 13
  3081  001614  B4D8               	btfsc	status,2,c
  3082  001616  EFB8  F00A         	goto	i2l2168
  3083  00161A  0A03               	xorlw	3	; case 14
  3084  00161C  B4D8               	btfsc	status,2,c
  3085  00161E  EFA4  F00A         	goto	i2l2166
  3086  001622  EFF4  F00A         	goto	i2l2174
  3087  001626                     i2l2180:
  3088                           
  3089                           ;main.c: 93:             c++;
  3090  001626  4A09               	infsnz	_c^0,f,c
  3091  001628  2A0A               	incf	(_c+1)^0,f,c
  3092  00162A  EF4F  F00A         	goto	i2l2146
  3093  00162E                     i2l2184:
  3094                           
  3095                           ;main.c: 97:     INTCON3bits.INT1IF = 0;
  3096  00162E  90F0               	bcf	240,0,c	;volatile
  3097  001630                     
  3098                           ;main.c: 98:     INTCONbits.INT0IF = 0;
  3099  001630  92F2               	bcf	242,1,c	;volatile
  3100  001632                     
  3101                           ;main.c: 99:     INTCONbits.RBIF = 0;
  3102  001632  90F2               	bcf	242,0,c	;volatile
  3103  001634  C046  FFF4         	movff	??_highIsr+7,prodh
  3104  001638  C045  FFF3         	movff	??_highIsr+6,prodl
  3105  00163C  C044  FFDA         	movff	??_highIsr+5,fsr2h
  3106  001640  C043  FFD9         	movff	??_highIsr+4,fsr2l
  3107  001644  C042  FFE2         	movff	??_highIsr+3,fsr1h
  3108  001648  C041  FFE1         	movff	??_highIsr+2,fsr1l
  3109  00164C  9262               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3110  00164E  0011               	retfie		f
  3111  001650                     __end_of_highIsr:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function i2___wmul *****************
  3115 ;; Defined at:
  3116 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  multiplier      2    0[COMRAM] unsigned int 
  3119 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  product         2    4[COMRAM] unsigned int 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2    0[COMRAM] unsigned int 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, prodl, prodh
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;Total ram usage:        6 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_highIsr
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text14
  3145  00209C                     __ptext14:
  3146                           	callstack 0
  3147  00209C                     i2___wmul:
  3148                           	callstack 23
  3149  00209C  502E               	movf	i2___wmul@multiplier^0,w,c
  3150  00209E  0230               	mulwf	i2___wmul@multiplicand^0,c
  3151  0020A0  CFF3 F032          	movff	prodl,i2___wmul@product
  3152  0020A4  CFF4 F033          	movff	prodh,i2___wmul@product+1
  3153  0020A8  502E               	movf	i2___wmul@multiplier^0,w,c
  3154  0020AA  0231               	mulwf	(i2___wmul@multiplicand+1)^0,c
  3155  0020AC  50F3               	movf	243,w,c
  3156  0020AE  2633               	addwf	(i2___wmul@product+1)^0,f,c
  3157  0020B0  502F               	movf	(i2___wmul@multiplier+1)^0,w,c
  3158  0020B2  0230               	mulwf	i2___wmul@multiplicand^0,c
  3159  0020B4  50F3               	movf	243,w,c
  3160  0020B6  2633               	addwf	(i2___wmul@product+1)^0,f,c
  3161  0020B8  C032  F02E         	movff	i2___wmul@product,?i2___wmul
  3162  0020BC  C033  F02F         	movff	i2___wmul@product+1,?i2___wmul+1
  3163  0020C0  0012               	return		;funcret
  3164  0020C2                     __end_ofi2___wmul:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _up *****************
  3168 ;; Defined at:
  3169 ;;		line 389 in file "main.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3172 ;;		 -> objs(30), 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;Total ram usage:       11 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_highIsr
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text15
  3198  001826                     __ptext15:
  3199                           	callstack 0
  3200  001826                     _up:
  3201                           	callstack 23
  3202  001826                     
  3203                           ;main.c: 390:     if (pl->y == 1) return;
  3204  001826  EE20 F001          	lfsr	2,1
  3205  00182A  5034               	movf	up@pl^0,w,c
  3206  00182C  26D9               	addwf	fsr2l,f,c
  3207  00182E  5035               	movf	(up@pl+1)^0,w,c
  3208  001830  22DA               	addwfc	fsr2h,f,c
  3209  001832  04DE               	decf	postinc2,w,c
  3210  001834  A4D8               	btfss	status,2,c
  3211  001836  EF1F  F00C         	goto	i2u81_41
  3212  00183A  EF21  F00C         	goto	i2u81_40
  3213  00183E                     i2u81_41:
  3214  00183E  EF23  F00C         	goto	i2l1794
  3215  001842                     i2u81_40:
  3216  001842  EFAA  F00C         	goto	i2l315
  3217  001846                     i2l1794:
  3218                           
  3219                           ;main.c: 391:     if (display[pl->y-2][pl->x-1]->type == OT_PLAYERA) return;
  3220  001846  EE20 F001          	lfsr	2,1
  3221  00184A  5034               	movf	up@pl^0,w,c
  3222  00184C  26D9               	addwf	fsr2l,f,c
  3223  00184E  5035               	movf	(up@pl+1)^0,w,c
  3224  001850  22DA               	addwfc	fsr2h,f,c
  3225  001852  50DF               	movf	indf2,w,c
  3226  001854  6E36               	movwf	??_up^0,c
  3227  001856  6A37               	clrf	(??_up+1)^0,c
  3228  001858  0E05               	movlw	5
  3229  00185A                     i2u82_45:
  3230  00185A  90D8               	bcf	status,0,c
  3231  00185C  3636               	rlcf	??_up^0,f,c
  3232  00185E  3637               	rlcf	(??_up+1)^0,f,c
  3233  001860  2EE8               	decfsz	wreg,f,c
  3234  001862  EF2D  F00C         	goto	i2u82_45
  3235  001866  C034  FFD9         	movff	up@pl,fsr2l
  3236  00186A  C035  FFDA         	movff	up@pl+1,fsr2h
  3237  00186E  50DF               	movf	indf2,w,c
  3238  001870  6E38               	movwf	(??_up+2)^0,c
  3239  001872  6A39               	clrf	(??_up+3)^0,c
  3240  001874  90D8               	bcf	status,0,c
  3241  001876  3638               	rlcf	(??_up+2)^0,f,c
  3242  001878  3639               	rlcf	(??_up+3)^0,f,c
  3243  00187A  0EBE               	movlw	190
  3244  00187C  6E3A               	movwf	(??_up+4)^0,c
  3245  00187E  0EFF               	movlw	255
  3246  001880  6E3B               	movwf	(??_up+5)^0,c
  3247  001882  0E00               	movlw	low _display
  3248  001884  6E3C               	movwf	(??_up+6)^0,c
  3249  001886  0E01               	movlw	high _display
  3250  001888  6E3D               	movwf	(??_up+7)^0,c
  3251  00188A  503A               	movf	(??_up+4)^0,w,c
  3252  00188C  263C               	addwf	(??_up+6)^0,f,c
  3253  00188E  503B               	movf	(??_up+5)^0,w,c
  3254  001890  223D               	addwfc	(??_up+7)^0,f,c
  3255  001892  5038               	movf	(??_up+2)^0,w,c
  3256  001894  263C               	addwf	(??_up+6)^0,f,c
  3257  001896  5039               	movf	(??_up+3)^0,w,c
  3258  001898  223D               	addwfc	(??_up+7)^0,f,c
  3259  00189A  5036               	movf	??_up^0,w,c
  3260  00189C  243C               	addwf	(??_up+6)^0,w,c
  3261  00189E  6ED9               	movwf	fsr2l,c
  3262  0018A0  5037               	movf	(??_up+1)^0,w,c
  3263  0018A2  203D               	addwfc	(??_up+7)^0,w,c
  3264  0018A4  6EDA               	movwf	fsr2h,c
  3265  0018A6  EE10 F003          	lfsr	1,3
  3266  0018AA  50DE               	movf	postinc2,w,c
  3267  0018AC  26E1               	addwf	fsr1l,f,c
  3268  0018AE  50DD               	movf	postdec2,w,c
  3269  0018B0  22E2               	addwfc	fsr1h,f,c
  3270  0018B2  50E7               	movf	indf1,w,c
  3271  0018B4  A4D8               	btfss	status,2,c
  3272  0018B6  EF5F  F00C         	goto	i2u83_41
  3273  0018BA  EF61  F00C         	goto	i2u83_40
  3274  0018BE                     i2u83_41:
  3275  0018BE  EF63  F00C         	goto	i2l1798
  3276  0018C2                     i2u83_40:
  3277  0018C2  EFAA  F00C         	goto	i2l315
  3278  0018C6                     i2l1798:
  3279                           
  3280                           ;main.c: 392:     if (display[pl->y-2][pl->x-1]->type == OT_PLAYERB) return;
  3281  0018C6  EE20 F001          	lfsr	2,1
  3282  0018CA  5034               	movf	up@pl^0,w,c
  3283  0018CC  26D9               	addwf	fsr2l,f,c
  3284  0018CE  5035               	movf	(up@pl+1)^0,w,c
  3285  0018D0  22DA               	addwfc	fsr2h,f,c
  3286  0018D2  50DF               	movf	indf2,w,c
  3287  0018D4  6E36               	movwf	??_up^0,c
  3288  0018D6  6A37               	clrf	(??_up+1)^0,c
  3289  0018D8  0E05               	movlw	5
  3290  0018DA                     i2u84_45:
  3291  0018DA  90D8               	bcf	status,0,c
  3292  0018DC  3636               	rlcf	??_up^0,f,c
  3293  0018DE  3637               	rlcf	(??_up+1)^0,f,c
  3294  0018E0  2EE8               	decfsz	wreg,f,c
  3295  0018E2  EF6D  F00C         	goto	i2u84_45
  3296  0018E6  C034  FFD9         	movff	up@pl,fsr2l
  3297  0018EA  C035  FFDA         	movff	up@pl+1,fsr2h
  3298  0018EE  50DF               	movf	indf2,w,c
  3299  0018F0  6E38               	movwf	(??_up+2)^0,c
  3300  0018F2  6A39               	clrf	(??_up+3)^0,c
  3301  0018F4  90D8               	bcf	status,0,c
  3302  0018F6  3638               	rlcf	(??_up+2)^0,f,c
  3303  0018F8  3639               	rlcf	(??_up+3)^0,f,c
  3304  0018FA  0EBE               	movlw	190
  3305  0018FC  6E3A               	movwf	(??_up+4)^0,c
  3306  0018FE  0EFF               	movlw	255
  3307  001900  6E3B               	movwf	(??_up+5)^0,c
  3308  001902  0E00               	movlw	low _display
  3309  001904  6E3C               	movwf	(??_up+6)^0,c
  3310  001906  0E01               	movlw	high _display
  3311  001908  6E3D               	movwf	(??_up+7)^0,c
  3312  00190A  503A               	movf	(??_up+4)^0,w,c
  3313  00190C  263C               	addwf	(??_up+6)^0,f,c
  3314  00190E  503B               	movf	(??_up+5)^0,w,c
  3315  001910  223D               	addwfc	(??_up+7)^0,f,c
  3316  001912  5038               	movf	(??_up+2)^0,w,c
  3317  001914  263C               	addwf	(??_up+6)^0,f,c
  3318  001916  5039               	movf	(??_up+3)^0,w,c
  3319  001918  223D               	addwfc	(??_up+7)^0,f,c
  3320  00191A  5036               	movf	??_up^0,w,c
  3321  00191C  243C               	addwf	(??_up+6)^0,w,c
  3322  00191E  6ED9               	movwf	fsr2l,c
  3323  001920  5037               	movf	(??_up+1)^0,w,c
  3324  001922  203D               	addwfc	(??_up+7)^0,w,c
  3325  001924  6EDA               	movwf	fsr2h,c
  3326  001926  EE10 F003          	lfsr	1,3
  3327  00192A  50DE               	movf	postinc2,w,c
  3328  00192C  26E1               	addwf	fsr1l,f,c
  3329  00192E  50DD               	movf	postdec2,w,c
  3330  001930  22E2               	addwfc	fsr1h,f,c
  3331  001932  04E6               	decf	postinc1,w,c
  3332  001934  A4D8               	btfss	status,2,c
  3333  001936  EF9F  F00C         	goto	i2u85_41
  3334  00193A  EFA1  F00C         	goto	i2u85_40
  3335  00193E                     i2u85_41:
  3336  00193E  EFA3  F00C         	goto	i2l1804
  3337  001942                     i2u85_40:
  3338  001942  EFAA  F00C         	goto	i2l315
  3339  001946                     i2l1804:
  3340                           
  3341                           ;main.c: 396:     pl->y--;
  3342  001946  EE20 F001          	lfsr	2,1
  3343  00194A  5034               	movf	up@pl^0,w,c
  3344  00194C  26D9               	addwf	fsr2l,f,c
  3345  00194E  5035               	movf	(up@pl+1)^0,w,c
  3346  001950  22DA               	addwfc	fsr2h,f,c
  3347  001952  06DF               	decf	indf2,f,c
  3348  001954                     i2l315:
  3349  001954  0012               	return		;funcret
  3350  001956                     __end_of_up:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _right *****************
  3354 ;; Defined at:
  3355 ;;		line 379 in file "main.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3358 ;;		 -> objs(30), 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;Total ram usage:       10 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_highIsr
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text16
  3384  001A7E                     __ptext16:
  3385                           	callstack 0
  3386  001A7E                     _right:
  3387                           	callstack 23
  3388  001A7E                     
  3389                           ;main.c: 380:     if (pl->x == 16) return;
  3390  001A7E  C034  FFD9         	movff	right@pl,fsr2l
  3391  001A82  C035  FFDA         	movff	right@pl+1,fsr2h
  3392  001A86  0E10               	movlw	16
  3393  001A88  18DE               	xorwf	postinc2,w,c
  3394  001A8A  A4D8               	btfss	status,2,c
  3395  001A8C  EF4A  F00D         	goto	i2u86_41
  3396  001A90  EF4C  F00D         	goto	i2u86_40
  3397  001A94                     i2u86_41:
  3398  001A94  EF4E  F00D         	goto	i2l1812
  3399  001A98                     i2u86_40:
  3400  001A98  EFCF  F00D         	goto	i2l308
  3401  001A9C                     i2l1812:
  3402                           
  3403                           ;main.c: 381:     if (display[pl->y-1][pl->x]->type == OT_PLAYERA) return;
  3404  001A9C  EE20 F001          	lfsr	2,1
  3405  001AA0  5034               	movf	right@pl^0,w,c
  3406  001AA2  26D9               	addwf	fsr2l,f,c
  3407  001AA4  5035               	movf	(right@pl+1)^0,w,c
  3408  001AA6  22DA               	addwfc	fsr2h,f,c
  3409  001AA8  50DF               	movf	indf2,w,c
  3410  001AAA  6E36               	movwf	??_right^0,c
  3411  001AAC  6A37               	clrf	(??_right+1)^0,c
  3412  001AAE  0E05               	movlw	5
  3413  001AB0                     i2u87_45:
  3414  001AB0  90D8               	bcf	status,0,c
  3415  001AB2  3636               	rlcf	??_right^0,f,c
  3416  001AB4  3637               	rlcf	(??_right+1)^0,f,c
  3417  001AB6  2EE8               	decfsz	wreg,f,c
  3418  001AB8  EF58  F00D         	goto	i2u87_45
  3419  001ABC  C034  FFD9         	movff	right@pl,fsr2l
  3420  001AC0  C035  FFDA         	movff	right@pl+1,fsr2h
  3421  001AC4  50DF               	movf	indf2,w,c
  3422  001AC6  6E38               	movwf	(??_right+2)^0,c
  3423  001AC8  5038               	movf	(??_right+2)^0,w,c
  3424  001ACA  0D02               	mullw	2
  3425  001ACC  0EE0               	movlw	224
  3426  001ACE  6E39               	movwf	(??_right+3)^0,c
  3427  001AD0  0EFF               	movlw	255
  3428  001AD2  6E3A               	movwf	(??_right+4)^0,c
  3429  001AD4  0E00               	movlw	low _display
  3430  001AD6  6E3B               	movwf	(??_right+5)^0,c
  3431  001AD8  0E01               	movlw	high _display
  3432  001ADA  6E3C               	movwf	(??_right+6)^0,c
  3433  001ADC  5039               	movf	(??_right+3)^0,w,c
  3434  001ADE  263B               	addwf	(??_right+5)^0,f,c
  3435  001AE0  503A               	movf	(??_right+4)^0,w,c
  3436  001AE2  223C               	addwfc	(??_right+6)^0,f,c
  3437  001AE4  50F3               	movf	243,w,c
  3438  001AE6  263B               	addwf	(??_right+5)^0,f,c
  3439  001AE8  50F4               	movf	244,w,c
  3440  001AEA  223C               	addwfc	(??_right+6)^0,f,c
  3441  001AEC  5036               	movf	??_right^0,w,c
  3442  001AEE  243B               	addwf	(??_right+5)^0,w,c
  3443  001AF0  6ED9               	movwf	fsr2l,c
  3444  001AF2  5037               	movf	(??_right+1)^0,w,c
  3445  001AF4  203C               	addwfc	(??_right+6)^0,w,c
  3446  001AF6  6EDA               	movwf	fsr2h,c
  3447  001AF8  EE10 F003          	lfsr	1,3
  3448  001AFC  50DE               	movf	postinc2,w,c
  3449  001AFE  26E1               	addwf	fsr1l,f,c
  3450  001B00  50DD               	movf	postdec2,w,c
  3451  001B02  22E2               	addwfc	fsr1h,f,c
  3452  001B04  50E7               	movf	indf1,w,c
  3453  001B06  A4D8               	btfss	status,2,c
  3454  001B08  EF88  F00D         	goto	i2u88_41
  3455  001B0C  EF8A  F00D         	goto	i2u88_40
  3456  001B10                     i2u88_41:
  3457  001B10  EF8C  F00D         	goto	i2l1816
  3458  001B14                     i2u88_40:
  3459  001B14  EFCF  F00D         	goto	i2l308
  3460  001B18                     i2l1816:
  3461                           
  3462                           ;main.c: 382:     if (display[pl->y-1][pl->x]->type == OT_PLAYERB) return;
  3463  001B18  EE20 F001          	lfsr	2,1
  3464  001B1C  5034               	movf	right@pl^0,w,c
  3465  001B1E  26D9               	addwf	fsr2l,f,c
  3466  001B20  5035               	movf	(right@pl+1)^0,w,c
  3467  001B22  22DA               	addwfc	fsr2h,f,c
  3468  001B24  50DF               	movf	indf2,w,c
  3469  001B26  6E36               	movwf	??_right^0,c
  3470  001B28  6A37               	clrf	(??_right+1)^0,c
  3471  001B2A  0E05               	movlw	5
  3472  001B2C                     i2u89_45:
  3473  001B2C  90D8               	bcf	status,0,c
  3474  001B2E  3636               	rlcf	??_right^0,f,c
  3475  001B30  3637               	rlcf	(??_right+1)^0,f,c
  3476  001B32  2EE8               	decfsz	wreg,f,c
  3477  001B34  EF96  F00D         	goto	i2u89_45
  3478  001B38  C034  FFD9         	movff	right@pl,fsr2l
  3479  001B3C  C035  FFDA         	movff	right@pl+1,fsr2h
  3480  001B40  50DF               	movf	indf2,w,c
  3481  001B42  6E38               	movwf	(??_right+2)^0,c
  3482  001B44  5038               	movf	(??_right+2)^0,w,c
  3483  001B46  0D02               	mullw	2
  3484  001B48  0EE0               	movlw	224
  3485  001B4A  6E39               	movwf	(??_right+3)^0,c
  3486  001B4C  0EFF               	movlw	255
  3487  001B4E  6E3A               	movwf	(??_right+4)^0,c
  3488  001B50  0E00               	movlw	low _display
  3489  001B52  6E3B               	movwf	(??_right+5)^0,c
  3490  001B54  0E01               	movlw	high _display
  3491  001B56  6E3C               	movwf	(??_right+6)^0,c
  3492  001B58  5039               	movf	(??_right+3)^0,w,c
  3493  001B5A  263B               	addwf	(??_right+5)^0,f,c
  3494  001B5C  503A               	movf	(??_right+4)^0,w,c
  3495  001B5E  223C               	addwfc	(??_right+6)^0,f,c
  3496  001B60  50F3               	movf	243,w,c
  3497  001B62  263B               	addwf	(??_right+5)^0,f,c
  3498  001B64  50F4               	movf	244,w,c
  3499  001B66  223C               	addwfc	(??_right+6)^0,f,c
  3500  001B68  5036               	movf	??_right^0,w,c
  3501  001B6A  243B               	addwf	(??_right+5)^0,w,c
  3502  001B6C  6ED9               	movwf	fsr2l,c
  3503  001B6E  5037               	movf	(??_right+1)^0,w,c
  3504  001B70  203C               	addwfc	(??_right+6)^0,w,c
  3505  001B72  6EDA               	movwf	fsr2h,c
  3506  001B74  EE10 F003          	lfsr	1,3
  3507  001B78  50DE               	movf	postinc2,w,c
  3508  001B7A  26E1               	addwf	fsr1l,f,c
  3509  001B7C  50DD               	movf	postdec2,w,c
  3510  001B7E  22E2               	addwfc	fsr1h,f,c
  3511  001B80  04E6               	decf	postinc1,w,c
  3512  001B82  A4D8               	btfss	status,2,c
  3513  001B84  EFC6  F00D         	goto	i2u90_41
  3514  001B88  EFC8  F00D         	goto	i2u90_40
  3515  001B8C                     i2u90_41:
  3516  001B8C  EFCA  F00D         	goto	i2l1822
  3517  001B90                     i2u90_40:
  3518  001B90  EFCF  F00D         	goto	i2l308
  3519  001B94                     i2l1822:
  3520                           
  3521                           ;main.c: 386:     pl->x++;
  3522  001B94  C034  FFD9         	movff	right@pl,fsr2l
  3523  001B98  C035  FFDA         	movff	right@pl+1,fsr2h
  3524  001B9C  2ADF               	incf	indf2,f,c
  3525  001B9E                     i2l308:
  3526  001B9E  0012               	return		;funcret
  3527  001BA0                     __end_of_right:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _left *****************
  3531 ;; Defined at:
  3532 ;;		line 369 in file "main.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3535 ;;		 -> objs(30), 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;Total ram usage:       11 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_highIsr
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text17
  3561  001956                     __ptext17:
  3562                           	callstack 0
  3563  001956                     _left:
  3564                           	callstack 23
  3565  001956                     
  3566                           ;main.c: 370:     if (pl->x == 1) return;
  3567  001956  C034  FFD9         	movff	left@pl,fsr2l
  3568  00195A  C035  FFDA         	movff	left@pl+1,fsr2h
  3569  00195E  04DE               	decf	postinc2,w,c
  3570  001960  A4D8               	btfss	status,2,c
  3571  001962  EFB5  F00C         	goto	i2u94_41
  3572  001966  EFB7  F00C         	goto	i2u94_40
  3573  00196A                     i2u94_41:
  3574  00196A  EFB9  F00C         	goto	i2l1848
  3575  00196E                     i2u94_40:
  3576  00196E  EF3E  F00D         	goto	i2l301
  3577  001972                     i2l1848:
  3578                           
  3579                           ;main.c: 371:     if (display[pl->y-1][pl->x-2]->type == OT_PLAYERA) return;
  3580  001972  EE20 F001          	lfsr	2,1
  3581  001976  5034               	movf	left@pl^0,w,c
  3582  001978  26D9               	addwf	fsr2l,f,c
  3583  00197A  5035               	movf	(left@pl+1)^0,w,c
  3584  00197C  22DA               	addwfc	fsr2h,f,c
  3585  00197E  50DF               	movf	indf2,w,c
  3586  001980  6E36               	movwf	??_left^0,c
  3587  001982  6A37               	clrf	(??_left+1)^0,c
  3588  001984  0E05               	movlw	5
  3589  001986                     i2u95_45:
  3590  001986  90D8               	bcf	status,0,c
  3591  001988  3636               	rlcf	??_left^0,f,c
  3592  00198A  3637               	rlcf	(??_left+1)^0,f,c
  3593  00198C  2EE8               	decfsz	wreg,f,c
  3594  00198E  EFC3  F00C         	goto	i2u95_45
  3595  001992  C034  FFD9         	movff	left@pl,fsr2l
  3596  001996  C035  FFDA         	movff	left@pl+1,fsr2h
  3597  00199A  50DF               	movf	indf2,w,c
  3598  00199C  6E38               	movwf	(??_left+2)^0,c
  3599  00199E  6A39               	clrf	(??_left+3)^0,c
  3600  0019A0  90D8               	bcf	status,0,c
  3601  0019A2  3638               	rlcf	(??_left+2)^0,f,c
  3602  0019A4  3639               	rlcf	(??_left+3)^0,f,c
  3603  0019A6  0EDC               	movlw	220
  3604  0019A8  6E3A               	movwf	(??_left+4)^0,c
  3605  0019AA  0EFF               	movlw	255
  3606  0019AC  6E3B               	movwf	(??_left+5)^0,c
  3607  0019AE  0E00               	movlw	low _display
  3608  0019B0  6E3C               	movwf	(??_left+6)^0,c
  3609  0019B2  0E01               	movlw	high _display
  3610  0019B4  6E3D               	movwf	(??_left+7)^0,c
  3611  0019B6  503A               	movf	(??_left+4)^0,w,c
  3612  0019B8  263C               	addwf	(??_left+6)^0,f,c
  3613  0019BA  503B               	movf	(??_left+5)^0,w,c
  3614  0019BC  223D               	addwfc	(??_left+7)^0,f,c
  3615  0019BE  5038               	movf	(??_left+2)^0,w,c
  3616  0019C0  263C               	addwf	(??_left+6)^0,f,c
  3617  0019C2  5039               	movf	(??_left+3)^0,w,c
  3618  0019C4  223D               	addwfc	(??_left+7)^0,f,c
  3619  0019C6  5036               	movf	??_left^0,w,c
  3620  0019C8  243C               	addwf	(??_left+6)^0,w,c
  3621  0019CA  6ED9               	movwf	fsr2l,c
  3622  0019CC  5037               	movf	(??_left+1)^0,w,c
  3623  0019CE  203D               	addwfc	(??_left+7)^0,w,c
  3624  0019D0  6EDA               	movwf	fsr2h,c
  3625  0019D2  EE10 F003          	lfsr	1,3
  3626  0019D6  50DE               	movf	postinc2,w,c
  3627  0019D8  26E1               	addwf	fsr1l,f,c
  3628  0019DA  50DD               	movf	postdec2,w,c
  3629  0019DC  22E2               	addwfc	fsr1h,f,c
  3630  0019DE  50E7               	movf	indf1,w,c
  3631  0019E0  A4D8               	btfss	status,2,c
  3632  0019E2  EFF5  F00C         	goto	i2u96_41
  3633  0019E6  EFF7  F00C         	goto	i2u96_40
  3634  0019EA                     i2u96_41:
  3635  0019EA  EFF9  F00C         	goto	i2l1852
  3636  0019EE                     i2u96_40:
  3637  0019EE  EF3E  F00D         	goto	i2l301
  3638  0019F2                     i2l1852:
  3639                           
  3640                           ;main.c: 372:     if (display[pl->y-1][pl->x-2]->type == OT_PLAYERB) return;
  3641  0019F2  EE20 F001          	lfsr	2,1
  3642  0019F6  5034               	movf	left@pl^0,w,c
  3643  0019F8  26D9               	addwf	fsr2l,f,c
  3644  0019FA  5035               	movf	(left@pl+1)^0,w,c
  3645  0019FC  22DA               	addwfc	fsr2h,f,c
  3646  0019FE  50DF               	movf	indf2,w,c
  3647  001A00  6E36               	movwf	??_left^0,c
  3648  001A02  6A37               	clrf	(??_left+1)^0,c
  3649  001A04  0E05               	movlw	5
  3650  001A06                     i2u97_45:
  3651  001A06  90D8               	bcf	status,0,c
  3652  001A08  3636               	rlcf	??_left^0,f,c
  3653  001A0A  3637               	rlcf	(??_left+1)^0,f,c
  3654  001A0C  2EE8               	decfsz	wreg,f,c
  3655  001A0E  EF03  F00D         	goto	i2u97_45
  3656  001A12  C034  FFD9         	movff	left@pl,fsr2l
  3657  001A16  C035  FFDA         	movff	left@pl+1,fsr2h
  3658  001A1A  50DF               	movf	indf2,w,c
  3659  001A1C  6E38               	movwf	(??_left+2)^0,c
  3660  001A1E  6A39               	clrf	(??_left+3)^0,c
  3661  001A20  90D8               	bcf	status,0,c
  3662  001A22  3638               	rlcf	(??_left+2)^0,f,c
  3663  001A24  3639               	rlcf	(??_left+3)^0,f,c
  3664  001A26  0EDC               	movlw	220
  3665  001A28  6E3A               	movwf	(??_left+4)^0,c
  3666  001A2A  0EFF               	movlw	255
  3667  001A2C  6E3B               	movwf	(??_left+5)^0,c
  3668  001A2E  0E00               	movlw	low _display
  3669  001A30  6E3C               	movwf	(??_left+6)^0,c
  3670  001A32  0E01               	movlw	high _display
  3671  001A34  6E3D               	movwf	(??_left+7)^0,c
  3672  001A36  503A               	movf	(??_left+4)^0,w,c
  3673  001A38  263C               	addwf	(??_left+6)^0,f,c
  3674  001A3A  503B               	movf	(??_left+5)^0,w,c
  3675  001A3C  223D               	addwfc	(??_left+7)^0,f,c
  3676  001A3E  5038               	movf	(??_left+2)^0,w,c
  3677  001A40  263C               	addwf	(??_left+6)^0,f,c
  3678  001A42  5039               	movf	(??_left+3)^0,w,c
  3679  001A44  223D               	addwfc	(??_left+7)^0,f,c
  3680  001A46  5036               	movf	??_left^0,w,c
  3681  001A48  243C               	addwf	(??_left+6)^0,w,c
  3682  001A4A  6ED9               	movwf	fsr2l,c
  3683  001A4C  5037               	movf	(??_left+1)^0,w,c
  3684  001A4E  203D               	addwfc	(??_left+7)^0,w,c
  3685  001A50  6EDA               	movwf	fsr2h,c
  3686  001A52  EE10 F003          	lfsr	1,3
  3687  001A56  50DE               	movf	postinc2,w,c
  3688  001A58  26E1               	addwf	fsr1l,f,c
  3689  001A5A  50DD               	movf	postdec2,w,c
  3690  001A5C  22E2               	addwfc	fsr1h,f,c
  3691  001A5E  04E6               	decf	postinc1,w,c
  3692  001A60  A4D8               	btfss	status,2,c
  3693  001A62  EF35  F00D         	goto	i2u98_41
  3694  001A66  EF37  F00D         	goto	i2u98_40
  3695  001A6A                     i2u98_41:
  3696  001A6A  EF39  F00D         	goto	i2l1858
  3697  001A6E                     i2u98_40:
  3698  001A6E  EF3E  F00D         	goto	i2l301
  3699  001A72                     i2l1858:
  3700                           
  3701                           ;main.c: 376:     pl->x--;
  3702  001A72  C034  FFD9         	movff	left@pl,fsr2l
  3703  001A76  C035  FFDA         	movff	left@pl+1,fsr2h
  3704  001A7A  06DF               	decf	indf2,f,c
  3705  001A7C                     i2l301:
  3706  001A7C  0012               	return		;funcret
  3707  001A7E                     __end_of_left:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _down *****************
  3711 ;; Defined at:
  3712 ;;		line 399 in file "main.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3715 ;;		 -> objs(30), 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;Total ram usage:       10 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_highIsr
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text18
  3741  001BA0                     __ptext18:
  3742                           	callstack 0
  3743  001BA0                     _down:
  3744                           	callstack 23
  3745  001BA0                     
  3746                           ;main.c: 400:     if (pl->y == 4) return;
  3747  001BA0  EE20 F001          	lfsr	2,1
  3748  001BA4  5034               	movf	down@pl^0,w,c
  3749  001BA6  26D9               	addwf	fsr2l,f,c
  3750  001BA8  5035               	movf	(down@pl+1)^0,w,c
  3751  001BAA  22DA               	addwfc	fsr2h,f,c
  3752  001BAC  0E04               	movlw	4
  3753  001BAE  18DE               	xorwf	postinc2,w,c
  3754  001BB0  A4D8               	btfss	status,2,c
  3755  001BB2  EFDD  F00D         	goto	i2u91_41
  3756  001BB6  EFDF  F00D         	goto	i2u91_40
  3757  001BBA                     i2u91_41:
  3758  001BBA  EFE1  F00D         	goto	i2l1830
  3759  001BBE                     i2u91_40:
  3760  001BBE  EF5C  F00E         	goto	i2l322
  3761  001BC2                     i2l1830:
  3762                           
  3763                           ;main.c: 401:     if (display[pl->y][pl->x-1]->type == OT_PLAYERA) return;
  3764  001BC2  C034  FFD9         	movff	down@pl,fsr2l
  3765  001BC6  C035  FFDA         	movff	down@pl+1,fsr2h
  3766  001BCA  50DF               	movf	indf2,w,c
  3767  001BCC  6E36               	movwf	??_down^0,c
  3768  001BCE  6A37               	clrf	(??_down+1)^0,c
  3769  001BD0  90D8               	bcf	status,0,c
  3770  001BD2  3636               	rlcf	??_down^0,f,c
  3771  001BD4  3637               	rlcf	(??_down+1)^0,f,c
  3772  001BD6  EE20 F001          	lfsr	2,1
  3773  001BDA  5034               	movf	down@pl^0,w,c
  3774  001BDC  26D9               	addwf	fsr2l,f,c
  3775  001BDE  5035               	movf	(down@pl+1)^0,w,c
  3776  001BE0  22DA               	addwfc	fsr2h,f,c
  3777  001BE2  50DF               	movf	indf2,w,c
  3778  001BE4  6E38               	movwf	(??_down+2)^0,c
  3779  001BE6  5038               	movf	(??_down+2)^0,w,c
  3780  001BE8  0D20               	mullw	32
  3781  001BEA  0EFE               	movlw	254
  3782  001BEC  6E39               	movwf	(??_down+3)^0,c
  3783  001BEE  0EFF               	movlw	255
  3784  001BF0  6E3A               	movwf	(??_down+4)^0,c
  3785  001BF2  0E00               	movlw	low _display
  3786  001BF4  6E3B               	movwf	(??_down+5)^0,c
  3787  001BF6  0E01               	movlw	high _display
  3788  001BF8  6E3C               	movwf	(??_down+6)^0,c
  3789  001BFA  5039               	movf	(??_down+3)^0,w,c
  3790  001BFC  263B               	addwf	(??_down+5)^0,f,c
  3791  001BFE  503A               	movf	(??_down+4)^0,w,c
  3792  001C00  223C               	addwfc	(??_down+6)^0,f,c
  3793  001C02  50F3               	movf	243,w,c
  3794  001C04  263B               	addwf	(??_down+5)^0,f,c
  3795  001C06  50F4               	movf	244,w,c
  3796  001C08  223C               	addwfc	(??_down+6)^0,f,c
  3797  001C0A  5036               	movf	??_down^0,w,c
  3798  001C0C  243B               	addwf	(??_down+5)^0,w,c
  3799  001C0E  6ED9               	movwf	fsr2l,c
  3800  001C10  5037               	movf	(??_down+1)^0,w,c
  3801  001C12  203C               	addwfc	(??_down+6)^0,w,c
  3802  001C14  6EDA               	movwf	fsr2h,c
  3803  001C16  EE10 F003          	lfsr	1,3
  3804  001C1A  50DE               	movf	postinc2,w,c
  3805  001C1C  26E1               	addwf	fsr1l,f,c
  3806  001C1E  50DD               	movf	postdec2,w,c
  3807  001C20  22E2               	addwfc	fsr1h,f,c
  3808  001C22  50E7               	movf	indf1,w,c
  3809  001C24  A4D8               	btfss	status,2,c
  3810  001C26  EF17  F00E         	goto	i2u92_41
  3811  001C2A  EF19  F00E         	goto	i2u92_40
  3812  001C2E                     i2u92_41:
  3813  001C2E  EF1B  F00E         	goto	i2l1834
  3814  001C32                     i2u92_40:
  3815  001C32  EF5C  F00E         	goto	i2l322
  3816  001C36                     i2l1834:
  3817                           
  3818                           ;main.c: 402:     if (display[pl->y][pl->x-1]->type == OT_PLAYERB) return;
  3819  001C36  C034  FFD9         	movff	down@pl,fsr2l
  3820  001C3A  C035  FFDA         	movff	down@pl+1,fsr2h
  3821  001C3E  50DF               	movf	indf2,w,c
  3822  001C40  6E36               	movwf	??_down^0,c
  3823  001C42  6A37               	clrf	(??_down+1)^0,c
  3824  001C44  90D8               	bcf	status,0,c
  3825  001C46  3636               	rlcf	??_down^0,f,c
  3826  001C48  3637               	rlcf	(??_down+1)^0,f,c
  3827  001C4A  EE20 F001          	lfsr	2,1
  3828  001C4E  5034               	movf	down@pl^0,w,c
  3829  001C50  26D9               	addwf	fsr2l,f,c
  3830  001C52  5035               	movf	(down@pl+1)^0,w,c
  3831  001C54  22DA               	addwfc	fsr2h,f,c
  3832  001C56  50DF               	movf	indf2,w,c
  3833  001C58  6E38               	movwf	(??_down+2)^0,c
  3834  001C5A  5038               	movf	(??_down+2)^0,w,c
  3835  001C5C  0D20               	mullw	32
  3836  001C5E  0EFE               	movlw	254
  3837  001C60  6E39               	movwf	(??_down+3)^0,c
  3838  001C62  0EFF               	movlw	255
  3839  001C64  6E3A               	movwf	(??_down+4)^0,c
  3840  001C66  0E00               	movlw	low _display
  3841  001C68  6E3B               	movwf	(??_down+5)^0,c
  3842  001C6A  0E01               	movlw	high _display
  3843  001C6C  6E3C               	movwf	(??_down+6)^0,c
  3844  001C6E  5039               	movf	(??_down+3)^0,w,c
  3845  001C70  263B               	addwf	(??_down+5)^0,f,c
  3846  001C72  503A               	movf	(??_down+4)^0,w,c
  3847  001C74  223C               	addwfc	(??_down+6)^0,f,c
  3848  001C76  50F3               	movf	243,w,c
  3849  001C78  263B               	addwf	(??_down+5)^0,f,c
  3850  001C7A  50F4               	movf	244,w,c
  3851  001C7C  223C               	addwfc	(??_down+6)^0,f,c
  3852  001C7E  5036               	movf	??_down^0,w,c
  3853  001C80  243B               	addwf	(??_down+5)^0,w,c
  3854  001C82  6ED9               	movwf	fsr2l,c
  3855  001C84  5037               	movf	(??_down+1)^0,w,c
  3856  001C86  203C               	addwfc	(??_down+6)^0,w,c
  3857  001C88  6EDA               	movwf	fsr2h,c
  3858  001C8A  EE10 F003          	lfsr	1,3
  3859  001C8E  50DE               	movf	postinc2,w,c
  3860  001C90  26E1               	addwf	fsr1l,f,c
  3861  001C92  50DD               	movf	postdec2,w,c
  3862  001C94  22E2               	addwfc	fsr1h,f,c
  3863  001C96  04E6               	decf	postinc1,w,c
  3864  001C98  A4D8               	btfss	status,2,c
  3865  001C9A  EF51  F00E         	goto	i2u93_41
  3866  001C9E  EF53  F00E         	goto	i2u93_40
  3867  001CA2                     i2u93_41:
  3868  001CA2  EF55  F00E         	goto	i2l1840
  3869  001CA6                     i2u93_40:
  3870  001CA6  EF5C  F00E         	goto	i2l322
  3871  001CAA                     i2l1840:
  3872                           
  3873                           ;main.c: 406:     pl->y++;
  3874  001CAA  EE20 F001          	lfsr	2,1
  3875  001CAE  5034               	movf	down@pl^0,w,c
  3876  001CB0  26D9               	addwf	fsr2l,f,c
  3877  001CB2  5035               	movf	(down@pl+1)^0,w,c
  3878  001CB4  22DA               	addwfc	fsr2h,f,c
  3879  001CB6  2ADF               	incf	indf2,f,c
  3880  001CB8                     i2l322:
  3881  001CB8  0012               	return		;funcret
  3882  001CBA                     __end_of_down:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _SetupDebouncingTimer *****************
  3886 ;; Defined at:
  3887 ;;		line 362 in file "main.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_highIsr
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text19
  3915  0020DE                     __ptext19:
  3916                           	callstack 0
  3917  0020DE                     _SetupDebouncingTimer:
  3918                           	callstack 23
  3919  0020DE                     
  3920                           ;main.c: 363:     acceptInterrupts = 0;
  3921  0020DE  0E00               	movlw	0
  3922  0020E0  6E0F               	movwf	_acceptInterrupts^0,c
  3923                           
  3924                           ;main.c: 364:     TMR0L = 0;
  3925  0020E2  0E00               	movlw	0
  3926  0020E4  6ED6               	movwf	214,c	;volatile
  3927                           
  3928                           ;main.c: 365:     TMR0H = 0;
  3929  0020E6  0E00               	movlw	0
  3930  0020E8  6ED7               	movwf	215,c	;volatile
  3931  0020EA                     
  3932                           ;main.c: 366:     T0CONbits.TMR0ON = 1;
  3933  0020EA  8ED5               	bsf	213,7,c	;volatile
  3934  0020EC  0012               	return		;funcret
  3935  0020EE                     __end_of_SetupDebouncingTimer:
  3936                           	callstack 0
  3937                           
  3938                           	psect	rparam
  3939  0000                     
  3940                           	psect	temp
  3941  000062                     btemp:
  3942                           	callstack 0
  3943  000062                     	ds	1
  3944  0000                     int$flags	set	btemp
  3945  0000                     wtemp8	set	btemp+1
  3946  0000                     ttemp5	set	btemp+1
  3947  0000                     ttemp6	set	btemp+4
  3948  0000                     ttemp7	set	btemp+8
  3949                           
  3950                           	psect	idloc
  3951                           
  3952                           ;Config register IDLOC0 @ 0x200000
  3953                           ;	unspecified, using default values
  3954  200000                     	org	2097152
  3955  200000  FF                 	db	255
  3956                           
  3957                           ;Config register IDLOC1 @ 0x200001
  3958                           ;	unspecified, using default values
  3959  200001                     	org	2097153
  3960  200001  FF                 	db	255
  3961                           
  3962                           ;Config register IDLOC2 @ 0x200002
  3963                           ;	unspecified, using default values
  3964  200002                     	org	2097154
  3965  200002  FF                 	db	255
  3966                           
  3967                           ;Config register IDLOC3 @ 0x200003
  3968                           ;	unspecified, using default values
  3969  200003                     	org	2097155
  3970  200003  FF                 	db	255
  3971                           
  3972                           ;Config register IDLOC4 @ 0x200004
  3973                           ;	unspecified, using default values
  3974  200004                     	org	2097156
  3975  200004  FF                 	db	255
  3976                           
  3977                           ;Config register IDLOC5 @ 0x200005
  3978                           ;	unspecified, using default values
  3979  200005                     	org	2097157
  3980  200005  FF                 	db	255
  3981                           
  3982                           ;Config register IDLOC6 @ 0x200006
  3983                           ;	unspecified, using default values
  3984  200006                     	org	2097158
  3985  200006  FF                 	db	255
  3986                           
  3987                           ;Config register IDLOC7 @ 0x200007
  3988                           ;	unspecified, using default values
  3989  200007                     	org	2097159
  3990  200007  FF                 	db	255
  3991                           
  3992                           	psect	config
  3993                           
  3994                           ; Padding undefined space
  3995  300000                     	org	3145728
  3996  300000  FF                 	db	255
  3997                           
  3998                           ;Config register CONFIG1H @ 0x300001
  3999                           ;	unspecified, using default values
  4000                           ;	Oscillator Selection bits
  4001                           ;	OSC = 0x7, unprogrammed default
  4002                           ;	Fail-Safe Clock Monitor Enable bit
  4003                           ;	FCMEN = 0x0, unprogrammed default
  4004                           ;	Internal/External Oscillator Switchover bit
  4005                           ;	IESO = 0x0, unprogrammed default
  4006  300001                     	org	3145729
  4007  300001  07                 	db	7
  4008                           
  4009                           ;Config register CONFIG2L @ 0x300002
  4010                           ;	unspecified, using default values
  4011                           ;	Power-up Timer Enable bit
  4012                           ;	PWRT = 0x1, unprogrammed default
  4013                           ;	Brown-out Reset Enable bits
  4014                           ;	BOREN = 0x3, unprogrammed default
  4015                           ;	Brown Out Reset Voltage bits
  4016                           ;	BORV = 0x3, unprogrammed default
  4017  300002                     	org	3145730
  4018  300002  1F                 	db	31
  4019                           
  4020                           ;Config register CONFIG2H @ 0x300003
  4021                           ;	unspecified, using default values
  4022                           ;	Watchdog Timer Enable bit
  4023                           ;	WDT = 0x1, unprogrammed default
  4024                           ;	Watchdog Timer Postscale Select bits
  4025                           ;	WDTPS = 0xF, unprogrammed default
  4026  300003                     	org	3145731
  4027  300003  1F                 	db	31
  4028                           
  4029                           ; Padding undefined space
  4030  300004                     	org	3145732
  4031  300004  FF                 	db	255
  4032                           
  4033                           ;Config register CONFIG3H @ 0x300005
  4034                           ;	unspecified, using default values
  4035                           ;	CCP2 MUX bit
  4036                           ;	CCP2MX = 0x1, unprogrammed default
  4037                           ;	PORTB A/D Enable bit
  4038                           ;	PBADEN = 0x1, unprogrammed default
  4039                           ;	Low-Power Timer1 Oscillator Enable bit
  4040                           ;	LPT1OSC = 0x0, unprogrammed default
  4041                           ;	MCLR Pin Enable bit
  4042                           ;	MCLRE = 0x1, unprogrammed default
  4043  300005                     	org	3145733
  4044  300005  83                 	db	131
  4045                           
  4046                           ;Config register CONFIG4L @ 0x300006
  4047                           ;	unspecified, using default values
  4048                           ;	Stack Full/Underflow Reset Enable bit
  4049                           ;	STVREN = 0x1, unprogrammed default
  4050                           ;	Single-Supply ICSP Enable bit
  4051                           ;	LVP = 0x1, unprogrammed default
  4052                           ;	Extended Instruction Set Enable bit
  4053                           ;	XINST = 0x0, unprogrammed default
  4054                           ;	Background Debugger Enable bit
  4055                           ;	DEBUG = 0x1, unprogrammed default
  4056  300006                     	org	3145734
  4057  300006  85                 	db	133
  4058                           
  4059                           ; Padding undefined space
  4060  300007                     	org	3145735
  4061  300007  FF                 	db	255
  4062                           
  4063                           ;Config register CONFIG5L @ 0x300008
  4064                           ;	unspecified, using default values
  4065                           ;	Code Protection bit
  4066                           ;	CP0 = 0x1, unprogrammed default
  4067                           ;	Code Protection bit
  4068                           ;	CP1 = 0x1, unprogrammed default
  4069                           ;	Code Protection bit
  4070                           ;	CP2 = 0x1, unprogrammed default
  4071                           ;	Code Protection bit
  4072                           ;	CP3 = 0x1, unprogrammed default
  4073  300008                     	org	3145736
  4074  300008  0F                 	db	15
  4075                           
  4076                           ;Config register CONFIG5H @ 0x300009
  4077                           ;	unspecified, using default values
  4078                           ;	Boot Block Code Protection bit
  4079                           ;	CPB = 0x1, unprogrammed default
  4080                           ;	Data EEPROM Code Protection bit
  4081                           ;	CPD = 0x1, unprogrammed default
  4082  300009                     	org	3145737
  4083  300009  C0                 	db	192
  4084                           
  4085                           ;Config register CONFIG6L @ 0x30000A
  4086                           ;	unspecified, using default values
  4087                           ;	Write Protection bit
  4088                           ;	WRT0 = 0x1, unprogrammed default
  4089                           ;	Write Protection bit
  4090                           ;	WRT1 = 0x1, unprogrammed default
  4091                           ;	Write Protection bit
  4092                           ;	WRT2 = 0x1, unprogrammed default
  4093                           ;	Write Protection bit
  4094                           ;	WRT3 = 0x1, unprogrammed default
  4095  30000A                     	org	3145738
  4096  30000A  0F                 	db	15
  4097                           
  4098                           ;Config register CONFIG6H @ 0x30000B
  4099                           ;	unspecified, using default values
  4100                           ;	Configuration Register Write Protection bit
  4101                           ;	WRTC = 0x1, unprogrammed default
  4102                           ;	Boot Block Write Protection bit
  4103                           ;	WRTB = 0x1, unprogrammed default
  4104                           ;	Data EEPROM Write Protection bit
  4105                           ;	WRTD = 0x1, unprogrammed default
  4106  30000B                     	org	3145739
  4107  30000B  E0                 	db	224
  4108                           
  4109                           ;Config register CONFIG7L @ 0x30000C
  4110                           ;	unspecified, using default values
  4111                           ;	Table Read Protection bit
  4112                           ;	EBTR0 = 0x1, unprogrammed default
  4113                           ;	Table Read Protection bit
  4114                           ;	EBTR1 = 0x1, unprogrammed default
  4115                           ;	Table Read Protection bit
  4116                           ;	EBTR2 = 0x1, unprogrammed default
  4117                           ;	Table Read Protection bit
  4118                           ;	EBTR3 = 0x1, unprogrammed default
  4119  30000C                     	org	3145740
  4120  30000C  0F                 	db	15
  4121                           
  4122                           ;Config register CONFIG7H @ 0x30000D
  4123                           ;	unspecified, using default values
  4124                           ;	Boot Block Table Read Protection bit
  4125                           ;	EBTRB = 0x1, unprogrammed default
  4126  30000D                     	org	3145741
  4127  30000D  40                 	db	64
  4128                           tosu	equ	0xFFF
  4129                           tosh	equ	0xFFE
  4130                           tosl	equ	0xFFD
  4131                           stkptr	equ	0xFFC
  4132                           pclatu	equ	0xFFB
  4133                           pclath	equ	0xFFA
  4134                           pcl	equ	0xFF9
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           indf0	equ	0xFEF
  4142                           postinc0	equ	0xFEE
  4143                           postdec0	equ	0xFED
  4144                           preinc0	equ	0xFEC
  4145                           plusw0	equ	0xFEB
  4146                           fsr0h	equ	0xFEA
  4147                           fsr0l	equ	0xFE9
  4148                           wreg	equ	0xFE8
  4149                           indf1	equ	0xFE7
  4150                           postinc1	equ	0xFE6
  4151                           postdec1	equ	0xFE5
  4152                           preinc1	equ	0xFE4
  4153                           plusw1	equ	0xFE3
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           bsr	equ	0xFE0
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           preinc2	equ	0xFDC
  4161                           plusw2	equ	0xFDB
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        78
    BSS         233
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     41      97
    BANK0           128      1     128
    BANK1           256     26     154
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    highIsr$1508	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1507	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1506	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    highIsr$1505	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1284_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    down@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    up@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    right@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    left@pl	PTR struct GameElement size(2) Largest target is 30
		 -> objs(COMRAM[30]), 

    display	PTR struct GameElement[16][4] size(2) Largest target is 30
		 -> NULL(NULL[0]), objs(COMRAM[30]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(BANK0[8]), frisbeeChar(BANK0[8]), selected_teamB_player_with_frisbee(BANK0[8]), selected_teamA_player_with_frisbee(BANK0[8]), 
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), teamB_player(BANK0[8]), teamA_player(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lowIsr in COMRAM

    _lowIsr->___awmod

Critical Paths under _highIsr in COMRAM

    _highIsr->_left
    _highIsr->_up
    _up->i2___wmul
    _right->i2___wmul
    _left->i2___wmul
    _down->i2___wmul

Critical Paths under _main in BANK0

    _UpdateAndPrintDisplay->_LCDDat
    _InitLCD->_LCDCmd
    _LCDAddSpecialCharacter->_LCDCmd
    _LCDAddSpecialCharacter->_LCDDat
    _LCDGoto->_LCDCmd

Critical Paths under _lowIsr in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UpdateAndPrintDisplay
    _UpdateAndPrintDisplay->___wmul
    _InitLCD->_LCDCmd
    _InitGameObjects->___wmul
    _AddCustomCharacters->_LCDAddSpecialCharacter
    _LCDAddSpecialCharacter->_LCDGoto
    _LCDGoto->_LCDCmd

Critical Paths under _lowIsr in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowIsr in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowIsr in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowIsr in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowIsr in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowIsr in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowIsr in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowIsr in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowIsr in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowIsr in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowIsr in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowIsr in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowIsr in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowIsr in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowIsr in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17755
                _AddCustomCharacters
                    _InitGameObjects
                     _InitInterrupts
                            _InitLCD
              _UpdateAndPrintDisplay
 ---------------------------------------------------------------------------------
 (1) _UpdateAndPrintDisplay                               20    20      0    8660
                                              6 BANK1     20    20      0
                             _LCDDat
                            _LCDGoto
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGameObjects                                     18    18      0    7181
                                              6 BANK1     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    6822
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _AddCustomCharacters                                  0     0      0    1883
             _LCDAddSpecialCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDAddSpecialCharacter                               4     2      2    1883
                                              3 BANK1      4     2      2
                             _LCDCmd
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1     940
                                              1 BANK1      2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      31
                                              0 BANK0      1     1      0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      31
                                              0 BANK0      1     1      0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lowIsr                                               9     9      0     494
                                             32 COMRAM     9     9      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _highIsr                                              9     9      0    1526
                                             17 COMRAM     9     9      0
               _SetupDebouncingTimer
                               _down
                               _left
                              _right
                                 _up
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     471
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _up                                                  11     9      2     252
                                              6 COMRAM    11     9      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _right                                               10     8      2     252
                                              6 COMRAM    10     8      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _left                                                11     9      2     252
                                              6 COMRAM    11     9      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _down                                                10     8      2     252
                                              6 COMRAM    10     8      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _SetupDebouncingTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddCustomCharacters
     _LCDAddSpecialCharacter
       _LCDCmd
       _LCDDat
       _LCDGoto
         _LCDCmd
   _InitGameObjects
     ___wmul
   _InitInterrupts
   _InitLCD
     _LCDCmd
   _UpdateAndPrintDisplay
     _LCDDat
     _LCDGoto
       _LCDCmd
     ___wmul

 _lowIsr (ROOT)
   ___awmod

 _highIsr (ROOT)
   _SetupDebouncingTimer
   _down
     i2___wmul (ARG)
   _left
     i2___wmul (ARG)
   _right
     i2___wmul (ARG)
   _up
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1A      9A       7       60.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      1      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     29      61       1       77.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      34        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu May 25 02:09:19 2023

                                    _a 000D                                      _b 000B  
                                    _c 0009                                     _up 1826  
                                   bsr 000FE0             LCDAddSpecialCharacter@data 0183  
                  ___wmul@multiplicand 0182  LCDAddSpecialCharacter@character_index 0185  
                                  l142 2072                                    l145 200E  
                                  l154 1EDA                                    l170 1F96  
                                  l173 1DEA                                    l165 2040  
                                  l328 209A                                    l256 1404  
                                  l273 1446                                    l282 1824  
                                  l294 1E62                                    ?_up 0034  
                         ___awmod@sign 004D                                    wreg 000FE8  
                                 ??_up 0036                        __end_of_LCDGoto 1EDC  
                                 l2310 2046                                   l2320 2062  
                                 l2312 204A                                   l2400 2014  
                                 l2330 1FFA                                   l2322 1FE0  
                                 l2314 204E                                   l2410 2028  
                                 l2402 2018                                   l2332 1FFC  
                                 l2324 1FE4                                   l2316 2050  
                                 l2340 1E88                                   l2420 1DEC  
                                 l2412 202E                                   l2404 201A  
                                 l2334 200C                                   l2326 1FE8  
                                 l2318 2060                                   l2342 1E9A  
                                 l2350 1ED2                                   l2502 1766  
                                 l2430 1E30                                   l2422 1E08  
                                 l2414 2034                                   l2406 201C  
                                 l2328 1FEA                                   l2352 1ED6  
                                 l2344 1EA8                                   l2336 1E68  
                                 l2504 1804                                   l2440 1E3A  
                                 l2432 1E32                                   l2424 1E12  
                                 l2416 203A                                   l2408 2022  
                                 l2520 1018                                   l2346 1EBA  
                                 l2338 1E7A                                   l2362 1F66  
                                 l2354 1F52                                   l2418 1D6A  
                                 l2370 2074                                   l2506 1808  
                                 l2450 1E44                                   l2442 1E3C  
                                 l2434 1E34                                   l2426 1E2C  
                                 l2530 1098                                   l2522 1058  
                                 l2514 1010                                   l2348 1EC8  
                                 l2364 1F78                                   l2356 1F60  
                                 l2372 2092                                   l2460 1E50  
                                 l2452 1E46                                   l2444 1E3E  
                                 l2436 1E36                                   l2428 1E2E  
                                 l2540 1162                                   l2524 105C  
                                 l2508 1006                                   l2620 20CA  
                                 l2366 1F7C                                   l2470 1E5A  
                                 l2462 1E52                                   l2454 1E4A  
                                 l2446 1E40                                   l2438 1E38  
                                 l2542 117E                                   l2526 1078  
                                 l2622 20CE                                   l2368 1F8C  
                                 l2480 165A                                   l2472 1E5C  
                                 l2464 1E54                                   l2456 1E4C  
                                 l2448 1E42                                   l2800 12D4  
                                 l2560 11EC                                   l2536 10A0  
                                 l2528 107C                                   l2624 20D2  
                                 l2490 16A6                                   l2474 1650  
                                 l2466 1E56                                   l2458 1E4E  
                                 l2802 1368                                   l2570 1268  
                                 l2562 1240                                   l2554 118E  
                                 l2538 115E                                   l2618 20C2  
                                 l2492 16C2                                   l2468 1E58  
                                 l2804 13DE                                   l2580 12FC  
                                 l2572 1272                                   l2564 124A  
                                 l2556 1196                                   l2548 1186  
                                 l2494 16C6                                   l2486 1662  
                                 l2398 2010                                   l2582 1306  
                                 l2566 1254                                   l2590 1386  
                                 l2558 11A0                                   l2496 16E2  
                                 l2488 16A2                                   l2576 127C  
                                 l2568 125E                                   l2592 1404  
                                 l2594 140A                                   l2586 1310  
                                 l2578 12F2                                   l2596 1426  
                                 l2598 142A                                   STR_1 1001  
                                 u1500 1E7A                                   u1501 1E76  
                                 _LATA 000F89                                   u1510 1E9A  
                                 u1511 1E96                                   u1520 1EBA  
                                 u1600 1824                                   _LATD 000F8C  
                                 u1521 1EB6                                   u1601 1820  
                                 u1530 1F8C                                   u1531 1F88  
                                 u1620 1078                                   u1621 1074  
                                 u1630 1098                                   u1631 1094  
                                 u1615 1022                                   u1705 1286  
                                 u1730 1426                                   u1650 117E  
                                 u1731 1422                                   u1715 131A  
                                 u1651 117A                                   u1580 16C2  
                                 u1740 1446                                   u1581 16BE  
                                 u1741 1442                                   u1725 1390  
                                 u1645 10F0                                   u1590 16E2  
                                 u1670 11EC                                   u1807 1FF2  
                                 u1591 16DE                                   u1575 166C  
                                 u1671 11E8                                   u1817 2004  
                                 u1665 11AA                                   u1690 1240  
                                 u1691 123C                                   u1685 11F6  
                                 u1787 2058                                   u1797 206A  
                      _InitGameObjects 1650                                   _main 20C2  
                                 _left 1956                                   _down 1BA0  
                                 _objs 0010                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 0062  
                                 up@pl 0034                                   prodh 000FF4  
                                 prodl 000FF3                                   start 00EC  
                         ___param_bank 000000                        __end_of_InitLCD 2042  
                                ?_main 002E                                  ?_left 0034  
                                ?_down 0034                        __end_of___awmod 1D6A  
                                _T0CON 000FD5                                  _T2CON 000FCA  
                                _T3CON 000FB1                                  i1l229 00D4  
                                i2l203 14A6                                  i2l301 1A7C  
                                i2l206 1520                                  i2l322 1CB8  
                                i2l218 1634                                  i2l315 1954  
                                i2l308 1B9E                                  i1l572 1D68  
                                i2l328 20C0                                  i2l297 20EC  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISD 000F95  
                _UpdateAndPrintDisplay 1006                        __end_of_highIsr 1650  
                                _lcd_x 0059                                  _lcd_y 0058  
                                _right 1A7E                                  tablat 000FF5  
                     __end_ofi2___wmul 20C2                                  ttemp5 0063  
                                ttemp6 0066                                  ttemp7 006A  
                                status 000FD8                                  wtemp8 0063  
                      __initialization 1EDC                           __end_of_main 20DE  
                         __end_of_left 1A7E                           __end_of_down 1CBA  
                       _InitInterrupts 1DEC                                 ??_main 0100  
                               ??_left 0036                                 ??_down 0036  
                        __activetblptr 000002                              ??_LCDGoto 0100  
              __end_of_InitGameObjects 1826                                 _ADCON1 000FC1  
                               ?_right 0034                                 _LCDDat 1FDC  
                               _LCDCmd 2042                                 i1l2000 1CBA  
                               i1l2010 1CE6                                 i1l2002 1CBE  
                               i1l2020 1D1E                                 i1l2012 1CEE  
                               i1l2004 1CCC                                 i1l2030 1D58  
                               i1l2022 1D34                                 i1l2014 1D00  
                               i1l2006 1CD4                                 i1l2032 1D60  
                               i1l2024 1D3C                                 i1l2016 1D08  
                               i1l2008 1CD8                                 i1l2200 0054  
                               i1l2026 1D42                                 i1l2018 1D10  
                               i1l2202 0058                                 i1l2210 0078  
                               i1l2028 1D48                                 i1l2204 0060  
                               i1l2212 00AC                                 i1l2214 00CC  
                               i1l2206 0064                                 i1l2216 00D0  
                               i1l2194 002E                                 i1l2196 003C  
                               i1l2198 0040                                 i2l1120 20EA  
                               i2l1118 20DE                                 i1l2806 008E  
                               i2l2036 209C                                 i2l2140 147C  
                               i2l2132 1462                                 i2l2038 20B8  
                               i2l2150 14C4                                 i2l2142 148A  
                               i2l2134 1474                                 i2l2152 14C8  
                               i2l2144 149A                                 i2l2136 1478  
                               i2l2170 1598                                 i2l2162 152E  
                               i2l2154 14EC                                 i2l2146 149E  
                               i2l2138 147A                                 i2l2172 15C0  
                               i2l2180 1626                                 i2l2164 153E  
                               i2l2156 14F0                                 i2l2148 14B4  
                               i2l2174 15E8                                 i2l2166 1548  
                               i2l2158 14F8                                 i2l2168 1570  
                               i2l2184 162E                                 i2l2186 1630  
                               i2l2178 15EC                                 i2l1812 1A9C  
                               i2l1804 1946                                 i2l2188 1632  
                               i2l1830 1BC2                                 i2l1822 1B94  
                               i2l1840 1CAA                                 i2l1816 1B18  
                               i2l1808 1A7E                                 i2l1834 1C36  
                               i2l1826 1BA0                                 i2l1852 19F2  
                               i2l1844 1956                                 i2l1790 1826  
                               i2l1848 1972                                 i2l2808 1600  
                               i2l1858 1A72                                 i2l1794 1846  
                               i2l1798 18C6                              ??_InitLCD 0100  
               __end_of_InitInterrupts 1E64                                 ___wmul 2074  
                            ??___awmod 004C                                 clear_0 1F22  
                               clear_1 1F2E                                 clear_2 1F3A  
                               _lowIsr 0018                                 _scoreA 0005  
                      ___awmod@divisor 004A                                 _scoreB 0003  
                      ___awmod@counter 004C                              ??_highIsr 003F  
                               left@pl 0034                                 down@pl 0034  
               ?_UpdateAndPrintDisplay 002E                           __pdataCOMRAM 0057  
                        _frisbee_steps 00C3                           __mediumconst 0000  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                              LCDDat@dat 0180  
                            LCDCmd@cmd 0180                             __accesstop 0080  
              __end_of__initialization 1F40                         _selectedPlayer 0007  
                        ___rparam_used 000001           __size_of_AddCustomCharacters 0082  
                      ?_InitInterrupts 002E                         __pcstackCOMRAM 002E  
                         __pidataBANK0 1F98               ??_LCDAddSpecialCharacter 0100  
                        __end_of_right 1BA0                             __end_of_up 1956  
                            ?i2___wmul 002E                       ?_InitGameObjects 002E  
        __size_of_SetupDebouncingTimer 0010                                ??_right 0036  
                              ?_LCDDat 002E                                ?_LCDCmd 002E  
                           __pbssBANK0 00C3                             __pbssBANK1 0100  
                           _game_state 0057                                ?___wmul 0180  
                              ?_lowIsr 002E                             ??i2___wmul 0032  
                              _LCDGoto 1E64                                i2u81_40 1842  
                              i2u81_41 183E                                i2u90_40 1B90  
                              i2u90_41 1B8C                                i2u82_45 185A  
                              i2u91_40 1BBE                                i2u83_40 18C2  
                              i2u91_41 1BBA                                i2u83_41 18BE  
                              i2u92_40 1C32                                i2u92_41 1C2E  
                              i2u84_45 18DA                                i2u93_40 1CA6  
                              i2u85_40 1942                                i2u93_41 1CA2  
                              i2u85_41 193E                                i2u94_40 196E  
                              i2u86_40 1A98                                i2u94_41 196A  
                              i2u86_41 1A94                                i2u95_45 1986  
                              i2u87_45 1AB0                                i2u96_40 19EE  
                              i2u88_40 1B14                                i2u96_41 19EA  
                              i2u88_41 1B10                                i2u97_45 1A06  
                              i2u89_45 1B2C                                i2u98_40 1A6E  
                              i2u98_41 1A6A                       InitGameObjects@i 0192  
                     InitGameObjects@j 0194                        __size_of_LCDDat 0034  
                      __size_of_LCDCmd 0032                                _InitLCD 2010  
                              __Hparam 0000                                __Lparam 0000  
                              ___awmod 1CBA                        __size_of___wmul 0028  
                         __psmallconst 1000        __size_of_LCDAddSpecialCharacter 004A  
                              __pcinit 1EDC                                __ramtop 1000  
                      __size_of_lowIsr 00D4                                __ptext0 20C2  
                              __ptext1 1006                                __ptext2 2010  
                              __ptext3 1DEC                                __ptext4 1650  
                              __ptext5 2074                                __ptext6 1D6A  
                              __ptext7 1F4E                                __ptext8 1E64  
                              __ptext9 2042                                _highIsr 0008  
                              _display 0100                              _T0CONbits 000FD5  
                            _T3CONbits 000FB1                       ___awmod@dividend 0048  
                       __pintcode_body 1448                   end_of_initialization 1F40  
                       _frisbee_target 008B                          __Lmediumconst 0000  
                              int_func 1448                    i2___wmul@multiplier 002E  
                              right@pl 0034                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc1 000FE6                                postinc2 000FDE  
              ??_UpdateAndPrintDisplay 0186                              _PORTEbits 000F84  
                  _AddCustomCharacters 1D6A                              _TRISEbits 000F96  
               _LCDAddSpecialCharacter 1F4E                       ??_InitInterrupts 00FF  
                       __end_of_LCDDat 2010                         __end_of_LCDCmd 2074  
                           LCDGoto@p_1 0181                             LCDGoto@p_2 0182  
                 ?_AddCustomCharacters 002E     _selected_teamA_player_with_frisbee 00A3  
                       __end_of___wmul 209C                          __pidataCOMRAM 20EE  
                       __end_of_lowIsr 00EC                       i2___wmul@product 0032  
                  start_initialization 1EDC                      __size_ofi2___wmul 0026  
                             ??_LCDDat 00FF                               ??_LCDCmd 00FF  
                ??_AddCustomCharacters 0100           __end_of_SetupDebouncingTimer 20EE  
              LCDAddSpecialCharacter@i 0186                               ??___wmul 00FF  
                       _currentSegment 0001                            __pdataBANK0 0080  
                         lowIsr@temp_a 0056                           lowIsr@temp_d 0055  
                             ??_lowIsr 004E                               ?_LCDGoto 0181  
                          __pbssCOMRAM 0001                          __pcstackBANK0 00FF  
                        __pcstackBANK1 0180                               ?_InitLCD 002E  
             __size_of_InitGameObjects 01D6                 UpdateAndPrintDisplay@i 0190  
               UpdateAndPrintDisplay@j 0192                              __pintcode 0008  
                             ?___awmod 0048                            __pintcodelo 0018  
                             ?_highIsr 002E                            __smallconst 1000  
                         _teamA_player 005A                           _teamB_player 00BB  
                       __size_of_right 0122                              _segValues 0080  
                          __size_of_up 0130                         ___wmul@product 0184  
                _selected_teamA_player 00B3                               _IPR1bits 000F9F  
                             _PIE1bits 000F9D                  _selected_teamB_player 00AB  
                             i1u120_20 1D1E                               i1u120_21 1D1A  
                             i1u121_20 1D34                               i1u121_21 1D30  
                             i1u122_20 1D58                               i1u122_21 1D54  
                             i1u117_20 1CCC                               i1u117_21 1CC8  
                             i1u118_20 1CE6                               i1u118_21 1CE2  
                             i1u119_20 1D00                               i1u119_21 1CFC  
                             i2u140_40 14B4                               i2u140_41 14B0  
                             i2u141_40 14C4                               i2u141_41 14C0  
                             i2u142_40 152E                               i2u142_41 152A  
                             i2u143_40 153E                               i2u143_41 153A  
                             i2u137_40 1474                               i2u137_41 1470  
                             i2u138_40 148A                               i2u138_41 1486  
                             i2u139_40 149A                               i2u139_41 1496  
                             _PIR1bits 000F9E                               _RCONbits 000FD0  
       __size_of_UpdateAndPrintDisplay 0442                      ___wmul@multiplier 0180  
        __end_of_UpdateAndPrintDisplay 1448                               i2___wmul 209C  
                     __size_of_LCDGoto 0078                ?_LCDAddSpecialCharacter 0183  
                 _SetupDebouncingTimer 20DE                            _INTCON2bits 000FF1  
                          _INTCON3bits 000FF0                              copy_data0 1EF0  
                            copy_data1 1F10                       highIsr@portbVals 0047  
                     __size_of_InitLCD 0032                               __Hrparam 0000  
                             __Lrparam 0000                            _frisbeeChar 0093  
                    ??_InitGameObjects 0186                       __size_of___awmod 00B0  
                i2___wmul@multiplicand 0030                       __size_of_highIsr 1648  
       __end_of_LCDAddSpecialCharacter 1F98                       _acceptInterrupts 000F  
                             __ptext10 1FDC                               __ptext12 1CBA  
                             __ptext14 209C                               __ptext15 1826  
                             __ptext16 1A7E                  ?_SetupDebouncingTimer 002E  
                             __ptext17 1956                               __ptext18 1BA0  
                             __ptext19 20DE             UpdateAndPrintDisplay@i_747 0194  
           UpdateAndPrintDisplay@i_748 0196             UpdateAndPrintDisplay@j_749 0198  
                        __size_of_main 001C                          __size_of_left 0128  
                        __size_of_down 011A     _selected_teamB_player_with_frisbee 009B  
                             int$flags 0062                             _INTCONbits 000FF2  
          __end_of_AddCustomCharacters 1DEC                               intlevel1 0000  
                             intlevel2 0000                   InitGameObjects@i_758 0196  
              __size_of_InitInterrupts 0078                 ??_SetupDebouncingTimer 002E  
