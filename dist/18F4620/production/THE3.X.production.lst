

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 24 19:00:37 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4620 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  001F98                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _lcd_y
    86  001F98  01                 	db	1
    87                           
    88                           ;initializer for _lcd_x
    89  001F99  01                 	db	1
    90                           
    91                           	psect	idataBANK0
    92  001E3C                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _frisbee_target
    96  001E3C  0E                 	db	14
    97  001E3D  11                 	db	17
    98  001E3E  11                 	db	17
    99  001E3F  11                 	db	17
   100  001E40  0E                 	db	14
   101  001E41  00                 	db	0
   102  001E42  00                 	db	0
   103  001E43  00                 	db	0
   104                           
   105                           ;initializer for _frisbeeChar
   106  001E44  0E                 	db	14
   107  001E45  1F                 	db	31
   108  001E46  1F                 	db	31
   109  001E47  1F                 	db	31
   110  001E48  0E                 	db	14
   111  001E49  00                 	db	0
   112  001E4A  00                 	db	0
   113  001E4B  00                 	db	0
   114                           
   115                           ;initializer for _selected_teamB_player_with_frisbee
   116  001E4C  1F                 	db	31
   117  001E4D  15                 	db	21
   118  001E4E  0A                 	db	10
   119  001E4F  04                 	db	4
   120  001E50  0E                 	db	14
   121  001E51  1F                 	db	31
   122  001E52  0A                 	db	10
   123  001E53  1F                 	db	31
   124                           
   125                           ;initializer for _selected_teamA_player_with_frisbee
   126  001E54  1F                 	db	31
   127  001E55  15                 	db	21
   128  001E56  0A                 	db	10
   129  001E57  04                 	db	4
   130  001E58  04                 	db	4
   131  001E59  04                 	db	4
   132  001E5A  0A                 	db	10
   133  001E5B  1F                 	db	31
   134                           
   135                           ;initializer for _selected_teamB_player
   136  001E5C  11                 	db	17
   137  001E5D  15                 	db	21
   138  001E5E  0A                 	db	10
   139  001E5F  04                 	db	4
   140  001E60  0E                 	db	14
   141  001E61  1F                 	db	31
   142  001E62  0A                 	db	10
   143  001E63  1F                 	db	31
   144                           
   145                           ;initializer for _selected_teamA_player
   146  001E64  11                 	db	17
   147  001E65  15                 	db	21
   148  001E66  0A                 	db	10
   149  001E67  04                 	db	4
   150  001E68  04                 	db	4
   151  001E69  04                 	db	4
   152  001E6A  0A                 	db	10
   153  001E6B  1F                 	db	31
   154                           
   155                           ;initializer for _teamB_player
   156  001E6C  11                 	db	17
   157  001E6D  15                 	db	21
   158  001E6E  0A                 	db	10
   159  001E6F  04                 	db	4
   160  001E70  0E                 	db	14
   161  001E71  1F                 	db	31
   162  001E72  0A                 	db	10
   163  001E73  0A                 	db	10
   164                           
   165                           ;initializer for _teamA_player
   166  001E74  11                 	db	17
   167  001E75  15                 	db	21
   168  001E76  0A                 	db	10
   169  001E77  04                 	db	4
   170  001E78  04                 	db	4
   171  001E79  04                 	db	4
   172  001E7A  0A                 	db	10
   173  001E7B  0A                 	db	10
   174                           
   175                           	psect	nvBANK0
   176  0000EF                     __pnvBANK0:
   177                           	callstack 0
   178  0000EF                     _game_state:
   179                           	callstack 0
   180  0000EF                     	ds	1
   181  0000F0                     _acceptInterrupts:
   182                           	callstack 0
   183  0000F0                     	ds	1
   184  0000                     _T0CON	set	4053
   185  0000                     _TRISA	set	3986
   186  0000                     _TRISB	set	3987
   187  0000                     _T3CON	set	4017
   188  0000                     _INTCON2bits	set	4081
   189  0000                     _ADCON1	set	4033
   190  0000                     _INTCON3bits	set	4080
   191  0000                     _PORTB	set	3969
   192  0000                     _INTCONbits	set	4082
   193  0000                     _T0CONbits	set	4053
   194  0000                     _TMR0H	set	4055
   195  0000                     _TMR0L	set	4054
   196  0000                     _TRISD	set	3989
   197  0000                     _TRISEbits	set	3990
   198  0000                     _PORTD	set	3971
   199  0000                     _PORTEbits	set	3972
   200  0000                     _TMR3H	set	4019
   201  0000                     _TMR3L	set	4018
   202  0000                     _T3CONbits	set	4017
   203                           
   204                           	psect	smallconst
   205  001000                     __psmallconst:
   206                           	callstack 0
   207  001000  00                 	db	0
   208  001001                     STR_1:
   209                           
   210                           ; BSR set to: 0
   211  001001  25                 	db	37
   212  001002  64                 	db	100	;'d'
   213  001003  00                 	db	0
   214  001004  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  001C98                     __pcinit:
   220                           	callstack 0
   221  001C98                     start_initialization:
   222                           	callstack 0
   223  001C98                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK0 (64 bytes)
   227                           ; load TBLPTR registers with __pidataBANK0
   228  001C98  0E3C               	movlw	low __pidataBANK0
   229  001C9A  6EF6               	movwf	tblptrl,c
   230  001C9C  0E1E               	movlw	high __pidataBANK0
   231  001C9E  6EF7               	movwf	tblptrh,c
   232  001CA0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   233  001CA2  6EF8               	movwf	tblptru,c
   234  001CA4  EE00  F080         	lfsr	0,__pdataBANK0
   235  001CA8  EE10 F040          	lfsr	1,64
   236  001CAC                     copy_data0:
   237  001CAC  0009               	tblrd		*+
   238  001CAE  CFF5 FFEE          	movff	tablat,postinc0
   239  001CB2  50E5               	movf	postdec1,w,c
   240  001CB4  50E1               	movf	fsr1l,w,c
   241  001CB6  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to COMRAM (2 bytes)
   244                           ; load TBLPTR registers with __pidataCOMRAM
   245  001CB8  0E98               	movlw	low __pidataCOMRAM
   246  001CBA  6EF6               	movwf	tblptrl,c
   247  001CBC  0E1F               	movlw	high __pidataCOMRAM
   248  001CBE  6EF7               	movwf	tblptrh,c
   249  001CC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   250  001CC2  6EF8               	movwf	tblptru,c
   251  001CC4  0009               	tblrd		*+	;fetch initializer
   252  001CC6  CFF5 F074          	movff	tablat,__pdataCOMRAM
   253  001CCA  0009               	tblrd		*+	;fetch initializer
   254  001CCC  CFF5 F075          	movff	tablat,__pdataCOMRAM+1
   255                           
   256                           ; Clear objects allocated to BANK1 (90 bytes)
   257  001CD0  EE01  F000         	lfsr	0,__pbssBANK1
   258  001CD4  0E5A               	movlw	90
   259  001CD6                     clear_0:
   260  001CD6  6AEE               	clrf	postinc0,c
   261  001CD8  06E8               	decf	wreg,f,c
   262  001CDA  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (38 bytes)
   265  001CDC  EE00  F0C0         	lfsr	0,__pbssBANK0
   266  001CE0  0E26               	movlw	38
   267  001CE2                     clear_1:
   268  001CE2  6AEE               	clrf	postinc0,c
   269  001CE4  06E8               	decf	wreg,f,c
   270  001CE6  E1FD               	bnz	clear_1
   271                           
   272                           ; Clear objects allocated to COMRAM (8 bytes)
   273  001CE8  EE00  F06C         	lfsr	0,__pbssCOMRAM
   274  001CEC  0E08               	movlw	8
   275  001CEE                     clear_2:
   276  001CEE  6AEE               	clrf	postinc0,c
   277  001CF0  06E8               	decf	wreg,f,c
   278  001CF2  E1FD               	bnz	clear_2
   279  001CF4                     end_of_initialization:
   280                           	callstack 0
   281  001CF4                     __end_of__initialization:
   282                           	callstack 0
   283  001CF4  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   284  001CF6  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   285  001CF8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   286  001CFA  6EF8               	movwf	tblptru,c
   287  001CFC  0E10               	movlw	high __Lsmallconst
   288  001CFE  6EF7               	movwf	tblptrh,c
   289  001D00  0100               	movlb	0
   290  001D02  EF4C  F00A         	goto	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMRAM
   293  00006C                     __pbssCOMRAM:
   294                           	callstack 0
   295  00006C                     _prec:
   296                           	callstack 0
   297  00006C                     	ds	2
   298  00006E                     _flags:
   299                           	callstack 0
   300  00006E                     	ds	2
   301  000070                     _b:
   302                           	callstack 0
   303  000070                     	ds	2
   304  000072                     _a:
   305                           	callstack 0
   306  000072                     	ds	2
   307                           
   308                           	psect	dataCOMRAM
   309  000074                     __pdataCOMRAM:
   310                           	callstack 0
   311  000074                     _lcd_y:
   312                           	callstack 0
   313  000074                     	ds	1
   314  000075                     _lcd_x:
   315                           	callstack 0
   316  000075                     	ds	1
   317                           
   318                           	psect	bssBANK0
   319  0000C0                     __pbssBANK0:
   320                           	callstack 0
   321  0000C0                     _nout:
   322                           	callstack 0
   323  0000C0                     	ds	2
   324  0000C2                     _width:
   325                           	callstack 0
   326  0000C2                     	ds	2
   327  0000C4                     _c:
   328                           	callstack 0
   329  0000C4                     	ds	2
   330  0000C6                     _dbuf:
   331                           	callstack 0
   332  0000C6                     	ds	32
   333                           
   334                           	psect	dataBANK0
   335  000080                     __pdataBANK0:
   336                           	callstack 0
   337  000080                     _frisbee_target:
   338                           	callstack 0
   339  000080                     	ds	8
   340  000088                     _frisbeeChar:
   341                           	callstack 0
   342  000088                     	ds	8
   343  000090                     _selected_teamB_player_with_frisbee:
   344                           	callstack 0
   345  000090                     	ds	8
   346  000098                     _selected_teamA_player_with_frisbee:
   347                           	callstack 0
   348  000098                     	ds	8
   349  0000A0                     _selected_teamB_player:
   350                           	callstack 0
   351  0000A0                     	ds	8
   352  0000A8                     _selected_teamA_player:
   353                           	callstack 0
   354  0000A8                     	ds	8
   355  0000B0                     _teamB_player:
   356                           	callstack 0
   357  0000B0                     	ds	8
   358  0000B8                     _teamA_player:
   359                           	callstack 0
   360  0000B8                     	ds	8
   361                           
   362                           	psect	bssBANK1
   363  000100                     __pbssBANK1:
   364                           	callstack 0
   365  000100                     _frisbee_steps:
   366                           	callstack 0
   367  000100                     	ds	60
   368  00013C                     _objs:
   369                           	callstack 0
   370  00013C                     	ds	30
   371                           
   372                           	psect	cstackBANK0
   373  0000E6                     __pcstackBANK0:
   374                           	callstack 0
   375  0000E6                     main@arr:
   376                           	callstack 0
   377                           
   378                           ; 5 bytes @ 0x0
   379  0000E6                     	ds	5
   380  0000EB                     _main$554:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x5
   384  0000EB                     	ds	2
   385  0000ED                     main@i:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x7
   389  0000ED                     	ds	2
   390                           
   391                           	psect	cstackCOMRAM
   392  000001                     __pcstackCOMRAM:
   393                           	callstack 0
   394  000001                     
   395                           ; 1 bytes @ 0x0
   396  000001                     	ds	2
   397  000003                     ??_LCDCmd:
   398  000003                     ??_LCDDat:
   399  000003                     ?_strlen:
   400                           	callstack 0
   401  000003                     ?___aodiv:
   402                           	callstack 0
   403  000003                     ?___aomod:
   404                           	callstack 0
   405  000003                     fputc@c:
   406                           	callstack 0
   407  000003                     strlen@s:
   408                           	callstack 0
   409  000003                     ___aodiv@dividend:
   410                           	callstack 0
   411  000003                     ___aomod@dividend:
   412                           	callstack 0
   413                           
   414                           ; 8 bytes @ 0x2
   415  000003                     	ds	1
   416  000004                     LCDCmd@cmd:
   417                           	callstack 0
   418  000004                     LCDDat@dat:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x3
   422  000004                     	ds	1
   423  000005                     LCDGoto@p_1:
   424                           	callstack 0
   425  000005                     fputc@fp:
   426                           	callstack 0
   427  000005                     strlen@a:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x4
   431  000005                     	ds	1
   432  000006                     LCDGoto@p_2:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x5
   436  000006                     	ds	1
   437  000007                     ??_fputc:
   438  000007                     LCDStr@str:
   439                           	callstack 0
   440  000007                     LCDAddSpecialCharacter@data:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x6
   444  000007                     	ds	2
   445  000009                     LCDStr@i:
   446                           	callstack 0
   447  000009                     LCDAddSpecialCharacter@character_index:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x8
   451  000009                     	ds	1
   452  00000A                     LCDAddSpecialCharacter@i:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x9
   456  00000A                     	ds	1
   457  00000B                     ___aodiv@divisor:
   458                           	callstack 0
   459  00000B                     ___aomod@divisor:
   460                           	callstack 0
   461                           
   462                           ; 8 bytes @ 0xA
   463  00000B                     	ds	1
   464  00000C                     fputs@s:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0xB
   468  00000C                     	ds	2
   469  00000E                     fputs@fp:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0xD
   473  00000E                     	ds	2
   474  000010                     fputs@c:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xF
   478  000010                     	ds	1
   479  000011                     fputs@i:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x10
   483  000011                     	ds	2
   484  000013                     ?_pad:
   485                           	callstack 0
   486  000013                     ___aodiv@counter:
   487                           	callstack 0
   488  000013                     ___aomod@counter:
   489                           	callstack 0
   490  000013                     pad@fp:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x12
   494  000013                     	ds	1
   495  000014                     ___aodiv@sign:
   496                           	callstack 0
   497  000014                     ___aomod@sign:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x13
   501  000014                     	ds	1
   502  000015                     ?_abs:
   503                           	callstack 0
   504  000015                     pad@buf:
   505                           	callstack 0
   506  000015                     abs@a:
   507                           	callstack 0
   508  000015                     ___aodiv@quotient:
   509                           	callstack 0
   510                           
   511                           ; 8 bytes @ 0x14
   512  000015                     	ds	2
   513  000017                     ??_abs:
   514  000017                     pad@p:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x16
   518  000017                     	ds	2
   519  000019                     ??_pad:
   520                           
   521                           ; 1 bytes @ 0x18
   522  000019                     	ds	1
   523  00001A                     pad@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x19
   527  00001A                     	ds	2
   528  00001C                     pad@w:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x1B
   532  00001C                     	ds	2
   533  00001E                     ?_dtoa:
   534                           	callstack 0
   535  00001E                     dtoa@fp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x1D
   539  00001E                     	ds	2
   540  000020                     dtoa@d:
   541                           	callstack 0
   542                           
   543                           ; 8 bytes @ 0x1F
   544  000020                     	ds	8
   545  000028                     ??_dtoa:
   546                           
   547                           ; 1 bytes @ 0x27
   548  000028                     	ds	8
   549  000030                     _dtoa$1069:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2F
   553  000030                     	ds	2
   554  000032                     dtoa@p:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x31
   558  000032                     	ds	2
   559  000034                     dtoa@w:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x33
   563  000034                     	ds	2
   564  000036                     dtoa@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x35
   568  000036                     	ds	2
   569  000038                     dtoa@n:
   570                           	callstack 0
   571                           
   572                           ; 8 bytes @ 0x37
   573  000038                     	ds	8
   574  000040                     dtoa@i:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x3F
   578  000040                     	ds	2
   579  000042                     ?_vfpfcnvrt:
   580                           	callstack 0
   581  000042                     vfpfcnvrt@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x41
   585  000042                     	ds	2
   586  000044                     vfpfcnvrt@fmt:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x43
   590  000044                     	ds	2
   591  000046                     vfpfcnvrt@ap:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x45
   595  000046                     	ds	2
   596  000048                     ??_vfpfcnvrt:
   597                           
   598                           ; 1 bytes @ 0x47
   599  000048                     	ds	2
   600  00004A                     vfpfcnvrt@ll:
   601                           	callstack 0
   602                           
   603                           ; 8 bytes @ 0x49
   604  00004A                     	ds	8
   605  000052                     ?_vfprintf:
   606                           	callstack 0
   607  000052                     vfprintf@fp:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x51
   611  000052                     	ds	2
   612  000054                     vfprintf@fmt:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x53
   616  000054                     	ds	2
   617  000056                     vfprintf@ap:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x55
   621  000056                     	ds	2
   622  000058                     vfprintf@cfmt:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x57
   626  000058                     	ds	2
   627  00005A                     ?_sprintf:
   628                           	callstack 0
   629  00005A                     sprintf@s:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x59
   633  00005A                     	ds	2
   634  00005C                     sprintf@fmt:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x5B
   638  00005C                     	ds	4
   639  000060                     
   640                           ; 1 bytes @ 0x5F
   641  000060                     	ds	2
   642  000062                     sprintf@ap:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x61
   646  000062                     	ds	2
   647  000064                     sprintf@f:
   648                           	callstack 0
   649                           
   650                           ; 6 bytes @ 0x63
   651  000064                     	ds	6
   652  00006A                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x69
   655  00006A                     	ds	2
   656                           
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 132 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  i               2    7[BANK0 ] int 
   667 ;;  arr             5    0[BANK0 ] unsigned char [5]
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;Total ram usage:       11 bytes
   682 ;; Hardware stack levels required when called:   10
   683 ;; This function calls:
   684 ;;		_AddCustomCharacters
   685 ;;		_InitLCD
   686 ;;		_LCDDat
   687 ;;		_LCDGoto
   688 ;;		_LCDStr
   689 ;;		_sprintf
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text0
   696  001498                     __ptext0:
   697                           	callstack 0
   698  001498                     _main:
   699                           	callstack 21
   700  001498                     
   701                           ;main.c: 134:     a = b = c = 0;
   702  001498  0E00               	movlw	0
   703  00149A  0100               	movlb	0	; () banked
   704  00149C  6FC5               	movwf	(_c+1)& (0+255),b
   705  00149E  0E00               	movlw	0
   706  0014A0  6FC4               	movwf	_c& (0+255),b
   707  0014A2  C0C4  F070         	movff	_c,_b
   708  0014A6  C0C5  F071         	movff	_c+1,_b+1
   709  0014AA  C070  F072         	movff	_b,_a
   710  0014AE  C071  F073         	movff	_b+1,_a+1
   711                           
   712                           ;main.c: 136:     ADCON1 = 0b0111;
   713  0014B2  0E07               	movlw	7
   714  0014B4  6EC1               	movwf	193,c	;volatile
   715  0014B6                     
   716                           ; BSR set to: 0
   717                           ;main.c: 137:     INTCON2bits.RBPU = 0;
   718  0014B6  9EF1               	bcf	241,7,c	;volatile
   719                           
   720                           ;main.c: 138:     PORTB = 0;
   721  0014B8  0E00               	movlw	0
   722  0014BA  6E81               	movwf	129,c	;volatile
   723                           
   724                           ;main.c: 140:     T3CON = 0b10000001;
   725  0014BC  0E81               	movlw	129
   726  0014BE  6EB1               	movwf	177,c	;volatile
   727  0014C0                     
   728                           ; BSR set to: 0
   729                           ;main.c: 141:     TRISB = 0xff;
   730  0014C0  6893               	setf	147,c	;volatile
   731                           
   732                           ;main.c: 142:     TRISA = 0x0;
   733  0014C2  0E00               	movlw	0
   734  0014C4  6E92               	movwf	146,c	;volatile
   735                           
   736                           ;main.c: 143:     TRISD = 0x0;
   737  0014C6  0E00               	movlw	0
   738  0014C8  6E95               	movwf	149,c	;volatile
   739                           
   740                           ;main.c: 145:     game_state = GS_INACTIVE;
   741  0014CA  0E01               	movlw	1
   742  0014CC  6FEF               	movwf	_game_state& (0+255),b
   743                           
   744                           ;main.c: 147:     T0CON = 0b00010001;
   745  0014CE  0E11               	movlw	17
   746  0014D0  6ED5               	movwf	213,c	;volatile
   747                           
   748                           ;main.c: 148:     acceptInterrupts = 1;
   749  0014D2  0E01               	movlw	1
   750  0014D4  6FF0               	movwf	_acceptInterrupts& (0+255),b
   751  0014D6                     
   752                           ; BSR set to: 0
   753                           ;main.c: 150:     INTCONbits.PEIE = 1;
   754  0014D6  8CF2               	bsf	242,6,c	;volatile
   755  0014D8                     
   756                           ; BSR set to: 0
   757                           ;main.c: 151:     INTCONbits.INT0E = 1;
   758  0014D8  88F2               	bsf	242,4,c	;volatile
   759  0014DA                     
   760                           ; BSR set to: 0
   761                           ;main.c: 152:     INTCONbits.RBIE = 1;
   762  0014DA  86F2               	bsf	242,3,c	;volatile
   763  0014DC                     
   764                           ; BSR set to: 0
   765                           ;main.c: 153:     INTCONbits.T0IE = 1;
   766  0014DC  8AF2               	bsf	242,5,c	;volatile
   767  0014DE                     
   768                           ; BSR set to: 0
   769                           ;main.c: 154:     INTCON3bits.INT1E = 1;
   770  0014DE  86F0               	bsf	240,3,c	;volatile
   771  0014E0                     
   772                           ; BSR set to: 0
   773                           ;main.c: 156:     INTCON2bits.INTEDG0 = 1;
   774  0014E0  8CF1               	bsf	241,6,c	;volatile
   775  0014E2                     
   776                           ; BSR set to: 0
   777                           ;main.c: 157:     INTCON2bits.INTEDG1 = 1;
   778  0014E2  8AF1               	bsf	241,5,c	;volatile
   779  0014E4                     
   780                           ; BSR set to: 0
   781                           ;main.c: 160:     INTCONbits.RBIF = 0;
   782  0014E4  90F2               	bcf	242,0,c	;volatile
   783  0014E6                     
   784                           ; BSR set to: 0
   785                           ;main.c: 161:     INTCONbits.INT0IF = 0;
   786  0014E6  92F2               	bcf	242,1,c	;volatile
   787  0014E8                     
   788                           ; BSR set to: 0
   789                           ;main.c: 162:     INTCON3bits.INT1IF = 0;
   790  0014E8  90F0               	bcf	240,0,c	;volatile
   791  0014EA                     
   792                           ; BSR set to: 0
   793                           ;main.c: 165:     INTCONbits.GIE = 1;
   794  0014EA  8EF2               	bsf	242,7,c	;volatile
   795  0014EC                     
   796                           ; BSR set to: 0
   797                           ;main.c: 169:     InitLCD();
   798  0014EC  EC79  F00F         	call	_InitLCD	;wreg free
   799  0014F0                     
   800                           ;main.c: 170:     lcd_x = 1;
   801  0014F0  0E01               	movlw	1
   802  0014F2  6E75               	movwf	_lcd_x^0,c
   803  0014F4                     
   804                           ;main.c: 171:     lcd_y = 1;
   805  0014F4  0E01               	movlw	1
   806  0014F6  6E74               	movwf	_lcd_y^0,c
   807  0014F8                     
   808                           ;main.c: 172:     AddCustomCharacters();
   809  0014F8  EC13  F00E         	call	_AddCustomCharacters	;wreg free
   810  0014FC                     l2595:
   811                           
   812                           ;main.c: 176:     {;main.c: 177:         char arr[5];;main.c: 179:         lcd_x = 1;
   813  0014FC  0E01               	movlw	1
   814  0014FE  6E75               	movwf	_lcd_x^0,c
   815  001500                     
   816                           ;main.c: 180:         lcd_y = 1;
   817  001500  0E01               	movlw	1
   818  001502  6E74               	movwf	_lcd_y^0,c
   819  001504                     
   820                           ;main.c: 181:         LCDGoto(lcd_x, lcd_y);
   821  001504  C074  F005         	movff	_lcd_y,LCDGoto@p_1
   822  001508  5075               	movf	_lcd_x^0,w,c
   823  00150A  ECD9  F00D         	call	_LCDGoto
   824  00150E                     
   825                           ;main.c: 182:         for (int i = 7; i >= 0; i--) {
   826  00150E  0E00               	movlw	0
   827  001510  0100               	movlb	0	; () banked
   828  001512  6FEE               	movwf	(main@i+1)& (0+255),b
   829  001514  0E07               	movlw	7
   830  001516  6FED               	movwf	main@i& (0+255),b
   831  001518                     l2607:
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 183:             LCDDat(((PORTB >> i) & 1) ? '1' : '0');
   835  001518  C0ED  F06A         	movff	main@i,??_main
   836  00151C  CF81 F06B          	movff	3969,??_main+1	;volatile
   837  001520  2A6A               	incf	??_main^0,f,c
   838  001522  EF95  F00A         	goto	u2054
   839  001526                     u2055:
   840  001526  90D8               	bcf	status,0,c
   841  001528  326B               	rrcf	(??_main+1)^0,f,c
   842  00152A                     u2054:
   843  00152A  2E6A               	decfsz	??_main^0,f,c
   844  00152C  EF93  F00A         	goto	u2055
   845  001530  B06B               	btfsc	(??_main+1)^0,0,c
   846  001532  EF9D  F00A         	goto	u2061
   847  001536  EF9F  F00A         	goto	u2060
   848  00153A                     u2061:
   849  00153A  EFA6  F00A         	goto	l2611
   850  00153E                     u2060:
   851  00153E  0E00               	movlw	0
   852  001540  0100               	movlb	0	; () banked
   853  001542  6FEC               	movwf	(_main$554+1)& (0+255),b
   854  001544  0E30               	movlw	48
   855  001546  6FEB               	movwf	_main$554& (0+255),b
   856  001548  EFAB  F00A         	goto	l2613
   857  00154C                     l2611:
   858  00154C  0E00               	movlw	0
   859  00154E  0100               	movlb	0	; () banked
   860  001550  6FEC               	movwf	(_main$554+1)& (0+255),b
   861  001552  0E31               	movlw	49
   862  001554  6FEB               	movwf	_main$554& (0+255),b
   863  001556                     l2613:
   864                           
   865                           ; BSR set to: 0
   866  001556  51EB               	movf	_main$554& (0+255),w,b
   867  001558  EC92  F00F         	call	_LCDDat
   868  00155C                     
   869                           ;main.c: 184:         }
   870  00155C  0100               	movlb	0	; () banked
   871  00155E  07ED               	decf	main@i& (0+255),f,b
   872  001560  A0D8               	btfss	status,0,c
   873  001562  07EE               	decf	(main@i+1)& (0+255),f,b
   874  001564                     
   875                           ; BSR set to: 0
   876  001564  BFEE               	btfsc	(main@i+1)& (0+255),7,b
   877  001566  EFB9  F00A         	goto	u2070
   878  00156A  EFB7  F00A         	goto	u2071
   879  00156E                     u2071:
   880  00156E  EF8C  F00A         	goto	l2607
   881  001572                     u2070:
   882  001572                     
   883                           ; BSR set to: 0
   884                           ;main.c: 186:         lcd_y = 2;
   885  001572  0E02               	movlw	2
   886  001574  6E74               	movwf	_lcd_y^0,c
   887                           
   888                           ;main.c: 187:         lcd_x = 1;
   889  001576  0E01               	movlw	1
   890  001578  6E75               	movwf	_lcd_x^0,c
   891  00157A                     
   892                           ; BSR set to: 0
   893                           ;main.c: 188:         LCDGoto(lcd_x, lcd_y);
   894  00157A  C074  F005         	movff	_lcd_y,LCDGoto@p_1
   895  00157E  5075               	movf	_lcd_x^0,w,c
   896  001580  ECD9  F00D         	call	_LCDGoto
   897  001584                     
   898                           ;main.c: 189:         sprintf(arr, "%d", a);
   899  001584  0EE6               	movlw	low main@arr
   900  001586  6E5A               	movwf	sprintf@s^0,c
   901  001588  0E00               	movlw	high main@arr
   902  00158A  6E5B               	movwf	(sprintf@s+1)^0,c
   903  00158C  0E01               	movlw	low STR_1
   904  00158E  6E5C               	movwf	sprintf@fmt^0,c
   905  001590  0E10               	movlw	high STR_1
   906  001592  6E5D               	movwf	(sprintf@fmt+1)^0,c
   907  001594  C072  F05E         	movff	_a,?_sprintf+4
   908  001598  C073  F05F         	movff	_a+1,?_sprintf+5
   909  00159C  ECB4  F00E         	call	_sprintf	;wreg free
   910  0015A0                     
   911                           ;main.c: 190:         LCDStr(arr);
   912  0015A0  0EE6               	movlw	low main@arr
   913  0015A2  6E07               	movwf	LCDStr@str^0,c
   914  0015A4  0E00               	movlw	high main@arr
   915  0015A6  6E08               	movwf	(LCDStr@str+1)^0,c
   916  0015A8  EC9F  F00D         	call	_LCDStr	;wreg free
   917  0015AC                     
   918                           ;main.c: 192:         lcd_y = 3;
   919  0015AC  0E03               	movlw	3
   920  0015AE  6E74               	movwf	_lcd_y^0,c
   921  0015B0                     
   922                           ;main.c: 193:         lcd_x = 1;
   923  0015B0  0E01               	movlw	1
   924  0015B2  6E75               	movwf	_lcd_x^0,c
   925  0015B4                     
   926                           ;main.c: 194:         LCDGoto(lcd_x, lcd_y);
   927  0015B4  C074  F005         	movff	_lcd_y,LCDGoto@p_1
   928  0015B8  5075               	movf	_lcd_x^0,w,c
   929  0015BA  ECD9  F00D         	call	_LCDGoto
   930  0015BE                     
   931                           ;main.c: 195:         sprintf(arr, "%d", b);
   932  0015BE  0EE6               	movlw	low main@arr
   933  0015C0  6E5A               	movwf	sprintf@s^0,c
   934  0015C2  0E00               	movlw	high main@arr
   935  0015C4  6E5B               	movwf	(sprintf@s+1)^0,c
   936  0015C6  0E01               	movlw	low STR_1
   937  0015C8  6E5C               	movwf	sprintf@fmt^0,c
   938  0015CA  0E10               	movlw	high STR_1
   939  0015CC  6E5D               	movwf	(sprintf@fmt+1)^0,c
   940  0015CE  C070  F05E         	movff	_b,?_sprintf+4
   941  0015D2  C071  F05F         	movff	_b+1,?_sprintf+5
   942  0015D6  ECB4  F00E         	call	_sprintf	;wreg free
   943  0015DA                     
   944                           ;main.c: 196:         LCDStr(arr);
   945  0015DA  0EE6               	movlw	low main@arr
   946  0015DC  6E07               	movwf	LCDStr@str^0,c
   947  0015DE  0E00               	movlw	high main@arr
   948  0015E0  6E08               	movwf	(LCDStr@str+1)^0,c
   949  0015E2  EC9F  F00D         	call	_LCDStr	;wreg free
   950                           
   951                           ;main.c: 198:         lcd_y = 4;
   952  0015E6  0E04               	movlw	4
   953  0015E8  6E74               	movwf	_lcd_y^0,c
   954                           
   955                           ;main.c: 199:         lcd_x = 1;
   956  0015EA  0E01               	movlw	1
   957  0015EC  6E75               	movwf	_lcd_x^0,c
   958  0015EE                     
   959                           ;main.c: 200:         LCDGoto(lcd_x, lcd_y);
   960  0015EE  C074  F005         	movff	_lcd_y,LCDGoto@p_1
   961  0015F2  5075               	movf	_lcd_x^0,w,c
   962  0015F4  ECD9  F00D         	call	_LCDGoto
   963  0015F8                     
   964                           ;main.c: 201:         sprintf(arr, "%d", c);
   965  0015F8  0EE6               	movlw	low main@arr
   966  0015FA  6E5A               	movwf	sprintf@s^0,c
   967  0015FC  0E00               	movlw	high main@arr
   968  0015FE  6E5B               	movwf	(sprintf@s+1)^0,c
   969  001600  0E01               	movlw	low STR_1
   970  001602  6E5C               	movwf	sprintf@fmt^0,c
   971  001604  0E10               	movlw	high STR_1
   972  001606  6E5D               	movwf	(sprintf@fmt+1)^0,c
   973  001608  C0C4  F05E         	movff	_c,?_sprintf+4
   974  00160C  C0C5  F05F         	movff	_c+1,?_sprintf+5
   975  001610  ECB4  F00E         	call	_sprintf	;wreg free
   976  001614                     
   977                           ;main.c: 202:         LCDStr(arr);
   978  001614  0EE6               	movlw	low main@arr
   979  001616  6E07               	movwf	LCDStr@str^0,c
   980  001618  0E00               	movlw	high main@arr
   981  00161A  6E08               	movwf	(LCDStr@str+1)^0,c
   982  00161C  EC9F  F00D         	call	_LCDStr	;wreg free
   983  001620  EF7E  F00A         	goto	l2595
   984  001624  EF07  F000         	goto	start
   985  001628                     __end_of_main:
   986                           	callstack 0
   987                           
   988 ;; *************** function _sprintf *****************
   989 ;; Defined at:
   990 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_sprintf.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  s               2   89[COMRAM] PTR unsigned char 
   993 ;;		 -> main@arr(5), 
   994 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   995 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  f               6   99[COMRAM] struct _IO_FILE
   998 ;;  ap              2   97[COMRAM] PTR void [1]
   999 ;;		 -> ?_sprintf(2), 
  1000 ;;  ret             2    0        int 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  2   89[COMRAM] int 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1010 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;Total ram usage:       16 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    9
  1017 ;; This function calls:
  1018 ;;		_vfprintf
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text1
  1025  001D68                     __ptext1:
  1026                           	callstack 0
  1027  001D68                     _sprintf:
  1028                           	callstack 21
  1029  001D68  0E5E               	movlw	low (?_sprintf+4)
  1030  001D6A  6E62               	movwf	sprintf@ap^0,c
  1031  001D6C  0E00               	movlw	high (?_sprintf+4)
  1032  001D6E  6E63               	movwf	(sprintf@ap+1)^0,c
  1033  001D70  C05A  F064         	movff	sprintf@s,sprintf@f
  1034  001D74  C05B  F065         	movff	sprintf@s+1,sprintf@f+1
  1035  001D78  0E00               	movlw	0
  1036  001D7A  6E67               	movwf	(sprintf@f+3)^0,c
  1037  001D7C  0E00               	movlw	0
  1038  001D7E  6E66               	movwf	(sprintf@f+2)^0,c
  1039  001D80  0E00               	movlw	0
  1040  001D82  6E69               	movwf	(sprintf@f+5)^0,c
  1041  001D84  0E00               	movlw	0
  1042  001D86  6E68               	movwf	(sprintf@f+4)^0,c
  1043  001D88  0E64               	movlw	low sprintf@f
  1044  001D8A  6E52               	movwf	vfprintf@fp^0,c
  1045  001D8C  0E00               	movlw	high sprintf@f
  1046  001D8E  6E53               	movwf	(vfprintf@fp+1)^0,c
  1047  001D90  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
  1048  001D94  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1049  001D98  0E62               	movlw	low sprintf@ap
  1050  001D9A  6E56               	movwf	vfprintf@ap^0,c
  1051  001D9C  0E00               	movlw	high sprintf@ap
  1052  001D9E  6E57               	movwf	(vfprintf@ap+1)^0,c
  1053  001DA0  EC83  F00E         	call	_vfprintf	;wreg free
  1054  001DA4  5066               	movf	(sprintf@f+2)^0,w,c
  1055  001DA6  245A               	addwf	sprintf@s^0,w,c
  1056  001DA8  6ED9               	movwf	fsr2l,c
  1057  001DAA  5067               	movf	(sprintf@f+3)^0,w,c
  1058  001DAC  205B               	addwfc	(sprintf@s+1)^0,w,c
  1059  001DAE  6EDA               	movwf	fsr2h,c
  1060  001DB0  0E00               	movlw	0
  1061  001DB2  6EDF               	movwf	indf2,c
  1062  001DB4  0012               	return		;funcret
  1063  001DB6                     __end_of_sprintf:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function _vfprintf *****************
  1067 ;; Defined at:
  1068 ;;		line 1390 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1071 ;;		 -> sprintf@f(6), 
  1072 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1073 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1074 ;;  ap              2   85[COMRAM] PTR PTR void 
  1075 ;;		 -> sprintf@ap(2), 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1078 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  2   81[COMRAM] int 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1088 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;Total ram usage:        8 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    8
  1095 ;; This function calls:
  1096 ;;		_vfpfcnvrt
  1097 ;; This function is called by:
  1098 ;;		_sprintf
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text2
  1103  001D06                     __ptext2:
  1104                           	callstack 0
  1105  001D06                     _vfprintf:
  1106                           	callstack 21
  1107  001D06                     
  1108                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  1109  001D06  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1110  001D0A  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1111  001D0E                     
  1112                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1113  001D0E  0E00               	movlw	0
  1114  001D10  0100               	movlb	0	; () banked
  1115  001D12  6FC1               	movwf	(_nout+1)& (0+255),b
  1116  001D14  0E00               	movlw	0
  1117  001D16  6FC0               	movwf	_nout& (0+255),b
  1118                           
  1119                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1120  001D18  EFA1  F00E         	goto	l2501
  1121  001D1C                     l2499:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1125  001D1C  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  1126  001D20  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1127  001D24  0E58               	movlw	low vfprintf@cfmt
  1128  001D26  6E44               	movwf	vfpfcnvrt@fmt^0,c
  1129  001D28  0E00               	movlw	high vfprintf@cfmt
  1130  001D2A  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1131  001D2C  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  1132  001D30  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1133  001D34  EC72  F009         	call	_vfpfcnvrt	;wreg free
  1134  001D38  5042               	movf	?_vfpfcnvrt^0,w,c
  1135  001D3A  0100               	movlb	0	; () banked
  1136  001D3C  27C0               	addwf	_nout& (0+255),f,b
  1137  001D3E  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  1138  001D40  23C1               	addwfc	(_nout+1)& (0+255),f,b
  1139  001D42                     l2501:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1143  001D42  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1144  001D46  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1145  001D4A                     	if	0	;tblptru may be non-zero
  1146  001D4A                     	endif
  1147  001D4A                     	if	0	;tblptru may be non-zero
  1148  001D4A                     	endif
  1149  001D4A  0008               	tblrd		*
  1150  001D4C  50F5               	movf	tablat,w,c
  1151  001D4E  0900               	iorlw	0
  1152  001D50  A4D8               	btfss	status,2,c
  1153  001D52  EFAD  F00E         	goto	u2011
  1154  001D56  EFAF  F00E         	goto	u2010
  1155  001D5A                     u2011:
  1156  001D5A  EF8E  F00E         	goto	l2499
  1157  001D5E                     u2010:
  1158  001D5E                     
  1159                           ; BSR set to: 0
  1160                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  1161  001D5E  C0C0  F052         	movff	_nout,?_vfprintf
  1162  001D62  C0C1  F053         	movff	_nout+1,?_vfprintf+1
  1163  001D66                     
  1164                           ; BSR set to: 0
  1165  001D66  0012               	return		;funcret
  1166  001D68                     __end_of_vfprintf:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _vfpfcnvrt *****************
  1170 ;; Defined at:
  1171 ;;		line 692 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  1174 ;;		 -> sprintf@f(6), 
  1175 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  1176 ;;		 -> vfprintf@cfmt(2), 
  1177 ;;  ap              2   69[COMRAM] PTR PTR void 
  1178 ;;		 -> sprintf@ap(2), 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  ll              8   73[COMRAM] long long 
  1181 ;;  llu             8    0        unsigned long long 
  1182 ;;  f               4    0        unsigned long long 
  1183 ;;  vp              3    0        PTR void 
  1184 ;;  ct              3    0        unsigned char [3]
  1185 ;;  cp              3    0        PTR unsigned char 
  1186 ;;  i               2    0        int 
  1187 ;;  done            2    0        int 
  1188 ;;  c               1    0        unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2   65[COMRAM] int 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:       16 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    7
  1205 ;; This function calls:
  1206 ;;		_dtoa
  1207 ;;		_fputc
  1208 ;; This function is called by:
  1209 ;;		_vfprintf
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text3
  1214  0012E4                     __ptext3:
  1215                           	callstack 0
  1216  0012E4                     _vfpfcnvrt:
  1217                           	callstack 21
  1218  0012E4                     
  1219                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  1220  0012E4  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1221  0012E8  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1222  0012EC  CFDE FFF6          	movff	postinc2,tblptrl
  1223  0012F0  CFDD FFF7          	movff	postdec2,tblptrh
  1224  0012F4                     	if	0	;tblptru may be non-zero
  1225  0012F4                     	endif
  1226  0012F4                     	if	0	;tblptru may be non-zero
  1227  0012F4                     	endif
  1228  0012F4  0008               	tblrd		*
  1229  0012F6  50F5               	movf	tablat,w,c
  1230  0012F8  0A25               	xorlw	37
  1231  0012FA  A4D8               	btfss	status,2,c
  1232  0012FC  EF82  F009         	goto	u1961
  1233  001300  EF84  F009         	goto	u1960
  1234  001304                     u1961:
  1235  001304  EF30  F00A         	goto	l2471
  1236  001308                     u1960:
  1237  001308                     
  1238                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1239  001308  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1240  00130C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1241  001310  2ADE               	incf	postinc2,f,c
  1242  001312  0E00               	movlw	0
  1243  001314  22DD               	addwfc	postdec2,f,c
  1244  001316                     
  1245                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  1246  001316  0E00               	movlw	0
  1247  001318  0100               	movlb	0	; () banked
  1248  00131A  6FC3               	movwf	(_width+1)& (0+255),b
  1249  00131C  0E00               	movlw	0
  1250  00131E  6FC2               	movwf	_width& (0+255),b
  1251  001320  C0C2  F06E         	movff	_width,_flags
  1252  001324  C0C3  F06F         	movff	_width+1,_flags+1
  1253  001328                     
  1254                           ; BSR set to: 0
  1255                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  1256  001328  686C               	setf	_prec^0,c
  1257  00132A  686D               	setf	(_prec+1)^0,c
  1258  00132C                     
  1259                           ; BSR set to: 0
  1260                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  1261  00132C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1262  001330  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1263  001334  CFDE FFF6          	movff	postinc2,tblptrl
  1264  001338  CFDD FFF7          	movff	postdec2,tblptrh
  1265  00133C                     	if	0	;tblptru may be non-zero
  1266  00133C                     	endif
  1267  00133C                     	if	0	;tblptru may be non-zero
  1268  00133C                     	endif
  1269  00133C  0008               	tblrd		*
  1270  00133E  50F5               	movf	tablat,w,c
  1271  001340  0A64               	xorlw	100
  1272  001342  B4D8               	btfsc	status,2,c
  1273  001344  EFA6  F009         	goto	u1971
  1274  001348  EFA8  F009         	goto	u1970
  1275  00134C                     u1971:
  1276  00134C  EFBA  F009         	goto	l2449
  1277  001350                     u1970:
  1278  001350                     
  1279                           ; BSR set to: 0
  1280  001350  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1281  001354  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1282  001358  CFDE FFF6          	movff	postinc2,tblptrl
  1283  00135C  CFDD FFF7          	movff	postdec2,tblptrh
  1284  001360                     	if	0	;tblptru may be non-zero
  1285  001360                     	endif
  1286  001360                     	if	0	;tblptru may be non-zero
  1287  001360                     	endif
  1288  001360  0008               	tblrd		*
  1289  001362  50F5               	movf	tablat,w,c
  1290  001364  0A69               	xorlw	105
  1291  001366  A4D8               	btfss	status,2,c
  1292  001368  EFB8  F009         	goto	u1981
  1293  00136C  EFBA  F009         	goto	u1980
  1294  001370                     u1981:
  1295  001370  EFFA  F009         	goto	l2455
  1296  001374                     u1980:
  1297  001374                     l2449:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  1301  001374  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1302  001378  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1303  00137C  2ADE               	incf	postinc2,f,c
  1304  00137E  0E00               	movlw	0
  1305  001380  22DD               	addwfc	postdec2,f,c
  1306                           
  1307                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  1308  001382  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1309  001386  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1310  00138A  CFDF F048          	movff	indf2,??_vfpfcnvrt
  1311  00138E  0E02               	movlw	2
  1312  001390  26DE               	addwf	postinc2,f,c
  1313  001392  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  1314  001396  0E00               	movlw	0
  1315  001398  22DD               	addwfc	postdec2,f,c
  1316  00139A  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1317  00139E  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1318  0013A2  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  1319  0013A6  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  1320  0013AA  0E00               	movlw	0
  1321  0013AC  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1322  0013AE  0EFF               	movlw	-1
  1323  0013B0  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  1324  0013B2  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  1325  0013B4  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  1326  0013B6  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  1327  0013B8  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  1328  0013BA  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  1329  0013BC                     
  1330                           ; BSR set to: 0
  1331                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  1332  0013BC  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1333  0013C0  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1334  0013C4  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  1335  0013C8  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1336  0013CC  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1337  0013D0  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1338  0013D4  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1339  0013D8  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1340  0013DC  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1341  0013E0  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1342  0013E4  EC03  F008         	call	_dtoa	;wreg free
  1343  0013E8  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  1344  0013EC  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1345  0013F0  EF4B  F00A         	goto	l940
  1346  0013F4                     l2455:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  1350  0013F4  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1351  0013F8  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1352  0013FC  CFDE FFF6          	movff	postinc2,tblptrl
  1353  001400  CFDD FFF7          	movff	postdec2,tblptrh
  1354  001404                     	if	0	;tblptru may be non-zero
  1355  001404                     	endif
  1356  001404                     	if	0	;tblptru may be non-zero
  1357  001404                     	endif
  1358  001404  0008               	tblrd		*
  1359  001406  50F5               	movf	tablat,w,c
  1360  001408  0A25               	xorlw	37
  1361  00140A  A4D8               	btfss	status,2,c
  1362  00140C  EF0A  F00A         	goto	u1991
  1363  001410  EF0C  F00A         	goto	u1990
  1364  001414                     u1991:
  1365  001414  EF23  F00A         	goto	l2465
  1366  001418                     u1990:
  1367  001418                     
  1368                           ; BSR set to: 0
  1369                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  1370  001418  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1371  00141C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1372  001420  2ADE               	incf	postinc2,f,c
  1373  001422  0E00               	movlw	0
  1374  001424  22DD               	addwfc	postdec2,f,c
  1375  001426                     
  1376                           ; BSR set to: 0
  1377                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  1378  001426  0E00               	movlw	0
  1379  001428  6E04               	movwf	(fputc@c+1)^0,c
  1380  00142A  0E25               	movlw	37
  1381  00142C  6E03               	movwf	fputc@c^0,c
  1382  00142E  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1383  001432  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1384  001436  EC8A  F00C         	call	_fputc	;wreg free
  1385  00143A                     l2461:
  1386                           
  1387                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  1388  00143A  0E00               	movlw	0
  1389  00143C  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  1390  00143E  0E01               	movlw	1
  1391  001440  6E42               	movwf	?_vfpfcnvrt^0,c
  1392  001442  EF4B  F00A         	goto	l940
  1393  001446                     l2465:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  1397  001446  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1398  00144A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1399  00144E  2ADE               	incf	postinc2,f,c
  1400  001450  0E00               	movlw	0
  1401  001452  22DD               	addwfc	postdec2,f,c
  1402  001454                     
  1403                           ; BSR set to: 0
  1404                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  1405  001454  0E00               	movlw	0
  1406  001456  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  1407  001458  0E00               	movlw	0
  1408  00145A  6E42               	movwf	?_vfpfcnvrt^0,c
  1409  00145C  EF4B  F00A         	goto	l940
  1410  001460                     l2471:
  1411                           
  1412                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  1413  001460  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414  001464  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415  001468  CFDE FFF6          	movff	postinc2,tblptrl
  1416  00146C  CFDD FFF7          	movff	postdec2,tblptrh
  1417  001470                     	if	0	;tblptru may be non-zero
  1418  001470                     	endif
  1419  001470                     	if	0	;tblptru may be non-zero
  1420  001470                     	endif
  1421  001470  0008               	tblrd		*
  1422  001472  50F5               	movf	tablat,w,c
  1423  001474  6E03               	movwf	fputc@c^0,c
  1424  001476  6A04               	clrf	(fputc@c+1)^0,c
  1425  001478  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1426  00147C  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1427  001480  EC8A  F00C         	call	_fputc	;wreg free
  1428  001484                     
  1429                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  1430  001484  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1431  001488  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1432  00148C  2ADE               	incf	postinc2,f,c
  1433  00148E  0E00               	movlw	0
  1434  001490  22DD               	addwfc	postdec2,f,c
  1435  001492  EF1D  F00A         	goto	l2461
  1436  001496                     l940:
  1437  001496  0012               	return		;funcret
  1438  001498                     __end_of_vfpfcnvrt:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _dtoa *****************
  1442 ;; Defined at:
  1443 ;;		line 287 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1446 ;;		 -> sprintf@f(6), 
  1447 ;;  d               8   31[COMRAM] long long 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  n               8   55[COMRAM] long long 
  1450 ;;  i               2   63[COMRAM] int 
  1451 ;;  s               2   53[COMRAM] int 
  1452 ;;  w               2   51[COMRAM] int 
  1453 ;;  p               2   49[COMRAM] int 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2   29[COMRAM] int 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1463 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;Total ram usage:       36 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    6
  1470 ;; This function calls:
  1471 ;;		___aodiv
  1472 ;;		___aomod
  1473 ;;		_abs
  1474 ;;		_pad
  1475 ;; This function is called by:
  1476 ;;		_vfpfcnvrt
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text4
  1481  001006                     __ptext4:
  1482                           	callstack 0
  1483  001006                     _dtoa:
  1484                           	callstack 21
  1485  001006                     
  1486                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.30/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .30/pic/sources/c99/common/doprnt.c: 293:     n = d;
  1487  001006  C020  F038         	movff	dtoa@d,dtoa@n
  1488  00100A  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  1489  00100E  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  1490  001012  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  1491  001016  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  1492  00101A  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  1493  00101E  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  1494  001022  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  1495  001026                     
  1496                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  1497  001026  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1498  001028  EF18  F008         	goto	u1781
  1499  00102C  EF1B  F008         	goto	u1780
  1500  001030                     u1781:
  1501  001030  0E01               	movlw	1
  1502  001032  EF1C  F008         	goto	u1790
  1503  001036                     u1780:
  1504  001036  0E00               	movlw	0
  1505  001038                     u1790:
  1506  001038  6E36               	movwf	dtoa@s^0,c
  1507  00103A  6A37               	clrf	(dtoa@s+1)^0,c
  1508                           
  1509                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1510  00103C  5036               	movf	dtoa@s^0,w,c
  1511  00103E  1037               	iorwf	(dtoa@s+1)^0,w,c
  1512  001040  B4D8               	btfsc	status,2,c
  1513  001042  EF25  F008         	goto	u1801
  1514  001046  EF27  F008         	goto	u1800
  1515  00104A                     u1801:
  1516  00104A  EF37  F008         	goto	l2349
  1517  00104E                     u1800:
  1518  00104E                     
  1519                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1520  00104E  1E3F               	comf	(dtoa@n+7)^0,f,c
  1521  001050  1E3E               	comf	(dtoa@n+6)^0,f,c
  1522  001052  1E3D               	comf	(dtoa@n+5)^0,f,c
  1523  001054  1E3C               	comf	(dtoa@n+4)^0,f,c
  1524  001056  1E3B               	comf	(dtoa@n+3)^0,f,c
  1525  001058  1E3A               	comf	(dtoa@n+2)^0,f,c
  1526  00105A  1E39               	comf	(dtoa@n+1)^0,f,c
  1527  00105C  6C38               	negf	dtoa@n^0,c
  1528  00105E  0E00               	movlw	0
  1529  001060  2239               	addwfc	(dtoa@n+1)^0,f,c
  1530  001062  223A               	addwfc	(dtoa@n+2)^0,f,c
  1531  001064  223B               	addwfc	(dtoa@n+3)^0,f,c
  1532  001066  223C               	addwfc	(dtoa@n+4)^0,f,c
  1533  001068  223D               	addwfc	(dtoa@n+5)^0,f,c
  1534  00106A  223E               	addwfc	(dtoa@n+6)^0,f,c
  1535  00106C  223F               	addwfc	(dtoa@n+7)^0,f,c
  1536  00106E                     l2349:
  1537                           
  1538                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  1539  00106E  BE6D               	btfsc	(_prec+1)^0,7,c
  1540  001070  EF3C  F008         	goto	u1811
  1541  001074  EF3E  F008         	goto	u1810
  1542  001078                     u1811:
  1543  001078  EF3F  F008         	goto	l2353
  1544  00107C                     u1810:
  1545  00107C                     
  1546                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  1547  00107C  926E               	bcf	_flags^0,1,c
  1548  00107E                     l2353:
  1549                           
  1550                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  1551  00107E  BE6D               	btfsc	(_prec+1)^0,7,c
  1552  001080  EF4C  F008         	goto	u1820
  1553  001084  506D               	movf	(_prec+1)^0,w,c
  1554  001086  E106               	bnz	u1821
  1555  001088  046C               	decf	_prec^0,w,c
  1556  00108A  B0D8               	btfsc	status,0,c
  1557  00108C  EF4A  F008         	goto	u1821
  1558  001090  EF4C  F008         	goto	u1820
  1559  001094                     u1821:
  1560  001094  EF52  F008         	goto	l913
  1561  001098                     u1820:
  1562  001098  0E00               	movlw	0
  1563  00109A  6E33               	movwf	(dtoa@p+1)^0,c
  1564  00109C  0E01               	movlw	1
  1565  00109E  6E32               	movwf	dtoa@p^0,c
  1566  0010A0  EF56  F008         	goto	l915
  1567  0010A4                     l913:
  1568  0010A4  C06C  F032         	movff	_prec,dtoa@p
  1569  0010A8  C06D  F033         	movff	_prec+1,dtoa@p+1
  1570  0010AC                     l915:
  1571                           
  1572                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1573  0010AC  C0C2  F034         	movff	_width,dtoa@w
  1574  0010B0  C0C3  F035         	movff	_width+1,dtoa@w+1
  1575  0010B4                     
  1576                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  1577  0010B4  5036               	movf	dtoa@s^0,w,c
  1578  0010B6  1037               	iorwf	(dtoa@s+1)^0,w,c
  1579  0010B8  A4D8               	btfss	status,2,c
  1580  0010BA  EF61  F008         	goto	u1831
  1581  0010BE  EF63  F008         	goto	u1830
  1582  0010C2                     u1831:
  1583  0010C2  EF6A  F008         	goto	l2361
  1584  0010C6                     u1830:
  1585  0010C6  A46E               	btfss	_flags^0,2,c
  1586  0010C8  EF68  F008         	goto	u1841
  1587  0010CC  EF6A  F008         	goto	u1840
  1588  0010D0                     u1841:
  1589  0010D0  EF6D  F008         	goto	l2363
  1590  0010D4                     u1840:
  1591  0010D4                     l2361:
  1592                           
  1593                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 306:         --w;
  1594  0010D4  0634               	decf	dtoa@w^0,f,c
  1595  0010D6  A0D8               	btfss	status,0,c
  1596  0010D8  0635               	decf	(dtoa@w+1)^0,f,c
  1597  0010DA                     l2363:
  1598                           
  1599                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  1600  0010DA  0E00               	movlw	0
  1601  0010DC  6E41               	movwf	(dtoa@i+1)^0,c
  1602  0010DE  0E1F               	movlw	31
  1603  0010E0  6E40               	movwf	dtoa@i^0,c
  1604  0010E2                     
  1605                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  1606  0010E2  0E00               	movlw	0
  1607  0010E4  0100               	movlb	0	; () banked
  1608  0010E6  6FE5               	movwf	(_dbuf+31)& (0+255),b
  1609                           
  1610                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1611  0010E8  EFF2  F008         	goto	l2377
  1612  0010EC                     l2367:
  1613                           
  1614                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 313:         --i;
  1615  0010EC  0640               	decf	dtoa@i^0,f,c
  1616  0010EE  A0D8               	btfss	status,0,c
  1617  0010F0  0641               	decf	(dtoa@i+1)^0,f,c
  1618  0010F2                     
  1619                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  1620  0010F2  0EC6               	movlw	low _dbuf
  1621  0010F4  2440               	addwf	dtoa@i^0,w,c
  1622  0010F6  6ED9               	movwf	fsr2l,c
  1623  0010F8  0E00               	movlw	high _dbuf
  1624  0010FA  2041               	addwfc	(dtoa@i+1)^0,w,c
  1625  0010FC  6EDA               	movwf	fsr2h,c
  1626  0010FE  C038  F003         	movff	dtoa@n,___aomod@dividend
  1627  001102  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  1628  001106  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  1629  00110A  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  1630  00110E  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  1631  001112  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  1632  001116  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  1633  00111A  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  1634  00111E  0E0A               	movlw	10
  1635  001120  6E0B               	movwf	___aomod@divisor^0,c
  1636  001122  0E00               	movlw	0
  1637  001124  6E0C               	movwf	(___aomod@divisor+1)^0,c
  1638  001126  0E00               	movlw	0
  1639  001128  6E0D               	movwf	(___aomod@divisor+2)^0,c
  1640  00112A  0E00               	movlw	0
  1641  00112C  6E0E               	movwf	(___aomod@divisor+3)^0,c
  1642  00112E  0E00               	movlw	0
  1643  001130  6E0F               	movwf	(___aomod@divisor+4)^0,c
  1644  001132  0E00               	movlw	0
  1645  001134  6E10               	movwf	(___aomod@divisor+5)^0,c
  1646  001136  0E00               	movlw	0
  1647  001138  6E11               	movwf	(___aomod@divisor+6)^0,c
  1648  00113A  0E00               	movlw	0
  1649  00113C  6E12               	movwf	(___aomod@divisor+7)^0,c
  1650  00113E  ECD8  F00B         	call	___aomod	;wreg free
  1651  001142  C003  F028         	movff	?___aomod,??_dtoa
  1652  001146  C004  F029         	movff	?___aomod+1,??_dtoa+1
  1653  00114A  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  1654  00114E  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  1655  001152  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  1656  001156  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  1657  00115A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  1658  00115E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  1659  001162  C028  F015         	movff	??_dtoa,abs@a
  1660  001166  C02A  F016         	movff	??_dtoa+2,abs@a+1
  1661  00116A  EC3E  F00F         	call	_abs	;wreg free
  1662  00116E  5015               	movf	?_abs^0,w,c
  1663  001170  0F30               	addlw	48
  1664  001172  6EDF               	movwf	indf2,c
  1665  001174                     
  1666                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 315:         --p;
  1667  001174  0632               	decf	dtoa@p^0,f,c
  1668  001176  A0D8               	btfss	status,0,c
  1669  001178  0633               	decf	(dtoa@p+1)^0,f,c
  1670  00117A                     
  1671                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 316:         --w;
  1672  00117A  0634               	decf	dtoa@w^0,f,c
  1673  00117C  A0D8               	btfss	status,0,c
  1674  00117E  0635               	decf	(dtoa@w+1)^0,f,c
  1675  001180                     
  1676                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  1677  001180  C038  F003         	movff	dtoa@n,___aodiv@dividend
  1678  001184  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  1679  001188  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  1680  00118C  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  1681  001190  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  1682  001194  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  1683  001198  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  1684  00119C  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  1685  0011A0  0E0A               	movlw	10
  1686  0011A2  6E0B               	movwf	___aodiv@divisor^0,c
  1687  0011A4  0E00               	movlw	0
  1688  0011A6  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  1689  0011A8  0E00               	movlw	0
  1690  0011AA  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  1691  0011AC  0E00               	movlw	0
  1692  0011AE  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  1693  0011B0  0E00               	movlw	0
  1694  0011B2  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  1695  0011B4  0E00               	movlw	0
  1696  0011B6  6E10               	movwf	(___aodiv@divisor+5)^0,c
  1697  0011B8  0E00               	movlw	0
  1698  0011BA  6E11               	movwf	(___aodiv@divisor+6)^0,c
  1699  0011BC  0E00               	movlw	0
  1700  0011BE  6E12               	movwf	(___aodiv@divisor+7)^0,c
  1701  0011C0  EC14  F00B         	call	___aodiv	;wreg free
  1702  0011C4  C003  F038         	movff	?___aodiv,dtoa@n
  1703  0011C8  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  1704  0011CC  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  1705  0011D0  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  1706  0011D4  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  1707  0011D8  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  1708  0011DC  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  1709  0011E0  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  1710  0011E4                     l2377:
  1711                           
  1712                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1713  0011E4  BE41               	btfsc	(dtoa@i+1)^0,7,c
  1714  0011E6  EFFD  F008         	goto	u1851
  1715  0011EA  5041               	movf	(dtoa@i+1)^0,w,c
  1716  0011EC  E108               	bnz	u1850
  1717  0011EE  0440               	decf	dtoa@i^0,w,c
  1718  0011F0  A0D8               	btfss	status,0,c
  1719  0011F2  EFFD  F008         	goto	u1851
  1720  0011F6  EFFF  F008         	goto	u1850
  1721  0011FA                     u1851:
  1722  0011FA  EF2F  F009         	goto	l2387
  1723  0011FE                     u1850:
  1724  0011FE  5038               	movf	dtoa@n^0,w,c
  1725  001200  1039               	iorwf	(dtoa@n+1)^0,w,c
  1726  001202  103A               	iorwf	(dtoa@n+2)^0,w,c
  1727  001204  103B               	iorwf	(dtoa@n+3)^0,w,c
  1728  001206  103C               	iorwf	(dtoa@n+4)^0,w,c
  1729  001208  103D               	iorwf	(dtoa@n+5)^0,w,c
  1730  00120A  103E               	iorwf	(dtoa@n+6)^0,w,c
  1731  00120C  103F               	iorwf	(dtoa@n+7)^0,w,c
  1732  00120E  A4D8               	btfss	status,2,c
  1733  001210  EF0C  F009         	goto	u1861
  1734  001214  EF0E  F009         	goto	u1860
  1735  001218                     u1861:
  1736  001218  EF76  F008         	goto	l2367
  1737  00121C                     u1860:
  1738  00121C  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1739  00121E  EF1B  F009         	goto	u1870
  1740  001222  5033               	movf	(dtoa@p+1)^0,w,c
  1741  001224  E106               	bnz	u1871
  1742  001226  0432               	decf	dtoa@p^0,w,c
  1743  001228  B0D8               	btfsc	status,0,c
  1744  00122A  EF19  F009         	goto	u1871
  1745  00122E  EF1B  F009         	goto	u1870
  1746  001232                     u1871:
  1747  001232  EF76  F008         	goto	l2367
  1748  001236                     u1870:
  1749  001236  BE35               	btfsc	(dtoa@w+1)^0,7,c
  1750  001238  EF26  F009         	goto	u1881
  1751  00123C  5035               	movf	(dtoa@w+1)^0,w,c
  1752  00123E  E108               	bnz	u1880
  1753  001240  0434               	decf	dtoa@w^0,w,c
  1754  001242  A0D8               	btfss	status,0,c
  1755  001244  EF26  F009         	goto	u1881
  1756  001248  EF28  F009         	goto	u1880
  1757  00124C                     u1881:
  1758  00124C  EF2F  F009         	goto	l2387
  1759  001250                     u1880:
  1760  001250  B26E               	btfsc	_flags^0,1,c
  1761  001252  EF2D  F009         	goto	u1891
  1762  001256  EF2F  F009         	goto	u1890
  1763  00125A                     u1891:
  1764  00125A  EF76  F008         	goto	l2367
  1765  00125E                     u1890:
  1766  00125E                     l2387:
  1767                           
  1768                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  1769  00125E  5036               	movf	dtoa@s^0,w,c
  1770  001260  1037               	iorwf	(dtoa@s+1)^0,w,c
  1771  001262  A4D8               	btfss	status,2,c
  1772  001264  EF36  F009         	goto	u1901
  1773  001268  EF38  F009         	goto	u1900
  1774  00126C                     u1901:
  1775  00126C  EF3F  F009         	goto	l2391
  1776  001270                     u1900:
  1777  001270  A46E               	btfss	_flags^0,2,c
  1778  001272  EF3D  F009         	goto	u1911
  1779  001276  EF3F  F009         	goto	u1910
  1780  00127A                     u1911:
  1781  00127A  EF5D  F009         	goto	l2401
  1782  00127E                     u1910:
  1783  00127E                     l2391:
  1784                           
  1785                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 322:         --i;
  1786  00127E  0640               	decf	dtoa@i^0,f,c
  1787  001280  A0D8               	btfss	status,0,c
  1788  001282  0641               	decf	(dtoa@i+1)^0,f,c
  1789  001284                     
  1790                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  1791  001284  5036               	movf	dtoa@s^0,w,c
  1792  001286  1037               	iorwf	(dtoa@s+1)^0,w,c
  1793  001288  A4D8               	btfss	status,2,c
  1794  00128A  EF49  F009         	goto	u1921
  1795  00128E  EF4B  F009         	goto	u1920
  1796  001292                     u1921:
  1797  001292  EF51  F009         	goto	l2397
  1798  001296                     u1920:
  1799  001296  0E00               	movlw	0
  1800  001298  6E31               	movwf	(_dtoa$1069+1)^0,c
  1801  00129A  0E2B               	movlw	43
  1802  00129C  6E30               	movwf	_dtoa$1069^0,c
  1803  00129E  EF55  F009         	goto	l2399
  1804  0012A2                     l2397:
  1805  0012A2  0E00               	movlw	0
  1806  0012A4  6E31               	movwf	(_dtoa$1069+1)^0,c
  1807  0012A6  0E2D               	movlw	45
  1808  0012A8  6E30               	movwf	_dtoa$1069^0,c
  1809  0012AA                     l2399:
  1810  0012AA  0EC6               	movlw	low _dbuf
  1811  0012AC  2440               	addwf	dtoa@i^0,w,c
  1812  0012AE  6ED9               	movwf	fsr2l,c
  1813  0012B0  0E00               	movlw	high _dbuf
  1814  0012B2  2041               	addwfc	(dtoa@i+1)^0,w,c
  1815  0012B4  6EDA               	movwf	fsr2h,c
  1816  0012B6  C030  FFDF         	movff	_dtoa$1069,indf2
  1817  0012BA                     l2401:
  1818                           
  1819                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  1820  0012BA  C01E  F013         	movff	dtoa@fp,pad@fp
  1821  0012BE  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1822  0012C2  0EC6               	movlw	low _dbuf
  1823  0012C4  2440               	addwf	dtoa@i^0,w,c
  1824  0012C6  6E15               	movwf	pad@buf^0,c
  1825  0012C8  0E00               	movlw	high _dbuf
  1826  0012CA  2041               	addwfc	(dtoa@i+1)^0,w,c
  1827  0012CC  6E16               	movwf	(pad@buf+1)^0,c
  1828  0012CE  C034  F017         	movff	dtoa@w,pad@p
  1829  0012D2  C035  F018         	movff	dtoa@w+1,pad@p+1
  1830  0012D6  ECEF  F00C         	call	_pad	;wreg free
  1831  0012DA  C013  F01E         	movff	?_pad,?_dtoa
  1832  0012DE  C014  F01F         	movff	?_pad+1,?_dtoa+1
  1833  0012E2  0012               	return		;funcret
  1834  0012E4                     __end_of_dtoa:
  1835                           	callstack 0
  1836                           
  1837 ;; *************** function _pad *****************
  1838 ;; Defined at:
  1839 ;;		line 72 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1842 ;;		 -> sprintf@f(6), 
  1843 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1844 ;;		 -> dbuf(32), 
  1845 ;;  p               2   22[COMRAM] int 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  w               2   27[COMRAM] int 
  1848 ;;  i               2   25[COMRAM] int 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  2   18[COMRAM] int 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1858 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;Total ram usage:       11 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    5
  1865 ;; This function calls:
  1866 ;;		_fputc
  1867 ;;		_fputs
  1868 ;;		_strlen
  1869 ;; This function is called by:
  1870 ;;		_dtoa
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text5
  1875  0019DE                     __ptext5:
  1876                           	callstack 0
  1877  0019DE                     _pad:
  1878                           	callstack 21
  1879  0019DE                     
  1880                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.30/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  1881  0019DE  A06E               	btfss	_flags^0,0,c
  1882  0019E0  EFF4  F00C         	goto	u1731
  1883  0019E4  EFF6  F00C         	goto	u1730
  1884  0019E8                     u1731:
  1885  0019E8  EF00  F00D         	goto	l2309
  1886  0019EC                     u1730:
  1887  0019EC                     
  1888                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  1889  0019EC  C015  F00C         	movff	pad@buf,fputs@s
  1890  0019F0  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1891  0019F4  C013  F00E         	movff	pad@fp,fputs@fp
  1892  0019F8  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1893  0019FC  ECDB  F00E         	call	_fputs	;wreg free
  1894  001A00                     l2309:
  1895                           
  1896                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  1897  001A00  BE18               	btfsc	(pad@p+1)^0,7,c
  1898  001A02  EF05  F00D         	goto	u1741
  1899  001A06  EF07  F00D         	goto	u1740
  1900  001A0A                     u1741:
  1901  001A0A  EF0D  F00D         	goto	l2313
  1902  001A0E                     u1740:
  1903  001A0E  C017  F01C         	movff	pad@p,pad@w
  1904  001A12  C018  F01D         	movff	pad@p+1,pad@w+1
  1905  001A16  EF11  F00D         	goto	l902
  1906  001A1A                     l2313:
  1907  001A1A  0E00               	movlw	0
  1908  001A1C  6E1D               	movwf	(pad@w+1)^0,c
  1909  001A1E  0E00               	movlw	0
  1910  001A20  6E1C               	movwf	pad@w^0,c
  1911  001A22                     l902:
  1912                           
  1913                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1914  001A22  0E00               	movlw	0
  1915  001A24  6E1B               	movwf	(pad@i+1)^0,c
  1916  001A26  0E00               	movlw	0
  1917  001A28  6E1A               	movwf	pad@i^0,c
  1918                           
  1919                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1920  001A2A  EF23  F00D         	goto	l2319
  1921  001A2E                     l2315:
  1922                           
  1923                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  1924  001A2E  0E00               	movlw	0
  1925  001A30  6E04               	movwf	(fputc@c+1)^0,c
  1926  001A32  0E20               	movlw	32
  1927  001A34  6E03               	movwf	fputc@c^0,c
  1928  001A36  C013  F005         	movff	pad@fp,fputc@fp
  1929  001A3A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1930  001A3E  EC8A  F00C         	call	_fputc	;wreg free
  1931  001A42                     
  1932                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1933  001A42  4A1A               	infsnz	pad@i^0,f,c
  1934  001A44  2A1B               	incf	(pad@i+1)^0,f,c
  1935  001A46                     l2319:
  1936                           
  1937                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1938  001A46  501C               	movf	pad@w^0,w,c
  1939  001A48  5C1A               	subwf	pad@i^0,w,c
  1940  001A4A  501B               	movf	(pad@i+1)^0,w,c
  1941  001A4C  0A80               	xorlw	128
  1942  001A4E  6E19               	movwf	??_pad^0,c
  1943  001A50  501D               	movf	(pad@w+1)^0,w,c
  1944  001A52  0A80               	xorlw	128
  1945  001A54  5819               	subwfb	??_pad^0,w,c
  1946  001A56  A0D8               	btfss	status,0,c
  1947  001A58  EF30  F00D         	goto	u1751
  1948  001A5C  EF32  F00D         	goto	u1750
  1949  001A60                     u1751:
  1950  001A60  EF17  F00D         	goto	l2315
  1951  001A64                     u1750:
  1952  001A64                     
  1953                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  1954  001A64  B06E               	btfsc	_flags^0,0,c
  1955  001A66  EF37  F00D         	goto	u1761
  1956  001A6A  EF39  F00D         	goto	u1760
  1957  001A6E                     u1761:
  1958  001A6E  EF43  F00D         	goto	l2323
  1959  001A72                     u1760:
  1960  001A72                     
  1961                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  1962  001A72  C015  F00C         	movff	pad@buf,fputs@s
  1963  001A76  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1964  001A7A  C013  F00E         	movff	pad@fp,fputs@fp
  1965  001A7E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1966  001A82  ECDB  F00E         	call	_fputs	;wreg free
  1967  001A86                     l2323:
  1968                           
  1969                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  1970  001A86  C015  F003         	movff	pad@buf,strlen@s
  1971  001A8A  C016  F004         	movff	pad@buf+1,strlen@s+1
  1972  001A8E  EC5E  F00F         	call	_strlen	;wreg free
  1973  001A92  501C               	movf	pad@w^0,w,c
  1974  001A94  2403               	addwf	?_strlen^0,w,c
  1975  001A96  6E13               	movwf	?_pad^0,c
  1976  001A98  501D               	movf	(pad@w+1)^0,w,c
  1977  001A9A  2004               	addwfc	(?_strlen+1)^0,w,c
  1978  001A9C  6E14               	movwf	(?_pad+1)^0,c
  1979  001A9E  0012               	return		;funcret
  1980  001AA0                     __end_of_pad:
  1981                           	callstack 0
  1982                           
  1983 ;; *************** function _strlen *****************
  1984 ;; Defined at:
  1985 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/strlen.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  s               2    2[COMRAM] PTR const unsigned char 
  1988 ;;		 -> dbuf(32), 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  a               2    4[COMRAM] PTR const unsigned char 
  1991 ;;		 -> dbuf(32), 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  2    2[COMRAM] unsigned int 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;Total ram usage:        4 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    2
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_pad
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text6
  2016  001EBC                     __ptext6:
  2017                           	callstack 0
  2018  001EBC                     _strlen:
  2019                           	callstack 23
  2020  001EBC  C003  F005         	movff	strlen@s,strlen@a
  2021  001EC0  C004  F006         	movff	strlen@s+1,strlen@a+1
  2022  001EC4  EF66  F00F         	goto	l2219
  2023  001EC8                     l2217:
  2024  001EC8  4A03               	infsnz	strlen@s^0,f,c
  2025  001ECA  2A04               	incf	(strlen@s+1)^0,f,c
  2026  001ECC                     l2219:
  2027  001ECC  C003  FFD9         	movff	strlen@s,fsr2l
  2028  001ED0  C004  FFDA         	movff	strlen@s+1,fsr2h
  2029  001ED4  50DF               	movf	indf2,w,c
  2030  001ED6  A4D8               	btfss	status,2,c
  2031  001ED8  EF70  F00F         	goto	u1591
  2032  001EDC  EF72  F00F         	goto	u1590
  2033  001EE0                     u1591:
  2034  001EE0  EF64  F00F         	goto	l2217
  2035  001EE4                     u1590:
  2036  001EE4  5005               	movf	strlen@a^0,w,c
  2037  001EE6  5C03               	subwf	strlen@s^0,w,c
  2038  001EE8  6E03               	movwf	?_strlen^0,c
  2039  001EEA  5006               	movf	(strlen@a+1)^0,w,c
  2040  001EEC  5804               	subwfb	(strlen@s+1)^0,w,c
  2041  001EEE  6E04               	movwf	(?_strlen+1)^0,c
  2042  001EF0  0012               	return		;funcret
  2043  001EF2                     __end_of_strlen:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function _fputs *****************
  2047 ;; Defined at:
  2048 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputs.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2051 ;;		 -> dbuf(32), 
  2052 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2053 ;;		 -> sprintf@f(6), 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  i               2   16[COMRAM] int 
  2056 ;;  c               1   15[COMRAM] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  2   11[COMRAM] int 
  2059 ;; Registers used:
  2060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;Total ram usage:        7 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    4
  2073 ;; This function calls:
  2074 ;;		_fputc
  2075 ;; This function is called by:
  2076 ;;		_pad
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text7
  2081  001DB6                     __ptext7:
  2082                           	callstack 0
  2083  001DB6                     _fputs:
  2084                           	callstack 21
  2085  001DB6  0E00               	movlw	0
  2086  001DB8  6E12               	movwf	(fputs@i+1)^0,c
  2087  001DBA  0E00               	movlw	0
  2088  001DBC  6E11               	movwf	fputs@i^0,c
  2089  001DBE  EFEC  F00E         	goto	l2213
  2090  001DC2                     l2209:
  2091  001DC2  C010  F003         	movff	fputs@c,fputc@c
  2092  001DC6  6A04               	clrf	(fputc@c+1)^0,c
  2093  001DC8  C00E  F005         	movff	fputs@fp,fputc@fp
  2094  001DCC  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2095  001DD0  EC8A  F00C         	call	_fputc	;wreg free
  2096  001DD4  4A11               	infsnz	fputs@i^0,f,c
  2097  001DD6  2A12               	incf	(fputs@i+1)^0,f,c
  2098  001DD8                     l2213:
  2099  001DD8  5011               	movf	fputs@i^0,w,c
  2100  001DDA  240C               	addwf	fputs@s^0,w,c
  2101  001DDC  6ED9               	movwf	fsr2l,c
  2102  001DDE  5012               	movf	(fputs@i+1)^0,w,c
  2103  001DE0  200D               	addwfc	(fputs@s+1)^0,w,c
  2104  001DE2  6EDA               	movwf	fsr2h,c
  2105  001DE4  50DF               	movf	indf2,w,c
  2106  001DE6  6E10               	movwf	fputs@c^0,c
  2107  001DE8  5010               	movf	fputs@c^0,w,c
  2108  001DEA  A4D8               	btfss	status,2,c
  2109  001DEC  EFFA  F00E         	goto	u1581
  2110  001DF0  EFFC  F00E         	goto	u1580
  2111  001DF4                     u1581:
  2112  001DF4  EFE1  F00E         	goto	l2209
  2113  001DF8                     u1580:
  2114  001DF8  0012               	return		;funcret
  2115  001DFA                     __end_of_fputs:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _fputc *****************
  2119 ;; Defined at:
  2120 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputc.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  c               2    2[COMRAM] int 
  2123 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2124 ;;		 -> sprintf@f(6), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2    2[COMRAM] int 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;Total ram usage:        9 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    3
  2143 ;; This function calls:
  2144 ;;		_putch
  2145 ;; This function is called by:
  2146 ;;		_pad
  2147 ;;		_vfpfcnvrt
  2148 ;;		_fputs
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text8
  2153  001914                     __ptext8:
  2154                           	callstack 0
  2155  001914                     _fputc:
  2156                           	callstack 24
  2157  001914  5005               	movf	fputc@fp^0,w,c
  2158  001916  1006               	iorwf	(fputc@fp+1)^0,w,c
  2159  001918  B4D8               	btfsc	status,2,c
  2160  00191A  EF91  F00C         	goto	u1541
  2161  00191E  EF93  F00C         	goto	u1540
  2162  001922                     u1541:
  2163  001922  EF9C  F00C         	goto	l2197
  2164  001926                     u1540:
  2165  001926  5005               	movf	fputc@fp^0,w,c
  2166  001928  1006               	iorwf	(fputc@fp+1)^0,w,c
  2167  00192A  A4D8               	btfss	status,2,c
  2168  00192C  EF9A  F00C         	goto	u1551
  2169  001930  EF9C  F00C         	goto	u1550
  2170  001934                     u1551:
  2171  001934  EFA1  F00C         	goto	l2199
  2172  001938                     u1550:
  2173  001938                     l2197:
  2174  001938  5003               	movf	fputc@c^0,w,c
  2175  00193A  ECCD  F00F         	call	_putch
  2176  00193E  EFEE  F00C         	goto	l966
  2177  001942                     l2199:
  2178  001942  EE20 F004          	lfsr	2,4
  2179  001946  5005               	movf	fputc@fp^0,w,c
  2180  001948  26D9               	addwf	fsr2l,f,c
  2181  00194A  5006               	movf	(fputc@fp+1)^0,w,c
  2182  00194C  22DA               	addwfc	fsr2h,f,c
  2183  00194E  50DE               	movf	postinc2,w,c
  2184  001950  10DE               	iorwf	postinc2,w,c
  2185  001952  B4D8               	btfsc	status,2,c
  2186  001954  EFAE  F00C         	goto	u1561
  2187  001958  EFB0  F00C         	goto	u1560
  2188  00195C                     u1561:
  2189  00195C  EFCB  F00C         	goto	l2203
  2190  001960                     u1560:
  2191  001960  EE20 F004          	lfsr	2,4
  2192  001964  5005               	movf	fputc@fp^0,w,c
  2193  001966  26D9               	addwf	fsr2l,f,c
  2194  001968  5006               	movf	(fputc@fp+1)^0,w,c
  2195  00196A  22DA               	addwfc	fsr2h,f,c
  2196  00196C  EE10 F002          	lfsr	1,2
  2197  001970  5005               	movf	fputc@fp^0,w,c
  2198  001972  26E1               	addwf	fsr1l,f,c
  2199  001974  5006               	movf	(fputc@fp+1)^0,w,c
  2200  001976  22E2               	addwfc	fsr1h,f,c
  2201  001978  50DE               	movf	postinc2,w,c
  2202  00197A  5CE6               	subwf	postinc1,w,c
  2203  00197C  50E6               	movf	postinc1,w,c
  2204  00197E  0A80               	xorlw	128
  2205  001980  6E0B               	movwf	(??_fputc+4)^0,c
  2206  001982  50DE               	movf	postinc2,w,c
  2207  001984  0A80               	xorlw	128
  2208  001986  580B               	subwfb	(??_fputc+4)^0,w,c
  2209  001988  B0D8               	btfsc	status,0,c
  2210  00198A  EFC9  F00C         	goto	u1571
  2211  00198E  EFCB  F00C         	goto	u1570
  2212  001992                     u1571:
  2213  001992  EFEE  F00C         	goto	l966
  2214  001996                     u1570:
  2215  001996                     l2203:
  2216  001996  EE20 F002          	lfsr	2,2
  2217  00199A  5005               	movf	fputc@fp^0,w,c
  2218  00199C  26D9               	addwf	fsr2l,f,c
  2219  00199E  5006               	movf	(fputc@fp+1)^0,w,c
  2220  0019A0  22DA               	addwfc	fsr2h,f,c
  2221  0019A2  CFDE F007          	movff	postinc2,??_fputc
  2222  0019A6  CFDD F008          	movff	postdec2,??_fputc+1
  2223  0019AA  C005  FFD9         	movff	fputc@fp,fsr2l
  2224  0019AE  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2225  0019B2  CFDE F009          	movff	postinc2,??_fputc+2
  2226  0019B6  CFDD F00A          	movff	postdec2,??_fputc+3
  2227  0019BA  5007               	movf	??_fputc^0,w,c
  2228  0019BC  2409               	addwf	(??_fputc+2)^0,w,c
  2229  0019BE  6ED9               	movwf	fsr2l,c
  2230  0019C0  5008               	movf	(??_fputc+1)^0,w,c
  2231  0019C2  200A               	addwfc	(??_fputc+3)^0,w,c
  2232  0019C4  6EDA               	movwf	fsr2h,c
  2233  0019C6  C003  FFDF         	movff	fputc@c,indf2
  2234  0019CA  EE20 F002          	lfsr	2,2
  2235  0019CE  5005               	movf	fputc@fp^0,w,c
  2236  0019D0  26D9               	addwf	fsr2l,f,c
  2237  0019D2  5006               	movf	(fputc@fp+1)^0,w,c
  2238  0019D4  22DA               	addwfc	fsr2h,f,c
  2239  0019D6  2ADE               	incf	postinc2,f,c
  2240  0019D8  0E00               	movlw	0
  2241  0019DA  22DD               	addwfc	postdec2,f,c
  2242  0019DC                     l966:
  2243  0019DC  0012               	return		;funcret
  2244  0019DE                     __end_of_fputc:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _putch *****************
  2248 ;; Defined at:
  2249 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/putch.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  c               1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  c               1    0[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    2
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_fputc
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text9
  2278  001F9A                     __ptext9:
  2279                           	callstack 0
  2280  001F9A                     _putch:
  2281                           	callstack 24
  2282  001F9A  0012               	return		;funcret
  2283  001F9C                     __end_of_putch:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _abs *****************
  2287 ;; Defined at:
  2288 ;;		line 1 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/abs.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  a               2   20[COMRAM] int 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  2   20[COMRAM] int 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;Total ram usage:        4 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    2
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_dtoa
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text10
  2317  001E7C                     __ptext10:
  2318                           	callstack 0
  2319  001E7C                     _abs:
  2320                           	callstack 24
  2321  001E7C  BE16               	btfsc	(abs@a+1)^0,7,c
  2322  001E7E  EF4B  F00F         	goto	u1770
  2323  001E82  5016               	movf	(abs@a+1)^0,w,c
  2324  001E84  E106               	bnz	u1771
  2325  001E86  0415               	decf	abs@a^0,w,c
  2326  001E88  B0D8               	btfsc	status,0,c
  2327  001E8A  EF49  F00F         	goto	u1771
  2328  001E8E  EF4B  F00F         	goto	u1770
  2329  001E92                     u1771:
  2330  001E92  EF59  F00F         	goto	l951
  2331  001E96                     u1770:
  2332  001E96  C015  F017         	movff	abs@a,??_abs
  2333  001E9A  C016  F018         	movff	abs@a+1,??_abs+1
  2334  001E9E  1E17               	comf	??_abs^0,f,c
  2335  001EA0  1E18               	comf	(??_abs+1)^0,f,c
  2336  001EA2  4A17               	infsnz	??_abs^0,f,c
  2337  001EA4  2A18               	incf	(??_abs+1)^0,f,c
  2338  001EA6  C017  F015         	movff	??_abs,?_abs
  2339  001EAA  C018  F016         	movff	??_abs+1,?_abs+1
  2340  001EAE  EF5D  F00F         	goto	l954
  2341  001EB2                     l951:
  2342  001EB2  C015  F015         	movff	abs@a,?_abs
  2343  001EB6  C016  F016         	movff	abs@a+1,?_abs+1
  2344  001EBA                     l954:
  2345  001EBA  0012               	return		;funcret
  2346  001EBC                     __end_of_abs:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function ___aomod *****************
  2350 ;; Defined at:
  2351 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aomod.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  dividend        8    2[COMRAM] long long 
  2354 ;;  divisor         8   10[COMRAM] long long 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  sign            1   19[COMRAM] unsigned char 
  2357 ;;  counter         1   18[COMRAM] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  8    2[COMRAM] long long 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:       18 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    2
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_dtoa
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text11
  2382  0017B0                     __ptext11:
  2383                           	callstack 0
  2384  0017B0                     ___aomod:
  2385                           	callstack 24
  2386  0017B0  0E00               	movlw	0
  2387  0017B2  6E14               	movwf	___aomod@sign^0,c
  2388  0017B4  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  2389  0017B6  EFE1  F00B         	goto	u1670
  2390  0017BA  EFDF  F00B         	goto	u1671
  2391  0017BE                     u1671:
  2392  0017BE  EFF3  F00B         	goto	l2277
  2393  0017C2                     u1670:
  2394  0017C2  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2395  0017C4  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2396  0017C6  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2397  0017C8  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2398  0017CA  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2399  0017CC  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2400  0017CE  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2401  0017D0  6C03               	negf	___aomod@dividend^0,c
  2402  0017D2  0E00               	movlw	0
  2403  0017D4  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2404  0017D6  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2405  0017D8  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2406  0017DA  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2407  0017DC  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2408  0017DE  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2409  0017E0  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2410  0017E2  0E01               	movlw	1
  2411  0017E4  6E14               	movwf	___aomod@sign^0,c
  2412  0017E6                     l2277:
  2413  0017E6  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  2414  0017E8  EFFA  F00B         	goto	u1680
  2415  0017EC  EFF8  F00B         	goto	u1681
  2416  0017F0                     u1681:
  2417  0017F0  EF0A  F00C         	goto	l2281
  2418  0017F4                     u1680:
  2419  0017F4  1E12               	comf	(___aomod@divisor+7)^0,f,c
  2420  0017F6  1E11               	comf	(___aomod@divisor+6)^0,f,c
  2421  0017F8  1E10               	comf	(___aomod@divisor+5)^0,f,c
  2422  0017FA  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  2423  0017FC  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  2424  0017FE  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  2425  001800  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  2426  001802  6C0B               	negf	___aomod@divisor^0,c
  2427  001804  0E00               	movlw	0
  2428  001806  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  2429  001808  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  2430  00180A  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  2431  00180C  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  2432  00180E  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  2433  001810  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  2434  001812  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  2435  001814                     l2281:
  2436  001814  500B               	movf	___aomod@divisor^0,w,c
  2437  001816  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  2438  001818  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  2439  00181A  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  2440  00181C  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  2441  00181E  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  2442  001820  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  2443  001822  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  2444  001824  B4D8               	btfsc	status,2,c
  2445  001826  EF17  F00C         	goto	u1691
  2446  00182A  EF19  F00C         	goto	u1690
  2447  00182E                     u1691:
  2448  00182E  EF61  F00C         	goto	l2297
  2449  001832                     u1690:
  2450  001832  0E01               	movlw	1
  2451  001834  6E13               	movwf	___aomod@counter^0,c
  2452  001836  EF27  F00C         	goto	l2287
  2453  00183A                     l2285:
  2454  00183A  90D8               	bcf	status,0,c
  2455  00183C  360B               	rlcf	___aomod@divisor^0,f,c
  2456  00183E  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  2457  001840  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  2458  001842  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  2459  001844  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  2460  001846  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  2461  001848  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  2462  00184A  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  2463  00184C  2A13               	incf	___aomod@counter^0,f,c
  2464  00184E                     l2287:
  2465  00184E  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  2466  001850  EF2C  F00C         	goto	u1701
  2467  001854  EF2E  F00C         	goto	u1700
  2468  001858                     u1701:
  2469  001858  EF1D  F00C         	goto	l2285
  2470  00185C                     u1700:
  2471  00185C                     l2289:
  2472  00185C  500B               	movf	___aomod@divisor^0,w,c
  2473  00185E  5C03               	subwf	___aomod@dividend^0,w,c
  2474  001860  500C               	movf	(___aomod@divisor+1)^0,w,c
  2475  001862  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  2476  001864  500D               	movf	(___aomod@divisor+2)^0,w,c
  2477  001866  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  2478  001868  500E               	movf	(___aomod@divisor+3)^0,w,c
  2479  00186A  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  2480  00186C  500F               	movf	(___aomod@divisor+4)^0,w,c
  2481  00186E  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  2482  001870  5010               	movf	(___aomod@divisor+5)^0,w,c
  2483  001872  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  2484  001874  5011               	movf	(___aomod@divisor+6)^0,w,c
  2485  001876  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  2486  001878  5012               	movf	(___aomod@divisor+7)^0,w,c
  2487  00187A  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  2488  00187C  A0D8               	btfss	status,0,c
  2489  00187E  EF43  F00C         	goto	u1711
  2490  001882  EF45  F00C         	goto	u1710
  2491  001886                     u1711:
  2492  001886  EF55  F00C         	goto	l2293
  2493  00188A                     u1710:
  2494  00188A  500B               	movf	___aomod@divisor^0,w,c
  2495  00188C  5E03               	subwf	___aomod@dividend^0,f,c
  2496  00188E  500C               	movf	(___aomod@divisor+1)^0,w,c
  2497  001890  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  2498  001892  500D               	movf	(___aomod@divisor+2)^0,w,c
  2499  001894  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  2500  001896  500E               	movf	(___aomod@divisor+3)^0,w,c
  2501  001898  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  2502  00189A  500F               	movf	(___aomod@divisor+4)^0,w,c
  2503  00189C  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  2504  00189E  5010               	movf	(___aomod@divisor+5)^0,w,c
  2505  0018A0  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  2506  0018A2  5011               	movf	(___aomod@divisor+6)^0,w,c
  2507  0018A4  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  2508  0018A6  5012               	movf	(___aomod@divisor+7)^0,w,c
  2509  0018A8  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  2510  0018AA                     l2293:
  2511  0018AA  90D8               	bcf	status,0,c
  2512  0018AC  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  2513  0018AE  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  2514  0018B0  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  2515  0018B2  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  2516  0018B4  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  2517  0018B6  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  2518  0018B8  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  2519  0018BA  320B               	rrcf	___aomod@divisor^0,f,c
  2520  0018BC  2E13               	decfsz	___aomod@counter^0,f,c
  2521  0018BE  EF2E  F00C         	goto	l2289
  2522  0018C2                     l2297:
  2523  0018C2  5014               	movf	___aomod@sign^0,w,c
  2524  0018C4  B4D8               	btfsc	status,2,c
  2525  0018C6  EF67  F00C         	goto	u1721
  2526  0018CA  EF69  F00C         	goto	u1720
  2527  0018CE                     u1721:
  2528  0018CE  EF79  F00C         	goto	l2301
  2529  0018D2                     u1720:
  2530  0018D2  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  2531  0018D4  1E09               	comf	(___aomod@dividend+6)^0,f,c
  2532  0018D6  1E08               	comf	(___aomod@dividend+5)^0,f,c
  2533  0018D8  1E07               	comf	(___aomod@dividend+4)^0,f,c
  2534  0018DA  1E06               	comf	(___aomod@dividend+3)^0,f,c
  2535  0018DC  1E05               	comf	(___aomod@dividend+2)^0,f,c
  2536  0018DE  1E04               	comf	(___aomod@dividend+1)^0,f,c
  2537  0018E0  6C03               	negf	___aomod@dividend^0,c
  2538  0018E2  0E00               	movlw	0
  2539  0018E4  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  2540  0018E6  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  2541  0018E8  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  2542  0018EA  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  2543  0018EC  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  2544  0018EE  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  2545  0018F0  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  2546  0018F2                     l2301:
  2547  0018F2  C003  F003         	movff	___aomod@dividend,?___aomod
  2548  0018F6  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  2549  0018FA  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  2550  0018FE  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  2551  001902  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  2552  001906  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  2553  00190A  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  2554  00190E  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  2555  001912  0012               	return		;funcret
  2556  001914                     __end_of___aomod:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function ___aodiv *****************
  2560 ;; Defined at:
  2561 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aodiv.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  dividend        8    2[COMRAM] long long 
  2564 ;;  divisor         8   10[COMRAM] long long 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  quotient        8   20[COMRAM] long long 
  2567 ;;  sign            1   19[COMRAM] unsigned char 
  2568 ;;  counter         1   18[COMRAM] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  8    2[COMRAM] long long 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2578 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;Total ram usage:       26 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    2
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_dtoa
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text12
  2593  001628                     __ptext12:
  2594                           	callstack 0
  2595  001628                     ___aodiv:
  2596                           	callstack 24
  2597  001628  0E00               	movlw	0
  2598  00162A  6E14               	movwf	___aodiv@sign^0,c
  2599  00162C  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  2600  00162E  EF1D  F00B         	goto	u1600
  2601  001632  EF1B  F00B         	goto	u1601
  2602  001636                     u1601:
  2603  001636  EF2F  F00B         	goto	l2233
  2604  00163A                     u1600:
  2605  00163A  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  2606  00163C  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  2607  00163E  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  2608  001640  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  2609  001642  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  2610  001644  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  2611  001646  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  2612  001648  6C0B               	negf	___aodiv@divisor^0,c
  2613  00164A  0E00               	movlw	0
  2614  00164C  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  2615  00164E  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  2616  001650  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  2617  001652  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  2618  001654  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  2619  001656  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  2620  001658  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  2621  00165A  0E01               	movlw	1
  2622  00165C  6E14               	movwf	___aodiv@sign^0,c
  2623  00165E                     l2233:
  2624  00165E  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  2625  001660  EF36  F00B         	goto	u1610
  2626  001664  EF34  F00B         	goto	u1611
  2627  001668                     u1611:
  2628  001668  EF48  F00B         	goto	l2239
  2629  00166C                     u1610:
  2630  00166C  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  2631  00166E  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  2632  001670  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  2633  001672  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  2634  001674  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  2635  001676  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  2636  001678  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  2637  00167A  6C03               	negf	___aodiv@dividend^0,c
  2638  00167C  0E00               	movlw	0
  2639  00167E  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  2640  001680  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  2641  001682  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  2642  001684  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  2643  001686  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  2644  001688  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  2645  00168A  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  2646  00168C  0E01               	movlw	1
  2647  00168E  1A14               	xorwf	___aodiv@sign^0,f,c
  2648  001690                     l2239:
  2649  001690  EE20  F015         	lfsr	2,___aodiv@quotient
  2650  001694  0E07               	movlw	7
  2651  001696                     u1621:
  2652  001696  6ADE               	clrf	postinc2,c
  2653  001698  06E8               	decf	wreg,f,c
  2654  00169A  E2FD               	bc	u1621
  2655  00169C  500B               	movf	___aodiv@divisor^0,w,c
  2656  00169E  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  2657  0016A0  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  2658  0016A2  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  2659  0016A4  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  2660  0016A6  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  2661  0016A8  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  2662  0016AA  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  2663  0016AC  B4D8               	btfsc	status,2,c
  2664  0016AE  EF5B  F00B         	goto	u1631
  2665  0016B2  EF5D  F00B         	goto	u1630
  2666  0016B6                     u1631:
  2667  0016B6  EFAF  F00B         	goto	l2261
  2668  0016BA                     u1630:
  2669  0016BA  0E01               	movlw	1
  2670  0016BC  6E13               	movwf	___aodiv@counter^0,c
  2671  0016BE  EF6B  F00B         	goto	l2247
  2672  0016C2                     l2245:
  2673  0016C2  90D8               	bcf	status,0,c
  2674  0016C4  360B               	rlcf	___aodiv@divisor^0,f,c
  2675  0016C6  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  2676  0016C8  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  2677  0016CA  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  2678  0016CC  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  2679  0016CE  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  2680  0016D0  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  2681  0016D2  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  2682  0016D4  2A13               	incf	___aodiv@counter^0,f,c
  2683  0016D6                     l2247:
  2684  0016D6  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  2685  0016D8  EF70  F00B         	goto	u1641
  2686  0016DC  EF72  F00B         	goto	u1640
  2687  0016E0                     u1641:
  2688  0016E0  EF61  F00B         	goto	l2245
  2689  0016E4                     u1640:
  2690  0016E4                     l2249:
  2691  0016E4  90D8               	bcf	status,0,c
  2692  0016E6  3615               	rlcf	___aodiv@quotient^0,f,c
  2693  0016E8  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  2694  0016EA  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  2695  0016EC  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  2696  0016EE  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  2697  0016F0  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  2698  0016F2  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  2699  0016F4  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  2700  0016F6  500B               	movf	___aodiv@divisor^0,w,c
  2701  0016F8  5C03               	subwf	___aodiv@dividend^0,w,c
  2702  0016FA  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2703  0016FC  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  2704  0016FE  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2705  001700  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  2706  001702  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2707  001704  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  2708  001706  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2709  001708  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  2710  00170A  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2711  00170C  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  2712  00170E  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2713  001710  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  2714  001712  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2715  001714  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  2716  001716  A0D8               	btfss	status,0,c
  2717  001718  EF90  F00B         	goto	u1651
  2718  00171C  EF92  F00B         	goto	u1650
  2719  001720                     u1651:
  2720  001720  EFA3  F00B         	goto	l2257
  2721  001724                     u1650:
  2722  001724  500B               	movf	___aodiv@divisor^0,w,c
  2723  001726  5E03               	subwf	___aodiv@dividend^0,f,c
  2724  001728  500C               	movf	(___aodiv@divisor+1)^0,w,c
  2725  00172A  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  2726  00172C  500D               	movf	(___aodiv@divisor+2)^0,w,c
  2727  00172E  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  2728  001730  500E               	movf	(___aodiv@divisor+3)^0,w,c
  2729  001732  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  2730  001734  500F               	movf	(___aodiv@divisor+4)^0,w,c
  2731  001736  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  2732  001738  5010               	movf	(___aodiv@divisor+5)^0,w,c
  2733  00173A  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  2734  00173C  5011               	movf	(___aodiv@divisor+6)^0,w,c
  2735  00173E  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  2736  001740  5012               	movf	(___aodiv@divisor+7)^0,w,c
  2737  001742  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  2738  001744  8015               	bsf	___aodiv@quotient^0,0,c
  2739  001746                     l2257:
  2740  001746  90D8               	bcf	status,0,c
  2741  001748  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  2742  00174A  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  2743  00174C  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  2744  00174E  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  2745  001750  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  2746  001752  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  2747  001754  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  2748  001756  320B               	rrcf	___aodiv@divisor^0,f,c
  2749  001758  2E13               	decfsz	___aodiv@counter^0,f,c
  2750  00175A  EF72  F00B         	goto	l2249
  2751  00175E                     l2261:
  2752  00175E  5014               	movf	___aodiv@sign^0,w,c
  2753  001760  B4D8               	btfsc	status,2,c
  2754  001762  EFB5  F00B         	goto	u1661
  2755  001766  EFB7  F00B         	goto	u1660
  2756  00176A                     u1661:
  2757  00176A  EFC7  F00B         	goto	l2265
  2758  00176E                     u1660:
  2759  00176E  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  2760  001770  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  2761  001772  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  2762  001774  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  2763  001776  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  2764  001778  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  2765  00177A  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  2766  00177C  6C15               	negf	___aodiv@quotient^0,c
  2767  00177E  0E00               	movlw	0
  2768  001780  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  2769  001782  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  2770  001784  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  2771  001786  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  2772  001788  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  2773  00178A  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  2774  00178C  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  2775  00178E                     l2265:
  2776  00178E  C015  F003         	movff	___aodiv@quotient,?___aodiv
  2777  001792  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  2778  001796  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  2779  00179A  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  2780  00179E  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  2781  0017A2  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  2782  0017A6  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  2783  0017AA  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  2784  0017AE  0012               	return		;funcret
  2785  0017B0                     __end_of___aodiv:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _LCDStr *****************
  2789 ;; Defined at:
  2790 ;;		line 105 in file "./lcd.h"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  str             2    6[COMRAM] PTR const unsigned char 
  2793 ;;		 -> main@arr(5), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  i               1    8[COMRAM] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;Total ram usage:        3 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    4
  2812 ;; This function calls:
  2813 ;;		_LCDDat
  2814 ;;		_LCDGoto
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text13
  2821  001B3E                     __ptext13:
  2822                           	callstack 0
  2823  001B3E                     _LCDStr:
  2824                           	callstack 26
  2825  001B3E                     
  2826                           ;./lcd.h: 106:   for (unsigned char i = 0; str[i] != 0; i++) {
  2827  001B3E  0E00               	movlw	0
  2828  001B40  6E09               	movwf	LCDStr@i^0,c
  2829  001B42  EFCA  F00D         	goto	l2523
  2830  001B46                     l2505:
  2831                           
  2832                           ;./lcd.h: 107:     LCDDat(str[i]);
  2833  001B46  5009               	movf	LCDStr@i^0,w,c
  2834  001B48  2407               	addwf	LCDStr@str^0,w,c
  2835  001B4A  6ED9               	movwf	fsr2l,c
  2836  001B4C  0E00               	movlw	0
  2837  001B4E  2008               	addwfc	(LCDStr@str+1)^0,w,c
  2838  001B50  6EDA               	movwf	fsr2h,c
  2839  001B52  50DF               	movf	indf2,w,c
  2840  001B54  EC92  F00F         	call	_LCDDat
  2841  001B58                     
  2842                           ;./lcd.h: 108:     lcd_x ++;
  2843  001B58  2A75               	incf	_lcd_x^0,f,c
  2844  001B5A                     
  2845                           ;./lcd.h: 109:     if(lcd_x == 17) {
  2846  001B5A  0E11               	movlw	17
  2847  001B5C  1875               	xorwf	_lcd_x^0,w,c
  2848  001B5E  A4D8               	btfss	status,2,c
  2849  001B60  EFB4  F00D         	goto	u2021
  2850  001B64  EFB6  F00D         	goto	u2020
  2851  001B68                     u2021:
  2852  001B68  EFC9  F00D         	goto	l2521
  2853  001B6C                     u2020:
  2854  001B6C                     
  2855                           ;./lcd.h: 110:       lcd_x = 1;
  2856  001B6C  0E01               	movlw	1
  2857  001B6E  6E75               	movwf	_lcd_x^0,c
  2858  001B70                     
  2859                           ;./lcd.h: 111:       lcd_y++;
  2860  001B70  2A74               	incf	_lcd_y^0,f,c
  2861  001B72                     
  2862                           ;./lcd.h: 112:       if (lcd_y == 5) {
  2863  001B72  0E05               	movlw	5
  2864  001B74  1874               	xorwf	_lcd_y^0,w,c
  2865  001B76  A4D8               	btfss	status,2,c
  2866  001B78  EFC0  F00D         	goto	u2031
  2867  001B7C  EFC2  F00D         	goto	u2030
  2868  001B80                     u2031:
  2869  001B80  EFC4  F00D         	goto	l2519
  2870  001B84                     u2030:
  2871  001B84                     
  2872                           ;./lcd.h: 113:          lcd_y = 1;
  2873  001B84  0E01               	movlw	1
  2874  001B86  6E74               	movwf	_lcd_y^0,c
  2875  001B88                     l2519:
  2876                           
  2877                           ;./lcd.h: 115:       LCDGoto(lcd_x, lcd_y);
  2878  001B88  C074  F005         	movff	_lcd_y,LCDGoto@p_1
  2879  001B8C  5075               	movf	_lcd_x^0,w,c
  2880  001B8E  ECD9  F00D         	call	_LCDGoto
  2881  001B92                     l2521:
  2882                           
  2883                           ;./lcd.h: 117:   }
  2884  001B92  2A09               	incf	LCDStr@i^0,f,c
  2885  001B94                     l2523:
  2886  001B94  5009               	movf	LCDStr@i^0,w,c
  2887  001B96  2407               	addwf	LCDStr@str^0,w,c
  2888  001B98  6ED9               	movwf	fsr2l,c
  2889  001B9A  0E00               	movlw	0
  2890  001B9C  2008               	addwfc	(LCDStr@str+1)^0,w,c
  2891  001B9E  6EDA               	movwf	fsr2h,c
  2892  001BA0  50DF               	movf	indf2,w,c
  2893  001BA2  A4D8               	btfss	status,2,c
  2894  001BA4  EFD6  F00D         	goto	u2041
  2895  001BA8  EFD8  F00D         	goto	u2040
  2896  001BAC                     u2041:
  2897  001BAC  EFA3  F00D         	goto	l2505
  2898  001BB0                     u2040:
  2899  001BB0  0012               	return		;funcret
  2900  001BB2                     __end_of_LCDStr:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _InitLCD *****************
  2904 ;; Defined at:
  2905 ;;		line 122 in file "./lcd.h"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    3
  2926 ;; This function calls:
  2927 ;;		_LCDCmd
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text14
  2934  001EF2                     __ptext14:
  2935                           	callstack 0
  2936  001EF2                     _InitLCD:
  2937                           	callstack 27
  2938  001EF2                     
  2939                           ;./lcd.h: 123:   TRISEbits.RE1 = 0;
  2940  001EF2  9296               	bcf	150,1,c	;volatile
  2941                           
  2942                           ;./lcd.h: 124:   TRISEbits.RE2 = 0;
  2943  001EF4  9496               	bcf	150,2,c	;volatile
  2944  001EF6                     
  2945                           ;./lcd.h: 125:   TRISD = 0;
  2946  001EF6  0E00               	movlw	0
  2947  001EF8  6E95               	movwf	149,c	;volatile
  2948  001EFA                     
  2949                           ;./lcd.h: 127:   PORTEbits.RE1 = 0;
  2950  001EFA  9284               	bcf	132,1,c	;volatile
  2951  001EFC                     
  2952                           ;./lcd.h: 128:   PORTEbits.RE2 = 0;
  2953  001EFC  9484               	bcf	132,2,c	;volatile
  2954  001EFE                     
  2955                           ;./lcd.h: 129:   LCDCmd(0x38);
  2956  001EFE  0E38               	movlw	56
  2957  001F00  ECAB  F00F         	call	_LCDCmd
  2958  001F04                     
  2959                           ;./lcd.h: 130:   LCDCmd(0x08);
  2960  001F04  0E08               	movlw	8
  2961  001F06  ECAB  F00F         	call	_LCDCmd
  2962  001F0A                     
  2963                           ;./lcd.h: 131:   LCDCmd(0x0C);
  2964  001F0A  0E0C               	movlw	12
  2965  001F0C  ECAB  F00F         	call	_LCDCmd
  2966  001F10                     
  2967                           ;./lcd.h: 132:   LCDCmd(0x06);
  2968  001F10  0E06               	movlw	6
  2969  001F12  ECAB  F00F         	call	_LCDCmd
  2970  001F16                     
  2971                           ;./lcd.h: 133:   LCDCmd(0x01);
  2972  001F16  0E01               	movlw	1
  2973  001F18  ECAB  F00F         	call	_LCDCmd
  2974  001F1C                     
  2975                           ;./lcd.h: 134:   LCDCmd(0x80);
  2976  001F1C  0E80               	movlw	128
  2977  001F1E  ECAB  F00F         	call	_LCDCmd
  2978  001F22  0012               	return		;funcret
  2979  001F24                     __end_of_InitLCD:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _AddCustomCharacters *****************
  2983 ;; Defined at:
  2984 ;;		line 159 in file "./lcd.h"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    5
  3005 ;; This function calls:
  3006 ;;		_LCDAddSpecialCharacter
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text15
  3013  001C26                     __ptext15:
  3014                           	callstack 0
  3015  001C26                     _AddCustomCharacters:
  3016                           	callstack 25
  3017  001C26                     
  3018                           ;./lcd.h: 160:     LCDAddSpecialCharacter(0, teamA_player);
  3019  001C26  0EB8               	movlw	low _teamA_player
  3020  001C28  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3021  001C2A  0E00               	movlw	high _teamA_player
  3022  001C2C  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3023  001C2E  0E00               	movlw	0
  3024  001C30  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3025                           
  3026                           ;./lcd.h: 161:     LCDAddSpecialCharacter(1, teamB_player);
  3027  001C34  0EB0               	movlw	low _teamB_player
  3028  001C36  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3029  001C38  0E00               	movlw	high _teamB_player
  3030  001C3A  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3031  001C3C  0E01               	movlw	1
  3032  001C3E  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3033                           
  3034                           ;./lcd.h: 162:     LCDAddSpecialCharacter(2, selected_teamA_player);
  3035  001C42  0EA8               	movlw	low _selected_teamA_player
  3036  001C44  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3037  001C46  0E00               	movlw	high _selected_teamA_player
  3038  001C48  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3039  001C4A  0E02               	movlw	2
  3040  001C4C  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3041                           
  3042                           ;./lcd.h: 163:     LCDAddSpecialCharacter(3, selected_teamB_player);
  3043  001C50  0EA0               	movlw	low _selected_teamB_player
  3044  001C52  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3045  001C54  0E00               	movlw	high _selected_teamB_player
  3046  001C56  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3047  001C58  0E03               	movlw	3
  3048  001C5A  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3049                           
  3050                           ;./lcd.h: 164:     LCDAddSpecialCharacter(4, selected_teamA_player_with_frisbee);
  3051  001C5E  0E98               	movlw	low _selected_teamA_player_with_frisbee
  3052  001C60  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3053  001C62  0E00               	movlw	high _selected_teamA_player_with_frisbee
  3054  001C64  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3055  001C66  0E04               	movlw	4
  3056  001C68  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3057                           
  3058                           ;./lcd.h: 165:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
  3059  001C6C  0E90               	movlw	low _selected_teamB_player_with_frisbee
  3060  001C6E  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3061  001C70  0E00               	movlw	high _selected_teamB_player_with_frisbee
  3062  001C72  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3063  001C74  0E05               	movlw	5
  3064  001C76  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3065                           
  3066                           ;./lcd.h: 166:     LCDAddSpecialCharacter(6, frisbeeChar);
  3067  001C7A  0E88               	movlw	low _frisbeeChar
  3068  001C7C  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3069  001C7E  0E00               	movlw	high _frisbeeChar
  3070  001C80  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3071  001C82  0E06               	movlw	6
  3072  001C84  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3073                           
  3074                           ;./lcd.h: 167:     LCDAddSpecialCharacter(7, frisbee_target);
  3075  001C88  0E80               	movlw	low _frisbee_target
  3076  001C8A  6E07               	movwf	LCDAddSpecialCharacter@data^0,c
  3077  001C8C  0E00               	movlw	high _frisbee_target
  3078  001C8E  6E08               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3079  001C90  0E07               	movlw	7
  3080  001C92  ECFD  F00E         	call	_LCDAddSpecialCharacter
  3081  001C96  0012               	return		;funcret
  3082  001C98                     __end_of_AddCustomCharacters:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _LCDAddSpecialCharacter *****************
  3086 ;; Defined at:
  3087 ;;		line 143 in file "./lcd.h"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  character_in    1    wreg     unsigned char 
  3090 ;;  data            2    6[COMRAM] PTR unsigned char 
  3091 ;;		 -> frisbee_target(8), frisbeeChar(8), selected_teamB_player_with_frisbee(8), selected_teamA_player_with_frisbee(8),
      + 
  3092 ;;		 -> selected_teamB_player(8), selected_teamA_player(8), teamB_player(8), teamA_player(8), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  character_in    1    8[COMRAM] unsigned char 
  3095 ;;  i               1    9[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;Total ram usage:        4 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    4
  3112 ;; This function calls:
  3113 ;;		_LCDCmd
  3114 ;;		_LCDDat
  3115 ;;		_LCDGoto
  3116 ;; This function is called by:
  3117 ;;		_AddCustomCharacters
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text16
  3122  001DFA                     __ptext16:
  3123                           	callstack 0
  3124  001DFA                     _LCDAddSpecialCharacter:
  3125                           	callstack 25
  3126                           
  3127                           ;incstack = 0
  3128                           ;LCDAddSpecialCharacter@character_index stored from wreg
  3129  001DFA  6E09               	movwf	LCDAddSpecialCharacter@character_index^0,c
  3130  001DFC                     
  3131                           ;./lcd.h: 149:     LCDCmd(0b01000000+(character_index*8));
  3132  001DFC  5009               	movf	LCDAddSpecialCharacter@character_index^0,w,c
  3133  001DFE  0D08               	mullw	8
  3134  001E00  50F3               	movf	243,w,c
  3135  001E02  0F40               	addlw	64
  3136  001E04  ECAB  F00F         	call	_LCDCmd
  3137  001E08                     
  3138                           ;./lcd.h: 150:     for(byte i=0; i < 8; i++) {
  3139  001E08  0E00               	movlw	0
  3140  001E0A  6E0A               	movwf	LCDAddSpecialCharacter@i^0,c
  3141  001E0C                     l2487:
  3142                           
  3143                           ;./lcd.h: 151:         LCDDat(data[i]);
  3144  001E0C  500A               	movf	LCDAddSpecialCharacter@i^0,w,c
  3145  001E0E  2407               	addwf	LCDAddSpecialCharacter@data^0,w,c
  3146  001E10  6ED9               	movwf	fsr2l,c
  3147  001E12  0E00               	movlw	0
  3148  001E14  2008               	addwfc	(LCDAddSpecialCharacter@data+1)^0,w,c
  3149  001E16  6EDA               	movwf	fsr2h,c
  3150  001E18  50DF               	movf	indf2,w,c
  3151  001E1A  EC92  F00F         	call	_LCDDat
  3152  001E1E                     
  3153                           ;./lcd.h: 152:     }
  3154  001E1E  2A0A               	incf	LCDAddSpecialCharacter@i^0,f,c
  3155  001E20  0E07               	movlw	7
  3156  001E22  640A               	cpfsgt	LCDAddSpecialCharacter@i^0,c
  3157  001E24  EF16  F00F         	goto	u2001
  3158  001E28  EF18  F00F         	goto	u2000
  3159  001E2C                     u2001:
  3160  001E2C  EF06  F00F         	goto	l2487
  3161  001E30                     u2000:
  3162  001E30                     
  3163                           ;./lcd.h: 154:     LCDGoto(lcd_x, lcd_y);
  3164  001E30  C074  F005         	movff	_lcd_y,LCDGoto@p_1
  3165  001E34  5075               	movf	_lcd_x^0,w,c
  3166  001E36  ECD9  F00D         	call	_LCDGoto
  3167  001E3A  0012               	return		;funcret
  3168  001E3C                     __end_of_LCDAddSpecialCharacter:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _LCDGoto *****************
  3172 ;; Defined at:
  3173 ;;		line 86 in file "./lcd.h"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  p_2             1    wreg     unsigned char 
  3176 ;;  p_1             1    4[COMRAM] unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  p_2             1    5[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    3
  3195 ;; This function calls:
  3196 ;;		_LCDCmd
  3197 ;; This function is called by:
  3198 ;;		_LCDStr
  3199 ;;		_LCDAddSpecialCharacter
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text17
  3205  001BB2                     __ptext17:
  3206                           	callstack 0
  3207  001BB2                     _LCDGoto:
  3208                           	callstack 26
  3209                           
  3210                           ;incstack = 0
  3211                           ;LCDGoto@p_2 stored from wreg
  3212  001BB2  6E06               	movwf	LCDGoto@p_2^0,c
  3213  001BB4                     
  3214                           ;./lcd.h: 87:   if(p_1==1) {
  3215  001BB4  0405               	decf	LCDGoto@p_1^0,w,c
  3216  001BB6  A4D8               	btfss	status,2,c
  3217  001BB8  EFE0  F00D         	goto	u1931
  3218  001BBC  EFE2  F00D         	goto	u1930
  3219  001BC0                     u1931:
  3220  001BC0  EFE9  F00D         	goto	l2423
  3221  001BC4                     u1930:
  3222  001BC4                     
  3223                           ;./lcd.h: 88:     LCDCmd(0x80 +((p_2-1)%16));
  3224  001BC4  0406               	decf	LCDGoto@p_2^0,w,c
  3225  001BC6  0B0F               	andlw	15
  3226  001BC8  0F80               	addlw	128
  3227  001BCA  ECAB  F00F         	call	_LCDCmd
  3228                           
  3229                           ;./lcd.h: 89:   }
  3230  001BCE  EF0E  F00E         	goto	l2433
  3231  001BD2                     l2423:
  3232  001BD2  0E02               	movlw	2
  3233  001BD4  1805               	xorwf	LCDGoto@p_1^0,w,c
  3234  001BD6  A4D8               	btfss	status,2,c
  3235  001BD8  EFF0  F00D         	goto	u1941
  3236  001BDC  EFF2  F00D         	goto	u1940
  3237  001BE0                     u1941:
  3238  001BE0  EFF9  F00D         	goto	l2427
  3239  001BE4                     u1940:
  3240  001BE4                     
  3241                           ;./lcd.h: 91:     LCDCmd(0xC0 +((p_2-1)%16));
  3242  001BE4  0406               	decf	LCDGoto@p_2^0,w,c
  3243  001BE6  0B0F               	andlw	15
  3244  001BE8  0FC0               	addlw	192
  3245  001BEA  ECAB  F00F         	call	_LCDCmd
  3246                           
  3247                           ;./lcd.h: 92:   }
  3248  001BEE  EF0E  F00E         	goto	l2433
  3249  001BF2                     l2427:
  3250  001BF2  0E03               	movlw	3
  3251  001BF4  1805               	xorwf	LCDGoto@p_1^0,w,c
  3252  001BF6  A4D8               	btfss	status,2,c
  3253  001BF8  EF00  F00E         	goto	u1951
  3254  001BFC  EF02  F00E         	goto	u1950
  3255  001C00                     u1951:
  3256  001C00  EF09  F00E         	goto	l2431
  3257  001C04                     u1950:
  3258  001C04                     
  3259                           ;./lcd.h: 94:     LCDCmd(0x90 +((p_2-1)%16));
  3260  001C04  0406               	decf	LCDGoto@p_2^0,w,c
  3261  001C06  0B0F               	andlw	15
  3262  001C08  0F90               	addlw	144
  3263  001C0A  ECAB  F00F         	call	_LCDCmd
  3264                           
  3265                           ;./lcd.h: 95:   }
  3266  001C0E  EF0E  F00E         	goto	l2433
  3267  001C12                     l2431:
  3268                           
  3269                           ;./lcd.h: 97:     LCDCmd(0xD0 +((p_2-1)%16));
  3270  001C12  0406               	decf	LCDGoto@p_2^0,w,c
  3271  001C14  0B0F               	andlw	15
  3272  001C16  0FD0               	addlw	208
  3273  001C18  ECAB  F00F         	call	_LCDCmd
  3274  001C1C                     l2433:
  3275                           
  3276                           ;./lcd.h: 99:   lcd_x = p_2;
  3277  001C1C  C006  F075         	movff	LCDGoto@p_2,_lcd_x
  3278  001C20                     
  3279                           ;./lcd.h: 100:   lcd_y = p_1;
  3280  001C20  C005  F074         	movff	LCDGoto@p_1,_lcd_y
  3281  001C24  0012               	return		;funcret
  3282  001C26                     __end_of_LCDGoto:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _LCDCmd *****************
  3286 ;; Defined at:
  3287 ;;		line 62 in file "./lcd.h"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  cmd             1    wreg     unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  cmd             1    3[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    2
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_LCDGoto
  3312 ;;		_InitLCD
  3313 ;;		_LCDAddSpecialCharacter
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text18
  3318  001F56                     __ptext18:
  3319                           	callstack 0
  3320  001F56                     _LCDCmd:
  3321                           	callstack 26
  3322                           
  3323                           ;incstack = 0
  3324                           ;LCDCmd@cmd stored from wreg
  3325  001F56  6E04               	movwf	LCDCmd@cmd^0,c
  3326  001F58                     
  3327                           ;./lcd.h: 63:   PORTEbits.RE1 = 0;
  3328  001F58  9284               	bcf	132,1,c	;volatile
  3329                           
  3330                           ;./lcd.h: 64:   PORTEbits.RE2 = 0;
  3331  001F5A  9484               	bcf	132,2,c	;volatile
  3332  001F5C                     
  3333                           ;./lcd.h: 65:   PORTD = cmd;
  3334  001F5C  C004  FF83         	movff	LCDCmd@cmd,3971	;volatile
  3335  001F60                     
  3336                           ;./lcd.h: 66:   PORTEbits.RE1 = 1;
  3337  001F60  8284               	bsf	132,1,c	;volatile
  3338  001F62                     
  3339                           ;./lcd.h: 67:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3340  001F62  0E07               	movlw	7
  3341  001F64  6E03               	movwf	??_LCDCmd^0,c
  3342  001F66  0E7D               	movlw	125
  3343  001F68                     u2087:
  3344  001F68  2EE8               	decfsz	wreg,f,c
  3345  001F6A  D7FE               	bra	u2087
  3346  001F6C  2E03               	decfsz	??_LCDCmd^0,f,c
  3347  001F6E  D7FC               	bra	u2087
  3348  001F70  F000               	nop	
  3349  001F72                     
  3350                           ;./lcd.h: 68:   PORTEbits.RE1 = 0;
  3351  001F72  9284               	bcf	132,1,c	;volatile
  3352  001F74                     
  3353                           ;./lcd.h: 69:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3354  001F74  0E07               	movlw	7
  3355  001F76  6E03               	movwf	??_LCDCmd^0,c
  3356  001F78  0E7D               	movlw	125
  3357  001F7A                     u2097:
  3358  001F7A  2EE8               	decfsz	wreg,f,c
  3359  001F7C  D7FE               	bra	u2097
  3360  001F7E  2E03               	decfsz	??_LCDCmd^0,f,c
  3361  001F80  D7FC               	bra	u2097
  3362  001F82  F000               	nop	
  3363  001F84  0012               	return		;funcret
  3364  001F86                     __end_of_LCDCmd:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _LCDDat *****************
  3368 ;; Defined at:
  3369 ;;		line 72 in file "./lcd.h"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  dat             1    wreg     unsigned char 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  dat             1    3[COMRAM] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;Total ram usage:        2 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    2
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_LCDStr
  3394 ;;		_LCDAddSpecialCharacter
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text19
  3400  001F24                     __ptext19:
  3401                           	callstack 0
  3402  001F24                     _LCDDat:
  3403                           	callstack 27
  3404                           
  3405                           ;incstack = 0
  3406                           ;LCDDat@dat stored from wreg
  3407  001F24  6E04               	movwf	LCDDat@dat^0,c
  3408  001F26                     
  3409                           ;./lcd.h: 73:   PORTEbits.RE1 = 0;
  3410  001F26  9284               	bcf	132,1,c	;volatile
  3411                           
  3412                           ;./lcd.h: 74:   PORTEbits.RE2 = 1;
  3413  001F28  8484               	bsf	132,2,c	;volatile
  3414  001F2A                     
  3415                           ;./lcd.h: 75:   PORTD = dat;
  3416  001F2A  C004  FF83         	movff	LCDDat@dat,3971	;volatile
  3417  001F2E                     
  3418                           ;./lcd.h: 76:   PORTEbits.RE1 = 1;
  3419  001F2E  8284               	bsf	132,1,c	;volatile
  3420  001F30                     
  3421                           ;./lcd.h: 77:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3422  001F30  0E07               	movlw	7
  3423  001F32  6E03               	movwf	??_LCDDat^0,c
  3424  001F34  0E7D               	movlw	125
  3425  001F36                     u2107:
  3426  001F36  2EE8               	decfsz	wreg,f,c
  3427  001F38  D7FE               	bra	u2107
  3428  001F3A  2E03               	decfsz	??_LCDDat^0,f,c
  3429  001F3C  D7FC               	bra	u2107
  3430  001F3E  F000               	nop	
  3431  001F40                     
  3432                           ;./lcd.h: 78:   PORTEbits.RE1 = 0;
  3433  001F40  9284               	bcf	132,1,c	;volatile
  3434  001F42                     
  3435                           ;./lcd.h: 79:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3436  001F42  0E07               	movlw	7
  3437  001F44  6E03               	movwf	??_LCDDat^0,c
  3438  001F46  0E7D               	movlw	125
  3439  001F48                     u2117:
  3440  001F48  2EE8               	decfsz	wreg,f,c
  3441  001F4A  D7FE               	bra	u2117
  3442  001F4C  2E03               	decfsz	??_LCDDat^0,f,c
  3443  001F4E  D7FC               	bra	u2117
  3444  001F50  F000               	nop	
  3445  001F52                     
  3446                           ;./lcd.h: 80:   PORTEbits.RE2 = 0;
  3447  001F52  9484               	bcf	132,2,c	;volatile
  3448  001F54  0012               	return		;funcret
  3449  001F56                     __end_of_LCDDat:
  3450                           	callstack 0
  3451                           
  3452 ;; *************** function _highIsr *****************
  3453 ;; Defined at:
  3454 ;;		line 38 in file "main.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  aminakoyum      2    0        int 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:        2 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    1
  3475 ;; This function calls:
  3476 ;;		_SetupDebouncingTimer
  3477 ;; This function is called by:
  3478 ;;		Interrupt level 2
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	intcode
  3483  000008                     __pintcode:
  3484                           	callstack 0
  3485  000008                     _highIsr:
  3486                           	callstack 21
  3487                           
  3488                           ;incstack = 0
  3489  000008  8276               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3490  00000A  ED50  F00D         	call	int_func,f	;refresh shadow registers
  3491                           
  3492                           	psect	intcode_body
  3493  001AA0                     __pintcode_body:
  3494                           	callstack 21
  3495  001AA0                     int_func:
  3496                           	callstack 21
  3497  001AA0  0006               	pop		; remove dummy address from shadow register refresh
  3498  001AA2                     
  3499                           ;main.c: 39:     if (INTCONbits.TMR0IF) {
  3500  001AA2  A4F2               	btfss	242,2,c	;volatile
  3501  001AA4  EF56  F00D         	goto	i2u141_41
  3502  001AA8  EF58  F00D         	goto	i2u141_40
  3503  001AAC                     i2u141_41:
  3504  001AAC  EF5D  F00D         	goto	i2l2061
  3505  001AB0                     i2u141_40:
  3506  001AB0                     
  3507                           ;main.c: 40:         acceptInterrupts = 1;
  3508  001AB0  0E01               	movlw	1
  3509  001AB2  0100               	movlb	0	; () banked
  3510  001AB4  6FF0               	movwf	_acceptInterrupts& (0+255),b
  3511  001AB6                     
  3512                           ; BSR set to: 0
  3513                           ;main.c: 41:         T0CONbits.TMR0ON = 0;
  3514  001AB6  9ED5               	bcf	213,7,c	;volatile
  3515  001AB8                     
  3516                           ; BSR set to: 0
  3517                           ;main.c: 42:         INTCONbits.TMR0IF = 0;
  3518  001AB8  94F2               	bcf	242,2,c	;volatile
  3519  001ABA                     i2l2061:
  3520  001ABA  5081               	movf	129,w,c	;volatile
  3521  001ABC                     
  3522                           ;main.c: 47:     if (INTCONbits.INT0IF ){
  3523  001ABC  A2F2               	btfss	242,1,c	;volatile
  3524  001ABE  EF63  F00D         	goto	i2u142_41
  3525  001AC2  EF65  F00D         	goto	i2u142_40
  3526  001AC6                     i2u142_41:
  3527  001AC6  EF72  F00D         	goto	i2l2071
  3528  001ACA                     i2u142_40:
  3529  001ACA                     
  3530                           ;main.c: 48:         if (acceptInterrupts) {
  3531  001ACA  0100               	movlb	0	; () banked
  3532  001ACC  51F0               	movf	_acceptInterrupts& (0+255),w,b
  3533  001ACE  B4D8               	btfsc	status,2,c
  3534  001AD0  EF6C  F00D         	goto	i2u143_41
  3535  001AD4  EF6E  F00D         	goto	i2u143_40
  3536  001AD8                     i2u143_41:
  3537  001AD8  EF72  F00D         	goto	i2l2071
  3538  001ADC                     i2u143_40:
  3539  001ADC                     
  3540                           ; BSR set to: 0
  3541                           ;main.c: 49:             a++;
  3542  001ADC  4A72               	infsnz	_a^0,f,c
  3543  001ADE  2A73               	incf	(_a+1)^0,f,c
  3544  001AE0                     
  3545                           ; BSR set to: 0
  3546                           ;main.c: 50:             SetupDebouncingTimer();
  3547  001AE0  ECC3  F00F         	call	_SetupDebouncingTimer	;wreg free
  3548  001AE4                     i2l2071:
  3549                           
  3550                           ;main.c: 54:     if (INTCON3bits.INT1IF ) {
  3551  001AE4  A0F0               	btfss	240,0,c	;volatile
  3552  001AE6  EF77  F00D         	goto	i2u144_41
  3553  001AEA  EF79  F00D         	goto	i2u144_40
  3554  001AEE                     i2u144_41:
  3555  001AEE  EF86  F00D         	goto	i2l2079
  3556  001AF2                     i2u144_40:
  3557  001AF2                     
  3558                           ;main.c: 55:         if (acceptInterrupts) {
  3559  001AF2  0100               	movlb	0	; () banked
  3560  001AF4  51F0               	movf	_acceptInterrupts& (0+255),w,b
  3561  001AF6  B4D8               	btfsc	status,2,c
  3562  001AF8  EF80  F00D         	goto	i2u145_41
  3563  001AFC  EF82  F00D         	goto	i2u145_40
  3564  001B00                     i2u145_41:
  3565  001B00  EF86  F00D         	goto	i2l2079
  3566  001B04                     i2u145_40:
  3567  001B04                     
  3568                           ; BSR set to: 0
  3569                           ;main.c: 56:             b++;
  3570  001B04  4A70               	infsnz	_b^0,f,c
  3571  001B06  2A71               	incf	(_b+1)^0,f,c
  3572  001B08                     
  3573                           ; BSR set to: 0
  3574                           ;main.c: 57:             SetupDebouncingTimer();
  3575  001B08  ECC3  F00F         	call	_SetupDebouncingTimer	;wreg free
  3576  001B0C                     i2l2079:
  3577                           
  3578                           ;main.c: 61:     if (INTCONbits.RBIF) {
  3579  001B0C  A0F2               	btfss	242,0,c	;volatile
  3580  001B0E  EF8B  F00D         	goto	i2u146_41
  3581  001B12  EF8D  F00D         	goto	i2u146_40
  3582  001B16                     i2u146_41:
  3583  001B16  EF9A  F00D         	goto	i2l2087
  3584  001B1A                     i2u146_40:
  3585  001B1A                     
  3586                           ;main.c: 62:         if (acceptInterrupts) {
  3587  001B1A  0100               	movlb	0	; () banked
  3588  001B1C  51F0               	movf	_acceptInterrupts& (0+255),w,b
  3589  001B1E  B4D8               	btfsc	status,2,c
  3590  001B20  EF94  F00D         	goto	i2u147_41
  3591  001B24  EF96  F00D         	goto	i2u147_40
  3592  001B28                     i2u147_41:
  3593  001B28  EF9A  F00D         	goto	i2l2087
  3594  001B2C                     i2u147_40:
  3595  001B2C                     
  3596                           ; BSR set to: 0
  3597                           ;main.c: 84:             c++;
  3598  001B2C  4BC4               	infsnz	_c& (0+255),f,b
  3599  001B2E  2BC5               	incf	(_c+1)& (0+255),f,b
  3600  001B30                     
  3601                           ; BSR set to: 0
  3602                           ;main.c: 85:             SetupDebouncingTimer();
  3603  001B30  ECC3  F00F         	call	_SetupDebouncingTimer	;wreg free
  3604  001B34                     i2l2087:
  3605                           
  3606                           ;main.c: 88:     INTCON3bits.INT1IF = 0;
  3607  001B34  90F0               	bcf	240,0,c	;volatile
  3608  001B36                     
  3609                           ;main.c: 89:     INTCONbits.INT0IF = 0;
  3610  001B36  92F2               	bcf	242,1,c	;volatile
  3611  001B38                     
  3612                           ;main.c: 90:     INTCONbits.RBIF = 0;
  3613  001B38  90F2               	bcf	242,0,c	;volatile
  3614  001B3A  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3615  001B3C  0011               	retfie		f
  3616  001B3E                     __end_of_highIsr:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _SetupDebouncingTimer *****************
  3620 ;; Defined at:
  3621 ;;		line 14 in file "main.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_highIsr
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text21
  3649  001F86                     __ptext21:
  3650                           	callstack 0
  3651  001F86                     _SetupDebouncingTimer:
  3652                           	callstack 21
  3653  001F86                     
  3654                           ;main.c: 15:     acceptInterrupts = 0;
  3655  001F86  0E00               	movlw	0
  3656  001F88  0100               	movlb	0	; () banked
  3657  001F8A  6FF0               	movwf	_acceptInterrupts& (0+255),b
  3658                           
  3659                           ;main.c: 16:     TMR0L = 0;
  3660  001F8C  0E00               	movlw	0
  3661  001F8E  6ED6               	movwf	214,c	;volatile
  3662                           
  3663                           ;main.c: 17:     TMR0H = 0;
  3664  001F90  0E00               	movlw	0
  3665  001F92  6ED7               	movwf	215,c	;volatile
  3666  001F94                     
  3667                           ; BSR set to: 0
  3668                           ;main.c: 18:     T0CONbits.TMR0ON = 1;
  3669  001F94  8ED5               	bsf	213,7,c	;volatile
  3670  001F96                     
  3671                           ; BSR set to: 0
  3672  001F96  0012               	return		;funcret
  3673  001F98                     __end_of_SetupDebouncingTimer:
  3674                           	callstack 0
  3675                           
  3676                           	psect	rparam
  3677  0000                     
  3678                           	psect	temp
  3679  000076                     btemp:
  3680                           	callstack 0
  3681  000076                     	ds	1
  3682  0000                     int$flags	set	btemp
  3683  0000                     wtemp8	set	btemp+1
  3684  0000                     ttemp5	set	btemp+1
  3685  0000                     ttemp6	set	btemp+4
  3686  0000                     ttemp7	set	btemp+8
  3687                           
  3688                           	psect	idloc
  3689                           
  3690                           ;Config register IDLOC0 @ 0x200000
  3691                           ;	unspecified, using default values
  3692  200000                     	org	2097152
  3693  200000  FF                 	db	255
  3694                           
  3695                           ;Config register IDLOC1 @ 0x200001
  3696                           ;	unspecified, using default values
  3697  200001                     	org	2097153
  3698  200001  FF                 	db	255
  3699                           
  3700                           ;Config register IDLOC2 @ 0x200002
  3701                           ;	unspecified, using default values
  3702  200002                     	org	2097154
  3703  200002  FF                 	db	255
  3704                           
  3705                           ;Config register IDLOC3 @ 0x200003
  3706                           ;	unspecified, using default values
  3707  200003                     	org	2097155
  3708  200003  FF                 	db	255
  3709                           
  3710                           ;Config register IDLOC4 @ 0x200004
  3711                           ;	unspecified, using default values
  3712  200004                     	org	2097156
  3713  200004  FF                 	db	255
  3714                           
  3715                           ;Config register IDLOC5 @ 0x200005
  3716                           ;	unspecified, using default values
  3717  200005                     	org	2097157
  3718  200005  FF                 	db	255
  3719                           
  3720                           ;Config register IDLOC6 @ 0x200006
  3721                           ;	unspecified, using default values
  3722  200006                     	org	2097158
  3723  200006  FF                 	db	255
  3724                           
  3725                           ;Config register IDLOC7 @ 0x200007
  3726                           ;	unspecified, using default values
  3727  200007                     	org	2097159
  3728  200007  FF                 	db	255
  3729                           
  3730                           	psect	config
  3731                           
  3732                           ; Padding undefined space
  3733  300000                     	org	3145728
  3734  300000  FF                 	db	255
  3735                           
  3736                           ;Config register CONFIG1H @ 0x300001
  3737                           ;	unspecified, using default values
  3738                           ;	Oscillator Selection bits
  3739                           ;	OSC = 0x7, unprogrammed default
  3740                           ;	Fail-Safe Clock Monitor Enable bit
  3741                           ;	FCMEN = 0x0, unprogrammed default
  3742                           ;	Internal/External Oscillator Switchover bit
  3743                           ;	IESO = 0x0, unprogrammed default
  3744  300001                     	org	3145729
  3745  300001  07                 	db	7
  3746                           
  3747                           ;Config register CONFIG2L @ 0x300002
  3748                           ;	unspecified, using default values
  3749                           ;	Power-up Timer Enable bit
  3750                           ;	PWRT = 0x1, unprogrammed default
  3751                           ;	Brown-out Reset Enable bits
  3752                           ;	BOREN = 0x3, unprogrammed default
  3753                           ;	Brown Out Reset Voltage bits
  3754                           ;	BORV = 0x3, unprogrammed default
  3755  300002                     	org	3145730
  3756  300002  1F                 	db	31
  3757                           
  3758                           ;Config register CONFIG2H @ 0x300003
  3759                           ;	unspecified, using default values
  3760                           ;	Watchdog Timer Enable bit
  3761                           ;	WDT = 0x1, unprogrammed default
  3762                           ;	Watchdog Timer Postscale Select bits
  3763                           ;	WDTPS = 0xF, unprogrammed default
  3764  300003                     	org	3145731
  3765  300003  1F                 	db	31
  3766                           
  3767                           ; Padding undefined space
  3768  300004                     	org	3145732
  3769  300004  FF                 	db	255
  3770                           
  3771                           ;Config register CONFIG3H @ 0x300005
  3772                           ;	unspecified, using default values
  3773                           ;	CCP2 MUX bit
  3774                           ;	CCP2MX = 0x1, unprogrammed default
  3775                           ;	PORTB A/D Enable bit
  3776                           ;	PBADEN = 0x1, unprogrammed default
  3777                           ;	Low-Power Timer1 Oscillator Enable bit
  3778                           ;	LPT1OSC = 0x0, unprogrammed default
  3779                           ;	MCLR Pin Enable bit
  3780                           ;	MCLRE = 0x1, unprogrammed default
  3781  300005                     	org	3145733
  3782  300005  83                 	db	131
  3783                           
  3784                           ;Config register CONFIG4L @ 0x300006
  3785                           ;	unspecified, using default values
  3786                           ;	Stack Full/Underflow Reset Enable bit
  3787                           ;	STVREN = 0x1, unprogrammed default
  3788                           ;	Single-Supply ICSP Enable bit
  3789                           ;	LVP = 0x1, unprogrammed default
  3790                           ;	Extended Instruction Set Enable bit
  3791                           ;	XINST = 0x0, unprogrammed default
  3792                           ;	Background Debugger Enable bit
  3793                           ;	DEBUG = 0x1, unprogrammed default
  3794  300006                     	org	3145734
  3795  300006  85                 	db	133
  3796                           
  3797                           ; Padding undefined space
  3798  300007                     	org	3145735
  3799  300007  FF                 	db	255
  3800                           
  3801                           ;Config register CONFIG5L @ 0x300008
  3802                           ;	unspecified, using default values
  3803                           ;	Code Protection bit
  3804                           ;	CP0 = 0x1, unprogrammed default
  3805                           ;	Code Protection bit
  3806                           ;	CP1 = 0x1, unprogrammed default
  3807                           ;	Code Protection bit
  3808                           ;	CP2 = 0x1, unprogrammed default
  3809                           ;	Code Protection bit
  3810                           ;	CP3 = 0x1, unprogrammed default
  3811  300008                     	org	3145736
  3812  300008  0F                 	db	15
  3813                           
  3814                           ;Config register CONFIG5H @ 0x300009
  3815                           ;	unspecified, using default values
  3816                           ;	Boot Block Code Protection bit
  3817                           ;	CPB = 0x1, unprogrammed default
  3818                           ;	Data EEPROM Code Protection bit
  3819                           ;	CPD = 0x1, unprogrammed default
  3820  300009                     	org	3145737
  3821  300009  C0                 	db	192
  3822                           
  3823                           ;Config register CONFIG6L @ 0x30000A
  3824                           ;	unspecified, using default values
  3825                           ;	Write Protection bit
  3826                           ;	WRT0 = 0x1, unprogrammed default
  3827                           ;	Write Protection bit
  3828                           ;	WRT1 = 0x1, unprogrammed default
  3829                           ;	Write Protection bit
  3830                           ;	WRT2 = 0x1, unprogrammed default
  3831                           ;	Write Protection bit
  3832                           ;	WRT3 = 0x1, unprogrammed default
  3833  30000A                     	org	3145738
  3834  30000A  0F                 	db	15
  3835                           
  3836                           ;Config register CONFIG6H @ 0x30000B
  3837                           ;	unspecified, using default values
  3838                           ;	Configuration Register Write Protection bit
  3839                           ;	WRTC = 0x1, unprogrammed default
  3840                           ;	Boot Block Write Protection bit
  3841                           ;	WRTB = 0x1, unprogrammed default
  3842                           ;	Data EEPROM Write Protection bit
  3843                           ;	WRTD = 0x1, unprogrammed default
  3844  30000B                     	org	3145739
  3845  30000B  E0                 	db	224
  3846                           
  3847                           ;Config register CONFIG7L @ 0x30000C
  3848                           ;	unspecified, using default values
  3849                           ;	Table Read Protection bit
  3850                           ;	EBTR0 = 0x1, unprogrammed default
  3851                           ;	Table Read Protection bit
  3852                           ;	EBTR1 = 0x1, unprogrammed default
  3853                           ;	Table Read Protection bit
  3854                           ;	EBTR2 = 0x1, unprogrammed default
  3855                           ;	Table Read Protection bit
  3856                           ;	EBTR3 = 0x1, unprogrammed default
  3857  30000C                     	org	3145740
  3858  30000C  0F                 	db	15
  3859                           
  3860                           ;Config register CONFIG7H @ 0x30000D
  3861                           ;	unspecified, using default values
  3862                           ;	Boot Block Table Read Protection bit
  3863                           ;	EBTRB = 0x1, unprogrammed default
  3864  30000D                     	org	3145741
  3865  30000D  40                 	db	64
  3866                           tosu	equ	0xFFF
  3867                           tosh	equ	0xFFE
  3868                           tosl	equ	0xFFD
  3869                           stkptr	equ	0xFFC
  3870                           pclatu	equ	0xFFB
  3871                           pclath	equ	0xFFA
  3872                           pcl	equ	0xFF9
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           indf0	equ	0xFEF
  3880                           postinc0	equ	0xFEE
  3881                           postdec0	equ	0xFED
  3882                           preinc0	equ	0xFEC
  3883                           plusw0	equ	0xFEB
  3884                           fsr0h	equ	0xFEA
  3885                           fsr0l	equ	0xFE9
  3886                           wreg	equ	0xFE8
  3887                           indf1	equ	0xFE7
  3888                           postinc1	equ	0xFE6
  3889                           postdec1	equ	0xFE5
  3890                           preinc1	equ	0xFE4
  3891                           plusw1	equ	0xFE3
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           bsr	equ	0xFE0
  3895                           indf2	equ	0xFDF
  3896                           postinc2	equ	0xFDE
  3897                           postdec2	equ	0xFDD
  3898                           preinc2	equ	0xFDC
  3899                           plusw2	equ	0xFDB
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        66
    BSS         136
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    107     117
    BANK0           128      9     113
    BANK1           256      0      90
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK0[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S996_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK0[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK0[5]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(BANK0[8]), frisbeeChar(BANK0[8]), selected_teamB_player_with_frisbee(BANK0[8]), selected_teamA_player_with_frisbee(BANK0[8]), 
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), teamB_player(BANK0[8]), teamA_player(BANK0[8]), 

    LCDStr@str	PTR const unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDStr->_LCDGoto
    _InitLCD->_LCDCmd
    _AddCustomCharacters->_LCDAddSpecialCharacter
    _LCDAddSpecialCharacter->_LCDGoto
    _LCDGoto->_LCDCmd

Critical Paths under _highIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   13103
                                            105 COMRAM     2     2      0
                                              0 BANK0      9     9      0
                _AddCustomCharacters
                            _InitLCD
                             _LCDDat
                            _LCDGoto
                             _LCDStr
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    8777
                                             89 COMRAM    16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _LCDStr                                               3     1      2    1281
                                              6 COMRAM     3     1      2
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _AddCustomCharacters                                  0     0      0    1793
             _LCDAddSpecialCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDAddSpecialCharacter                               4     2      2    1793
                                              6 COMRAM     4     2      2
                             _LCDCmd
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1     850
                                              4 COMRAM     2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      31
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      31
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _highIsr                                              2     2      0       1
                                              0 COMRAM     2     2      0
               _SetupDebouncingTimer
 ---------------------------------------------------------------------------------
 (10) _SetupDebouncingTimer                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddCustomCharacters
     _LCDAddSpecialCharacter
       _LCDCmd
       _LCDDat
       _LCDGoto
         _LCDCmd
   _InitLCD
     _LCDCmd
   _LCDDat
   _LCDGoto
     _LCDCmd
   _LCDStr
     _LCDDat
     _LCDGoto
       _LCDCmd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _highIsr (ROOT)
   _SetupDebouncingTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5A       7       35.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      9      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6B      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     140      34        0.0%
DATA                 0      0     140       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 24 19:00:37 2023

                                    _a 0072                                      _b 0070  
                                    _c 00C4             LCDAddSpecialCharacter@data 0007  
LCDAddSpecialCharacter@character_index 0009                                    l110 1F84  
                                  l113 1F54                                    l122 1C24  
                                  l130 1BB0                                    l141 1C96  
                                  l133 1F22                                    l311 17AE  
                                  l138 1E3A                                    l324 1912  
                                  l902 1A22                                    l905 1A64  
                                  l913 10A4                                    l907 1A9E  
                                  l915 10AC                                    l940 1496  
                                  l933 12E2                                    l951 1EB2  
                                  l954 1EBA                                    l946 1D5E  
                                  l947 1D66                                    l875 1DB4  
                                  l966 19DC                                    l974 1DF8  
                                  l983 1EF0                                    l977 1F9A  
                                  _abs 1E7C                                    _pad 19DE  
                                  wreg 000FE8                        __end_of_LCDGoto 1C26  
                                 ?_abs 0015                                   l2201 1960  
                                 l2203 1996                                   l2211 1DD4  
                                 l2301 18F2                                   l2213 1DD8  
                                 l2221 1EE4                                   l2231 165A  
                                 l2207 1DB6                                   l2215 1EBC  
                                 l2311 1A0E                                   l2241 169C  
                                 l2233 165E                                   l2225 1628  
                                 l2209 1DC2                                   l2217 1EC8  
                                 l2321 1A72                                   l2313 1A1A  
                                 l2305 19DE                                   l2401 12BA  
                                 l2411 1F30                                   l2331 1F58  
                                 l2251 16F6                                   l2243 16BA  
                                 l2235 166C                                   l2227 162C  
                                 l2219 1ECC                                   l2323 1A86  
                                 l2315 1A2E                                   l2307 19EC  
                                 l2413 1F40                                   l2405 1F26  
                                 l2341 1F74                                   l2333 1F5C  
                                 l2421 1BC4                                   l2253 1724  
                                 l2245 16C2                                   l2261 175E  
                                 l2237 168C                                   l2229 163A  
                                 l2317 1A42                                   l2309 1A00  
                                 l2501 1D42                                   l2415 1F42  
                                 l2407 1F2A                                   l2335 1F60  
                                 l2431 1C12                                   l2423 1BD2  
                                 l2511 1B6C                                   l2503 1B3E  
                                 l2263 176E                                   l2255 1744  
                                 l2247 16D6                                   l2239 1690  
                                 l2271 17B4                                   l2327 1E7C  
                                 l2319 1A46                                   l2351 107C  
                                 l2343 1006                                   l2417 1F52  
                                 l2409 1F2E                                   l2337 1F62  
                                 l2425 1BE4                                   l2433 1C1C  
                                 l2513 1B70                                   l2521 1B92  
                                 l2505 1B46                                   l2265 178E  
                                 l2257 1746                                   l2249 16E4  
                                 l2281 1814                                   l2273 17C2  
                                 l2329 1E96                                   l2193 1914  
                                 l2361 10D4                                   l2353 107E  
                                 l2345 1026                                   l2441 1316  
                                 l2601 150E                                   l2339 1F72  
                                 l2435 1C20                                   l2427 1BF2  
                                 l2419 1BB4                                   l2531 1EFC  
                                 l2515 1B72                                   l2507 1B58  
                                 l2523 1B94                                   l2259 1758  
                                 l2291 188A                                   l2283 1832  
                                 l2275 17E2                                   l2195 1926  
                                 l2371 1174                                   l2363 10DA  
                                 l2355 1098                                   l2347 104E  
                                 l2451 13BC                                   l2443 1328  
                                 l2611 154C                                   l2429 1C04  
                                 l2541 1F16                                   l2533 1EFE  
                                 l2525 1EF2                                   l2517 1B84  
                                 l2509 1B5A                                   l2293 18AA  
                                 l2285 183A                                   l2277 17E6  
                                 l2269 17B0                                   l2197 1938  
                                 l2381 121C                                   l2373 117A  
                                 l2365 10E2                                   l2357 10B4  
                                 l2349 106E                                   l2461 143A  
                                 l2445 132C                                   l2437 12E4  
                                 l2621 157A                                   l2613 1556  
                                 l2543 1F1C                                   l2535 1F04  
                                 l2527 1EF6                                   l2519 1B88  
                                 l2295 18BC                                   l2287 184E  
                                 l2279 17F4                                   l2199 1942  
                                 l2391 127E                                   l2383 1236  
                                 l2375 1180                                   l2367 10EC  
                                 l2359 10C6                                   l2455 13F4  
                                 l2447 1350                                   l2439 1308  
                                 l2471 1460                                   l2551 1D80  
                                 l2631 15B4                                   l2623 1584  
                                 l2615 155C                                   l2607 1518  
                                 l2481 1E08                                   l2545 1C26  
                                 l2537 1F0A                                   l2529 1EFA  
                                 l2289 185C                                   l2297 18C2  
                                 l2393 1284                                   l2385 1250  
                                 l2369 10F2                                   l2377 11E4  
                                 l2473 1484                                   l2457 1418  
                                 l2465 1446                                   l2449 1374  
                                 l2553 1D88                                   l2641 1614  
                                 l2633 15BE                                   l2625 15A0  
                                 l2617 1564                                   l2609 153E  
                                 l2561 14B6                                   l2491 1E20  
                                 l2539 1F10                                   l2299 18D2  
                                 l2395 1296                                   l2379 11FE  
                                 l2387 125E                                   l2467 1454  
                                 l2459 1426                                   l2555 1DA4  
                                 l2547 1D68                                   l2635 15DA  
                                 l2627 15AC                                   l2619 1572  
                                 l2571 14DC                                   l2563 14C0  
                                 l2493 1E30                                   l2397 12A2  
                                 l2389 1270                                   l2549 1D78  
                                 l2637 15EE                                   l2629 15B0  
                                 l2581 14E6                                   l2573 14DE  
                                 l2565 14D6                                   l2487 1E0C  
                                 l2479 1DFC                                   l2399 12AA  
                                 l2495 1D06                                   l2639 15F8  
                                 l2591 14F4                                   l2583 14E8  
                                 l2575 14E0                                   l2567 14D8  
                                 l2559 1498                                   l2489 1E1E  
                                 l2497 1D0E                                   l2593 14F8  
                                 l2585 14EA                                   l2577 14E2  
                                 l2569 14DA                                   l2499 1D1C  
                                 l2595 14FC                                   l2587 14EC  
                                 l2579 14E4                                   l2597 1500  
                                 l2589 14F0                                   ?_pad 0013  
                                 l2599 1504                                   STR_1 1001  
                                 STR_2 1001                                   STR_3 1001  
                                 u2000 1E30                                   u2001 1E2C  
                                 u2010 1D5E                                   u2011 1D5A  
                                 u2020 1B6C                                   u2021 1B68  
                                 u2030 1B84                                   u2031 1B80  
                                 u2040 1BB0                                   u2041 1BAC  
                                 u2107 1F36                                   u2060 153E  
                                 u2117 1F48                                   u2061 153A  
                                 u2070 1572                                   u2054 152A  
                                 u2071 156E                                   u2055 1526  
                                 u1600 163A                                   u1601 1636  
                                 u1610 166C                                   u1611 1668  
                                 u1700 185C                                   u1540 1926  
                                 u1621 1696                                   u1701 1858  
                                 u1541 1922                                   u1630 16BA  
                                 u1710 188A                                   u1550 1938  
                                 u2087 1F68                                   u1631 16B6  
                                 u1711 1886                                   u1551 1934  
                                 u1640 16E4                                   u1720 18D2  
                                 u1560 1960                                   u1800 104E  
                                 u2097 1F7A                                   u1641 16E0  
                                 u1721 18CE                                   u1561 195C  
                                 u1801 104A                                   u1650 1724  
                                 u1570 1996                                   u1730 19EC  
                                 u1810 107C                                   u1651 1720  
                                 u1571 1992                                   u1731 19E8  
                                 u1811 1078                                   u1660 176E  
                                 u1580 1DF8                                   u1740 1A0E  
                                 u1900 1270                                   u1820 1098  
                                 u1661 176A                                   u1581 1DF4  
                                 u1741 1A0A                                   u1901 126C  
                                 u1821 1094                                   u1670 17C2  
                                 u1590 1EE4                                   u1750 1A64  
                                 u1910 127E                                   u1830 10C6  
                                 u1671 17BE                                   u1591 1EE0  
                                 u1751 1A60                                   u1911 127A  
                                 u1831 10C2                                   u1680 17F4  
                                 u1760 1A72                                   u1920 1296  
                                 u1840 10D4                                   u1681 17F0  
                                 u1761 1A6E                                   u1921 1292  
                                 u1841 10D0                                   u1930 1BC4  
                                 u1690 1832                                   u1770 1E96  
                                 u1850 11FE                                   u1931 1BC0  
                                 u1691 182E                                   u1771 1E92  
                                 u1851 11FA                                   u1940 1BE4  
                                 u1860 121C                                   u1780 1036  
                                 u1941 1BE0                                   u1861 1218  
                                 u1781 1030                                   u1950 1C04  
                                 u1870 1236                                   u1790 1038  
                                 u1951 1C00                                   u1871 1232  
                                 u1880 1250                                   u1960 1308  
                                 u1881 124C                                   u1961 1304  
                                 u1890 125E                                   u1970 1350  
                                 u1891 125A                                   u1971 134C  
                                 u1980 1374                                   u1981 1370  
                                 u1990 1418                                   u1991 1414  
                                 abs@a 0015                                   _dbuf 00C6  
                                 _main 1498                                   _dtoa 1006  
                                 _objs 013C                                   _prec 006C  
                                 _nout 00C0                                   pad@i 001A  
                                 pad@p 0017                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr1l 000FE1                                   pad@w 001C  
                                 fsr2l 000FD9                                   btemp 0076  
                                 prodl 000FF3                                   start 000E  
                         ___param_bank 000000                        __end_of_InitLCD 1F24  
                                ??_abs 0017                                  ??_pad 0019  
                      __end_of___aodiv 17B0                                  ?_main 0001  
                                ?_dtoa 001E                        __end_of___aomod 1914  
                                _T0CON 000FD5                                  _T3CON 000FB1  
                                i2l152 1F96                                  i2l176 1B3A  
                         vfpfcnvrt@fmt 0044                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISD 000F95  
                      __end_of_highIsr 1B3E                                  _flags 006E  
                                _lcd_x 0075                                  _lcd_y 0074  
                                _fputc 1914                                  _fputs 1DB6  
                                pad@fp 0013                                  _width 00C2  
                                _putch 1F9A                                  main@i 00ED  
                                dtoa@d 0020                                  dtoa@i 0040  
                                dtoa@n 0038                                  dtoa@p 0032  
                                dtoa@s 0036                                  dtoa@w 0034  
                                tablat 000FF5                                  ttemp5 0077  
                                ttemp6 007A                                  ttemp7 007E  
                                status 000FD8                                  wtemp8 0077  
                      __end_of_sprintf 1DB6                        __initialization 1C98  
                         __end_of_main 1628                           __end_of_dtoa 12E4  
                               ??_main 006A                                 ??_dtoa 0028  
                        __activetblptr 000001                              ??_LCDGoto 0006  
                               _ADCON1 000FC1                                 ?_fputc 0003  
                               ?_fputs 000C                                 ?_putch 0001  
                               _LCDDat 1F24                                 _LCDCmd 1F56  
                               i2l2061 1ABA                                 i2l2053 1AA2  
                               i2l2071 1AE4                                 i2l2063 1ABC  
                               i2l2055 1AB0                                 i2l2081 1B1A  
                               i2l2073 1AF2                                 i2l2065 1ACA  
                               i2l2057 1AB6                                 i2l2091 1B38  
                               i2l2083 1B2C                                 i2l2075 1B04  
                               i2l2067 1ADC                                 i2l2059 1AB8  
                               i2l2085 1B30                                 i2l2077 1B08  
                               i2l2069 1AE0                                 _LCDStr 1B3E  
                               i2l2087 1B34                                 i2l2079 1B0C  
                               i2l2089 1B36                                 i2l1941 1F94  
                               i2l1939 1F86                              ??_InitLCD 0005  
                         vfprintf@cfmt 0058                              ??___aodiv 0013  
                            ??___aomod 0013                                 clear_0 1CD6  
                               clear_1 1CE2                                 clear_2 1CEE  
                               pad@buf 0015                              ??_highIsr 0001  
                               dtoa@fp 001E                                 _strlen 1EBC  
                               fputc@c 0003                                 fputs@c 0010  
                               fputs@i 0011                           __pdataCOMRAM 0074  
                               fputs@s 000C                          _frisbee_steps 0100  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               putch@c 0001                       __end_of_vfprintf 1D68  
                            ??_sprintf 0060                              LCDDat@dat 0004  
                            LCDCmd@cmd 0004                             __accesstop 0080  
              __end_of__initialization 1CF4                          ___rparam_used 000001  
         __size_of_AddCustomCharacters 0072                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1E3C                              LCDStr@str 0007  
                        __end_of_fputc 19DE               ??_LCDAddSpecialCharacter 0009  
                        __end_of_fputs 1DFA                          __end_of_putch 1F9C  
        __size_of_SetupDebouncingTimer 0012                                ??_fputc 0007  
                              ??_fputs 0010                                ??_putch 0003  
                              ?_LCDDat 0001                                ?_LCDCmd 0001  
                           __pbssBANK0 00C0                             __pbssBANK1 0100  
                              ?_LCDStr 0007                                LCDStr@i 0009  
                           _game_state 00EF                                ?_strlen 0003  
                              _LCDGoto 1BB2                     __size_of_vfpfcnvrt 01B4  
                      __size_of_LCDDat 0032                        __size_of_LCDCmd 0030  
                      __size_of_LCDStr 0074                                _InitLCD 1EF2  
                              __Hparam 0000                                __Lparam 0000  
                              ___aodiv 1628                                ___aomod 17B0  
                            ?_vfprintf 0052                           __psmallconst 1000  
      __size_of_LCDAddSpecialCharacter 0042                                __pcinit 1C98  
                              __ramtop 1000                                __ptext0 1498  
                              __ptext1 1D68                                __ptext2 1D06  
                              __ptext3 12E4                                __ptext4 1006  
                              __ptext5 19DE                                __ptext6 1EBC  
                              __ptext7 1DB6                                __ptext8 1914  
                              __ptext9 1F9A                                _highIsr 0008  
                            _T0CONbits 000FD5                        __size_of_strlen 0036  
                         __size_of_abs 0040                           __size_of_pad 00C2  
                            _T3CONbits 000FB1                                main@arr 00E6  
                              _sprintf 1D68                         __pintcode_body 1AA0  
                 end_of_initialization 1CF4                         _frisbee_target 0080  
                              fputc@fp 0005                                int_func 1AA0  
                              fputs@fp 000E                      __end_of_vfpfcnvrt 1498  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                             ??_vfprintf 0058  
                              strlen@a 0005                                strlen@s 0003  
                            _PORTEbits 000F84                    _AddCustomCharacters 1C26  
                            _TRISEbits 000F96                 _LCDAddSpecialCharacter 1DFA  
                       __end_of_LCDDat 1F56                         __end_of_LCDCmd 1F86  
                       __end_of_LCDStr 1BB2                             LCDGoto@p_1 0005  
                           LCDGoto@p_2 0006                   ?_AddCustomCharacters 0001  
   _selected_teamA_player_with_frisbee 0098                            vfpfcnvrt@ap 0046  
                          vfpfcnvrt@fp 0042                            vfpfcnvrt@ll 004A  
                        __pidataCOMRAM 1F98                         __end_of_strlen 1EF2  
                  start_initialization 1C98                            __end_of_abs 1EBC  
                          __end_of_pad 1AA0                               ??_LCDDat 0003  
                             ??_LCDCmd 0003                               ??_LCDStr 0009  
                ??_AddCustomCharacters 000B                            vfprintf@fmt 0054  
         __end_of_SetupDebouncingTimer 1F98                LCDAddSpecialCharacter@i 000A  
                          __pdataBANK0 0080                               ??_strlen 0005  
                             ?_LCDGoto 0005                            __pbssCOMRAM 006C  
                        __pcstackBANK0 00E6                       ___aodiv@dividend 0003  
                             ?_InitLCD 0001                              __pnvBANK0 00EF  
                            _dtoa$1069 0030                              __pintcode 0008  
                             ?___aodiv 0003                               ?___aomod 0003  
                     ___aodiv@quotient 0015                               ?_highIsr 0001  
                    __size_of_vfprintf 0062                            __smallconst 1000  
                         _teamA_player 00B8                               ?_sprintf 005A  
                         _teamB_player 00B0                         __size_of_fputc 00CA  
                       __size_of_fputs 0044                         __size_of_putch 0002  
                _selected_teamA_player 00A8                  _selected_teamB_player 00A0  
                             i2u141_40 1AB0                               i2u141_41 1AAC  
                             i2u142_40 1ACA                               i2u142_41 1AC6  
                             i2u143_40 1ADC                               i2u143_41 1AD8  
                             i2u144_40 1AF2                               i2u144_41 1AEE  
                             i2u145_40 1B04                               i2u145_41 1B00  
                             i2u146_40 1B1A                               i2u146_41 1B16  
                             i2u147_40 1B2C                               i2u147_41 1B28  
                            _vfpfcnvrt 12E4                       __size_of_LCDGoto 0074  
              ?_LCDAddSpecialCharacter 0007                   _SetupDebouncingTimer 1F86  
                          _INTCON2bits 000FF1                            _INTCON3bits 000FF0  
                            copy_data0 1CAC                       __size_of_InitLCD 0032  
                             __Hrparam 0000                             vfprintf@ap 0056  
                             __Lrparam 0000                             vfprintf@fp 0052  
                          _frisbeeChar 0088                           __Lsmallconst 1000  
                     __size_of___aodiv 0188                       __size_of___aomod 0164  
                           ?_vfpfcnvrt 0042                        ___aodiv@divisor 000B  
                      ___aodiv@counter 0013                       __size_of_highIsr 1B36  
       __end_of_LCDAddSpecialCharacter 1E3C                             sprintf@fmt 005C  
                             _main$554 00EB                       _acceptInterrupts 00F0  
                             __ptext10 1E7C                               __ptext11 17B0  
                             __ptext12 1628                               __ptext21 1F86  
                             __ptext13 1B3E                               __ptext14 1EF2  
                             __ptext15 1C26                               __ptext16 1DFA  
                ?_SetupDebouncingTimer 0001                               __ptext17 1BB2  
                             __ptext18 1F56                               __ptext19 1F24  
                     __size_of_sprintf 004E                          __size_of_main 0190  
                        __size_of_dtoa 02DE     _selected_teamB_player_with_frisbee 0090  
                             int$flags 0076                               _vfprintf 1D06  
                     ___aomod@dividend 0003                             _INTCONbits 000FF2  
          __end_of_AddCustomCharacters 1C98                               intlevel2 0000  
                            sprintf@ap 0062                        ___aomod@divisor 000B  
                          ??_vfpfcnvrt 0048                        ___aomod@counter 0013  
                             sprintf@f 0064                               sprintf@s 005A  
               ??_SetupDebouncingTimer 0001                           ___aodiv@sign 0014  
                         ___aomod@sign 0014  
