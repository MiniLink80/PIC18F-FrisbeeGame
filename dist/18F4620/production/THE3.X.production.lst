

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu May 25 18:40:58 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4620 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  00224C                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _game_state
    83  00224C  01                 	db	1
    84                           
    85                           ;initializer for _lcd_y
    86  00224D  01                 	db	1
    87                           
    88                           ;initializer for _lcd_x
    89  00224E  01                 	db	1
    90                           
    91                           ;initializer for _teamA_player
    92  00224F  11                 	db	17
    93  002250  15                 	db	21
    94  002251  0A                 	db	10
    95  002252  04                 	db	4
    96  002253  04                 	db	4
    97  002254  04                 	db	4
    98  002255  0A                 	db	10
    99  002256  0A                 	db	10
   100                           
   101                           	psect	idataBANK0
   102  0020FA                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _segValues
   106  0020FA  3F                 	db	63
   107  0020FB  06                 	db	6
   108  0020FC  5B                 	db	91
   109  0020FD  4F                 	db	79
   110  0020FE  66                 	db	102
   111  0020FF  6D                 	db	109
   112  002100  7D                 	db	125
   113  002101  07                 	db	7
   114  002102  7F                 	db	127
   115  002103  6F                 	db	111
   116  002104  40                 	db	64
   117                           
   118                           ;initializer for _frisbee_target
   119  002105  0E                 	db	14
   120  002106  11                 	db	17
   121  002107  11                 	db	17
   122  002108  11                 	db	17
   123  002109  0E                 	db	14
   124  00210A  00                 	db	0
   125  00210B  00                 	db	0
   126  00210C  00                 	db	0
   127                           
   128                           ;initializer for _frisbeeChar
   129  00210D  0E                 	db	14
   130  00210E  1F                 	db	31
   131  00210F  1F                 	db	31
   132  002110  1F                 	db	31
   133  002111  0E                 	db	14
   134  002112  00                 	db	0
   135  002113  00                 	db	0
   136  002114  00                 	db	0
   137                           
   138                           ;initializer for _selected_teamB_player_with_frisbee
   139  002115  1F                 	db	31
   140  002116  15                 	db	21
   141  002117  0A                 	db	10
   142  002118  04                 	db	4
   143  002119  0E                 	db	14
   144  00211A  1F                 	db	31
   145  00211B  0A                 	db	10
   146  00211C  1F                 	db	31
   147                           
   148                           ;initializer for _selected_teamA_player_with_frisbee
   149  00211D  1F                 	db	31
   150  00211E  15                 	db	21
   151  00211F  0A                 	db	10
   152  002120  04                 	db	4
   153  002121  04                 	db	4
   154  002122  04                 	db	4
   155  002123  0A                 	db	10
   156  002124  1F                 	db	31
   157                           
   158                           ;initializer for _selected_teamB_player
   159  002125  11                 	db	17
   160  002126  15                 	db	21
   161  002127  0A                 	db	10
   162  002128  04                 	db	4
   163  002129  0E                 	db	14
   164  00212A  1F                 	db	31
   165  00212B  0A                 	db	10
   166  00212C  1F                 	db	31
   167                           
   168                           ;initializer for _selected_teamA_player
   169  00212D  11                 	db	17
   170  00212E  15                 	db	21
   171  00212F  0A                 	db	10
   172  002130  04                 	db	4
   173  002131  04                 	db	4
   174  002132  04                 	db	4
   175  002133  0A                 	db	10
   176  002134  1F                 	db	31
   177                           
   178                           ;initializer for _teamB_player
   179  002135  11                 	db	17
   180  002136  15                 	db	21
   181  002137  0A                 	db	10
   182  002138  04                 	db	4
   183  002139  0E                 	db	14
   184  00213A  1F                 	db	31
   185  00213B  0A                 	db	10
   186  00213C  0A                 	db	10
   187  0000                     _TMR0H	set	4055
   188  0000                     _TMR0L	set	4054
   189  0000                     _T0CON	set	4053
   190  0000                     _TRISA	set	3986
   191  0000                     _TRISB	set	3987
   192  0000                     _T3CON	set	4017
   193  0000                     _INTCON2bits	set	4081
   194  0000                     _ADCON1	set	4033
   195  0000                     _LATD	set	3980
   196  0000                     _LATA	set	3977
   197  0000                     _PIR1bits	set	3998
   198  0000                     _INTCON3bits	set	4080
   199  0000                     _T0CONbits	set	4053
   200  0000                     _INTCONbits	set	4082
   201  0000                     _PORTB	set	3969
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISEbits	set	3990
   204  0000                     _PORTD	set	3971
   205  0000                     _PORTEbits	set	3972
   206  0000                     _TMR3H	set	4019
   207  0000                     _TMR3L	set	4018
   208  0000                     _T3CONbits	set	4017
   209                           
   210                           	psect	smallconst
   211  001000                     __psmallconst:
   212                           	callstack 0
   213  001000  00                 	db	0
   214  001001                     STR_1:
   215  001001  25                 	db	37
   216  001002  64                 	db	100	;'d'
   217  001003  00                 	db	0
   218  001004  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           ; #config settings
   221                           
   222                           	psect	cinit
   223  001FDA                     __pcinit:
   224                           	callstack 0
   225  001FDA                     start_initialization:
   226                           	callstack 0
   227  001FDA                     __initialization:
   228                           	callstack 0
   229                           
   230                           ; Initialize objects allocated to BANK0 (67 bytes)
   231                           ; load TBLPTR registers with __pidataBANK0
   232  001FDA  0EFA               	movlw	low __pidataBANK0
   233  001FDC  6EF6               	movwf	tblptrl,c
   234  001FDE  0E20               	movlw	high __pidataBANK0
   235  001FE0  6EF7               	movwf	tblptrh,c
   236  001FE2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   237  001FE4  6EF8               	movwf	tblptru,c
   238  001FE6  EE00  F080         	lfsr	0,__pdataBANK0
   239  001FEA  EE10 F043          	lfsr	1,67
   240  001FEE                     copy_data0:
   241  001FEE  0009               	tblrd		*+
   242  001FF0  CFF5 FFEE          	movff	tablat,postinc0
   243  001FF4  50E5               	movf	postdec1,w,c
   244  001FF6  50E1               	movf	fsr1l,w,c
   245  001FF8  E1FA               	bnz	copy_data0
   246                           
   247                           ; Initialize objects allocated to COMRAM (11 bytes)
   248                           ; load TBLPTR registers with __pidataCOMRAM
   249  001FFA  0E4C               	movlw	low __pidataCOMRAM
   250  001FFC  6EF6               	movwf	tblptrl,c
   251  001FFE  0E22               	movlw	high __pidataCOMRAM
   252  002000  6EF7               	movwf	tblptrh,c
   253  002002  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   254  002004  6EF8               	movwf	tblptru,c
   255  002006  EE00  F059         	lfsr	0,__pdataCOMRAM
   256  00200A  EE10 F00B          	lfsr	1,11
   257  00200E                     copy_data1:
   258  00200E  0009               	tblrd		*+
   259  002010  CFF5 FFEE          	movff	tablat,postinc0
   260  002014  50E5               	movf	postdec1,w,c
   261  002016  50E1               	movf	fsr1l,w,c
   262  002018  E1FA               	bnz	copy_data1
   263                           
   264                           ; Clear objects allocated to BANK1 (128 bytes)
   265  00201A  EE01  F000         	lfsr	0,__pbssBANK1
   266  00201E  0E80               	movlw	128
   267  002020                     clear_0:
   268  002020  6AEE               	clrf	postinc0,c
   269  002022  06E8               	decf	wreg,f,c
   270  002024  E1FD               	bnz	clear_0
   271                           
   272                           ; Clear objects allocated to BANK0 (60 bytes)
   273  002026  EE00  F0C3         	lfsr	0,__pbssBANK0
   274  00202A  0E3C               	movlw	60
   275  00202C                     clear_1:
   276  00202C  6AEE               	clrf	postinc0,c
   277  00202E  06E8               	decf	wreg,f,c
   278  002030  E1FD               	bnz	clear_1
   279                           
   280                           ; Clear objects allocated to COMRAM (58 bytes)
   281  002032  EE00  F001         	lfsr	0,__pbssCOMRAM
   282  002036  0E3A               	movlw	58
   283  002038                     clear_2:
   284  002038  6AEE               	clrf	postinc0,c
   285  00203A  06E8               	decf	wreg,f,c
   286  00203C  E1FD               	bnz	clear_2
   287  00203E                     end_of_initialization:
   288                           	callstack 0
   289  00203E                     __end_of__initialization:
   290                           	callstack 0
   291  00203E  9064               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   292  002040  9264               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   293  002042  0E00               	movlw	low (__Lmediumconst shr (0+16))
   294  002044  6EF8               	movwf	tblptru,c
   295  002046  0100               	movlb	0
   296  002048  EF10  F011         	goto	_main	;jump to C main() function
   297                           
   298                           	psect	bssCOMRAM
   299  000001                     __pbssCOMRAM:
   300                           	callstack 0
   301  000001                     _currentSegment:
   302                           	callstack 0
   303  000001                     	ds	2
   304  000003                     _scoreB:
   305                           	callstack 0
   306  000003                     	ds	2
   307  000005                     _scoreA:
   308                           	callstack 0
   309  000005                     	ds	2
   310  000007                     _selectedPlayer:
   311                           	callstack 0
   312  000007                     	ds	2
   313  000009                     _c:
   314                           	callstack 0
   315  000009                     	ds	2
   316  00000B                     _b:
   317                           	callstack 0
   318  00000B                     	ds	2
   319  00000D                     _a:
   320                           	callstack 0
   321  00000D                     	ds	2
   322  00000F                     _portbVals:
   323                           	callstack 0
   324  00000F                     	ds	1
   325  000010                     _acceptInterrupts:
   326                           	callstack 0
   327  000010                     	ds	1
   328  000011                     _objs:
   329                           	callstack 0
   330  000011                     	ds	42
   331                           
   332                           	psect	dataCOMRAM
   333  000059                     __pdataCOMRAM:
   334                           	callstack 0
   335  000059                     _game_state:
   336                           	callstack 0
   337  000059                     	ds	1
   338  00005A                     _lcd_y:
   339                           	callstack 0
   340  00005A                     	ds	1
   341  00005B                     _lcd_x:
   342                           	callstack 0
   343  00005B                     	ds	1
   344  00005C                     _teamA_player:
   345                           	callstack 0
   346  00005C                     	ds	8
   347                           
   348                           	psect	bssBANK0
   349  0000C3                     __pbssBANK0:
   350                           	callstack 0
   351  0000C3                     _frisbee_steps:
   352                           	callstack 0
   353  0000C3                     	ds	60
   354                           
   355                           	psect	dataBANK0
   356  000080                     __pdataBANK0:
   357                           	callstack 0
   358  000080                     _segValues:
   359                           	callstack 0
   360  000080                     	ds	11
   361  00008B                     _frisbee_target:
   362                           	callstack 0
   363  00008B                     	ds	8
   364  000093                     _frisbeeChar:
   365                           	callstack 0
   366  000093                     	ds	8
   367  00009B                     _selected_teamB_player_with_frisbee:
   368                           	callstack 0
   369  00009B                     	ds	8
   370  0000A3                     _selected_teamA_player_with_frisbee:
   371                           	callstack 0
   372  0000A3                     	ds	8
   373  0000AB                     _selected_teamB_player:
   374                           	callstack 0
   375  0000AB                     	ds	8
   376  0000B3                     _selected_teamA_player:
   377                           	callstack 0
   378  0000B3                     	ds	8
   379  0000BB                     _teamB_player:
   380                           	callstack 0
   381  0000BB                     	ds	8
   382                           
   383                           	psect	bssBANK1
   384  000100                     __pbssBANK1:
   385                           	callstack 0
   386  000100                     _display:
   387                           	callstack 0
   388  000100                     	ds	128
   389                           
   390                           	psect	cstackBANK1
   391  000180                     __pcstackBANK1:
   392                           	callstack 0
   393  000180                     ___awmod@counter:
   394                           	callstack 0
   395  000180                     LCDAddSpecialCharacter@data:
   396                           	callstack 0
   397  000180                     ___wmul@product:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x0
   401  000180                     	ds	1
   402  000181                     ___awmod@sign:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x1
   406  000181                     	ds	1
   407  000182                     ??_InitGameObjects:
   408  000182                     ??_UpdateAndPrintDisplay:
   409  000182                     LCDAddSpecialCharacter@character_index:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x2
   413  000182                     	ds	1
   414  000183                     LCDAddSpecialCharacter@i:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x3
   418  000183                     	ds	9
   419  00018C                     UpdateAndPrintDisplay@temp_d:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0xC
   423  00018C                     	ds	1
   424  00018D                     UpdateAndPrintDisplay@i:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0xD
   428  00018D                     	ds	1
   429  00018E                     InitGameObjects@i:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xE
   433  00018E                     	ds	1
   434  00018F                     UpdateAndPrintDisplay@j:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xF
   438  00018F                     	ds	1
   439  000190                     InitGameObjects@j:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x10
   443  000190                     	ds	1
   444  000191                     UpdateAndPrintDisplay@i_620:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x11
   448  000191                     	ds	1
   449  000192                     InitGameObjects@i_627:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x12
   453  000192                     	ds	1
   454  000193                     UpdateAndPrintDisplay@i_621:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x13
   458  000193                     	ds	2
   459  000195                     UpdateAndPrintDisplay@i_622:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x15
   463  000195                     	ds	2
   464                           
   465                           	psect	cstackCOMRAM
   466  00003B                     __pcstackCOMRAM:
   467                           	callstack 0
   468  00003B                     ?i2___wmul:
   469                           	callstack 0
   470  00003B                     i2___wmul@multiplier:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x0
   474  00003B                     	ds	2
   475  00003D                     i2___wmul@multiplicand:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479  00003D                     	ds	2
   480  00003F                     i2___wmul@product:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x4
   484  00003F                     	ds	2
   485  000041                     left@pl:
   486                           	callstack 0
   487  000041                     right@pl:
   488                           	callstack 0
   489  000041                     up@pl:
   490                           	callstack 0
   491  000041                     down@pl:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x6
   495  000041                     	ds	2
   496  000043                     ??_right:
   497  000043                     ??_up:
   498  000043                     ??_down:
   499  000043                     ??_left:
   500                           
   501                           ; 1 bytes @ 0x8
   502  000043                     	ds	9
   503  00004C                     ??_highIsr:
   504                           
   505                           ; 1 bytes @ 0x11
   506  00004C                     	ds	8
   507  000054                     ??_lowIsr:
   508                           
   509                           ; 1 bytes @ 0x19
   510  000054                     	ds	1
   511  000055                     ??_LCDCmd:
   512  000055                     ??_LCDDat:
   513  000055                     ?___wmul:
   514                           	callstack 0
   515  000055                     ?___awmod:
   516                           	callstack 0
   517  000055                     ___wmul@multiplier:
   518                           	callstack 0
   519  000055                     ___awmod@dividend:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1A
   523  000055                     	ds	1
   524  000056                     LCDCmd@cmd:
   525                           	callstack 0
   526  000056                     LCDDat@dat:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x1B
   530  000056                     	ds	1
   531  000057                     LCDGoto@p_1:
   532                           	callstack 0
   533  000057                     ___wmul@multiplicand:
   534                           	callstack 0
   535  000057                     ___awmod@divisor:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x1C
   539  000057                     	ds	1
   540  000058                     LCDGoto@p_2:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x1D
   544  000058                     	ds	1
   545  000059                     
   546                           ; 1 bytes @ 0x1E
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 152 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels required when called:    7
   572 ;; This function calls:
   573 ;;		_AddCustomCharacters
   574 ;;		_InitGameObjects
   575 ;;		_InitInterrupts
   576 ;;		_InitLCD
   577 ;;		_UpdateAndPrintDisplay
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  002220                     __ptext0:
   585                           	callstack 0
   586  002220                     _main:
   587                           	callstack 24
   588  002220                     
   589                           ;main.c: 154:     InitInterrupts();
   590  002220  EC26  F010         	call	_InitInterrupts	;wreg free
   591                           
   592                           ;main.c: 155:     InitLCD();
   593  002224  EC9F  F010         	call	_InitLCD	;wreg free
   594  002228                     
   595                           ;main.c: 156:     InitGameObjects();
   596  002228  EC98  F00B         	call	_InitGameObjects	;wreg free
   597  00222C                     
   598                           ;main.c: 158:     AddCustomCharacters();
   599  00222C  EC72  F00F         	call	_AddCustomCharacters	;wreg free
   600  002230                     l2665:
   601                           
   602                           ;main.c: 165:         UpdateAndPrintDisplay();
   603  002230  EC03  F008         	call	_UpdateAndPrintDisplay	;wreg free
   604  002234  EF18  F011         	goto	l2665
   605  002238  EF14  F000         	goto	start
   606  00223C                     __end_of_main:
   607                           	callstack 0
   608                           
   609 ;; *************** function _UpdateAndPrintDisplay *****************
   610 ;; Defined at:
   611 ;;		line 170 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  j               2   15[BANK1 ] int 
   616 ;;  i               2   21[BANK1 ] int 
   617 ;;  i               2   19[BANK1 ] int 
   618 ;;  i               2   17[BANK1 ] int 
   619 ;;  i               2   13[BANK1 ] int 
   620 ;;  temp_d          1   12[BANK1 ] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;Total ram usage:       21 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    5
   637 ;; This function calls:
   638 ;;		_LCDDat
   639 ;;		_LCDGoto
   640 ;;		___awmod
   641 ;;		___wmul
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text1
   648  001006                     __ptext1:
   649                           	callstack 0
   650  001006                     _UpdateAndPrintDisplay:
   651                           	callstack 25
   652  001006                     
   653                           ;main.c: 171:     for (int i = 0; i < 4; i++) {
   654  001006  0E00               	movlw	0
   655  001008  0101               	movlb	1	; () banked
   656  00100A  6F8E               	movwf	(UpdateAndPrintDisplay@i+1)& (0+255),b
   657  00100C  0E00               	movlw	0
   658  00100E  6F8D               	movwf	UpdateAndPrintDisplay@i& (0+255),b
   659  001010                     l2509:
   660                           
   661                           ; BSR set to: 1
   662                           ;main.c: 172:         for (int j = 0; j < 16; j++) {
   663  001010  0E00               	movlw	0
   664  001012  6F90               	movwf	(UpdateAndPrintDisplay@j+1)& (0+255),b
   665  001014  0E00               	movlw	0
   666  001016  6F8F               	movwf	UpdateAndPrintDisplay@j& (0+255),b
   667  001018                     l2515:
   668                           
   669                           ; BSR set to: 1
   670                           ;main.c: 173:             display[i][j] = ((void*)0);
   671  001018  C18D  F182         	movff	UpdateAndPrintDisplay@i,??_UpdateAndPrintDisplay
   672  00101C  C18E  F183         	movff	UpdateAndPrintDisplay@i+1,??_UpdateAndPrintDisplay+1
   673  001020  0E05               	movlw	5
   674  001022                     u1595:
   675  001022  90D8               	bcf	status,0,c
   676  001024  3782               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
   677  001026  3783               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   678  001028  2EE8               	decfsz	wreg,f,c
   679  00102A  EF11  F008         	goto	u1595
   680  00102E  0E00               	movlw	low _display
   681  001030  6F84               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   682  001032  0E01               	movlw	high _display
   683  001034  6F85               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   684  001036  5182               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
   685  001038  2784               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   686  00103A  5183               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
   687  00103C  2385               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   688  00103E  90D8               	bcf	status,0,c
   689  001040  358F               	rlcf	UpdateAndPrintDisplay@j& (0+255),w,b
   690  001042  6ED9               	movwf	fsr2l,c
   691  001044  3590               	rlcf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   692  001046  6EDA               	movwf	fsr2h,c
   693  001048  5184               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   694  00104A  26D9               	addwf	fsr2l,f,c
   695  00104C  5185               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   696  00104E  22DA               	addwfc	fsr2h,f,c
   697  001050  0E00               	movlw	0
   698  001052  6EDE               	movwf	postinc2,c
   699  001054  0E00               	movlw	0
   700  001056  6EDD               	movwf	postdec2,c
   701  001058                     
   702                           ; BSR set to: 1
   703                           ;main.c: 174:         }
   704  001058  4B8F               	infsnz	UpdateAndPrintDisplay@j& (0+255),f,b
   705  00105A  2B90               	incf	(UpdateAndPrintDisplay@j+1)& (0+255),f,b
   706  00105C                     
   707                           ; BSR set to: 1
   708  00105C  BF90               	btfsc	(UpdateAndPrintDisplay@j+1)& (0+255),7,b
   709  00105E  EF3A  F008         	goto	u1601
   710  001062  5190               	movf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   711  001064  E109               	bnz	u1600
   712  001066  0E10               	movlw	16
   713  001068  5D8F               	subwf	UpdateAndPrintDisplay@j& (0+255),w,b
   714  00106A  A0D8               	btfss	status,0,c
   715  00106C  EF3A  F008         	goto	u1601
   716  001070  EF3C  F008         	goto	u1600
   717  001074                     u1601:
   718  001074  EF0C  F008         	goto	l2515
   719  001078                     u1600:
   720  001078                     
   721                           ; BSR set to: 1
   722                           ;main.c: 175:     }
   723  001078  4B8D               	infsnz	UpdateAndPrintDisplay@i& (0+255),f,b
   724  00107A  2B8E               	incf	(UpdateAndPrintDisplay@i+1)& (0+255),f,b
   725  00107C                     
   726                           ; BSR set to: 1
   727  00107C  BF8E               	btfsc	(UpdateAndPrintDisplay@i+1)& (0+255),7,b
   728  00107E  EF4A  F008         	goto	u1611
   729  001082  518E               	movf	(UpdateAndPrintDisplay@i+1)& (0+255),w,b
   730  001084  E109               	bnz	u1610
   731  001086  0E04               	movlw	4
   732  001088  5D8D               	subwf	UpdateAndPrintDisplay@i& (0+255),w,b
   733  00108A  A0D8               	btfss	status,0,c
   734  00108C  EF4A  F008         	goto	u1611
   735  001090  EF4C  F008         	goto	u1610
   736  001094                     u1611:
   737  001094  EF08  F008         	goto	l2509
   738  001098                     u1610:
   739  001098                     
   740                           ; BSR set to: 1
   741                           ;main.c: 176:     for (int i = 0; i < 6; i++) {
   742  001098  0E00               	movlw	0
   743  00109A  6F92               	movwf	(UpdateAndPrintDisplay@i_620+1)& (0+255),b
   744  00109C  0E00               	movlw	0
   745  00109E  6F91               	movwf	UpdateAndPrintDisplay@i_620& (0+255),b
   746  0010A0                     l2531:
   747                           
   748                           ; BSR set to: 1
   749                           ;main.c: 177:         display[objs[i].y-1][objs[i].x-1] = &objs[i];
   750  0010A0  C191  F055         	movff	UpdateAndPrintDisplay@i_620,___wmul@multiplier
   751  0010A4  C192  F056         	movff	UpdateAndPrintDisplay@i_620+1,___wmul@multiplier+1
   752  0010A8  0E00               	movlw	0
   753  0010AA  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   754  0010AC  0E07               	movlw	7
   755  0010AE  6E57               	movwf	___wmul@multiplicand^0,c
   756  0010B0  ECE9  F010         	call	___wmul	;wreg free
   757  0010B4  0E11               	movlw	low _objs
   758  0010B6  0101               	movlb	1	; () banked
   759  0010B8  6F82               	movwf	??_UpdateAndPrintDisplay& (0+255),b
   760  0010BA  0E00               	movlw	high _objs
   761  0010BC  6F83               	movwf	(??_UpdateAndPrintDisplay+1)& (0+255),b
   762  0010BE  5055               	movf	?___wmul^0,w,c
   763  0010C0  2782               	addwf	??_UpdateAndPrintDisplay& (0+255),f,b
   764  0010C2  5056               	movf	(?___wmul+1)^0,w,c
   765  0010C4  2383               	addwfc	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   766  0010C6  C191  F055         	movff	UpdateAndPrintDisplay@i_620,___wmul@multiplier
   767  0010CA  C192  F056         	movff	UpdateAndPrintDisplay@i_620+1,___wmul@multiplier+1
   768  0010CE  0E00               	movlw	0
   769  0010D0  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   770  0010D2  0E07               	movlw	7
   771  0010D4  6E57               	movwf	___wmul@multiplicand^0,c
   772  0010D6  ECE9  F010         	call	___wmul	;wreg free
   773  0010DA  0E12               	movlw	low (_objs+1)
   774  0010DC  2455               	addwf	?___wmul^0,w,c
   775  0010DE  6ED9               	movwf	fsr2l,c
   776  0010E0  0E00               	movlw	high (_objs+1)
   777  0010E2  2056               	addwfc	(?___wmul+1)^0,w,c
   778  0010E4  6EDA               	movwf	fsr2h,c
   779  0010E6  50DF               	movf	indf2,w,c
   780  0010E8  0101               	movlb	1	; () banked
   781  0010EA  6F84               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   782  0010EC  6B85               	clrf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   783  0010EE  0E05               	movlw	5
   784  0010F0                     u1625:
   785  0010F0  90D8               	bcf	status,0,c
   786  0010F2  3784               	rlcf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   787  0010F4  3785               	rlcf	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   788  0010F6  2EE8               	decfsz	wreg,f,c
   789  0010F8  EF78  F008         	goto	u1625
   790  0010FC  C191  F055         	movff	UpdateAndPrintDisplay@i_620,___wmul@multiplier
   791  001100  C192  F056         	movff	UpdateAndPrintDisplay@i_620+1,___wmul@multiplier+1
   792  001104  0E00               	movlw	0
   793  001106  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   794  001108  0E07               	movlw	7
   795  00110A  6E57               	movwf	___wmul@multiplicand^0,c
   796  00110C  ECE9  F010         	call	___wmul	;wreg free
   797  001110  0E11               	movlw	low _objs
   798  001112  2455               	addwf	?___wmul^0,w,c
   799  001114  6ED9               	movwf	fsr2l,c
   800  001116  0E00               	movlw	high _objs
   801  001118  2056               	addwfc	(?___wmul+1)^0,w,c
   802  00111A  6EDA               	movwf	fsr2h,c
   803  00111C  50DF               	movf	indf2,w,c
   804  00111E  0101               	movlb	1	; () banked
   805  001120  6F86               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
   806  001122  6B87               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
   807  001124  90D8               	bcf	status,0,c
   808  001126  3786               	rlcf	(??_UpdateAndPrintDisplay+4)& (0+255),f,b
   809  001128  3787               	rlcf	(??_UpdateAndPrintDisplay+5)& (0+255),f,b
   810  00112A  0EDE               	movlw	222
   811  00112C  6F88               	movwf	(??_UpdateAndPrintDisplay+6)& (0+255),b
   812  00112E  0EFF               	movlw	255
   813  001130  6F89               	movwf	(??_UpdateAndPrintDisplay+7)& (0+255),b
   814  001132  0E00               	movlw	low _display
   815  001134  6F8A               	movwf	(??_UpdateAndPrintDisplay+8)& (0+255),b
   816  001136  0E01               	movlw	high _display
   817  001138  6F8B               	movwf	(??_UpdateAndPrintDisplay+9)& (0+255),b
   818  00113A  5188               	movf	(??_UpdateAndPrintDisplay+6)& (0+255),w,b
   819  00113C  278A               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
   820  00113E  5189               	movf	(??_UpdateAndPrintDisplay+7)& (0+255),w,b
   821  001140  238B               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
   822  001142  5186               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
   823  001144  278A               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
   824  001146  5187               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
   825  001148  238B               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
   826  00114A  5184               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   827  00114C  258A               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),w,b
   828  00114E  6ED9               	movwf	fsr2l,c
   829  001150  5185               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   830  001152  218B               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),w,b
   831  001154  6EDA               	movwf	fsr2h,c
   832  001156  C182  FFDE         	movff	??_UpdateAndPrintDisplay,postinc2
   833  00115A  C183  FFDD         	movff	??_UpdateAndPrintDisplay+1,postdec2
   834  00115E                     
   835                           ; BSR set to: 1
   836                           ;main.c: 178:     }
   837  00115E  4B91               	infsnz	UpdateAndPrintDisplay@i_620& (0+255),f,b
   838  001160  2B92               	incf	(UpdateAndPrintDisplay@i_620+1)& (0+255),f,b
   839  001162                     
   840                           ; BSR set to: 1
   841  001162  BF92               	btfsc	(UpdateAndPrintDisplay@i_620+1)& (0+255),7,b
   842  001164  EFBD  F008         	goto	u1631
   843  001168  5192               	movf	(UpdateAndPrintDisplay@i_620+1)& (0+255),w,b
   844  00116A  E109               	bnz	u1630
   845  00116C  0E06               	movlw	6
   846  00116E  5D91               	subwf	UpdateAndPrintDisplay@i_620& (0+255),w,b
   847  001170  A0D8               	btfss	status,0,c
   848  001172  EFBD  F008         	goto	u1631
   849  001176  EFBF  F008         	goto	u1630
   850  00117A                     u1631:
   851  00117A  EF50  F008         	goto	l2531
   852  00117E                     u1630:
   853  00117E                     
   854                           ; BSR set to: 1
   855                           ;main.c: 180:     for (int i = 0; i < 6; i++) {
   856  00117E  0E00               	movlw	0
   857  001180  6F94               	movwf	(UpdateAndPrintDisplay@i_621+1)& (0+255),b
   858  001182  0E00               	movlw	0
   859  001184  6F93               	movwf	UpdateAndPrintDisplay@i_621& (0+255),b
   860  001186                     l2543:
   861                           
   862                           ; BSR set to: 1
   863                           ;main.c: 181:         if (objs[i].oldX == 0 && objs[i].oldY == 0) {
   864  001186  C193  F055         	movff	UpdateAndPrintDisplay@i_621,___wmul@multiplier
   865  00118A  C194  F056         	movff	UpdateAndPrintDisplay@i_621+1,___wmul@multiplier+1
   866  00118E  0E00               	movlw	0
   867  001190  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   868  001192  0E07               	movlw	7
   869  001194  6E57               	movwf	___wmul@multiplicand^0,c
   870  001196  ECE9  F010         	call	___wmul	;wreg free
   871  00119A  0E13               	movlw	low (_objs+2)
   872  00119C  2455               	addwf	?___wmul^0,w,c
   873  00119E  6ED9               	movwf	fsr2l,c
   874  0011A0  0E00               	movlw	high (_objs+2)
   875  0011A2  2056               	addwfc	(?___wmul+1)^0,w,c
   876  0011A4  6EDA               	movwf	fsr2h,c
   877  0011A6  50DF               	movf	indf2,w,c
   878  0011A8  A4D8               	btfss	status,2,c
   879  0011AA  EFD9  F008         	goto	u1641
   880  0011AE  EFDB  F008         	goto	u1640
   881  0011B2                     u1641:
   882  0011B2  EFF5  F008         	goto	l2549
   883  0011B6                     u1640:
   884  0011B6  C193  F055         	movff	UpdateAndPrintDisplay@i_621,___wmul@multiplier
   885  0011BA  C194  F056         	movff	UpdateAndPrintDisplay@i_621+1,___wmul@multiplier+1
   886  0011BE  0E00               	movlw	0
   887  0011C0  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   888  0011C2  0E07               	movlw	7
   889  0011C4  6E57               	movwf	___wmul@multiplicand^0,c
   890  0011C6  ECE9  F010         	call	___wmul	;wreg free
   891  0011CA  0E14               	movlw	low (_objs+3)
   892  0011CC  2455               	addwf	?___wmul^0,w,c
   893  0011CE  6ED9               	movwf	fsr2l,c
   894  0011D0  0E00               	movlw	high (_objs+3)
   895  0011D2  2056               	addwfc	(?___wmul+1)^0,w,c
   896  0011D4  6EDA               	movwf	fsr2h,c
   897  0011D6  50DF               	movf	indf2,w,c
   898  0011D8  A4D8               	btfss	status,2,c
   899  0011DA  EFF1  F008         	goto	u1651
   900  0011DE  EFF3  F008         	goto	u1650
   901  0011E2                     u1651:
   902  0011E2  EFF5  F008         	goto	l2549
   903  0011E6                     u1650:
   904  0011E6  EF21  F009         	goto	l2555
   905  0011EA                     l2549:
   906                           
   907                           ;main.c: 184:         lcd_x = objs[i].oldX;
   908  0011EA  C193  F055         	movff	UpdateAndPrintDisplay@i_621,___wmul@multiplier
   909  0011EE  C194  F056         	movff	UpdateAndPrintDisplay@i_621+1,___wmul@multiplier+1
   910  0011F2  0E00               	movlw	0
   911  0011F4  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   912  0011F6  0E07               	movlw	7
   913  0011F8  6E57               	movwf	___wmul@multiplicand^0,c
   914  0011FA  ECE9  F010         	call	___wmul	;wreg free
   915  0011FE  0E13               	movlw	low (_objs+2)
   916  001200  2455               	addwf	?___wmul^0,w,c
   917  001202  6ED9               	movwf	fsr2l,c
   918  001204  0E00               	movlw	high (_objs+2)
   919  001206  2056               	addwfc	(?___wmul+1)^0,w,c
   920  001208  6EDA               	movwf	fsr2h,c
   921  00120A  50DF               	movf	indf2,w,c
   922  00120C  6E5B               	movwf	_lcd_x^0,c
   923                           
   924                           ;main.c: 185:         lcd_y = objs[i].oldY;
   925  00120E  C193  F055         	movff	UpdateAndPrintDisplay@i_621,___wmul@multiplier
   926  001212  C194  F056         	movff	UpdateAndPrintDisplay@i_621+1,___wmul@multiplier+1
   927  001216  0E00               	movlw	0
   928  001218  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   929  00121A  0E07               	movlw	7
   930  00121C  6E57               	movwf	___wmul@multiplicand^0,c
   931  00121E  ECE9  F010         	call	___wmul	;wreg free
   932  001222  0E14               	movlw	low (_objs+3)
   933  001224  2455               	addwf	?___wmul^0,w,c
   934  001226  6ED9               	movwf	fsr2l,c
   935  001228  0E00               	movlw	high (_objs+3)
   936  00122A  2056               	addwfc	(?___wmul+1)^0,w,c
   937  00122C  6EDA               	movwf	fsr2h,c
   938  00122E  50DF               	movf	indf2,w,c
   939  001230  6E5A               	movwf	_lcd_y^0,c
   940  001232                     
   941                           ;main.c: 186:         LCDGoto(lcd_x, lcd_y);
   942  001232  C05A  F057         	movff	_lcd_y,LCDGoto@p_1
   943  001236  505B               	movf	_lcd_x^0,w,c
   944  001238  ECB3  F00F         	call	_LCDGoto
   945  00123C                     
   946                           ;main.c: 187:         LCDDat(' ');
   947  00123C  0E20               	movlw	32
   948  00123E  ECB8  F010         	call	_LCDDat
   949  001242                     l2555:
   950  001242  0101               	movlb	1	; () banked
   951  001244  4B93               	infsnz	UpdateAndPrintDisplay@i_621& (0+255),f,b
   952  001246  2B94               	incf	(UpdateAndPrintDisplay@i_621+1)& (0+255),f,b
   953  001248                     
   954                           ; BSR set to: 1
   955  001248  BF94               	btfsc	(UpdateAndPrintDisplay@i_621+1)& (0+255),7,b
   956  00124A  EF30  F009         	goto	u1661
   957  00124E  5194               	movf	(UpdateAndPrintDisplay@i_621+1)& (0+255),w,b
   958  001250  E109               	bnz	u1660
   959  001252  0E06               	movlw	6
   960  001254  5D93               	subwf	UpdateAndPrintDisplay@i_621& (0+255),w,b
   961  001256  A0D8               	btfss	status,0,c
   962  001258  EF30  F009         	goto	u1661
   963  00125C  EF32  F009         	goto	u1660
   964  001260                     u1661:
   965  001260  EFC3  F008         	goto	l2543
   966  001264                     u1660:
   967  001264                     
   968                           ; BSR set to: 1
   969                           ;main.c: 190:     for (int i = 0; i < 6; i++) {
   970  001264  0E00               	movlw	0
   971  001266  6F96               	movwf	(UpdateAndPrintDisplay@i_622+1)& (0+255),b
   972  001268  0E00               	movlw	0
   973  00126A  6F95               	movwf	UpdateAndPrintDisplay@i_622& (0+255),b
   974  00126C                     l2565:
   975                           
   976                           ; BSR set to: 1
   977                           ;main.c: 191:         if (objs[i].active == 0) continue;
   978  00126C  C195  F055         	movff	UpdateAndPrintDisplay@i_622,___wmul@multiplier
   979  001270  C196  F056         	movff	UpdateAndPrintDisplay@i_622+1,___wmul@multiplier+1
   980  001274  0E00               	movlw	0
   981  001276  6E58               	movwf	(___wmul@multiplicand+1)^0,c
   982  001278  0E07               	movlw	7
   983  00127A  6E57               	movwf	___wmul@multiplicand^0,c
   984  00127C  ECE9  F010         	call	___wmul	;wreg free
   985  001280  0E15               	movlw	low (_objs+4)
   986  001282  2455               	addwf	?___wmul^0,w,c
   987  001284  6ED9               	movwf	fsr2l,c
   988  001286  0E00               	movlw	high (_objs+4)
   989  001288  2056               	addwfc	(?___wmul+1)^0,w,c
   990  00128A  6EDA               	movwf	fsr2h,c
   991  00128C  50DF               	movf	indf2,w,c
   992  00128E  A4D8               	btfss	status,2,c
   993  001290  EF4C  F009         	goto	u1671
   994  001294  EF4E  F009         	goto	u1670
   995  001298                     u1671:
   996  001298  EF50  F009         	goto	l2569
   997  00129C                     u1670:
   998  00129C  EF25  F00A         	goto	l2601
   999  0012A0                     l2569:
  1000                           
  1001                           ;main.c: 193:         lcd_x = objs[i].x;
  1002  0012A0  C195  F055         	movff	UpdateAndPrintDisplay@i_622,___wmul@multiplier
  1003  0012A4  C196  F056         	movff	UpdateAndPrintDisplay@i_622+1,___wmul@multiplier+1
  1004  0012A8  0E00               	movlw	0
  1005  0012AA  6E58               	movwf	(___wmul@multiplicand+1)^0,c
  1006  0012AC  0E07               	movlw	7
  1007  0012AE  6E57               	movwf	___wmul@multiplicand^0,c
  1008  0012B0  ECE9  F010         	call	___wmul	;wreg free
  1009  0012B4  0E11               	movlw	low _objs
  1010  0012B6  2455               	addwf	?___wmul^0,w,c
  1011  0012B8  6ED9               	movwf	fsr2l,c
  1012  0012BA  0E00               	movlw	high _objs
  1013  0012BC  2056               	addwfc	(?___wmul+1)^0,w,c
  1014  0012BE  6EDA               	movwf	fsr2h,c
  1015  0012C0  50DF               	movf	indf2,w,c
  1016  0012C2  6E5B               	movwf	_lcd_x^0,c
  1017                           
  1018                           ;main.c: 194:         lcd_y = objs[i].y;
  1019  0012C4  C195  F055         	movff	UpdateAndPrintDisplay@i_622,___wmul@multiplier
  1020  0012C8  C196  F056         	movff	UpdateAndPrintDisplay@i_622+1,___wmul@multiplier+1
  1021  0012CC  0E00               	movlw	0
  1022  0012CE  6E58               	movwf	(___wmul@multiplicand+1)^0,c
  1023  0012D0  0E07               	movlw	7
  1024  0012D2  6E57               	movwf	___wmul@multiplicand^0,c
  1025  0012D4  ECE9  F010         	call	___wmul	;wreg free
  1026  0012D8  0E12               	movlw	low (_objs+1)
  1027  0012DA  2455               	addwf	?___wmul^0,w,c
  1028  0012DC  6ED9               	movwf	fsr2l,c
  1029  0012DE  0E00               	movlw	high (_objs+1)
  1030  0012E0  2056               	addwfc	(?___wmul+1)^0,w,c
  1031  0012E2  6EDA               	movwf	fsr2h,c
  1032  0012E4  50DF               	movf	indf2,w,c
  1033  0012E6  6E5A               	movwf	_lcd_y^0,c
  1034  0012E8                     
  1035                           ;main.c: 195:         LCDGoto(lcd_x, lcd_y);
  1036  0012E8  C05A  F057         	movff	_lcd_y,LCDGoto@p_1
  1037  0012EC  505B               	movf	_lcd_x^0,w,c
  1038  0012EE  ECB3  F00F         	call	_LCDGoto
  1039                           
  1040                           ;main.c: 197:         switch(objs[i].type) {
  1041  0012F2  EFF7  F009         	goto	l2599
  1042  0012F6                     l2573:
  1043                           
  1044                           ; BSR set to: 1
  1045                           ;main.c: 199:                 LCDDat(6);
  1046  0012F6  0E06               	movlw	6
  1047  0012F8  ECB8  F010         	call	_LCDDat
  1048                           
  1049                           ;main.c: 200:                 break;
  1050  0012FC  EF25  F00A         	goto	l2601
  1051  001300                     l2575:
  1052                           
  1053                           ; BSR set to: 1
  1054                           ;main.c: 203:                 LCDDat(7);
  1055  001300  0E07               	movlw	7
  1056  001302  ECB8  F010         	call	_LCDDat
  1057                           
  1058                           ;main.c: 204:                 break;
  1059  001306  EF25  F00A         	goto	l2601
  1060  00130A                     l2577:
  1061                           
  1062                           ; BSR set to: 1
  1063                           ;main.c: 209:                         LCDDat(0);
  1064  00130A  0E00               	movlw	0
  1065  00130C  ECB8  F010         	call	_LCDDat
  1066                           
  1067                           ;main.c: 210:                         break;
  1068  001310  EF25  F00A         	goto	l2601
  1069  001314                     l2579:
  1070                           
  1071                           ; BSR set to: 1
  1072                           ;main.c: 212:                         LCDDat(2);
  1073  001314  0E02               	movlw	2
  1074  001316  ECB8  F010         	call	_LCDDat
  1075                           
  1076                           ;main.c: 213:                         break;
  1077  00131A  EF25  F00A         	goto	l2601
  1078  00131E                     l2581:
  1079                           
  1080                           ; BSR set to: 1
  1081                           ;main.c: 215:                         LCDDat(4);
  1082  00131E  0E04               	movlw	4
  1083  001320  ECB8  F010         	call	_LCDDat
  1084                           
  1085                           ;main.c: 216:                         break;
  1086  001324  EF25  F00A         	goto	l2601
  1087  001328                     l2585:
  1088                           
  1089                           ; BSR set to: 1
  1090  001328  C195  F055         	movff	UpdateAndPrintDisplay@i_622,___wmul@multiplier
  1091  00132C  C196  F056         	movff	UpdateAndPrintDisplay@i_622+1,___wmul@multiplier+1
  1092  001330  0E00               	movlw	0
  1093  001332  6E58               	movwf	(___wmul@multiplicand+1)^0,c
  1094  001334  0E07               	movlw	7
  1095  001336  6E57               	movwf	___wmul@multiplicand^0,c
  1096  001338  ECE9  F010         	call	___wmul	;wreg free
  1097  00133C  0E17               	movlw	low (_objs+6)
  1098  00133E  2455               	addwf	?___wmul^0,w,c
  1099  001340  6ED9               	movwf	fsr2l,c
  1100  001342  0E00               	movlw	high (_objs+6)
  1101  001344  2056               	addwfc	(?___wmul+1)^0,w,c
  1102  001346  6EDA               	movwf	fsr2h,c
  1103  001348  50DF               	movf	indf2,w,c
  1104  00134A  0101               	movlb	1	; () banked
  1105  00134C  6F82               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1106  00134E  6B83               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  001350  5183               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1116  001352  0A00               	xorlw	0	; case 0
  1117  001354  B4D8               	btfsc	status,2,c
  1118  001356  EFAF  F009         	goto	l2891
  1119  00135A  EF25  F00A         	goto	l2601
  1120  00135E                     l2891:
  1121                           
  1122                           ; BSR set to: 1
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 3, Range of values is 0 to 2
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte           10     6 (average)
  1128                           ;	Chosen strategy is simple_byte
  1129  00135E  5182               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1130  001360  0A00               	xorlw	0	; case 0
  1131  001362  B4D8               	btfsc	status,2,c
  1132  001364  EF85  F009         	goto	l2577
  1133  001368  0A01               	xorlw	1	; case 1
  1134  00136A  B4D8               	btfsc	status,2,c
  1135  00136C  EF8A  F009         	goto	l2579
  1136  001370  0A03               	xorlw	3	; case 2
  1137  001372  B4D8               	btfsc	status,2,c
  1138  001374  EF8F  F009         	goto	l2581
  1139  001378  EF25  F00A         	goto	l2601
  1140  00137C                     l2587:
  1141                           
  1142                           ; BSR set to: 1
  1143                           ;main.c: 226:                         LCDDat(1);
  1144  00137C  0E01               	movlw	1
  1145  00137E  ECB8  F010         	call	_LCDDat
  1146                           
  1147                           ;main.c: 227:                         break;
  1148  001382  EF25  F00A         	goto	l2601
  1149  001386                     l2589:
  1150                           
  1151                           ; BSR set to: 1
  1152                           ;main.c: 229:                         LCDDat(3);
  1153  001386  0E03               	movlw	3
  1154  001388  ECB8  F010         	call	_LCDDat
  1155                           
  1156                           ;main.c: 230:                         break;
  1157  00138C  EF25  F00A         	goto	l2601
  1158  001390                     l2591:
  1159                           
  1160                           ; BSR set to: 1
  1161                           ;main.c: 232:                         LCDDat(5);
  1162  001390  0E05               	movlw	5
  1163  001392  ECB8  F010         	call	_LCDDat
  1164                           
  1165                           ;main.c: 233:                         break;
  1166  001396  EF25  F00A         	goto	l2601
  1167  00139A                     l2595:
  1168                           
  1169                           ; BSR set to: 1
  1170  00139A  C195  F055         	movff	UpdateAndPrintDisplay@i_622,___wmul@multiplier
  1171  00139E  C196  F056         	movff	UpdateAndPrintDisplay@i_622+1,___wmul@multiplier+1
  1172  0013A2  0E00               	movlw	0
  1173  0013A4  6E58               	movwf	(___wmul@multiplicand+1)^0,c
  1174  0013A6  0E07               	movlw	7
  1175  0013A8  6E57               	movwf	___wmul@multiplicand^0,c
  1176  0013AA  ECE9  F010         	call	___wmul	;wreg free
  1177  0013AE  0E17               	movlw	low (_objs+6)
  1178  0013B0  2455               	addwf	?___wmul^0,w,c
  1179  0013B2  6ED9               	movwf	fsr2l,c
  1180  0013B4  0E00               	movlw	high (_objs+6)
  1181  0013B6  2056               	addwfc	(?___wmul+1)^0,w,c
  1182  0013B8  6EDA               	movwf	fsr2h,c
  1183  0013BA  50DF               	movf	indf2,w,c
  1184  0013BC  0101               	movlb	1	; () banked
  1185  0013BE  6F82               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1186  0013C0  6B83               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1187                           
  1188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1189                           ; Switch size 1, requested type "simple"
  1190                           ; Number of cases is 1, Range of values is 0 to 0
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte            4     3 (average)
  1194                           ;	Chosen strategy is simple_byte
  1195  0013C2  5183               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1196  0013C4  0A00               	xorlw	0	; case 0
  1197  0013C6  B4D8               	btfsc	status,2,c
  1198  0013C8  EFE8  F009         	goto	l2893
  1199  0013CC  EF25  F00A         	goto	l2601
  1200  0013D0                     l2893:
  1201                           
  1202                           ; BSR set to: 1
  1203                           ; Switch size 1, requested type "simple"
  1204                           ; Number of cases is 3, Range of values is 0 to 2
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte           10     6 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209  0013D0  5182               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1210  0013D2  0A00               	xorlw	0	; case 0
  1211  0013D4  B4D8               	btfsc	status,2,c
  1212  0013D6  EFBE  F009         	goto	l2587
  1213  0013DA  0A01               	xorlw	1	; case 1
  1214  0013DC  B4D8               	btfsc	status,2,c
  1215  0013DE  EFC3  F009         	goto	l2589
  1216  0013E2  0A03               	xorlw	3	; case 2
  1217  0013E4  B4D8               	btfsc	status,2,c
  1218  0013E6  EFC8  F009         	goto	l2591
  1219  0013EA  EF25  F00A         	goto	l2601
  1220  0013EE                     l2599:
  1221  0013EE  C195  F055         	movff	UpdateAndPrintDisplay@i_622,___wmul@multiplier
  1222  0013F2  C196  F056         	movff	UpdateAndPrintDisplay@i_622+1,___wmul@multiplier+1
  1223  0013F6  0E00               	movlw	0
  1224  0013F8  6E58               	movwf	(___wmul@multiplicand+1)^0,c
  1225  0013FA  0E07               	movlw	7
  1226  0013FC  6E57               	movwf	___wmul@multiplicand^0,c
  1227  0013FE  ECE9  F010         	call	___wmul	;wreg free
  1228  001402  0E16               	movlw	low (_objs+5)
  1229  001404  2455               	addwf	?___wmul^0,w,c
  1230  001406  6ED9               	movwf	fsr2l,c
  1231  001408  0E00               	movlw	high (_objs+5)
  1232  00140A  2056               	addwfc	(?___wmul+1)^0,w,c
  1233  00140C  6EDA               	movwf	fsr2h,c
  1234  00140E  50DF               	movf	indf2,w,c
  1235  001410  0101               	movlb	1	; () banked
  1236  001412  6F82               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1237  001414  6B83               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1238                           
  1239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1240                           ; Switch size 1, requested type "simple"
  1241                           ; Number of cases is 1, Range of values is 0 to 0
  1242                           ; switch strategies available:
  1243                           ; Name         Instructions Cycles
  1244                           ; simple_byte            4     3 (average)
  1245                           ;	Chosen strategy is simple_byte
  1246  001416  5183               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1247  001418  0A00               	xorlw	0	; case 0
  1248  00141A  B4D8               	btfsc	status,2,c
  1249  00141C  EF12  F00A         	goto	l2895
  1250  001420  EF25  F00A         	goto	l2601
  1251  001424                     l2895:
  1252                           
  1253                           ; BSR set to: 1
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 4, Range of values is 0 to 3
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte           13     7 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260  001424  5182               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1261  001426  0A00               	xorlw	0	; case 0
  1262  001428  B4D8               	btfsc	status,2,c
  1263  00142A  EF94  F009         	goto	l2585
  1264  00142E  0A01               	xorlw	1	; case 1
  1265  001430  B4D8               	btfsc	status,2,c
  1266  001432  EFCD  F009         	goto	l2595
  1267  001436  0A03               	xorlw	3	; case 2
  1268  001438  B4D8               	btfsc	status,2,c
  1269  00143A  EF7B  F009         	goto	l2573
  1270  00143E  0A01               	xorlw	1	; case 3
  1271  001440  B4D8               	btfsc	status,2,c
  1272  001442  EF80  F009         	goto	l2575
  1273  001446  EF25  F00A         	goto	l2601
  1274  00144A                     l2601:
  1275  00144A  0101               	movlb	1	; () banked
  1276  00144C  4B95               	infsnz	UpdateAndPrintDisplay@i_622& (0+255),f,b
  1277  00144E  2B96               	incf	(UpdateAndPrintDisplay@i_622+1)& (0+255),f,b
  1278  001450                     
  1279                           ; BSR set to: 1
  1280  001450  BF96               	btfsc	(UpdateAndPrintDisplay@i_622+1)& (0+255),7,b
  1281  001452  EF34  F00A         	goto	u1681
  1282  001456  5196               	movf	(UpdateAndPrintDisplay@i_622+1)& (0+255),w,b
  1283  001458  E109               	bnz	u1680
  1284  00145A  0E06               	movlw	6
  1285  00145C  5D95               	subwf	UpdateAndPrintDisplay@i_622& (0+255),w,b
  1286  00145E  A0D8               	btfss	status,0,c
  1287  001460  EF34  F00A         	goto	u1681
  1288  001464  EF36  F00A         	goto	u1680
  1289  001468                     u1681:
  1290  001468  EF36  F009         	goto	l2565
  1291  00146C                     u1680:
  1292  00146C                     
  1293                           ; BSR set to: 1
  1294                           ;main.c: 311:     byte temp_d = PORTD;
  1295  00146C  CF83 F18C          	movff	3971,UpdateAndPrintDisplay@temp_d	;volatile
  1296                           
  1297                           ;main.c: 313:     switch (currentSegment) {
  1298  001470  EF4A  F00A         	goto	l2619
  1299  001474                     l2605:
  1300                           
  1301                           ; BSR set to: 1
  1302                           ;main.c: 315:             LATA = 0b1000;
  1303  001474  0E08               	movlw	8
  1304  001476  6E89               	movwf	137,c	;volatile
  1305  001478                     l2607:
  1306                           
  1307                           ; BSR set to: 1
  1308                           ;main.c: 316:             LATD = segValues[scoreA];
  1309  001478  C080  FF8C         	movff	_segValues,3980	;volatile
  1310                           
  1311                           ;main.c: 317:             break;
  1312  00147C  EF64  F00A         	goto	l2621
  1313  001480                     l2609:
  1314                           
  1315                           ; BSR set to: 1
  1316                           ;main.c: 319:             LATA = 0b100000;
  1317  001480  0E20               	movlw	32
  1318  001482  6E89               	movwf	137,c	;volatile
  1319  001484  EF3C  F00A         	goto	l2607
  1320  001488                     l2613:
  1321                           
  1322                           ; BSR set to: 1
  1323                           ;main.c: 323:             LATA = 0b10000;
  1324  001488  0E10               	movlw	16
  1325  00148A  6E89               	movwf	137,c	;volatile
  1326  00148C                     
  1327                           ; BSR set to: 1
  1328                           ;main.c: 324:             LATD = segValues[10];
  1329  00148C  C08A  FF8C         	movff	_segValues+10,3980	;volatile
  1330                           
  1331                           ;main.c: 325:             break;
  1332  001490  EF64  F00A         	goto	l2621
  1333  001494                     l2619:
  1334                           
  1335                           ; BSR set to: 1
  1336  001494  C001  F182         	movff	_currentSegment,??_UpdateAndPrintDisplay
  1337  001498  C002  F183         	movff	_currentSegment+1,??_UpdateAndPrintDisplay+1
  1338                           
  1339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1340                           ; Switch size 1, requested type "simple"
  1341                           ; Number of cases is 1, Range of values is 0 to 0
  1342                           ; switch strategies available:
  1343                           ; Name         Instructions Cycles
  1344                           ; simple_byte            4     3 (average)
  1345                           ;	Chosen strategy is simple_byte
  1346  00149C  5183               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1347  00149E  0A00               	xorlw	0	; case 0
  1348  0014A0  B4D8               	btfsc	status,2,c
  1349  0014A2  EF55  F00A         	goto	l2897
  1350  0014A6  EF64  F00A         	goto	l2621
  1351  0014AA                     l2897:
  1352                           
  1353                           ; BSR set to: 1
  1354                           ; Switch size 1, requested type "simple"
  1355                           ; Number of cases is 3, Range of values is 0 to 2
  1356                           ; switch strategies available:
  1357                           ; Name         Instructions Cycles
  1358                           ; simple_byte           10     6 (average)
  1359                           ;	Chosen strategy is simple_byte
  1360  0014AA  5182               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1361  0014AC  0A00               	xorlw	0	; case 0
  1362  0014AE  B4D8               	btfsc	status,2,c
  1363  0014B0  EF3A  F00A         	goto	l2605
  1364  0014B4  0A01               	xorlw	1	; case 1
  1365  0014B6  B4D8               	btfsc	status,2,c
  1366  0014B8  EF40  F00A         	goto	l2609
  1367  0014BC  0A03               	xorlw	3	; case 2
  1368  0014BE  B4D8               	btfsc	status,2,c
  1369  0014C0  EF44  F00A         	goto	l2613
  1370  0014C4  EF64  F00A         	goto	l2621
  1371  0014C8                     l2621:
  1372                           
  1373                           ; BSR set to: 1
  1374                           ;main.c: 328:     _delay((unsigned long)((5)*(10000000L/4000.0)));
  1375  0014C8  0E11               	movlw	17
  1376  0014CA  0101               	movlb	1	; () banked
  1377  0014CC  6F82               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1378  0014CE  0E3A               	movlw	58
  1379  0014D0                     u1727:
  1380  0014D0  2EE8               	decfsz	wreg,f,c
  1381  0014D2  D7FE               	bra	u1727
  1382  0014D4  2F82               	decfsz	??_UpdateAndPrintDisplay& (0+255),f,b
  1383  0014D6  D7FC               	bra	u1727
  1384  0014D8  F000               	nop	
  1385  0014DA                     
  1386                           ;main.c: 329:     currentSegment = (currentSegment + 1) % 3;
  1387  0014DA  0E01               	movlw	1
  1388  0014DC  2401               	addwf	_currentSegment^0,w,c
  1389  0014DE  6E55               	movwf	___awmod@dividend^0,c
  1390  0014E0  0E00               	movlw	0
  1391  0014E2  2002               	addwfc	(_currentSegment+1)^0,w,c
  1392  0014E4  6E56               	movwf	(___awmod@dividend+1)^0,c
  1393  0014E6  0E00               	movlw	0
  1394  0014E8  6E58               	movwf	(___awmod@divisor+1)^0,c
  1395  0014EA  0E03               	movlw	3
  1396  0014EC  6E57               	movwf	___awmod@divisor^0,c
  1397  0014EE  EC19  F00F         	call	___awmod	;wreg free
  1398  0014F2  C055  F001         	movff	?___awmod,_currentSegment
  1399  0014F6  C056  F002         	movff	?___awmod+1,_currentSegment+1
  1400  0014FA                     
  1401                           ;main.c: 332:     LATD = temp_d;
  1402  0014FA  C18C  FF8C         	movff	UpdateAndPrintDisplay@temp_d,3980	;volatile
  1403  0014FE  0012               	return		;funcret
  1404  001500                     __end_of_UpdateAndPrintDisplay:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function ___awmod *****************
  1408 ;; Defined at:
  1409 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  dividend        2   26[COMRAM] int 
  1412 ;;  divisor         2   28[COMRAM] int 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  sign            1    1[BANK1 ] unsigned char 
  1415 ;;  counter         1    0[BANK1 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  2   26[COMRAM] int 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Totals:         4       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;Total ram usage:        6 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    3
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_UpdateAndPrintDisplay
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text2
  1440  001E32                     __ptext2:
  1441                           	callstack 0
  1442  001E32                     ___awmod:
  1443                           	callstack 26
  1444  001E32  0E00               	movlw	0
  1445  001E34  0101               	movlb	1	; () banked
  1446  001E36  6F81               	movwf	___awmod@sign& (0+255),b
  1447  001E38                     
  1448                           ; BSR set to: 1
  1449  001E38  BE56               	btfsc	(___awmod@dividend+1)^0,7,c
  1450  001E3A  EF23  F00F         	goto	u1460
  1451  001E3E  EF21  F00F         	goto	u1461
  1452  001E42                     u1461:
  1453  001E42  EF29  F00F         	goto	l2397
  1454  001E46                     u1460:
  1455  001E46                     
  1456                           ; BSR set to: 1
  1457  001E46  6C55               	negf	___awmod@dividend^0,c
  1458  001E48  1E56               	comf	(___awmod@dividend+1)^0,f,c
  1459  001E4A  B0D8               	btfsc	status,0,c
  1460  001E4C  2A56               	incf	(___awmod@dividend+1)^0,f,c
  1461  001E4E                     
  1462                           ; BSR set to: 1
  1463  001E4E  0E01               	movlw	1
  1464  001E50  6F81               	movwf	___awmod@sign& (0+255),b
  1465  001E52                     l2397:
  1466                           
  1467                           ; BSR set to: 1
  1468  001E52  BE58               	btfsc	(___awmod@divisor+1)^0,7,c
  1469  001E54  EF30  F00F         	goto	u1470
  1470  001E58  EF2E  F00F         	goto	u1471
  1471  001E5C                     u1471:
  1472  001E5C  EF34  F00F         	goto	l2401
  1473  001E60                     u1470:
  1474  001E60                     
  1475                           ; BSR set to: 1
  1476  001E60  6C57               	negf	___awmod@divisor^0,c
  1477  001E62  1E58               	comf	(___awmod@divisor+1)^0,f,c
  1478  001E64  B0D8               	btfsc	status,0,c
  1479  001E66  2A58               	incf	(___awmod@divisor+1)^0,f,c
  1480  001E68                     l2401:
  1481                           
  1482                           ; BSR set to: 1
  1483  001E68  5057               	movf	___awmod@divisor^0,w,c
  1484  001E6A  1058               	iorwf	(___awmod@divisor+1)^0,w,c
  1485  001E6C  B4D8               	btfsc	status,2,c
  1486  001E6E  EF3B  F00F         	goto	u1481
  1487  001E72  EF3D  F00F         	goto	u1480
  1488  001E76                     u1481:
  1489  001E76  EF61  F00F         	goto	l2417
  1490  001E7A                     u1480:
  1491  001E7A                     
  1492                           ; BSR set to: 1
  1493  001E7A  0E01               	movlw	1
  1494  001E7C  6F80               	movwf	___awmod@counter& (0+255),b
  1495  001E7E  EF45  F00F         	goto	l2407
  1496  001E82                     l2405:
  1497                           
  1498                           ; BSR set to: 1
  1499  001E82  90D8               	bcf	status,0,c
  1500  001E84  3657               	rlcf	___awmod@divisor^0,f,c
  1501  001E86  3658               	rlcf	(___awmod@divisor+1)^0,f,c
  1502  001E88  2B80               	incf	___awmod@counter& (0+255),f,b
  1503  001E8A                     l2407:
  1504                           
  1505                           ; BSR set to: 1
  1506  001E8A  AE58               	btfss	(___awmod@divisor+1)^0,7,c
  1507  001E8C  EF4A  F00F         	goto	u1491
  1508  001E90  EF4C  F00F         	goto	u1490
  1509  001E94                     u1491:
  1510  001E94  EF41  F00F         	goto	l2405
  1511  001E98                     u1490:
  1512  001E98                     l2409:
  1513                           
  1514                           ; BSR set to: 1
  1515  001E98  5057               	movf	___awmod@divisor^0,w,c
  1516  001E9A  5C55               	subwf	___awmod@dividend^0,w,c
  1517  001E9C  5058               	movf	(___awmod@divisor+1)^0,w,c
  1518  001E9E  5856               	subwfb	(___awmod@dividend+1)^0,w,c
  1519  001EA0  A0D8               	btfss	status,0,c
  1520  001EA2  EF55  F00F         	goto	u1501
  1521  001EA6  EF57  F00F         	goto	u1500
  1522  001EAA                     u1501:
  1523  001EAA  EF5B  F00F         	goto	l2413
  1524  001EAE                     u1500:
  1525  001EAE                     
  1526                           ; BSR set to: 1
  1527  001EAE  5057               	movf	___awmod@divisor^0,w,c
  1528  001EB0  5E55               	subwf	___awmod@dividend^0,f,c
  1529  001EB2  5058               	movf	(___awmod@divisor+1)^0,w,c
  1530  001EB4  5A56               	subwfb	(___awmod@dividend+1)^0,f,c
  1531  001EB6                     l2413:
  1532                           
  1533                           ; BSR set to: 1
  1534  001EB6  90D8               	bcf	status,0,c
  1535  001EB8  3258               	rrcf	(___awmod@divisor+1)^0,f,c
  1536  001EBA  3257               	rrcf	___awmod@divisor^0,f,c
  1537  001EBC                     
  1538                           ; BSR set to: 1
  1539  001EBC  2F80               	decfsz	___awmod@counter& (0+255),f,b
  1540  001EBE  EF4C  F00F         	goto	l2409
  1541  001EC2                     l2417:
  1542                           
  1543                           ; BSR set to: 1
  1544  001EC2  5181               	movf	___awmod@sign& (0+255),w,b
  1545  001EC4  B4D8               	btfsc	status,2,c
  1546  001EC6  EF67  F00F         	goto	u1511
  1547  001ECA  EF69  F00F         	goto	u1510
  1548  001ECE                     u1511:
  1549  001ECE  EF6D  F00F         	goto	l2421
  1550  001ED2                     u1510:
  1551  001ED2                     
  1552                           ; BSR set to: 1
  1553  001ED2  6C55               	negf	___awmod@dividend^0,c
  1554  001ED4  1E56               	comf	(___awmod@dividend+1)^0,f,c
  1555  001ED6  B0D8               	btfsc	status,0,c
  1556  001ED8  2A56               	incf	(___awmod@dividend+1)^0,f,c
  1557  001EDA                     l2421:
  1558                           
  1559                           ; BSR set to: 1
  1560  001EDA  C055  F055         	movff	___awmod@dividend,?___awmod
  1561  001EDE  C056  F056         	movff	___awmod@dividend+1,?___awmod+1
  1562  001EE2                     
  1563                           ; BSR set to: 1
  1564  001EE2  0012               	return		;funcret
  1565  001EE4                     __end_of___awmod:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _InitLCD *****************
  1569 ;; Defined at:
  1570 ;;		line 124 in file "./lcd.h"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    4
  1591 ;; This function calls:
  1592 ;;		_LCDCmd
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text3
  1599  00213E                     __ptext3:
  1600                           	callstack 0
  1601  00213E                     _InitLCD:
  1602                           	callstack 26
  1603  00213E                     
  1604                           ;./lcd.h: 125:   TRISEbits.RE1 = 0;
  1605  00213E  9296               	bcf	150,1,c	;volatile
  1606                           
  1607                           ;./lcd.h: 126:   TRISEbits.RE2 = 0;
  1608  002140  9496               	bcf	150,2,c	;volatile
  1609  002142                     
  1610                           ;./lcd.h: 127:   TRISD = 0;
  1611  002142  0E00               	movlw	0
  1612  002144  6E95               	movwf	149,c	;volatile
  1613  002146                     
  1614                           ;./lcd.h: 129:   PORTEbits.RE1 = 0;
  1615  002146  9284               	bcf	132,1,c	;volatile
  1616  002148                     
  1617                           ;./lcd.h: 130:   PORTEbits.RE2 = 0;
  1618  002148  9484               	bcf	132,2,c	;volatile
  1619  00214A                     
  1620                           ;./lcd.h: 131:   LCDCmd(0x38);
  1621  00214A  0E38               	movlw	56
  1622  00214C  ECD1  F010         	call	_LCDCmd
  1623  002150                     
  1624                           ;./lcd.h: 132:   LCDCmd(0x08);
  1625  002150  0E08               	movlw	8
  1626  002152  ECD1  F010         	call	_LCDCmd
  1627  002156                     
  1628                           ;./lcd.h: 133:   LCDCmd(0x0C);
  1629  002156  0E0C               	movlw	12
  1630  002158  ECD1  F010         	call	_LCDCmd
  1631  00215C                     
  1632                           ;./lcd.h: 134:   LCDCmd(0x06);
  1633  00215C  0E06               	movlw	6
  1634  00215E  ECD1  F010         	call	_LCDCmd
  1635  002162                     
  1636                           ;./lcd.h: 135:   LCDCmd(0x01);
  1637  002162  0E01               	movlw	1
  1638  002164  ECD1  F010         	call	_LCDCmd
  1639  002168                     
  1640                           ;./lcd.h: 136:   LCDCmd(0x80);
  1641  002168  0E80               	movlw	128
  1642  00216A  ECD1  F010         	call	_LCDCmd
  1643  00216E  0012               	return		;funcret
  1644  002170                     __end_of_InitLCD:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _InitInterrupts *****************
  1648 ;; Defined at:
  1649 ;;		line 425 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;Total ram usage:        0 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    3
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text4
  1678  00204C                     __ptext4:
  1679                           	callstack 0
  1680  00204C                     _InitInterrupts:
  1681                           	callstack 27
  1682  00204C                     
  1683                           ;main.c: 426:     a = b = c = 0;
  1684  00204C  0E00               	movlw	0
  1685  00204E  6E0A               	movwf	(_c+1)^0,c
  1686  002050  0E00               	movlw	0
  1687  002052  6E09               	movwf	_c^0,c
  1688  002054  C009  F00B         	movff	_c,_b
  1689  002058  C00A  F00C         	movff	_c+1,_b+1
  1690  00205C  C00B  F00D         	movff	_b,_a
  1691  002060  C00C  F00E         	movff	_b+1,_a+1
  1692                           
  1693                           ;main.c: 428:     ADCON1 = 0b0111;
  1694  002064  0E07               	movlw	7
  1695  002066  6EC1               	movwf	193,c	;volatile
  1696  002068                     
  1697                           ;main.c: 429:     INTCON2bits.RBPU = 0;
  1698  002068  9EF1               	bcf	241,7,c	;volatile
  1699                           
  1700                           ;main.c: 430:     PORTB = 0;
  1701  00206A  0E00               	movlw	0
  1702  00206C  6E81               	movwf	129,c	;volatile
  1703                           
  1704                           ;main.c: 432:     T3CON = 0b10000001;
  1705  00206E  0E81               	movlw	129
  1706  002070  6EB1               	movwf	177,c	;volatile
  1707  002072                     
  1708                           ;main.c: 433:     TRISB = 0xff;
  1709  002072  6893               	setf	147,c	;volatile
  1710                           
  1711                           ;main.c: 434:     TRISA = 0x0;
  1712  002074  0E00               	movlw	0
  1713  002076  6E92               	movwf	146,c	;volatile
  1714                           
  1715                           ;main.c: 435:     TRISD = 0x0;
  1716  002078  0E00               	movlw	0
  1717  00207A  6E95               	movwf	149,c	;volatile
  1718                           
  1719                           ;main.c: 437:     T0CON = 0b00010011;
  1720  00207C  0E13               	movlw	19
  1721  00207E  6ED5               	movwf	213,c	;volatile
  1722                           
  1723                           ;main.c: 438:     acceptInterrupts = 0;
  1724  002080  0E00               	movlw	0
  1725  002082  6E10               	movwf	_acceptInterrupts^0,c
  1726                           
  1727                           ;main.c: 439:     TMR0L = 0;
  1728  002084  0E00               	movlw	0
  1729  002086  6ED6               	movwf	214,c	;volatile
  1730                           
  1731                           ;main.c: 440:     TMR0H = 0x80;
  1732  002088  0E80               	movlw	128
  1733  00208A  6ED7               	movwf	215,c	;volatile
  1734  00208C                     
  1735                           ;main.c: 441:     T0CONbits.TMR0ON = 1;
  1736  00208C  8ED5               	bsf	213,7,c	;volatile
  1737  00208E                     
  1738                           ;main.c: 443:     INTCONbits.PEIE = 1;
  1739  00208E  8CF2               	bsf	242,6,c	;volatile
  1740  002090                     
  1741                           ;main.c: 444:     INTCONbits.INT0E = 1;
  1742  002090  88F2               	bsf	242,4,c	;volatile
  1743  002092                     
  1744                           ;main.c: 445:     INTCONbits.RBIE = 1;
  1745  002092  86F2               	bsf	242,3,c	;volatile
  1746  002094                     
  1747                           ;main.c: 446:     INTCONbits.T0IE = 1;
  1748  002094  8AF2               	bsf	242,5,c	;volatile
  1749  002096                     
  1750                           ;main.c: 447:     INTCON3bits.INT1E = 1;
  1751  002096  86F0               	bsf	240,3,c	;volatile
  1752  002098                     
  1753                           ;main.c: 449:     INTCON2bits.INTEDG0 = 0;
  1754  002098  9CF1               	bcf	241,6,c	;volatile
  1755  00209A                     
  1756                           ;main.c: 450:     INTCON2bits.INTEDG1 = 0;
  1757  00209A  9AF1               	bcf	241,5,c	;volatile
  1758  00209C                     
  1759                           ;main.c: 453:     INTCONbits.RBIF = 0;
  1760  00209C  90F2               	bcf	242,0,c	;volatile
  1761  00209E                     
  1762                           ;main.c: 454:     INTCONbits.INT0IF = 0;
  1763  00209E  92F2               	bcf	242,1,c	;volatile
  1764  0020A0                     
  1765                           ;main.c: 455:     INTCON3bits.INT1IF = 0;
  1766  0020A0  90F0               	bcf	240,0,c	;volatile
  1767  0020A2                     
  1768                           ;main.c: 457:     INTCONbits.RBIE = 0;
  1769  0020A2  96F2               	bcf	242,3,c	;volatile
  1770  0020A4                     
  1771                           ;main.c: 458:     INTCONbits.GIE = 1;
  1772  0020A4  8EF2               	bsf	242,7,c	;volatile
  1773  0020A6                     
  1774                           ;main.c: 459:     PORTB = PORTB;
  1775  0020A6  CF81 FF81          	movff	3969,3969	;volatile
  1776  0020AA                     
  1777                           ;main.c: 460:     INTCONbits.RBIF = 0;
  1778  0020AA  90F2               	bcf	242,0,c	;volatile
  1779  0020AC                     
  1780                           ;main.c: 461:     INTCONbits.RBIE = 1;
  1781  0020AC  86F2               	bsf	242,3,c	;volatile
  1782  0020AE  0012               	return		;funcret
  1783  0020B0                     __end_of_InitInterrupts:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _InitGameObjects *****************
  1787 ;; Defined at:
  1788 ;;		line 335 in file "main.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  j               2   16[BANK1 ] int 
  1793 ;;  i               2   18[BANK1 ] int 
  1794 ;;  i               2   14[BANK1 ] int 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;Total ram usage:       18 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    4
  1811 ;; This function calls:
  1812 ;;		___wmul
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text5
  1819  001730                     __ptext5:
  1820                           	callstack 0
  1821  001730                     _InitGameObjects:
  1822                           	callstack 26
  1823  001730                     
  1824                           ;main.c: 336:     for (int i = 0; i < 4; i++) {
  1825  001730  0E00               	movlw	0
  1826  001732  0101               	movlb	1	; () banked
  1827  001734  6F8F               	movwf	(InitGameObjects@i+1)& (0+255),b
  1828  001736  0E00               	movlw	0
  1829  001738  6F8E               	movwf	InitGameObjects@i& (0+255),b
  1830  00173A                     l2475:
  1831                           
  1832                           ; BSR set to: 1
  1833                           ;main.c: 337:         for (int j = 0; j < 16; j++) {
  1834  00173A  0E00               	movlw	0
  1835  00173C  6F91               	movwf	(InitGameObjects@j+1)& (0+255),b
  1836  00173E  0E00               	movlw	0
  1837  001740  6F90               	movwf	InitGameObjects@j& (0+255),b
  1838  001742                     l2481:
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;main.c: 338:             display[i][j] = ((void*)0);
  1842  001742  C18E  F182         	movff	InitGameObjects@i,??_InitGameObjects
  1843  001746  C18F  F183         	movff	InitGameObjects@i+1,??_InitGameObjects+1
  1844  00174A  0E05               	movlw	5
  1845  00174C                     u1555:
  1846  00174C  90D8               	bcf	status,0,c
  1847  00174E  3782               	rlcf	??_InitGameObjects& (0+255),f,b
  1848  001750  3783               	rlcf	(??_InitGameObjects+1)& (0+255),f,b
  1849  001752  2EE8               	decfsz	wreg,f,c
  1850  001754  EFA6  F00B         	goto	u1555
  1851  001758  0E00               	movlw	low _display
  1852  00175A  6F84               	movwf	(??_InitGameObjects+2)& (0+255),b
  1853  00175C  0E01               	movlw	high _display
  1854  00175E  6F85               	movwf	(??_InitGameObjects+3)& (0+255),b
  1855  001760  5182               	movf	??_InitGameObjects& (0+255),w,b
  1856  001762  2784               	addwf	(??_InitGameObjects+2)& (0+255),f,b
  1857  001764  5183               	movf	(??_InitGameObjects+1)& (0+255),w,b
  1858  001766  2385               	addwfc	(??_InitGameObjects+3)& (0+255),f,b
  1859  001768  90D8               	bcf	status,0,c
  1860  00176A  3590               	rlcf	InitGameObjects@j& (0+255),w,b
  1861  00176C  6ED9               	movwf	fsr2l,c
  1862  00176E  3591               	rlcf	(InitGameObjects@j+1)& (0+255),w,b
  1863  001770  6EDA               	movwf	fsr2h,c
  1864  001772  5184               	movf	(??_InitGameObjects+2)& (0+255),w,b
  1865  001774  26D9               	addwf	fsr2l,f,c
  1866  001776  5185               	movf	(??_InitGameObjects+3)& (0+255),w,b
  1867  001778  22DA               	addwfc	fsr2h,f,c
  1868  00177A  0E00               	movlw	0
  1869  00177C  6EDE               	movwf	postinc2,c
  1870  00177E  0E00               	movlw	0
  1871  001780  6EDD               	movwf	postdec2,c
  1872  001782                     
  1873                           ; BSR set to: 1
  1874                           ;main.c: 339:         }
  1875  001782  4B90               	infsnz	InitGameObjects@j& (0+255),f,b
  1876  001784  2B91               	incf	(InitGameObjects@j+1)& (0+255),f,b
  1877  001786                     
  1878                           ; BSR set to: 1
  1879  001786  BF91               	btfsc	(InitGameObjects@j+1)& (0+255),7,b
  1880  001788  EFCF  F00B         	goto	u1561
  1881  00178C  5191               	movf	(InitGameObjects@j+1)& (0+255),w,b
  1882  00178E  E109               	bnz	u1560
  1883  001790  0E10               	movlw	16
  1884  001792  5D90               	subwf	InitGameObjects@j& (0+255),w,b
  1885  001794  A0D8               	btfss	status,0,c
  1886  001796  EFCF  F00B         	goto	u1561
  1887  00179A  EFD1  F00B         	goto	u1560
  1888  00179E                     u1561:
  1889  00179E  EFA1  F00B         	goto	l2481
  1890  0017A2                     u1560:
  1891  0017A2                     
  1892                           ; BSR set to: 1
  1893                           ;main.c: 340:     }
  1894  0017A2  4B8E               	infsnz	InitGameObjects@i& (0+255),f,b
  1895  0017A4  2B8F               	incf	(InitGameObjects@i+1)& (0+255),f,b
  1896  0017A6                     
  1897                           ; BSR set to: 1
  1898  0017A6  BF8F               	btfsc	(InitGameObjects@i+1)& (0+255),7,b
  1899  0017A8  EFDF  F00B         	goto	u1571
  1900  0017AC  518F               	movf	(InitGameObjects@i+1)& (0+255),w,b
  1901  0017AE  E109               	bnz	u1570
  1902  0017B0  0E04               	movlw	4
  1903  0017B2  5D8E               	subwf	InitGameObjects@i& (0+255),w,b
  1904  0017B4  A0D8               	btfss	status,0,c
  1905  0017B6  EFDF  F00B         	goto	u1571
  1906  0017BA  EFE1  F00B         	goto	u1570
  1907  0017BE                     u1571:
  1908  0017BE  EF9D  F00B         	goto	l2475
  1909  0017C2                     u1570:
  1910  0017C2                     
  1911                           ; BSR set to: 1
  1912                           ;main.c: 342:     selectedPlayer = 0;
  1913  0017C2  0E00               	movlw	0
  1914  0017C4  6E08               	movwf	(_selectedPlayer+1)^0,c
  1915  0017C6  0E00               	movlw	0
  1916  0017C8  6E07               	movwf	_selectedPlayer^0,c
  1917                           
  1918                           ;main.c: 344:     objs[0].x = 3;
  1919  0017CA  0E03               	movlw	3
  1920  0017CC  6E11               	movwf	_objs^0,c
  1921                           
  1922                           ;main.c: 345:     objs[0].y = 2;
  1923  0017CE  0E02               	movlw	2
  1924  0017D0  6E12               	movwf	(_objs+1)^0,c
  1925                           
  1926                           ;main.c: 346:     objs[0].oldX = 0;
  1927  0017D2  0E00               	movlw	0
  1928  0017D4  6E13               	movwf	(_objs+2)^0,c
  1929                           
  1930                           ;main.c: 347:     objs[0].oldY = 0;
  1931  0017D6  0E00               	movlw	0
  1932  0017D8  6E14               	movwf	(_objs+3)^0,c
  1933                           
  1934                           ;main.c: 348:     objs[0].type = OT_PLAYERA;
  1935  0017DA  0E00               	movlw	0
  1936  0017DC  6E16               	movwf	(_objs+5)^0,c
  1937                           
  1938                           ;main.c: 349:     objs[0].state = OS_SELECTED;
  1939  0017DE  0E01               	movlw	1
  1940  0017E0  6E17               	movwf	(_objs+6)^0,c
  1941                           
  1942                           ;main.c: 350:     objs[0].active = 1;
  1943  0017E2  0E01               	movlw	1
  1944  0017E4  6E15               	movwf	(_objs+4)^0,c
  1945                           
  1946                           ;main.c: 352:     objs[1].x = 3;
  1947  0017E6  0E03               	movlw	3
  1948  0017E8  6E18               	movwf	(_objs+7)^0,c
  1949                           
  1950                           ;main.c: 353:     objs[1].y = 3;
  1951  0017EA  0E03               	movlw	3
  1952  0017EC  6E19               	movwf	(_objs+8)^0,c
  1953                           
  1954                           ;main.c: 354:     objs[1].oldX = 0;
  1955  0017EE  0E00               	movlw	0
  1956  0017F0  6E1A               	movwf	(_objs+9)^0,c
  1957                           
  1958                           ;main.c: 355:     objs[1].oldY = 0;
  1959  0017F2  0E00               	movlw	0
  1960  0017F4  6E1B               	movwf	(_objs+10)^0,c
  1961                           
  1962                           ;main.c: 356:     objs[1].type = OT_PLAYERA;
  1963  0017F6  0E00               	movlw	0
  1964  0017F8  6E1D               	movwf	(_objs+12)^0,c
  1965                           
  1966                           ;main.c: 357:     objs[1].state = OS_DEFAULT;
  1967  0017FA  0E00               	movlw	0
  1968  0017FC  6E1E               	movwf	(_objs+13)^0,c
  1969                           
  1970                           ;main.c: 358:     objs[1].active = 1;
  1971  0017FE  0E01               	movlw	1
  1972  001800  6E1C               	movwf	(_objs+11)^0,c
  1973                           
  1974                           ;main.c: 360:     objs[2].x = 14;
  1975  001802  0E0E               	movlw	14
  1976  001804  6E1F               	movwf	(_objs+14)^0,c
  1977                           
  1978                           ;main.c: 361:     objs[2].y = 2;
  1979  001806  0E02               	movlw	2
  1980  001808  6E20               	movwf	(_objs+15)^0,c
  1981                           
  1982                           ;main.c: 362:     objs[2].oldX = 0;
  1983  00180A  0E00               	movlw	0
  1984  00180C  6E21               	movwf	(_objs+16)^0,c
  1985                           
  1986                           ;main.c: 363:     objs[2].oldY = 0;
  1987  00180E  0E00               	movlw	0
  1988  001810  6E22               	movwf	(_objs+17)^0,c
  1989                           
  1990                           ;main.c: 364:     objs[2].type = OT_PLAYERB;
  1991  001812  0E01               	movlw	1
  1992  001814  6E24               	movwf	(_objs+19)^0,c
  1993                           
  1994                           ;main.c: 365:     objs[2].state = OS_DEFAULT;
  1995  001816  0E00               	movlw	0
  1996  001818  6E25               	movwf	(_objs+20)^0,c
  1997                           
  1998                           ;main.c: 366:     objs[2].active = 1;
  1999  00181A  0E01               	movlw	1
  2000  00181C  6E23               	movwf	(_objs+18)^0,c
  2001                           
  2002                           ;main.c: 368:     objs[3].x = 14;
  2003  00181E  0E0E               	movlw	14
  2004  001820  6E26               	movwf	(_objs+21)^0,c
  2005                           
  2006                           ;main.c: 369:     objs[3].y = 3;
  2007  001822  0E03               	movlw	3
  2008  001824  6E27               	movwf	(_objs+22)^0,c
  2009                           
  2010                           ;main.c: 370:     objs[3].oldX = 0;
  2011  001826  0E00               	movlw	0
  2012  001828  6E28               	movwf	(_objs+23)^0,c
  2013                           
  2014                           ;main.c: 371:     objs[3].oldY = 0;
  2015  00182A  0E00               	movlw	0
  2016  00182C  6E29               	movwf	(_objs+24)^0,c
  2017                           
  2018                           ;main.c: 372:     objs[3].type = OT_PLAYERB;
  2019  00182E  0E01               	movlw	1
  2020  001830  6E2B               	movwf	(_objs+26)^0,c
  2021                           
  2022                           ;main.c: 373:     objs[3].state = OS_DEFAULT;
  2023  001832  0E00               	movlw	0
  2024  001834  6E2C               	movwf	(_objs+27)^0,c
  2025                           
  2026                           ;main.c: 374:     objs[3].active = 1;
  2027  001836  0E01               	movlw	1
  2028  001838  6E2A               	movwf	(_objs+25)^0,c
  2029                           
  2030                           ;main.c: 376:     objs[5].x = 9;
  2031  00183A  0E09               	movlw	9
  2032  00183C  6E34               	movwf	(_objs+35)^0,c
  2033                           
  2034                           ;main.c: 377:     objs[5].y = 2;
  2035  00183E  0E02               	movlw	2
  2036  001840  6E35               	movwf	(_objs+36)^0,c
  2037                           
  2038                           ;main.c: 378:     objs[5].oldX = 0;
  2039  001842  0E00               	movlw	0
  2040  001844  6E36               	movwf	(_objs+37)^0,c
  2041                           
  2042                           ;main.c: 379:     objs[5].oldY = 0;
  2043  001846  0E00               	movlw	0
  2044  001848  6E37               	movwf	(_objs+38)^0,c
  2045                           
  2046                           ;main.c: 380:     objs[5].type = OT_FRISBEE;
  2047  00184A  0E02               	movlw	2
  2048  00184C  6E39               	movwf	(_objs+40)^0,c
  2049                           
  2050                           ;main.c: 381:     objs[5].state = OS_FELL;
  2051  00184E  0E04               	movlw	4
  2052  001850  6E3A               	movwf	(_objs+41)^0,c
  2053                           
  2054                           ;main.c: 382:     objs[5].active = 1;
  2055  001852  0E01               	movlw	1
  2056  001854  6E38               	movwf	(_objs+39)^0,c
  2057                           
  2058                           ;main.c: 384:     objs[4].x = 1;
  2059  001856  0E01               	movlw	1
  2060  001858  6E2D               	movwf	(_objs+28)^0,c
  2061                           
  2062                           ;main.c: 385:     objs[4].y = 1;
  2063  00185A  0E01               	movlw	1
  2064  00185C  6E2E               	movwf	(_objs+29)^0,c
  2065                           
  2066                           ;main.c: 386:     objs[4].oldX = 0;
  2067  00185E  0E00               	movlw	0
  2068  001860  6E2F               	movwf	(_objs+30)^0,c
  2069                           
  2070                           ;main.c: 387:     objs[4].oldY = 0;
  2071  001862  0E00               	movlw	0
  2072  001864  6E30               	movwf	(_objs+31)^0,c
  2073                           
  2074                           ;main.c: 388:     objs[4].type = OT_TARGET;
  2075  001866  0E03               	movlw	3
  2076  001868  6E32               	movwf	(_objs+33)^0,c
  2077                           
  2078                           ;main.c: 389:     objs[4].active = 0;
  2079  00186A  0E00               	movlw	0
  2080  00186C  6E31               	movwf	(_objs+32)^0,c
  2081                           
  2082                           ;main.c: 391:     for (int i = 0; i < 6; i++) {
  2083  00186E  0E00               	movlw	0
  2084  001870  6F93               	movwf	(InitGameObjects@i_627+1)& (0+255),b
  2085  001872  0E00               	movlw	0
  2086  001874  6F92               	movwf	InitGameObjects@i_627& (0+255),b
  2087  001876                     l2497:
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;main.c: 392:         display[objs[i].y][objs[i].x] = &objs[i];
  2091  001876  C192  F055         	movff	InitGameObjects@i_627,___wmul@multiplier
  2092  00187A  C193  F056         	movff	InitGameObjects@i_627+1,___wmul@multiplier+1
  2093  00187E  0E00               	movlw	0
  2094  001880  6E58               	movwf	(___wmul@multiplicand+1)^0,c
  2095  001882  0E07               	movlw	7
  2096  001884  6E57               	movwf	___wmul@multiplicand^0,c
  2097  001886  ECE9  F010         	call	___wmul	;wreg free
  2098  00188A  0E11               	movlw	low _objs
  2099  00188C  0101               	movlb	1	; () banked
  2100  00188E  6F82               	movwf	??_InitGameObjects& (0+255),b
  2101  001890  0E00               	movlw	high _objs
  2102  001892  6F83               	movwf	(??_InitGameObjects+1)& (0+255),b
  2103  001894  5055               	movf	?___wmul^0,w,c
  2104  001896  2782               	addwf	??_InitGameObjects& (0+255),f,b
  2105  001898  5056               	movf	(?___wmul+1)^0,w,c
  2106  00189A  2383               	addwfc	(??_InitGameObjects+1)& (0+255),f,b
  2107  00189C  0E07               	movlw	7
  2108  00189E  0392               	mulwf	InitGameObjects@i_627& (0+255),b
  2109  0018A0  CFF3 F184          	movff	prodl,??_InitGameObjects+2
  2110  0018A4  CFF4 F185          	movff	prodh,??_InitGameObjects+3
  2111  0018A8  0393               	mulwf	(InitGameObjects@i_627+1)& (0+255),b
  2112  0018AA  50F3               	movf	prodl,w,c
  2113  0018AC  2785               	addwf	(??_InitGameObjects+3)& (0+255),f,b
  2114  0018AE  0E11               	movlw	low _objs
  2115  0018B0  2584               	addwf	(??_InitGameObjects+2)& (0+255),w,b
  2116  0018B2  6ED9               	movwf	fsr2l,c
  2117  0018B4  0E00               	movlw	high _objs
  2118  0018B6  2185               	addwfc	(??_InitGameObjects+3)& (0+255),w,b
  2119  0018B8  6EDA               	movwf	fsr2h,c
  2120  0018BA  50DF               	movf	indf2,w,c
  2121  0018BC  6F86               	movwf	(??_InitGameObjects+4)& (0+255),b
  2122  0018BE  5186               	movf	(??_InitGameObjects+4)& (0+255),w,b
  2123  0018C0  0D02               	mullw	2
  2124  0018C2  CFF3 F187          	movff	prodl,??_InitGameObjects+5
  2125  0018C6  CFF4 F188          	movff	prodh,??_InitGameObjects+6
  2126  0018CA  0E07               	movlw	7
  2127  0018CC  0392               	mulwf	InitGameObjects@i_627& (0+255),b
  2128  0018CE  CFF3 F189          	movff	prodl,??_InitGameObjects+7
  2129  0018D2  CFF4 F18A          	movff	prodh,??_InitGameObjects+8
  2130  0018D6  0393               	mulwf	(InitGameObjects@i_627+1)& (0+255),b
  2131  0018D8  50F3               	movf	prodl,w,c
  2132  0018DA  278A               	addwf	(??_InitGameObjects+8)& (0+255),f,b
  2133  0018DC  0E12               	movlw	low (_objs+1)
  2134  0018DE  2589               	addwf	(??_InitGameObjects+7)& (0+255),w,b
  2135  0018E0  6ED9               	movwf	fsr2l,c
  2136  0018E2  0E00               	movlw	high (_objs+1)
  2137  0018E4  218A               	addwfc	(??_InitGameObjects+8)& (0+255),w,b
  2138  0018E6  6EDA               	movwf	fsr2h,c
  2139  0018E8  50DF               	movf	indf2,w,c
  2140  0018EA  6F8B               	movwf	(??_InitGameObjects+9)& (0+255),b
  2141  0018EC  518B               	movf	(??_InitGameObjects+9)& (0+255),w,b
  2142  0018EE  0D20               	mullw	32
  2143  0018F0  0E00               	movlw	low _display
  2144  0018F2  6F8C               	movwf	(??_InitGameObjects+10)& (0+255),b
  2145  0018F4  0E01               	movlw	high _display
  2146  0018F6  6F8D               	movwf	(??_InitGameObjects+11)& (0+255),b
  2147  0018F8  50F3               	movf	243,w,c
  2148  0018FA  278C               	addwf	(??_InitGameObjects+10)& (0+255),f,b
  2149  0018FC  50F4               	movf	244,w,c
  2150  0018FE  238D               	addwfc	(??_InitGameObjects+11)& (0+255),f,b
  2151  001900  5187               	movf	(??_InitGameObjects+5)& (0+255),w,b
  2152  001902  258C               	addwf	(??_InitGameObjects+10)& (0+255),w,b
  2153  001904  6ED9               	movwf	fsr2l,c
  2154  001906  5188               	movf	(??_InitGameObjects+6)& (0+255),w,b
  2155  001908  218D               	addwfc	(??_InitGameObjects+11)& (0+255),w,b
  2156  00190A  6EDA               	movwf	fsr2h,c
  2157  00190C  C182  FFDE         	movff	??_InitGameObjects,postinc2
  2158  001910  C183  FFDD         	movff	??_InitGameObjects+1,postdec2
  2159  001914                     
  2160                           ; BSR set to: 1
  2161                           ;main.c: 393:     }
  2162  001914  4B92               	infsnz	InitGameObjects@i_627& (0+255),f,b
  2163  001916  2B93               	incf	(InitGameObjects@i_627+1)& (0+255),f,b
  2164  001918                     
  2165                           ; BSR set to: 1
  2166  001918  BF93               	btfsc	(InitGameObjects@i_627+1)& (0+255),7,b
  2167  00191A  EF98  F00C         	goto	u1581
  2168  00191E  5193               	movf	(InitGameObjects@i_627+1)& (0+255),w,b
  2169  001920  E109               	bnz	u1580
  2170  001922  0E06               	movlw	6
  2171  001924  5D92               	subwf	InitGameObjects@i_627& (0+255),w,b
  2172  001926  A0D8               	btfss	status,0,c
  2173  001928  EF98  F00C         	goto	u1581
  2174  00192C  EF9A  F00C         	goto	u1580
  2175  001930                     u1581:
  2176  001930  EF3B  F00C         	goto	l2497
  2177  001934                     u1580:
  2178  001934                     
  2179                           ; BSR set to: 1
  2180  001934  0012               	return		;funcret
  2181  001936                     __end_of_InitGameObjects:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function ___wmul *****************
  2185 ;; Defined at:
  2186 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  multiplier      2   26[COMRAM] unsigned int 
  2189 ;;  multiplicand    2   28[COMRAM] unsigned int 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  product         2    0[BANK1 ] unsigned int 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   26[COMRAM] unsigned int 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, prodl, prodh
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Totals:         4       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;Total ram usage:        6 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_UpdateAndPrintDisplay
  2212 ;;		_InitGameObjects
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text6
  2217  0021D2                     __ptext6:
  2218                           	callstack 0
  2219  0021D2                     ___wmul:
  2220                           	callstack 26
  2221  0021D2  5055               	movf	___wmul@multiplier^0,w,c
  2222  0021D4  0257               	mulwf	___wmul@multiplicand^0,c
  2223  0021D6  CFF3 F180          	movff	prodl,___wmul@product
  2224  0021DA  CFF4 F181          	movff	prodh,___wmul@product+1
  2225  0021DE  5055               	movf	___wmul@multiplier^0,w,c
  2226  0021E0  0258               	mulwf	(___wmul@multiplicand+1)^0,c
  2227  0021E2  50F3               	movf	243,w,c
  2228  0021E4  0101               	movlb	1	; () banked
  2229  0021E6  2781               	addwf	(___wmul@product+1)& (0+255),f,b
  2230  0021E8  5056               	movf	(___wmul@multiplier+1)^0,w,c
  2231  0021EA  0257               	mulwf	___wmul@multiplicand^0,c
  2232  0021EC  50F3               	movf	243,w,c
  2233  0021EE  2781               	addwf	(___wmul@product+1)& (0+255),f,b
  2234  0021F0                     
  2235                           ; BSR set to: 1
  2236  0021F0  C180  F055         	movff	___wmul@product,?___wmul
  2237  0021F4  C181  F056         	movff	___wmul@product+1,?___wmul+1
  2238  0021F8                     
  2239                           ; BSR set to: 1
  2240  0021F8  0012               	return		;funcret
  2241  0021FA                     __end_of___wmul:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _AddCustomCharacters *****************
  2245 ;; Defined at:
  2246 ;;		line 161 in file "./lcd.h"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    6
  2267 ;; This function calls:
  2268 ;;		_LCDAddSpecialCharacter
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text7
  2275  001EE4                     __ptext7:
  2276                           	callstack 0
  2277  001EE4                     _AddCustomCharacters:
  2278                           	callstack 24
  2279  001EE4                     
  2280                           ;./lcd.h: 162:     LCDAddSpecialCharacter(0, teamA_player);
  2281  001EE4  0E5C               	movlw	low _teamA_player
  2282  001EE6  0101               	movlb	1	; () banked
  2283  001EE8  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2284  001EEA  0E00               	movlw	high _teamA_player
  2285  001EEC  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2286  001EEE  0E00               	movlw	0
  2287  001EF0  EC58  F010         	call	_LCDAddSpecialCharacter
  2288                           
  2289                           ;./lcd.h: 163:     LCDAddSpecialCharacter(1, teamB_player);
  2290  001EF4  0EBB               	movlw	low _teamB_player
  2291  001EF6  0101               	movlb	1	; () banked
  2292  001EF8  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2293  001EFA  0E00               	movlw	high _teamB_player
  2294  001EFC  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2295  001EFE  0E01               	movlw	1
  2296  001F00  EC58  F010         	call	_LCDAddSpecialCharacter
  2297                           
  2298                           ;./lcd.h: 164:     LCDAddSpecialCharacter(2, selected_teamA_player);
  2299  001F04  0EB3               	movlw	low _selected_teamA_player
  2300  001F06  0101               	movlb	1	; () banked
  2301  001F08  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2302  001F0A  0E00               	movlw	high _selected_teamA_player
  2303  001F0C  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2304  001F0E  0E02               	movlw	2
  2305  001F10  EC58  F010         	call	_LCDAddSpecialCharacter
  2306                           
  2307                           ;./lcd.h: 165:     LCDAddSpecialCharacter(3, selected_teamB_player);
  2308  001F14  0EAB               	movlw	low _selected_teamB_player
  2309  001F16  0101               	movlb	1	; () banked
  2310  001F18  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2311  001F1A  0E00               	movlw	high _selected_teamB_player
  2312  001F1C  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2313  001F1E  0E03               	movlw	3
  2314  001F20  EC58  F010         	call	_LCDAddSpecialCharacter
  2315                           
  2316                           ;./lcd.h: 166:     LCDAddSpecialCharacter(4, selected_teamA_player_with_frisbee);
  2317  001F24  0EA3               	movlw	low _selected_teamA_player_with_frisbee
  2318  001F26  0101               	movlb	1	; () banked
  2319  001F28  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2320  001F2A  0E00               	movlw	high _selected_teamA_player_with_frisbee
  2321  001F2C  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2322  001F2E  0E04               	movlw	4
  2323  001F30  EC58  F010         	call	_LCDAddSpecialCharacter
  2324                           
  2325                           ;./lcd.h: 167:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
  2326  001F34  0E9B               	movlw	low _selected_teamB_player_with_frisbee
  2327  001F36  0101               	movlb	1	; () banked
  2328  001F38  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2329  001F3A  0E00               	movlw	high _selected_teamB_player_with_frisbee
  2330  001F3C  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2331  001F3E  0E05               	movlw	5
  2332  001F40  EC58  F010         	call	_LCDAddSpecialCharacter
  2333                           
  2334                           ;./lcd.h: 168:     LCDAddSpecialCharacter(6, frisbeeChar);
  2335  001F44  0E93               	movlw	low _frisbeeChar
  2336  001F46  0101               	movlb	1	; () banked
  2337  001F48  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2338  001F4A  0E00               	movlw	high _frisbeeChar
  2339  001F4C  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2340  001F4E  0E06               	movlw	6
  2341  001F50  EC58  F010         	call	_LCDAddSpecialCharacter
  2342                           
  2343                           ;./lcd.h: 169:     LCDAddSpecialCharacter(7, frisbee_target);
  2344  001F54  0E8B               	movlw	low _frisbee_target
  2345  001F56  0101               	movlb	1	; () banked
  2346  001F58  6F80               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2347  001F5A  0E00               	movlw	high _frisbee_target
  2348  001F5C  6F81               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2349  001F5E  0E07               	movlw	7
  2350  001F60  EC58  F010         	call	_LCDAddSpecialCharacter
  2351  001F64  0012               	return		;funcret
  2352  001F66                     __end_of_AddCustomCharacters:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _LCDAddSpecialCharacter *****************
  2356 ;; Defined at:
  2357 ;;		line 145 in file "./lcd.h"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  character_in    1    wreg     unsigned char 
  2360 ;;  data            2    0[BANK1 ] PTR unsigned char 
  2361 ;;		 -> frisbee_target(8), frisbeeChar(8), selected_teamB_player_with_frisbee(8), selected_teamA_player_with_frisbee(8),
      + 
  2362 ;;		 -> selected_teamB_player(8), selected_teamA_player(8), teamB_player(8), teamA_player(8), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  character_in    1    2[BANK1 ] unsigned char 
  2365 ;;  i               1    3[BANK1 ] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2375 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;Total ram usage:        4 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    5
  2382 ;; This function calls:
  2383 ;;		_LCDCmd
  2384 ;;		_LCDDat
  2385 ;;		_LCDGoto
  2386 ;; This function is called by:
  2387 ;;		_AddCustomCharacters
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text8
  2392  0020B0                     __ptext8:
  2393                           	callstack 0
  2394  0020B0                     _LCDAddSpecialCharacter:
  2395                           	callstack 24
  2396                           
  2397                           ;incstack = 0
  2398                           ;LCDAddSpecialCharacter@character_index stored from wreg
  2399  0020B0  0101               	movlb	1	; () banked
  2400  0020B2  6F82               	movwf	LCDAddSpecialCharacter@character_index& (0+255),b
  2401  0020B4                     
  2402                           ;./lcd.h: 151:     LCDCmd(0b01000000+(character_index*8));
  2403  0020B4  0101               	movlb	1	; () banked
  2404  0020B6  5182               	movf	LCDAddSpecialCharacter@character_index& (0+255),w,b
  2405  0020B8  0D08               	mullw	8
  2406  0020BA  50F3               	movf	243,w,c
  2407  0020BC  0F40               	addlw	64
  2408  0020BE  ECD1  F010         	call	_LCDCmd
  2409  0020C2                     
  2410                           ;./lcd.h: 152:     for(byte i=0; i < 8; i++) {
  2411  0020C2  0E00               	movlw	0
  2412  0020C4  0101               	movlb	1	; () banked
  2413  0020C6  6F83               	movwf	LCDAddSpecialCharacter@i& (0+255),b
  2414  0020C8                     l2375:
  2415                           
  2416                           ; BSR set to: 1
  2417                           ;./lcd.h: 153:         LCDDat(data[i]);
  2418  0020C8  5183               	movf	LCDAddSpecialCharacter@i& (0+255),w,b
  2419  0020CA  2580               	addwf	LCDAddSpecialCharacter@data& (0+255),w,b
  2420  0020CC  6ED9               	movwf	fsr2l,c
  2421  0020CE  0E00               	movlw	0
  2422  0020D0  2181               	addwfc	(LCDAddSpecialCharacter@data+1)& (0+255),w,b
  2423  0020D2  6EDA               	movwf	fsr2h,c
  2424  0020D4  50DF               	movf	indf2,w,c
  2425  0020D6  ECB8  F010         	call	_LCDDat
  2426  0020DA                     
  2427                           ;./lcd.h: 154:     }
  2428  0020DA  0101               	movlb	1	; () banked
  2429  0020DC  2B83               	incf	LCDAddSpecialCharacter@i& (0+255),f,b
  2430  0020DE                     
  2431                           ; BSR set to: 1
  2432  0020DE  0E07               	movlw	7
  2433  0020E0  6583               	cpfsgt	LCDAddSpecialCharacter@i& (0+255),b
  2434  0020E2  EF75  F010         	goto	u1451
  2435  0020E6  EF77  F010         	goto	u1450
  2436  0020EA                     u1451:
  2437  0020EA  EF64  F010         	goto	l2375
  2438  0020EE                     u1450:
  2439  0020EE                     
  2440                           ; BSR set to: 1
  2441                           ;./lcd.h: 156:     LCDGoto(lcd_x, lcd_y);
  2442  0020EE  C05A  F057         	movff	_lcd_y,LCDGoto@p_1
  2443  0020F2  505B               	movf	_lcd_x^0,w,c
  2444  0020F4  ECB3  F00F         	call	_LCDGoto
  2445  0020F8  0012               	return		;funcret
  2446  0020FA                     __end_of_LCDAddSpecialCharacter:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _LCDGoto *****************
  2450 ;; Defined at:
  2451 ;;		line 88 in file "./lcd.h"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  p_2             1    wreg     unsigned char 
  2454 ;;  p_1             1   28[COMRAM] unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  p_2             1   29[COMRAM] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2466 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;Total ram usage:        2 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    4
  2473 ;; This function calls:
  2474 ;;		_LCDCmd
  2475 ;; This function is called by:
  2476 ;;		_LCDAddSpecialCharacter
  2477 ;;		_UpdateAndPrintDisplay
  2478 ;;		_LCDStr
  2479 ;;		_PrintPORTBandIntCounts
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text9
  2484  001F66                     __ptext9:
  2485                           	callstack 0
  2486  001F66                     _LCDGoto:
  2487                           	callstack 25
  2488                           
  2489                           ;incstack = 0
  2490                           ;LCDGoto@p_2 stored from wreg
  2491  001F66  6E58               	movwf	LCDGoto@p_2^0,c
  2492  001F68                     
  2493                           ;./lcd.h: 89:   if(p_1==1) {
  2494  001F68  0457               	decf	LCDGoto@p_1^0,w,c
  2495  001F6A  A4D8               	btfss	status,2,c
  2496  001F6C  EFBA  F00F         	goto	u1421
  2497  001F70  EFBC  F00F         	goto	u1420
  2498  001F74                     u1421:
  2499  001F74  EFC3  F00F         	goto	l2353
  2500  001F78                     u1420:
  2501  001F78                     
  2502                           ;./lcd.h: 90:     LCDCmd(0x80 +((p_2-1)%16));
  2503  001F78  0458               	decf	LCDGoto@p_2^0,w,c
  2504  001F7A  0B0F               	andlw	15
  2505  001F7C  0F80               	addlw	128
  2506  001F7E  ECD1  F010         	call	_LCDCmd
  2507                           
  2508                           ;./lcd.h: 91:   }
  2509  001F82  EFE8  F00F         	goto	l2363
  2510  001F86                     l2353:
  2511  001F86  0E02               	movlw	2
  2512  001F88  1857               	xorwf	LCDGoto@p_1^0,w,c
  2513  001F8A  A4D8               	btfss	status,2,c
  2514  001F8C  EFCA  F00F         	goto	u1431
  2515  001F90  EFCC  F00F         	goto	u1430
  2516  001F94                     u1431:
  2517  001F94  EFD3  F00F         	goto	l2357
  2518  001F98                     u1430:
  2519  001F98                     
  2520                           ;./lcd.h: 93:     LCDCmd(0xC0 +((p_2-1)%16));
  2521  001F98  0458               	decf	LCDGoto@p_2^0,w,c
  2522  001F9A  0B0F               	andlw	15
  2523  001F9C  0FC0               	addlw	192
  2524  001F9E  ECD1  F010         	call	_LCDCmd
  2525                           
  2526                           ;./lcd.h: 94:   }
  2527  001FA2  EFE8  F00F         	goto	l2363
  2528  001FA6                     l2357:
  2529  001FA6  0E03               	movlw	3
  2530  001FA8  1857               	xorwf	LCDGoto@p_1^0,w,c
  2531  001FAA  A4D8               	btfss	status,2,c
  2532  001FAC  EFDA  F00F         	goto	u1441
  2533  001FB0  EFDC  F00F         	goto	u1440
  2534  001FB4                     u1441:
  2535  001FB4  EFE3  F00F         	goto	l2361
  2536  001FB8                     u1440:
  2537  001FB8                     
  2538                           ;./lcd.h: 96:     LCDCmd(0x90 +((p_2-1)%16));
  2539  001FB8  0458               	decf	LCDGoto@p_2^0,w,c
  2540  001FBA  0B0F               	andlw	15
  2541  001FBC  0F90               	addlw	144
  2542  001FBE  ECD1  F010         	call	_LCDCmd
  2543                           
  2544                           ;./lcd.h: 97:   }
  2545  001FC2  EFE8  F00F         	goto	l2363
  2546  001FC6                     l2361:
  2547                           
  2548                           ;./lcd.h: 99:     LCDCmd(0xD0 +((p_2-1)%16));
  2549  001FC6  0458               	decf	LCDGoto@p_2^0,w,c
  2550  001FC8  0B0F               	andlw	15
  2551  001FCA  0FD0               	addlw	208
  2552  001FCC  ECD1  F010         	call	_LCDCmd
  2553  001FD0                     l2363:
  2554                           
  2555                           ;./lcd.h: 101:   lcd_x = p_2;
  2556  001FD0  C058  F05B         	movff	LCDGoto@p_2,_lcd_x
  2557  001FD4                     
  2558                           ;./lcd.h: 102:   lcd_y = p_1;
  2559  001FD4  C057  F05A         	movff	LCDGoto@p_1,_lcd_y
  2560  001FD8  0012               	return		;funcret
  2561  001FDA                     __end_of_LCDGoto:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _LCDCmd *****************
  2565 ;; Defined at:
  2566 ;;		line 64 in file "./lcd.h"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  cmd             1    wreg     unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  cmd             1   27[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;Total ram usage:        2 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    3
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_LCDGoto
  2591 ;;		_InitLCD
  2592 ;;		_LCDAddSpecialCharacter
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text10
  2597  0021A2                     __ptext10:
  2598                           	callstack 0
  2599  0021A2                     _LCDCmd:
  2600                           	callstack 25
  2601                           
  2602                           ;incstack = 0
  2603                           ;LCDCmd@cmd stored from wreg
  2604  0021A2  6E56               	movwf	LCDCmd@cmd^0,c
  2605  0021A4                     
  2606                           ;./lcd.h: 65:   PORTEbits.RE1 = 0;
  2607  0021A4  9284               	bcf	132,1,c	;volatile
  2608                           
  2609                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  2610  0021A6  9484               	bcf	132,2,c	;volatile
  2611  0021A8                     
  2612                           ;./lcd.h: 67:   PORTD = cmd;
  2613  0021A8  C056  FF83         	movff	LCDCmd@cmd,3971	;volatile
  2614  0021AC                     
  2615                           ;./lcd.h: 68:   PORTEbits.RE1 = 1;
  2616  0021AC  8284               	bsf	132,1,c	;volatile
  2617  0021AE                     
  2618                           ;./lcd.h: 69:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2619  0021AE  0E07               	movlw	7
  2620  0021B0  6E55               	movwf	??_LCDCmd^0,c
  2621  0021B2  0E7D               	movlw	125
  2622  0021B4                     u1737:
  2623  0021B4  2EE8               	decfsz	wreg,f,c
  2624  0021B6  D7FE               	bra	u1737
  2625  0021B8  2E55               	decfsz	??_LCDCmd^0,f,c
  2626  0021BA  D7FC               	bra	u1737
  2627  0021BC  F000               	nop	
  2628  0021BE                     
  2629                           ;./lcd.h: 70:   PORTEbits.RE1 = 0;
  2630  0021BE  9284               	bcf	132,1,c	;volatile
  2631  0021C0                     
  2632                           ;./lcd.h: 71:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2633  0021C0  0E07               	movlw	7
  2634  0021C2  6E55               	movwf	??_LCDCmd^0,c
  2635  0021C4  0E7D               	movlw	125
  2636  0021C6                     u1747:
  2637  0021C6  2EE8               	decfsz	wreg,f,c
  2638  0021C8  D7FE               	bra	u1747
  2639  0021CA  2E55               	decfsz	??_LCDCmd^0,f,c
  2640  0021CC  D7FC               	bra	u1747
  2641  0021CE  F000               	nop	
  2642  0021D0  0012               	return		;funcret
  2643  0021D2                     __end_of_LCDCmd:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _LCDDat *****************
  2647 ;; Defined at:
  2648 ;;		line 74 in file "./lcd.h"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  dat             1    wreg     unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  dat             1   27[COMRAM] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        2 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    3
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_LCDAddSpecialCharacter
  2673 ;;		_UpdateAndPrintDisplay
  2674 ;;		_LCDStr
  2675 ;;		_PrintPORTBandIntCounts
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text11
  2680  002170                     __ptext11:
  2681                           	callstack 0
  2682  002170                     _LCDDat:
  2683                           	callstack 26
  2684                           
  2685                           ;incstack = 0
  2686                           ;LCDDat@dat stored from wreg
  2687  002170  6E56               	movwf	LCDDat@dat^0,c
  2688  002172                     
  2689                           ;./lcd.h: 75:   PORTEbits.RE1 = 0;
  2690  002172  9284               	bcf	132,1,c	;volatile
  2691                           
  2692                           ;./lcd.h: 76:   PORTEbits.RE2 = 1;
  2693  002174  8484               	bsf	132,2,c	;volatile
  2694  002176                     
  2695                           ;./lcd.h: 77:   PORTD = dat;
  2696  002176  C056  FF83         	movff	LCDDat@dat,3971	;volatile
  2697  00217A                     
  2698                           ;./lcd.h: 78:   PORTEbits.RE1 = 1;
  2699  00217A  8284               	bsf	132,1,c	;volatile
  2700  00217C                     
  2701                           ;./lcd.h: 79:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2702  00217C  0E07               	movlw	7
  2703  00217E  6E55               	movwf	??_LCDDat^0,c
  2704  002180  0E7D               	movlw	125
  2705  002182                     u1757:
  2706  002182  2EE8               	decfsz	wreg,f,c
  2707  002184  D7FE               	bra	u1757
  2708  002186  2E55               	decfsz	??_LCDDat^0,f,c
  2709  002188  D7FC               	bra	u1757
  2710  00218A  F000               	nop	
  2711  00218C                     
  2712                           ;./lcd.h: 80:   PORTEbits.RE1 = 0;
  2713  00218C  9284               	bcf	132,1,c	;volatile
  2714  00218E                     
  2715                           ;./lcd.h: 81:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2716  00218E  0E07               	movlw	7
  2717  002190  6E55               	movwf	??_LCDDat^0,c
  2718  002192  0E7D               	movlw	125
  2719  002194                     u1767:
  2720  002194  2EE8               	decfsz	wreg,f,c
  2721  002196  D7FE               	bra	u1767
  2722  002198  2E55               	decfsz	??_LCDDat^0,f,c
  2723  00219A  D7FC               	bra	u1767
  2724  00219C  F000               	nop	
  2725  00219E                     
  2726                           ;./lcd.h: 82:   PORTEbits.RE2 = 0;
  2727  00219E  9484               	bcf	132,2,c	;volatile
  2728  0021A0  0012               	return		;funcret
  2729  0021A2                     __end_of_LCDDat:
  2730                           	callstack 0
  2731                           
  2732 ;; *************** function _lowIsr *****************
  2733 ;; Defined at:
  2734 ;;		line 101 in file "main.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		None
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        1 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    2
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		Interrupt level 1
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	intcodelo
  2763  000018                     __pintcodelo:
  2764                           	callstack 0
  2765  000018                     _lowIsr:
  2766                           	callstack 24
  2767                           
  2768                           ;incstack = 0
  2769  000018  8064               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2770  00001A  CFE0 F054          	movff	bsr,??_lowIsr
  2771  00001E                     
  2772                           ;main.c: 102:     PIR1bits.TMR2IF = 0;
  2773  00001E  929E               	bcf	158,1,c	;volatile
  2774  000020  C054  FFE0         	movff	??_lowIsr,bsr
  2775  000024  9064               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2776  000026  0010               	retfie	
  2777  000028                     __end_of_lowIsr:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _highIsr *****************
  2781 ;; Defined at:
  2782 ;;		line 40 in file "main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;Total ram usage:        8 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		_SetupDebouncingTimer
  2805 ;;		_down
  2806 ;;		_left
  2807 ;;		_right
  2808 ;;		_up
  2809 ;;		i2___wmul
  2810 ;; This function is called by:
  2811 ;;		Interrupt level 2
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	intcode
  2816  000008                     __pintcode:
  2817                           	callstack 0
  2818  000008                     _highIsr:
  2819                           	callstack 24
  2820                           
  2821                           ;incstack = 0
  2822  000008  8264               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2823  00000A  ED80  F00A         	call	int_func,f	;refresh shadow registers
  2824                           
  2825                           	psect	intcode_body
  2826  001500                     __pintcode_body:
  2827                           	callstack 24
  2828  001500                     int_func:
  2829                           	callstack 24
  2830  001500  0006               	pop		; remove dummy address from shadow register refresh
  2831  001502  CFE1 F04E          	movff	fsr1l,??_highIsr+2
  2832  001506  CFE2 F04F          	movff	fsr1h,??_highIsr+3
  2833  00150A  CFD9 F050          	movff	fsr2l,??_highIsr+4
  2834  00150E  CFDA F051          	movff	fsr2h,??_highIsr+5
  2835  001512  CFF3 F052          	movff	prodl,??_highIsr+6
  2836  001516  CFF4 F053          	movff	prodh,??_highIsr+7
  2837  00151A                     
  2838                           ;main.c: 41:     portbVals = PORTB;
  2839  00151A  CF81 F00F          	movff	3969,_portbVals	;volatile
  2840                           
  2841                           ;main.c: 43:     if (INTCONbits.TMR0IF) {
  2842  00151E  A4F2               	btfss	242,2,c	;volatile
  2843  001520  EF94  F00A         	goto	i2u129_41
  2844  001524  EF96  F00A         	goto	i2u129_40
  2845  001528                     i2u129_41:
  2846  001528  EF9A  F00A         	goto	i2l2179
  2847  00152C                     i2u129_40:
  2848  00152C                     
  2849                           ;main.c: 44:         acceptInterrupts = 1;
  2850  00152C  0E01               	movlw	1
  2851  00152E  6E10               	movwf	_acceptInterrupts^0,c
  2852  001530                     
  2853                           ;main.c: 45:         T0CONbits.TMR0ON = 0;
  2854  001530  9ED5               	bcf	213,7,c	;volatile
  2855  001532                     
  2856                           ;main.c: 46:         INTCONbits.TMR0IF = 0;
  2857  001532  94F2               	bcf	242,2,c	;volatile
  2858  001534                     i2l2179:
  2859                           
  2860                           ;main.c: 49:     if (INTCONbits.INT0IF ){
  2861  001534  A2F2               	btfss	242,1,c	;volatile
  2862  001536  EF9F  F00A         	goto	i2u130_41
  2863  00153A  EFA1  F00A         	goto	i2u130_40
  2864  00153E                     i2u130_41:
  2865  00153E  EFC1  F00A         	goto	i2l195
  2866  001542                     i2u130_40:
  2867  001542                     
  2868                           ;main.c: 50:         if (acceptInterrupts) {
  2869  001542  5010               	movf	_acceptInterrupts^0,w,c
  2870  001544  B4D8               	btfsc	status,2,c
  2871  001546  EFA7  F00A         	goto	i2u131_41
  2872  00154A  EFA9  F00A         	goto	i2u131_40
  2873  00154E                     i2u131_41:
  2874  00154E  EF87  F00B         	goto	i2l2225
  2875  001552                     i2u131_40:
  2876  001552                     
  2877                           ;main.c: 51:             a++;
  2878  001552  4A0D               	infsnz	_a^0,f,c
  2879  001554  2A0E               	incf	(_a+1)^0,f,c
  2880  001556                     
  2881                           ;main.c: 52:             right(&objs[selectedPlayer]);
  2882  001556  C007  F03B         	movff	_selectedPlayer,i2___wmul@multiplier
  2883  00155A  C008  F03C         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2884  00155E  0E00               	movlw	0
  2885  001560  6E3E               	movwf	(i2___wmul@multiplicand+1)^0,c
  2886  001562  0E07               	movlw	7
  2887  001564  6E3D               	movwf	i2___wmul@multiplicand^0,c
  2888  001566  ECFD  F010         	call	i2___wmul	;wreg free
  2889  00156A  0E11               	movlw	low _objs
  2890  00156C  243B               	addwf	?i2___wmul^0,w,c
  2891  00156E  6E41               	movwf	right@pl^0,c
  2892  001570  0E00               	movlw	high _objs
  2893  001572  203C               	addwfc	(?i2___wmul+1)^0,w,c
  2894  001574  6E42               	movwf	(right@pl+1)^0,c
  2895  001576  ECE1  F00D         	call	_right	;wreg free
  2896  00157A                     i2l2187:
  2897                           
  2898                           ;main.c: 53:             SetupDebouncingTimer();
  2899  00157A  EC1E  F011         	call	_SetupDebouncingTimer	;wreg free
  2900  00157E  EF87  F00B         	goto	i2l2225
  2901  001582                     i2l195:
  2902  001582  A0F0               	btfss	240,0,c	;volatile
  2903  001584  EFC6  F00A         	goto	i2u132_41
  2904  001588  EFC8  F00A         	goto	i2u132_40
  2905  00158C                     i2u132_41:
  2906  00158C  EFFE  F00A         	goto	i2l198
  2907  001590                     i2u132_40:
  2908  001590                     
  2909                           ;main.c: 58:         if (acceptInterrupts) {
  2910  001590  5010               	movf	_acceptInterrupts^0,w,c
  2911  001592  B4D8               	btfsc	status,2,c
  2912  001594  EFCE  F00A         	goto	i2u133_41
  2913  001598  EFD0  F00A         	goto	i2u133_40
  2914  00159C                     i2u133_41:
  2915  00159C  EF87  F00B         	goto	i2l2225
  2916  0015A0                     i2u133_40:
  2917  0015A0                     
  2918                           ;main.c: 59:             b++;
  2919  0015A0  4A0B               	infsnz	_b^0,f,c
  2920  0015A2  2A0C               	incf	(_b+1)^0,f,c
  2921  0015A4                     
  2922                           ;main.c: 61:             objs[selectedPlayer].state = OS_DEFAULT;
  2923  0015A4  C007  F03B         	movff	_selectedPlayer,i2___wmul@multiplier
  2924  0015A8  C008  F03C         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2925  0015AC  0E00               	movlw	0
  2926  0015AE  6E3E               	movwf	(i2___wmul@multiplicand+1)^0,c
  2927  0015B0  0E07               	movlw	7
  2928  0015B2  6E3D               	movwf	i2___wmul@multiplicand^0,c
  2929  0015B4  ECFD  F010         	call	i2___wmul	;wreg free
  2930  0015B8  0E17               	movlw	low (_objs+6)
  2931  0015BA  243B               	addwf	?i2___wmul^0,w,c
  2932  0015BC  6ED9               	movwf	fsr2l,c
  2933  0015BE  0E00               	movlw	high (_objs+6)
  2934  0015C0  203C               	addwfc	(?i2___wmul+1)^0,w,c
  2935  0015C2  6EDA               	movwf	fsr2h,c
  2936  0015C4  0E00               	movlw	0
  2937  0015C6  6EDF               	movwf	indf2,c
  2938  0015C8                     
  2939                           ;main.c: 62:             selectedPlayer++;
  2940  0015C8  4A07               	infsnz	_selectedPlayer^0,f,c
  2941  0015CA  2A08               	incf	(_selectedPlayer+1)^0,f,c
  2942  0015CC                     
  2943                           ;main.c: 63:             selectedPlayer = selectedPlayer % 4;
  2944  0015CC  0E03               	movlw	3
  2945  0015CE  1407               	andwf	_selectedPlayer^0,w,c
  2946  0015D0  6E07               	movwf	_selectedPlayer^0,c
  2947  0015D2  6A08               	clrf	(_selectedPlayer+1)^0,c
  2948  0015D4                     
  2949                           ;main.c: 64:             objs[selectedPlayer].state = OS_SELECTED;
  2950  0015D4  C007  F03B         	movff	_selectedPlayer,i2___wmul@multiplier
  2951  0015D8  C008  F03C         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2952  0015DC  0E00               	movlw	0
  2953  0015DE  6E3E               	movwf	(i2___wmul@multiplicand+1)^0,c
  2954  0015E0  0E07               	movlw	7
  2955  0015E2  6E3D               	movwf	i2___wmul@multiplicand^0,c
  2956  0015E4  ECFD  F010         	call	i2___wmul	;wreg free
  2957  0015E8  0E17               	movlw	low (_objs+6)
  2958  0015EA  243B               	addwf	?i2___wmul^0,w,c
  2959  0015EC  6ED9               	movwf	fsr2l,c
  2960  0015EE  0E00               	movlw	high (_objs+6)
  2961  0015F0  203C               	addwfc	(?i2___wmul+1)^0,w,c
  2962  0015F2  6EDA               	movwf	fsr2h,c
  2963  0015F4  0E01               	movlw	1
  2964  0015F6  6EDF               	movwf	indf2,c
  2965  0015F8  EFBD  F00A         	goto	i2l2187
  2966  0015FC                     i2l198:
  2967  0015FC  A0F2               	btfss	242,0,c	;volatile
  2968  0015FE  EF03  F00B         	goto	i2u134_41
  2969  001602  EF05  F00B         	goto	i2u134_40
  2970  001606                     i2u134_41:
  2971  001606  EF87  F00B         	goto	i2l2225
  2972  00160A                     i2u134_40:
  2973  00160A                     
  2974                           ;main.c: 71:         if (acceptInterrupts) {
  2975  00160A  5010               	movf	_acceptInterrupts^0,w,c
  2976  00160C  B4D8               	btfsc	status,2,c
  2977  00160E  EF0B  F00B         	goto	i2u135_41
  2978  001612  EF0D  F00B         	goto	i2u135_40
  2979  001616                     i2u135_41:
  2980  001616  EF87  F00B         	goto	i2l2225
  2981  00161A                     i2u135_40:
  2982  00161A                     
  2983                           ;main.c: 72:             portbVals = portbVals >> 4;
  2984  00161A  380F               	swapf	_portbVals^0,w,c
  2985  00161C  0B0F               	andlw	15
  2986  00161E  6E0F               	movwf	_portbVals^0,c
  2987                           
  2988                           ;main.c: 73:             switch (portbVals) {
  2989  001620  EF66  F00B         	goto	i2l2219
  2990  001624                     i2l2207:
  2991                           
  2992                           ;main.c: 75:                     up(&objs[selectedPlayer]);
  2993  001624  C007  F03B         	movff	_selectedPlayer,i2___wmul@multiplier
  2994  001628  C008  F03C         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  2995  00162C  0E00               	movlw	0
  2996  00162E  6E3E               	movwf	(i2___wmul@multiplicand+1)^0,c
  2997  001630  0E07               	movlw	7
  2998  001632  6E3D               	movwf	i2___wmul@multiplicand^0,c
  2999  001634  ECFD  F010         	call	i2___wmul	;wreg free
  3000  001638  0E11               	movlw	low _objs
  3001  00163A  243B               	addwf	?i2___wmul^0,w,c
  3002  00163C  6E41               	movwf	up@pl^0,c
  3003  00163E  0E00               	movlw	high _objs
  3004  001640  203C               	addwfc	(?i2___wmul+1)^0,w,c
  3005  001642  6E42               	movwf	(up@pl+1)^0,c
  3006  001644  EC9B  F00C         	call	_up	;wreg free
  3007                           
  3008                           ;main.c: 76:                     break;
  3009  001648  EF83  F00B         	goto	i2l2221
  3010  00164C                     i2l2209:
  3011                           
  3012                           ;main.c: 78:                     right(&objs[selectedPlayer]);
  3013  00164C  C007  F03B         	movff	_selectedPlayer,i2___wmul@multiplier
  3014  001650  C008  F03C         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3015  001654  0E00               	movlw	0
  3016  001656  6E3E               	movwf	(i2___wmul@multiplicand+1)^0,c
  3017  001658  0E07               	movlw	7
  3018  00165A  6E3D               	movwf	i2___wmul@multiplicand^0,c
  3019  00165C  ECFD  F010         	call	i2___wmul	;wreg free
  3020  001660  0E11               	movlw	low _objs
  3021  001662  243B               	addwf	?i2___wmul^0,w,c
  3022  001664  6E41               	movwf	right@pl^0,c
  3023  001666  0E00               	movlw	high _objs
  3024  001668  203C               	addwfc	(?i2___wmul+1)^0,w,c
  3025  00166A  6E42               	movwf	(right@pl+1)^0,c
  3026  00166C  ECE1  F00D         	call	_right	;wreg free
  3027                           
  3028                           ;main.c: 79:                     break;
  3029  001670  EF83  F00B         	goto	i2l2221
  3030  001674                     i2l2211:
  3031                           
  3032                           ;main.c: 81:                     down(&objs[selectedPlayer]);
  3033  001674  C007  F03B         	movff	_selectedPlayer,i2___wmul@multiplier
  3034  001678  C008  F03C         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3035  00167C  0E00               	movlw	0
  3036  00167E  6E3E               	movwf	(i2___wmul@multiplicand+1)^0,c
  3037  001680  0E07               	movlw	7
  3038  001682  6E3D               	movwf	i2___wmul@multiplicand^0,c
  3039  001684  ECFD  F010         	call	i2___wmul	;wreg free
  3040  001688  0E11               	movlw	low _objs
  3041  00168A  243B               	addwf	?i2___wmul^0,w,c
  3042  00168C  6E41               	movwf	down@pl^0,c
  3043  00168E  0E00               	movlw	high _objs
  3044  001690  203C               	addwfc	(?i2___wmul+1)^0,w,c
  3045  001692  6E42               	movwf	(down@pl+1)^0,c
  3046  001694  EC7E  F00E         	call	_down	;wreg free
  3047                           
  3048                           ;main.c: 82:                     break;
  3049  001698  EF83  F00B         	goto	i2l2221
  3050  00169C                     i2l2213:
  3051                           
  3052                           ;main.c: 84:                     left(&objs[selectedPlayer]);
  3053  00169C  C007  F03B         	movff	_selectedPlayer,i2___wmul@multiplier
  3054  0016A0  C008  F03C         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3055  0016A4  0E00               	movlw	0
  3056  0016A6  6E3E               	movwf	(i2___wmul@multiplicand+1)^0,c
  3057  0016A8  0E07               	movlw	7
  3058  0016AA  6E3D               	movwf	i2___wmul@multiplicand^0,c
  3059  0016AC  ECFD  F010         	call	i2___wmul	;wreg free
  3060  0016B0  0E11               	movlw	low _objs
  3061  0016B2  243B               	addwf	?i2___wmul^0,w,c
  3062  0016B4  6E41               	movwf	left@pl^0,c
  3063  0016B6  0E00               	movlw	high _objs
  3064  0016B8  203C               	addwfc	(?i2___wmul+1)^0,w,c
  3065  0016BA  6E42               	movwf	(left@pl+1)^0,c
  3066  0016BC  EC41  F00D         	call	_left	;wreg free
  3067                           
  3068                           ;main.c: 85:                     break;
  3069  0016C0  EF83  F00B         	goto	i2l2221
  3070  0016C4                     i2l2215:
  3071                           
  3072                           ;main.c: 87:                     portbVals = 0;
  3073  0016C4  0E00               	movlw	0
  3074  0016C6  6E0F               	movwf	_portbVals^0,c
  3075                           
  3076                           ;main.c: 88:                     break;
  3077  0016C8  EF83  F00B         	goto	i2l2221
  3078  0016CC                     i2l2219:
  3079  0016CC  500F               	movf	_portbVals^0,w,c
  3080  0016CE  6E4C               	movwf	??_highIsr^0,c
  3081  0016D0  6A4D               	clrf	(??_highIsr+1)^0,c
  3082                           
  3083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3084                           ; Switch size 1, requested type "simple"
  3085                           ; Number of cases is 1, Range of values is 0 to 0
  3086                           ; switch strategies available:
  3087                           ; Name         Instructions Cycles
  3088                           ; simple_byte            4     3 (average)
  3089                           ;	Chosen strategy is simple_byte
  3090  0016D2  504D               	movf	(??_highIsr+1)^0,w,c
  3091  0016D4  0A00               	xorlw	0	; case 0
  3092  0016D6  B4D8               	btfsc	status,2,c
  3093  0016D8  EF70  F00B         	goto	i2l2899
  3094  0016DC  EF62  F00B         	goto	i2l2215
  3095  0016E0                     i2l2899:
  3096                           
  3097                           ; Switch size 1, requested type "simple"
  3098                           ; Number of cases is 4, Range of values is 7 to 14
  3099                           ; switch strategies available:
  3100                           ; Name         Instructions Cycles
  3101                           ; simple_byte           13     7 (average)
  3102                           ;	Chosen strategy is simple_byte
  3103  0016E0  504C               	movf	??_highIsr^0,w,c
  3104  0016E2  0A07               	xorlw	7	; case 7
  3105  0016E4  B4D8               	btfsc	status,2,c
  3106  0016E6  EF4E  F00B         	goto	i2l2213
  3107  0016EA  0A0C               	xorlw	12	; case 11
  3108  0016EC  B4D8               	btfsc	status,2,c
  3109  0016EE  EF3A  F00B         	goto	i2l2211
  3110  0016F2  0A06               	xorlw	6	; case 13
  3111  0016F4  B4D8               	btfsc	status,2,c
  3112  0016F6  EF26  F00B         	goto	i2l2209
  3113  0016FA  0A03               	xorlw	3	; case 14
  3114  0016FC  B4D8               	btfsc	status,2,c
  3115  0016FE  EF12  F00B         	goto	i2l2207
  3116  001702  EF62  F00B         	goto	i2l2215
  3117  001706                     i2l2221:
  3118                           
  3119                           ;main.c: 91:             c++;
  3120  001706  4A09               	infsnz	_c^0,f,c
  3121  001708  2A0A               	incf	(_c+1)^0,f,c
  3122  00170A  EFBD  F00A         	goto	i2l2187
  3123  00170E                     i2l2225:
  3124                           
  3125                           ;main.c: 95:     INTCON3bits.INT1IF = 0;
  3126  00170E  90F0               	bcf	240,0,c	;volatile
  3127  001710                     
  3128                           ;main.c: 96:     INTCONbits.INT0IF = 0;
  3129  001710  92F2               	bcf	242,1,c	;volatile
  3130  001712                     
  3131                           ;main.c: 97:     INTCONbits.RBIF = 0;
  3132  001712  90F2               	bcf	242,0,c	;volatile
  3133  001714  C053  FFF4         	movff	??_highIsr+7,prodh
  3134  001718  C052  FFF3         	movff	??_highIsr+6,prodl
  3135  00171C  C051  FFDA         	movff	??_highIsr+5,fsr2h
  3136  001720  C050  FFD9         	movff	??_highIsr+4,fsr2l
  3137  001724  C04F  FFE2         	movff	??_highIsr+3,fsr1h
  3138  001728  C04E  FFE1         	movff	??_highIsr+2,fsr1l
  3139  00172C  9264               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3140  00172E  0011               	retfie		f
  3141  001730                     __end_of_highIsr:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function i2___wmul *****************
  3145 ;; Defined at:
  3146 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  multiplier      2    0[COMRAM] unsigned int 
  3149 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  product         2    4[COMRAM] unsigned int 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  2    0[COMRAM] unsigned int 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, prodl, prodh
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;Total ram usage:        6 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_highIsr
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text14
  3175  0021FA                     __ptext14:
  3176                           	callstack 0
  3177  0021FA                     i2___wmul:
  3178                           	callstack 24
  3179  0021FA  503B               	movf	i2___wmul@multiplier^0,w,c
  3180  0021FC  023D               	mulwf	i2___wmul@multiplicand^0,c
  3181  0021FE  CFF3 F03F          	movff	prodl,i2___wmul@product
  3182  002202  CFF4 F040          	movff	prodh,i2___wmul@product+1
  3183  002206  503B               	movf	i2___wmul@multiplier^0,w,c
  3184  002208  023E               	mulwf	(i2___wmul@multiplicand+1)^0,c
  3185  00220A  50F3               	movf	243,w,c
  3186  00220C  2640               	addwf	(i2___wmul@product+1)^0,f,c
  3187  00220E  503C               	movf	(i2___wmul@multiplier+1)^0,w,c
  3188  002210  023D               	mulwf	i2___wmul@multiplicand^0,c
  3189  002212  50F3               	movf	243,w,c
  3190  002214  2640               	addwf	(i2___wmul@product+1)^0,f,c
  3191  002216  C03F  F03B         	movff	i2___wmul@product,?i2___wmul
  3192  00221A  C040  F03C         	movff	i2___wmul@product+1,?i2___wmul+1
  3193  00221E  0012               	return		;funcret
  3194  002220                     __end_ofi2___wmul:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _up *****************
  3198 ;; Defined at:
  3199 ;;		line 509 in file "main.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3202 ;;		 -> objs(42), 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;Total ram usage:       11 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_highIsr
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text15
  3228  001936                     __ptext15:
  3229                           	callstack 0
  3230  001936                     _up:
  3231                           	callstack 24
  3232  001936                     
  3233                           ;main.c: 510:     if (pl->y == 1) return;
  3234  001936  EE20 F001          	lfsr	2,1
  3235  00193A  5041               	movf	up@pl^0,w,c
  3236  00193C  26D9               	addwf	fsr2l,f,c
  3237  00193E  5042               	movf	(up@pl+1)^0,w,c
  3238  001940  22DA               	addwfc	fsr2h,f,c
  3239  001942  04DE               	decf	postinc2,w,c
  3240  001944  A4D8               	btfss	status,2,c
  3241  001946  EFA7  F00C         	goto	i2u88_41
  3242  00194A  EFA9  F00C         	goto	i2u88_40
  3243  00194E                     i2u88_41:
  3244  00194E  EFAB  F00C         	goto	i2l1845
  3245  001952                     i2u88_40:
  3246  001952  EF40  F00D         	goto	i2l306
  3247  001956                     i2l1845:
  3248                           
  3249                           ;main.c: 511:     if (display[pl->y-2][pl->x-1]->type == OT_PLAYERA) return;
  3250  001956  EE20 F001          	lfsr	2,1
  3251  00195A  5041               	movf	up@pl^0,w,c
  3252  00195C  26D9               	addwf	fsr2l,f,c
  3253  00195E  5042               	movf	(up@pl+1)^0,w,c
  3254  001960  22DA               	addwfc	fsr2h,f,c
  3255  001962  50DF               	movf	indf2,w,c
  3256  001964  6E43               	movwf	??_up^0,c
  3257  001966  6A44               	clrf	(??_up+1)^0,c
  3258  001968  0E05               	movlw	5
  3259  00196A                     i2u89_45:
  3260  00196A  90D8               	bcf	status,0,c
  3261  00196C  3643               	rlcf	??_up^0,f,c
  3262  00196E  3644               	rlcf	(??_up+1)^0,f,c
  3263  001970  2EE8               	decfsz	wreg,f,c
  3264  001972  EFB5  F00C         	goto	i2u89_45
  3265  001976  C041  FFD9         	movff	up@pl,fsr2l
  3266  00197A  C042  FFDA         	movff	up@pl+1,fsr2h
  3267  00197E  50DF               	movf	indf2,w,c
  3268  001980  6E45               	movwf	(??_up+2)^0,c
  3269  001982  6A46               	clrf	(??_up+3)^0,c
  3270  001984  90D8               	bcf	status,0,c
  3271  001986  3645               	rlcf	(??_up+2)^0,f,c
  3272  001988  3646               	rlcf	(??_up+3)^0,f,c
  3273  00198A  0EBE               	movlw	190
  3274  00198C  6E47               	movwf	(??_up+4)^0,c
  3275  00198E  0EFF               	movlw	255
  3276  001990  6E48               	movwf	(??_up+5)^0,c
  3277  001992  0E00               	movlw	low _display
  3278  001994  6E49               	movwf	(??_up+6)^0,c
  3279  001996  0E01               	movlw	high _display
  3280  001998  6E4A               	movwf	(??_up+7)^0,c
  3281  00199A  5047               	movf	(??_up+4)^0,w,c
  3282  00199C  2649               	addwf	(??_up+6)^0,f,c
  3283  00199E  5048               	movf	(??_up+5)^0,w,c
  3284  0019A0  224A               	addwfc	(??_up+7)^0,f,c
  3285  0019A2  5045               	movf	(??_up+2)^0,w,c
  3286  0019A4  2649               	addwf	(??_up+6)^0,f,c
  3287  0019A6  5046               	movf	(??_up+3)^0,w,c
  3288  0019A8  224A               	addwfc	(??_up+7)^0,f,c
  3289  0019AA  5043               	movf	??_up^0,w,c
  3290  0019AC  2449               	addwf	(??_up+6)^0,w,c
  3291  0019AE  6ED9               	movwf	fsr2l,c
  3292  0019B0  5044               	movf	(??_up+1)^0,w,c
  3293  0019B2  204A               	addwfc	(??_up+7)^0,w,c
  3294  0019B4  6EDA               	movwf	fsr2h,c
  3295  0019B6  EE10 F005          	lfsr	1,5
  3296  0019BA  50DE               	movf	postinc2,w,c
  3297  0019BC  26E1               	addwf	fsr1l,f,c
  3298  0019BE  50DD               	movf	postdec2,w,c
  3299  0019C0  22E2               	addwfc	fsr1h,f,c
  3300  0019C2  50E7               	movf	indf1,w,c
  3301  0019C4  A4D8               	btfss	status,2,c
  3302  0019C6  EFE7  F00C         	goto	i2u90_41
  3303  0019CA  EFE9  F00C         	goto	i2u90_40
  3304  0019CE                     i2u90_41:
  3305  0019CE  EFEB  F00C         	goto	i2l1849
  3306  0019D2                     i2u90_40:
  3307  0019D2  EF40  F00D         	goto	i2l306
  3308  0019D6                     i2l1849:
  3309                           
  3310                           ;main.c: 512:     if (display[pl->y-2][pl->x-1]->type == OT_PLAYERB) return;
  3311  0019D6  EE20 F001          	lfsr	2,1
  3312  0019DA  5041               	movf	up@pl^0,w,c
  3313  0019DC  26D9               	addwf	fsr2l,f,c
  3314  0019DE  5042               	movf	(up@pl+1)^0,w,c
  3315  0019E0  22DA               	addwfc	fsr2h,f,c
  3316  0019E2  50DF               	movf	indf2,w,c
  3317  0019E4  6E43               	movwf	??_up^0,c
  3318  0019E6  6A44               	clrf	(??_up+1)^0,c
  3319  0019E8  0E05               	movlw	5
  3320  0019EA                     i2u91_45:
  3321  0019EA  90D8               	bcf	status,0,c
  3322  0019EC  3643               	rlcf	??_up^0,f,c
  3323  0019EE  3644               	rlcf	(??_up+1)^0,f,c
  3324  0019F0  2EE8               	decfsz	wreg,f,c
  3325  0019F2  EFF5  F00C         	goto	i2u91_45
  3326  0019F6  C041  FFD9         	movff	up@pl,fsr2l
  3327  0019FA  C042  FFDA         	movff	up@pl+1,fsr2h
  3328  0019FE  50DF               	movf	indf2,w,c
  3329  001A00  6E45               	movwf	(??_up+2)^0,c
  3330  001A02  6A46               	clrf	(??_up+3)^0,c
  3331  001A04  90D8               	bcf	status,0,c
  3332  001A06  3645               	rlcf	(??_up+2)^0,f,c
  3333  001A08  3646               	rlcf	(??_up+3)^0,f,c
  3334  001A0A  0EBE               	movlw	190
  3335  001A0C  6E47               	movwf	(??_up+4)^0,c
  3336  001A0E  0EFF               	movlw	255
  3337  001A10  6E48               	movwf	(??_up+5)^0,c
  3338  001A12  0E00               	movlw	low _display
  3339  001A14  6E49               	movwf	(??_up+6)^0,c
  3340  001A16  0E01               	movlw	high _display
  3341  001A18  6E4A               	movwf	(??_up+7)^0,c
  3342  001A1A  5047               	movf	(??_up+4)^0,w,c
  3343  001A1C  2649               	addwf	(??_up+6)^0,f,c
  3344  001A1E  5048               	movf	(??_up+5)^0,w,c
  3345  001A20  224A               	addwfc	(??_up+7)^0,f,c
  3346  001A22  5045               	movf	(??_up+2)^0,w,c
  3347  001A24  2649               	addwf	(??_up+6)^0,f,c
  3348  001A26  5046               	movf	(??_up+3)^0,w,c
  3349  001A28  224A               	addwfc	(??_up+7)^0,f,c
  3350  001A2A  5043               	movf	??_up^0,w,c
  3351  001A2C  2449               	addwf	(??_up+6)^0,w,c
  3352  001A2E  6ED9               	movwf	fsr2l,c
  3353  001A30  5044               	movf	(??_up+1)^0,w,c
  3354  001A32  204A               	addwfc	(??_up+7)^0,w,c
  3355  001A34  6EDA               	movwf	fsr2h,c
  3356  001A36  EE10 F005          	lfsr	1,5
  3357  001A3A  50DE               	movf	postinc2,w,c
  3358  001A3C  26E1               	addwf	fsr1l,f,c
  3359  001A3E  50DD               	movf	postdec2,w,c
  3360  001A40  22E2               	addwfc	fsr1h,f,c
  3361  001A42  04E6               	decf	postinc1,w,c
  3362  001A44  A4D8               	btfss	status,2,c
  3363  001A46  EF27  F00D         	goto	i2u92_41
  3364  001A4A  EF29  F00D         	goto	i2u92_40
  3365  001A4E                     i2u92_41:
  3366  001A4E  EF2B  F00D         	goto	i2l1855
  3367  001A52                     i2u92_40:
  3368  001A52  EF40  F00D         	goto	i2l306
  3369  001A56                     i2l1855:
  3370                           
  3371                           ;main.c: 516:     pl->oldY = pl->y;
  3372  001A56  EE20 F001          	lfsr	2,1
  3373  001A5A  5041               	movf	up@pl^0,w,c
  3374  001A5C  26D9               	addwf	fsr2l,f,c
  3375  001A5E  5042               	movf	(up@pl+1)^0,w,c
  3376  001A60  22DA               	addwfc	fsr2h,f,c
  3377  001A62  EE10 F003          	lfsr	1,3
  3378  001A66  5041               	movf	up@pl^0,w,c
  3379  001A68  26E1               	addwf	fsr1l,f,c
  3380  001A6A  5042               	movf	(up@pl+1)^0,w,c
  3381  001A6C  22E2               	addwfc	fsr1h,f,c
  3382  001A6E  CFDF FFE7          	movff	indf2,indf1
  3383  001A72                     
  3384                           ;main.c: 517:     pl->y--;
  3385  001A72  EE20 F001          	lfsr	2,1
  3386  001A76  5041               	movf	up@pl^0,w,c
  3387  001A78  26D9               	addwf	fsr2l,f,c
  3388  001A7A  5042               	movf	(up@pl+1)^0,w,c
  3389  001A7C  22DA               	addwfc	fsr2h,f,c
  3390  001A7E  06DF               	decf	indf2,f,c
  3391  001A80                     i2l306:
  3392  001A80  0012               	return		;funcret
  3393  001A82                     __end_of_up:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _right *****************
  3397 ;; Defined at:
  3398 ;;		line 498 in file "main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3401 ;;		 -> objs(42), 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:       10 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_highIsr
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text16
  3427  001BC2                     __ptext16:
  3428                           	callstack 0
  3429  001BC2                     _right:
  3430                           	callstack 24
  3431  001BC2                     
  3432                           ;main.c: 499:     if (pl->x == 16) return;
  3433  001BC2  C041  FFD9         	movff	right@pl,fsr2l
  3434  001BC6  C042  FFDA         	movff	right@pl+1,fsr2h
  3435  001BCA  0E10               	movlw	16
  3436  001BCC  18DE               	xorwf	postinc2,w,c
  3437  001BCE  A4D8               	btfss	status,2,c
  3438  001BD0  EFEC  F00D         	goto	i2u83_41
  3439  001BD4  EFEE  F00D         	goto	i2u83_40
  3440  001BD8                     i2u83_41:
  3441  001BD8  EFF0  F00D         	goto	i2l1825
  3442  001BDC                     i2u83_40:
  3443  001BDC  EF7D  F00E         	goto	i2l299
  3444  001BE0                     i2l1825:
  3445                           
  3446                           ;main.c: 500:     if (display[pl->y-1][pl->x]->type == OT_PLAYERA) return;
  3447  001BE0  EE20 F001          	lfsr	2,1
  3448  001BE4  5041               	movf	right@pl^0,w,c
  3449  001BE6  26D9               	addwf	fsr2l,f,c
  3450  001BE8  5042               	movf	(right@pl+1)^0,w,c
  3451  001BEA  22DA               	addwfc	fsr2h,f,c
  3452  001BEC  50DF               	movf	indf2,w,c
  3453  001BEE  6E43               	movwf	??_right^0,c
  3454  001BF0  6A44               	clrf	(??_right+1)^0,c
  3455  001BF2  0E05               	movlw	5
  3456  001BF4                     i2u84_45:
  3457  001BF4  90D8               	bcf	status,0,c
  3458  001BF6  3643               	rlcf	??_right^0,f,c
  3459  001BF8  3644               	rlcf	(??_right+1)^0,f,c
  3460  001BFA  2EE8               	decfsz	wreg,f,c
  3461  001BFC  EFFA  F00D         	goto	i2u84_45
  3462  001C00  C041  FFD9         	movff	right@pl,fsr2l
  3463  001C04  C042  FFDA         	movff	right@pl+1,fsr2h
  3464  001C08  50DF               	movf	indf2,w,c
  3465  001C0A  6E45               	movwf	(??_right+2)^0,c
  3466  001C0C  5045               	movf	(??_right+2)^0,w,c
  3467  001C0E  0D02               	mullw	2
  3468  001C10  0EE0               	movlw	224
  3469  001C12  6E46               	movwf	(??_right+3)^0,c
  3470  001C14  0EFF               	movlw	255
  3471  001C16  6E47               	movwf	(??_right+4)^0,c
  3472  001C18  0E00               	movlw	low _display
  3473  001C1A  6E48               	movwf	(??_right+5)^0,c
  3474  001C1C  0E01               	movlw	high _display
  3475  001C1E  6E49               	movwf	(??_right+6)^0,c
  3476  001C20  5046               	movf	(??_right+3)^0,w,c
  3477  001C22  2648               	addwf	(??_right+5)^0,f,c
  3478  001C24  5047               	movf	(??_right+4)^0,w,c
  3479  001C26  2249               	addwfc	(??_right+6)^0,f,c
  3480  001C28  50F3               	movf	243,w,c
  3481  001C2A  2648               	addwf	(??_right+5)^0,f,c
  3482  001C2C  50F4               	movf	244,w,c
  3483  001C2E  2249               	addwfc	(??_right+6)^0,f,c
  3484  001C30  5043               	movf	??_right^0,w,c
  3485  001C32  2448               	addwf	(??_right+5)^0,w,c
  3486  001C34  6ED9               	movwf	fsr2l,c
  3487  001C36  5044               	movf	(??_right+1)^0,w,c
  3488  001C38  2049               	addwfc	(??_right+6)^0,w,c
  3489  001C3A  6EDA               	movwf	fsr2h,c
  3490  001C3C  EE10 F005          	lfsr	1,5
  3491  001C40  50DE               	movf	postinc2,w,c
  3492  001C42  26E1               	addwf	fsr1l,f,c
  3493  001C44  50DD               	movf	postdec2,w,c
  3494  001C46  22E2               	addwfc	fsr1h,f,c
  3495  001C48  50E7               	movf	indf1,w,c
  3496  001C4A  A4D8               	btfss	status,2,c
  3497  001C4C  EF2A  F00E         	goto	i2u85_41
  3498  001C50  EF2C  F00E         	goto	i2u85_40
  3499  001C54                     i2u85_41:
  3500  001C54  EF2E  F00E         	goto	i2l1829
  3501  001C58                     i2u85_40:
  3502  001C58  EF7D  F00E         	goto	i2l299
  3503  001C5C                     i2l1829:
  3504                           
  3505                           ;main.c: 501:     if (display[pl->y-1][pl->x]->type == OT_PLAYERB) return;
  3506  001C5C  EE20 F001          	lfsr	2,1
  3507  001C60  5041               	movf	right@pl^0,w,c
  3508  001C62  26D9               	addwf	fsr2l,f,c
  3509  001C64  5042               	movf	(right@pl+1)^0,w,c
  3510  001C66  22DA               	addwfc	fsr2h,f,c
  3511  001C68  50DF               	movf	indf2,w,c
  3512  001C6A  6E43               	movwf	??_right^0,c
  3513  001C6C  6A44               	clrf	(??_right+1)^0,c
  3514  001C6E  0E05               	movlw	5
  3515  001C70                     i2u86_45:
  3516  001C70  90D8               	bcf	status,0,c
  3517  001C72  3643               	rlcf	??_right^0,f,c
  3518  001C74  3644               	rlcf	(??_right+1)^0,f,c
  3519  001C76  2EE8               	decfsz	wreg,f,c
  3520  001C78  EF38  F00E         	goto	i2u86_45
  3521  001C7C  C041  FFD9         	movff	right@pl,fsr2l
  3522  001C80  C042  FFDA         	movff	right@pl+1,fsr2h
  3523  001C84  50DF               	movf	indf2,w,c
  3524  001C86  6E45               	movwf	(??_right+2)^0,c
  3525  001C88  5045               	movf	(??_right+2)^0,w,c
  3526  001C8A  0D02               	mullw	2
  3527  001C8C  0EE0               	movlw	224
  3528  001C8E  6E46               	movwf	(??_right+3)^0,c
  3529  001C90  0EFF               	movlw	255
  3530  001C92  6E47               	movwf	(??_right+4)^0,c
  3531  001C94  0E00               	movlw	low _display
  3532  001C96  6E48               	movwf	(??_right+5)^0,c
  3533  001C98  0E01               	movlw	high _display
  3534  001C9A  6E49               	movwf	(??_right+6)^0,c
  3535  001C9C  5046               	movf	(??_right+3)^0,w,c
  3536  001C9E  2648               	addwf	(??_right+5)^0,f,c
  3537  001CA0  5047               	movf	(??_right+4)^0,w,c
  3538  001CA2  2249               	addwfc	(??_right+6)^0,f,c
  3539  001CA4  50F3               	movf	243,w,c
  3540  001CA6  2648               	addwf	(??_right+5)^0,f,c
  3541  001CA8  50F4               	movf	244,w,c
  3542  001CAA  2249               	addwfc	(??_right+6)^0,f,c
  3543  001CAC  5043               	movf	??_right^0,w,c
  3544  001CAE  2448               	addwf	(??_right+5)^0,w,c
  3545  001CB0  6ED9               	movwf	fsr2l,c
  3546  001CB2  5044               	movf	(??_right+1)^0,w,c
  3547  001CB4  2049               	addwfc	(??_right+6)^0,w,c
  3548  001CB6  6EDA               	movwf	fsr2h,c
  3549  001CB8  EE10 F005          	lfsr	1,5
  3550  001CBC  50DE               	movf	postinc2,w,c
  3551  001CBE  26E1               	addwf	fsr1l,f,c
  3552  001CC0  50DD               	movf	postdec2,w,c
  3553  001CC2  22E2               	addwfc	fsr1h,f,c
  3554  001CC4  04E6               	decf	postinc1,w,c
  3555  001CC6  A4D8               	btfss	status,2,c
  3556  001CC8  EF68  F00E         	goto	i2u87_41
  3557  001CCC  EF6A  F00E         	goto	i2u87_40
  3558  001CD0                     i2u87_41:
  3559  001CD0  EF6C  F00E         	goto	i2l1835
  3560  001CD4                     i2u87_40:
  3561  001CD4  EF7D  F00E         	goto	i2l299
  3562  001CD8                     i2l1835:
  3563                           
  3564                           ;main.c: 505:     pl->oldX = pl->x;
  3565  001CD8  C041  FFD9         	movff	right@pl,fsr2l
  3566  001CDC  C042  FFDA         	movff	right@pl+1,fsr2h
  3567  001CE0  EE10 F002          	lfsr	1,2
  3568  001CE4  5041               	movf	right@pl^0,w,c
  3569  001CE6  26E1               	addwf	fsr1l,f,c
  3570  001CE8  5042               	movf	(right@pl+1)^0,w,c
  3571  001CEA  22E2               	addwfc	fsr1h,f,c
  3572  001CEC  CFDF FFE7          	movff	indf2,indf1
  3573  001CF0                     
  3574                           ;main.c: 506:     pl->x++;
  3575  001CF0  C041  FFD9         	movff	right@pl,fsr2l
  3576  001CF4  C042  FFDA         	movff	right@pl+1,fsr2h
  3577  001CF8  2ADF               	incf	indf2,f,c
  3578  001CFA                     i2l299:
  3579  001CFA  0012               	return		;funcret
  3580  001CFC                     __end_of_right:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _left *****************
  3584 ;; Defined at:
  3585 ;;		line 487 in file "main.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3588 ;;		 -> objs(42), 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;Total ram usage:       11 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_highIsr
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text17
  3614  001A82                     __ptext17:
  3615                           	callstack 0
  3616  001A82                     _left:
  3617                           	callstack 24
  3618  001A82                     
  3619                           ;main.c: 488:     if (pl->x == 1) return;
  3620  001A82  C041  FFD9         	movff	left@pl,fsr2l
  3621  001A86  C042  FFDA         	movff	left@pl+1,fsr2h
  3622  001A8A  04DE               	decf	postinc2,w,c
  3623  001A8C  A4D8               	btfss	status,2,c
  3624  001A8E  EF4B  F00D         	goto	i2u96_41
  3625  001A92  EF4D  F00D         	goto	i2u96_40
  3626  001A96                     i2u96_41:
  3627  001A96  EF4F  F00D         	goto	i2l1885
  3628  001A9A                     i2u96_40:
  3629  001A9A  EFE0  F00D         	goto	i2l292
  3630  001A9E                     i2l1885:
  3631                           
  3632                           ;main.c: 489:     if (display[pl->y-1][pl->x-2]->type == OT_PLAYERA) return;
  3633  001A9E  EE20 F001          	lfsr	2,1
  3634  001AA2  5041               	movf	left@pl^0,w,c
  3635  001AA4  26D9               	addwf	fsr2l,f,c
  3636  001AA6  5042               	movf	(left@pl+1)^0,w,c
  3637  001AA8  22DA               	addwfc	fsr2h,f,c
  3638  001AAA  50DF               	movf	indf2,w,c
  3639  001AAC  6E43               	movwf	??_left^0,c
  3640  001AAE  6A44               	clrf	(??_left+1)^0,c
  3641  001AB0  0E05               	movlw	5
  3642  001AB2                     i2u97_45:
  3643  001AB2  90D8               	bcf	status,0,c
  3644  001AB4  3643               	rlcf	??_left^0,f,c
  3645  001AB6  3644               	rlcf	(??_left+1)^0,f,c
  3646  001AB8  2EE8               	decfsz	wreg,f,c
  3647  001ABA  EF59  F00D         	goto	i2u97_45
  3648  001ABE  C041  FFD9         	movff	left@pl,fsr2l
  3649  001AC2  C042  FFDA         	movff	left@pl+1,fsr2h
  3650  001AC6  50DF               	movf	indf2,w,c
  3651  001AC8  6E45               	movwf	(??_left+2)^0,c
  3652  001ACA  6A46               	clrf	(??_left+3)^0,c
  3653  001ACC  90D8               	bcf	status,0,c
  3654  001ACE  3645               	rlcf	(??_left+2)^0,f,c
  3655  001AD0  3646               	rlcf	(??_left+3)^0,f,c
  3656  001AD2  0EDC               	movlw	220
  3657  001AD4  6E47               	movwf	(??_left+4)^0,c
  3658  001AD6  0EFF               	movlw	255
  3659  001AD8  6E48               	movwf	(??_left+5)^0,c
  3660  001ADA  0E00               	movlw	low _display
  3661  001ADC  6E49               	movwf	(??_left+6)^0,c
  3662  001ADE  0E01               	movlw	high _display
  3663  001AE0  6E4A               	movwf	(??_left+7)^0,c
  3664  001AE2  5047               	movf	(??_left+4)^0,w,c
  3665  001AE4  2649               	addwf	(??_left+6)^0,f,c
  3666  001AE6  5048               	movf	(??_left+5)^0,w,c
  3667  001AE8  224A               	addwfc	(??_left+7)^0,f,c
  3668  001AEA  5045               	movf	(??_left+2)^0,w,c
  3669  001AEC  2649               	addwf	(??_left+6)^0,f,c
  3670  001AEE  5046               	movf	(??_left+3)^0,w,c
  3671  001AF0  224A               	addwfc	(??_left+7)^0,f,c
  3672  001AF2  5043               	movf	??_left^0,w,c
  3673  001AF4  2449               	addwf	(??_left+6)^0,w,c
  3674  001AF6  6ED9               	movwf	fsr2l,c
  3675  001AF8  5044               	movf	(??_left+1)^0,w,c
  3676  001AFA  204A               	addwfc	(??_left+7)^0,w,c
  3677  001AFC  6EDA               	movwf	fsr2h,c
  3678  001AFE  EE10 F005          	lfsr	1,5
  3679  001B02  50DE               	movf	postinc2,w,c
  3680  001B04  26E1               	addwf	fsr1l,f,c
  3681  001B06  50DD               	movf	postdec2,w,c
  3682  001B08  22E2               	addwfc	fsr1h,f,c
  3683  001B0A  50E7               	movf	indf1,w,c
  3684  001B0C  A4D8               	btfss	status,2,c
  3685  001B0E  EF8B  F00D         	goto	i2u98_41
  3686  001B12  EF8D  F00D         	goto	i2u98_40
  3687  001B16                     i2u98_41:
  3688  001B16  EF8F  F00D         	goto	i2l1889
  3689  001B1A                     i2u98_40:
  3690  001B1A  EFE0  F00D         	goto	i2l292
  3691  001B1E                     i2l1889:
  3692                           
  3693                           ;main.c: 490:     if (display[pl->y-1][pl->x-2]->type == OT_PLAYERB) return;
  3694  001B1E  EE20 F001          	lfsr	2,1
  3695  001B22  5041               	movf	left@pl^0,w,c
  3696  001B24  26D9               	addwf	fsr2l,f,c
  3697  001B26  5042               	movf	(left@pl+1)^0,w,c
  3698  001B28  22DA               	addwfc	fsr2h,f,c
  3699  001B2A  50DF               	movf	indf2,w,c
  3700  001B2C  6E43               	movwf	??_left^0,c
  3701  001B2E  6A44               	clrf	(??_left+1)^0,c
  3702  001B30  0E05               	movlw	5
  3703  001B32                     i2u99_45:
  3704  001B32  90D8               	bcf	status,0,c
  3705  001B34  3643               	rlcf	??_left^0,f,c
  3706  001B36  3644               	rlcf	(??_left+1)^0,f,c
  3707  001B38  2EE8               	decfsz	wreg,f,c
  3708  001B3A  EF99  F00D         	goto	i2u99_45
  3709  001B3E  C041  FFD9         	movff	left@pl,fsr2l
  3710  001B42  C042  FFDA         	movff	left@pl+1,fsr2h
  3711  001B46  50DF               	movf	indf2,w,c
  3712  001B48  6E45               	movwf	(??_left+2)^0,c
  3713  001B4A  6A46               	clrf	(??_left+3)^0,c
  3714  001B4C  90D8               	bcf	status,0,c
  3715  001B4E  3645               	rlcf	(??_left+2)^0,f,c
  3716  001B50  3646               	rlcf	(??_left+3)^0,f,c
  3717  001B52  0EDC               	movlw	220
  3718  001B54  6E47               	movwf	(??_left+4)^0,c
  3719  001B56  0EFF               	movlw	255
  3720  001B58  6E48               	movwf	(??_left+5)^0,c
  3721  001B5A  0E00               	movlw	low _display
  3722  001B5C  6E49               	movwf	(??_left+6)^0,c
  3723  001B5E  0E01               	movlw	high _display
  3724  001B60  6E4A               	movwf	(??_left+7)^0,c
  3725  001B62  5047               	movf	(??_left+4)^0,w,c
  3726  001B64  2649               	addwf	(??_left+6)^0,f,c
  3727  001B66  5048               	movf	(??_left+5)^0,w,c
  3728  001B68  224A               	addwfc	(??_left+7)^0,f,c
  3729  001B6A  5045               	movf	(??_left+2)^0,w,c
  3730  001B6C  2649               	addwf	(??_left+6)^0,f,c
  3731  001B6E  5046               	movf	(??_left+3)^0,w,c
  3732  001B70  224A               	addwfc	(??_left+7)^0,f,c
  3733  001B72  5043               	movf	??_left^0,w,c
  3734  001B74  2449               	addwf	(??_left+6)^0,w,c
  3735  001B76  6ED9               	movwf	fsr2l,c
  3736  001B78  5044               	movf	(??_left+1)^0,w,c
  3737  001B7A  204A               	addwfc	(??_left+7)^0,w,c
  3738  001B7C  6EDA               	movwf	fsr2h,c
  3739  001B7E  EE10 F005          	lfsr	1,5
  3740  001B82  50DE               	movf	postinc2,w,c
  3741  001B84  26E1               	addwf	fsr1l,f,c
  3742  001B86  50DD               	movf	postdec2,w,c
  3743  001B88  22E2               	addwfc	fsr1h,f,c
  3744  001B8A  04E6               	decf	postinc1,w,c
  3745  001B8C  A4D8               	btfss	status,2,c
  3746  001B8E  EFCB  F00D         	goto	i2u100_41
  3747  001B92  EFCD  F00D         	goto	i2u100_40
  3748  001B96                     i2u100_41:
  3749  001B96  EFCF  F00D         	goto	i2l1895
  3750  001B9A                     i2u100_40:
  3751  001B9A  EFE0  F00D         	goto	i2l292
  3752  001B9E                     i2l1895:
  3753                           
  3754                           ;main.c: 494:     pl->oldX = pl->x;
  3755  001B9E  C041  FFD9         	movff	left@pl,fsr2l
  3756  001BA2  C042  FFDA         	movff	left@pl+1,fsr2h
  3757  001BA6  EE10 F002          	lfsr	1,2
  3758  001BAA  5041               	movf	left@pl^0,w,c
  3759  001BAC  26E1               	addwf	fsr1l,f,c
  3760  001BAE  5042               	movf	(left@pl+1)^0,w,c
  3761  001BB0  22E2               	addwfc	fsr1h,f,c
  3762  001BB2  CFDF FFE7          	movff	indf2,indf1
  3763  001BB6                     
  3764                           ;main.c: 495:     pl->x--;
  3765  001BB6  C041  FFD9         	movff	left@pl,fsr2l
  3766  001BBA  C042  FFDA         	movff	left@pl+1,fsr2h
  3767  001BBE  06DF               	decf	indf2,f,c
  3768  001BC0                     i2l292:
  3769  001BC0  0012               	return		;funcret
  3770  001BC2                     __end_of_left:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _down *****************
  3774 ;; Defined at:
  3775 ;;		line 520 in file "main.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  pl              2    6[COMRAM] PTR struct GameElement
  3778 ;;		 -> objs(42), 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;Total ram usage:       10 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_highIsr
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text18
  3804  001CFC                     __ptext18:
  3805                           	callstack 0
  3806  001CFC                     _down:
  3807                           	callstack 24
  3808  001CFC                     
  3809                           ;main.c: 521:     if (pl->y == 4) return;
  3810  001CFC  EE20 F001          	lfsr	2,1
  3811  001D00  5041               	movf	down@pl^0,w,c
  3812  001D02  26D9               	addwf	fsr2l,f,c
  3813  001D04  5042               	movf	(down@pl+1)^0,w,c
  3814  001D06  22DA               	addwfc	fsr2h,f,c
  3815  001D08  0E04               	movlw	4
  3816  001D0A  18DE               	xorwf	postinc2,w,c
  3817  001D0C  A4D8               	btfss	status,2,c
  3818  001D0E  EF8B  F00E         	goto	i2u93_41
  3819  001D12  EF8D  F00E         	goto	i2u93_40
  3820  001D16                     i2u93_41:
  3821  001D16  EF8F  F00E         	goto	i2l1865
  3822  001D1A                     i2u93_40:
  3823  001D1A  EF18  F00F         	goto	i2l313
  3824  001D1E                     i2l1865:
  3825                           
  3826                           ;main.c: 522:     if (display[pl->y][pl->x-1]->type == OT_PLAYERA) return;
  3827  001D1E  C041  FFD9         	movff	down@pl,fsr2l
  3828  001D22  C042  FFDA         	movff	down@pl+1,fsr2h
  3829  001D26  50DF               	movf	indf2,w,c
  3830  001D28  6E43               	movwf	??_down^0,c
  3831  001D2A  6A44               	clrf	(??_down+1)^0,c
  3832  001D2C  90D8               	bcf	status,0,c
  3833  001D2E  3643               	rlcf	??_down^0,f,c
  3834  001D30  3644               	rlcf	(??_down+1)^0,f,c
  3835  001D32  EE20 F001          	lfsr	2,1
  3836  001D36  5041               	movf	down@pl^0,w,c
  3837  001D38  26D9               	addwf	fsr2l,f,c
  3838  001D3A  5042               	movf	(down@pl+1)^0,w,c
  3839  001D3C  22DA               	addwfc	fsr2h,f,c
  3840  001D3E  50DF               	movf	indf2,w,c
  3841  001D40  6E45               	movwf	(??_down+2)^0,c
  3842  001D42  5045               	movf	(??_down+2)^0,w,c
  3843  001D44  0D20               	mullw	32
  3844  001D46  0EFE               	movlw	254
  3845  001D48  6E46               	movwf	(??_down+3)^0,c
  3846  001D4A  0EFF               	movlw	255
  3847  001D4C  6E47               	movwf	(??_down+4)^0,c
  3848  001D4E  0E00               	movlw	low _display
  3849  001D50  6E48               	movwf	(??_down+5)^0,c
  3850  001D52  0E01               	movlw	high _display
  3851  001D54  6E49               	movwf	(??_down+6)^0,c
  3852  001D56  5046               	movf	(??_down+3)^0,w,c
  3853  001D58  2648               	addwf	(??_down+5)^0,f,c
  3854  001D5A  5047               	movf	(??_down+4)^0,w,c
  3855  001D5C  2249               	addwfc	(??_down+6)^0,f,c
  3856  001D5E  50F3               	movf	243,w,c
  3857  001D60  2648               	addwf	(??_down+5)^0,f,c
  3858  001D62  50F4               	movf	244,w,c
  3859  001D64  2249               	addwfc	(??_down+6)^0,f,c
  3860  001D66  5043               	movf	??_down^0,w,c
  3861  001D68  2448               	addwf	(??_down+5)^0,w,c
  3862  001D6A  6ED9               	movwf	fsr2l,c
  3863  001D6C  5044               	movf	(??_down+1)^0,w,c
  3864  001D6E  2049               	addwfc	(??_down+6)^0,w,c
  3865  001D70  6EDA               	movwf	fsr2h,c
  3866  001D72  EE10 F005          	lfsr	1,5
  3867  001D76  50DE               	movf	postinc2,w,c
  3868  001D78  26E1               	addwf	fsr1l,f,c
  3869  001D7A  50DD               	movf	postdec2,w,c
  3870  001D7C  22E2               	addwfc	fsr1h,f,c
  3871  001D7E  50E7               	movf	indf1,w,c
  3872  001D80  A4D8               	btfss	status,2,c
  3873  001D82  EFC5  F00E         	goto	i2u94_41
  3874  001D86  EFC7  F00E         	goto	i2u94_40
  3875  001D8A                     i2u94_41:
  3876  001D8A  EFC9  F00E         	goto	i2l1869
  3877  001D8E                     i2u94_40:
  3878  001D8E  EF18  F00F         	goto	i2l313
  3879  001D92                     i2l1869:
  3880                           
  3881                           ;main.c: 523:     if (display[pl->y][pl->x-1]->type == OT_PLAYERB) return;
  3882  001D92  C041  FFD9         	movff	down@pl,fsr2l
  3883  001D96  C042  FFDA         	movff	down@pl+1,fsr2h
  3884  001D9A  50DF               	movf	indf2,w,c
  3885  001D9C  6E43               	movwf	??_down^0,c
  3886  001D9E  6A44               	clrf	(??_down+1)^0,c
  3887  001DA0  90D8               	bcf	status,0,c
  3888  001DA2  3643               	rlcf	??_down^0,f,c
  3889  001DA4  3644               	rlcf	(??_down+1)^0,f,c
  3890  001DA6  EE20 F001          	lfsr	2,1
  3891  001DAA  5041               	movf	down@pl^0,w,c
  3892  001DAC  26D9               	addwf	fsr2l,f,c
  3893  001DAE  5042               	movf	(down@pl+1)^0,w,c
  3894  001DB0  22DA               	addwfc	fsr2h,f,c
  3895  001DB2  50DF               	movf	indf2,w,c
  3896  001DB4  6E45               	movwf	(??_down+2)^0,c
  3897  001DB6  5045               	movf	(??_down+2)^0,w,c
  3898  001DB8  0D20               	mullw	32
  3899  001DBA  0EFE               	movlw	254
  3900  001DBC  6E46               	movwf	(??_down+3)^0,c
  3901  001DBE  0EFF               	movlw	255
  3902  001DC0  6E47               	movwf	(??_down+4)^0,c
  3903  001DC2  0E00               	movlw	low _display
  3904  001DC4  6E48               	movwf	(??_down+5)^0,c
  3905  001DC6  0E01               	movlw	high _display
  3906  001DC8  6E49               	movwf	(??_down+6)^0,c
  3907  001DCA  5046               	movf	(??_down+3)^0,w,c
  3908  001DCC  2648               	addwf	(??_down+5)^0,f,c
  3909  001DCE  5047               	movf	(??_down+4)^0,w,c
  3910  001DD0  2249               	addwfc	(??_down+6)^0,f,c
  3911  001DD2  50F3               	movf	243,w,c
  3912  001DD4  2648               	addwf	(??_down+5)^0,f,c
  3913  001DD6  50F4               	movf	244,w,c
  3914  001DD8  2249               	addwfc	(??_down+6)^0,f,c
  3915  001DDA  5043               	movf	??_down^0,w,c
  3916  001DDC  2448               	addwf	(??_down+5)^0,w,c
  3917  001DDE  6ED9               	movwf	fsr2l,c
  3918  001DE0  5044               	movf	(??_down+1)^0,w,c
  3919  001DE2  2049               	addwfc	(??_down+6)^0,w,c
  3920  001DE4  6EDA               	movwf	fsr2h,c
  3921  001DE6  EE10 F005          	lfsr	1,5
  3922  001DEA  50DE               	movf	postinc2,w,c
  3923  001DEC  26E1               	addwf	fsr1l,f,c
  3924  001DEE  50DD               	movf	postdec2,w,c
  3925  001DF0  22E2               	addwfc	fsr1h,f,c
  3926  001DF2  04E6               	decf	postinc1,w,c
  3927  001DF4  A4D8               	btfss	status,2,c
  3928  001DF6  EFFF  F00E         	goto	i2u95_41
  3929  001DFA  EF01  F00F         	goto	i2u95_40
  3930  001DFE                     i2u95_41:
  3931  001DFE  EF03  F00F         	goto	i2l1875
  3932  001E02                     i2u95_40:
  3933  001E02  EF18  F00F         	goto	i2l313
  3934  001E06                     i2l1875:
  3935                           
  3936                           ;main.c: 527:     pl->oldY = pl->y;
  3937  001E06  EE20 F001          	lfsr	2,1
  3938  001E0A  5041               	movf	down@pl^0,w,c
  3939  001E0C  26D9               	addwf	fsr2l,f,c
  3940  001E0E  5042               	movf	(down@pl+1)^0,w,c
  3941  001E10  22DA               	addwfc	fsr2h,f,c
  3942  001E12  EE10 F003          	lfsr	1,3
  3943  001E16  5041               	movf	down@pl^0,w,c
  3944  001E18  26E1               	addwf	fsr1l,f,c
  3945  001E1A  5042               	movf	(down@pl+1)^0,w,c
  3946  001E1C  22E2               	addwfc	fsr1h,f,c
  3947  001E1E  CFDF FFE7          	movff	indf2,indf1
  3948  001E22                     
  3949                           ;main.c: 528:     pl->y++;
  3950  001E22  EE20 F001          	lfsr	2,1
  3951  001E26  5041               	movf	down@pl^0,w,c
  3952  001E28  26D9               	addwf	fsr2l,f,c
  3953  001E2A  5042               	movf	(down@pl+1)^0,w,c
  3954  001E2C  22DA               	addwfc	fsr2h,f,c
  3955  001E2E  2ADF               	incf	indf2,f,c
  3956  001E30                     i2l313:
  3957  001E30  0012               	return		;funcret
  3958  001E32                     __end_of_down:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function _SetupDebouncingTimer *****************
  3962 ;; Defined at:
  3963 ;;		line 480 in file "main.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_highIsr
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text19
  3991  00223C                     __ptext19:
  3992                           	callstack 0
  3993  00223C                     _SetupDebouncingTimer:
  3994                           	callstack 24
  3995  00223C                     
  3996                           ;main.c: 481:     acceptInterrupts = 0;
  3997  00223C  0E00               	movlw	0
  3998  00223E  6E10               	movwf	_acceptInterrupts^0,c
  3999                           
  4000                           ;main.c: 482:     TMR0L = 0;
  4001  002240  0E00               	movlw	0
  4002  002242  6ED6               	movwf	214,c	;volatile
  4003                           
  4004                           ;main.c: 483:     TMR0H = 0;
  4005  002244  0E00               	movlw	0
  4006  002246  6ED7               	movwf	215,c	;volatile
  4007  002248                     
  4008                           ;main.c: 484:     T0CONbits.TMR0ON = 1;
  4009  002248  8ED5               	bsf	213,7,c	;volatile
  4010  00224A  0012               	return		;funcret
  4011  00224C                     __end_of_SetupDebouncingTimer:
  4012                           	callstack 0
  4013                           
  4014                           	psect	rparam
  4015  0000                     
  4016                           	psect	temp
  4017  000064                     btemp:
  4018                           	callstack 0
  4019  000064                     	ds	1
  4020  0000                     int$flags	set	btemp
  4021  0000                     wtemp8	set	btemp+1
  4022  0000                     ttemp5	set	btemp+1
  4023  0000                     ttemp6	set	btemp+4
  4024  0000                     ttemp7	set	btemp+8
  4025                           
  4026                           	psect	idloc
  4027                           
  4028                           ;Config register IDLOC0 @ 0x200000
  4029                           ;	unspecified, using default values
  4030  200000                     	org	2097152
  4031  200000  FF                 	db	255
  4032                           
  4033                           ;Config register IDLOC1 @ 0x200001
  4034                           ;	unspecified, using default values
  4035  200001                     	org	2097153
  4036  200001  FF                 	db	255
  4037                           
  4038                           ;Config register IDLOC2 @ 0x200002
  4039                           ;	unspecified, using default values
  4040  200002                     	org	2097154
  4041  200002  FF                 	db	255
  4042                           
  4043                           ;Config register IDLOC3 @ 0x200003
  4044                           ;	unspecified, using default values
  4045  200003                     	org	2097155
  4046  200003  FF                 	db	255
  4047                           
  4048                           ;Config register IDLOC4 @ 0x200004
  4049                           ;	unspecified, using default values
  4050  200004                     	org	2097156
  4051  200004  FF                 	db	255
  4052                           
  4053                           ;Config register IDLOC5 @ 0x200005
  4054                           ;	unspecified, using default values
  4055  200005                     	org	2097157
  4056  200005  FF                 	db	255
  4057                           
  4058                           ;Config register IDLOC6 @ 0x200006
  4059                           ;	unspecified, using default values
  4060  200006                     	org	2097158
  4061  200006  FF                 	db	255
  4062                           
  4063                           ;Config register IDLOC7 @ 0x200007
  4064                           ;	unspecified, using default values
  4065  200007                     	org	2097159
  4066  200007  FF                 	db	255
  4067                           
  4068                           	psect	config
  4069                           
  4070                           ; Padding undefined space
  4071  300000                     	org	3145728
  4072  300000  FF                 	db	255
  4073                           
  4074                           ;Config register CONFIG1H @ 0x300001
  4075                           ;	unspecified, using default values
  4076                           ;	Oscillator Selection bits
  4077                           ;	OSC = 0x7, unprogrammed default
  4078                           ;	Fail-Safe Clock Monitor Enable bit
  4079                           ;	FCMEN = 0x0, unprogrammed default
  4080                           ;	Internal/External Oscillator Switchover bit
  4081                           ;	IESO = 0x0, unprogrammed default
  4082  300001                     	org	3145729
  4083  300001  07                 	db	7
  4084                           
  4085                           ;Config register CONFIG2L @ 0x300002
  4086                           ;	unspecified, using default values
  4087                           ;	Power-up Timer Enable bit
  4088                           ;	PWRT = 0x1, unprogrammed default
  4089                           ;	Brown-out Reset Enable bits
  4090                           ;	BOREN = 0x3, unprogrammed default
  4091                           ;	Brown Out Reset Voltage bits
  4092                           ;	BORV = 0x3, unprogrammed default
  4093  300002                     	org	3145730
  4094  300002  1F                 	db	31
  4095                           
  4096                           ;Config register CONFIG2H @ 0x300003
  4097                           ;	unspecified, using default values
  4098                           ;	Watchdog Timer Enable bit
  4099                           ;	WDT = 0x1, unprogrammed default
  4100                           ;	Watchdog Timer Postscale Select bits
  4101                           ;	WDTPS = 0xF, unprogrammed default
  4102  300003                     	org	3145731
  4103  300003  1F                 	db	31
  4104                           
  4105                           ; Padding undefined space
  4106  300004                     	org	3145732
  4107  300004  FF                 	db	255
  4108                           
  4109                           ;Config register CONFIG3H @ 0x300005
  4110                           ;	unspecified, using default values
  4111                           ;	CCP2 MUX bit
  4112                           ;	CCP2MX = 0x1, unprogrammed default
  4113                           ;	PORTB A/D Enable bit
  4114                           ;	PBADEN = 0x1, unprogrammed default
  4115                           ;	Low-Power Timer1 Oscillator Enable bit
  4116                           ;	LPT1OSC = 0x0, unprogrammed default
  4117                           ;	MCLR Pin Enable bit
  4118                           ;	MCLRE = 0x1, unprogrammed default
  4119  300005                     	org	3145733
  4120  300005  83                 	db	131
  4121                           
  4122                           ;Config register CONFIG4L @ 0x300006
  4123                           ;	unspecified, using default values
  4124                           ;	Stack Full/Underflow Reset Enable bit
  4125                           ;	STVREN = 0x1, unprogrammed default
  4126                           ;	Single-Supply ICSP Enable bit
  4127                           ;	LVP = 0x1, unprogrammed default
  4128                           ;	Extended Instruction Set Enable bit
  4129                           ;	XINST = 0x0, unprogrammed default
  4130                           ;	Background Debugger Enable bit
  4131                           ;	DEBUG = 0x1, unprogrammed default
  4132  300006                     	org	3145734
  4133  300006  85                 	db	133
  4134                           
  4135                           ; Padding undefined space
  4136  300007                     	org	3145735
  4137  300007  FF                 	db	255
  4138                           
  4139                           ;Config register CONFIG5L @ 0x300008
  4140                           ;	unspecified, using default values
  4141                           ;	Code Protection bit
  4142                           ;	CP0 = 0x1, unprogrammed default
  4143                           ;	Code Protection bit
  4144                           ;	CP1 = 0x1, unprogrammed default
  4145                           ;	Code Protection bit
  4146                           ;	CP2 = 0x1, unprogrammed default
  4147                           ;	Code Protection bit
  4148                           ;	CP3 = 0x1, unprogrammed default
  4149  300008                     	org	3145736
  4150  300008  0F                 	db	15
  4151                           
  4152                           ;Config register CONFIG5H @ 0x300009
  4153                           ;	unspecified, using default values
  4154                           ;	Boot Block Code Protection bit
  4155                           ;	CPB = 0x1, unprogrammed default
  4156                           ;	Data EEPROM Code Protection bit
  4157                           ;	CPD = 0x1, unprogrammed default
  4158  300009                     	org	3145737
  4159  300009  C0                 	db	192
  4160                           
  4161                           ;Config register CONFIG6L @ 0x30000A
  4162                           ;	unspecified, using default values
  4163                           ;	Write Protection bit
  4164                           ;	WRT0 = 0x1, unprogrammed default
  4165                           ;	Write Protection bit
  4166                           ;	WRT1 = 0x1, unprogrammed default
  4167                           ;	Write Protection bit
  4168                           ;	WRT2 = 0x1, unprogrammed default
  4169                           ;	Write Protection bit
  4170                           ;	WRT3 = 0x1, unprogrammed default
  4171  30000A                     	org	3145738
  4172  30000A  0F                 	db	15
  4173                           
  4174                           ;Config register CONFIG6H @ 0x30000B
  4175                           ;	unspecified, using default values
  4176                           ;	Configuration Register Write Protection bit
  4177                           ;	WRTC = 0x1, unprogrammed default
  4178                           ;	Boot Block Write Protection bit
  4179                           ;	WRTB = 0x1, unprogrammed default
  4180                           ;	Data EEPROM Write Protection bit
  4181                           ;	WRTD = 0x1, unprogrammed default
  4182  30000B                     	org	3145739
  4183  30000B  E0                 	db	224
  4184                           
  4185                           ;Config register CONFIG7L @ 0x30000C
  4186                           ;	unspecified, using default values
  4187                           ;	Table Read Protection bit
  4188                           ;	EBTR0 = 0x1, unprogrammed default
  4189                           ;	Table Read Protection bit
  4190                           ;	EBTR1 = 0x1, unprogrammed default
  4191                           ;	Table Read Protection bit
  4192                           ;	EBTR2 = 0x1, unprogrammed default
  4193                           ;	Table Read Protection bit
  4194                           ;	EBTR3 = 0x1, unprogrammed default
  4195  30000C                     	org	3145740
  4196  30000C  0F                 	db	15
  4197                           
  4198                           ;Config register CONFIG7H @ 0x30000D
  4199                           ;	unspecified, using default values
  4200                           ;	Boot Block Table Read Protection bit
  4201                           ;	EBTRB = 0x1, unprogrammed default
  4202  30000D                     	org	3145741
  4203  30000D  40                 	db	64
  4204                           tosu	equ	0xFFF
  4205                           tosh	equ	0xFFE
  4206                           tosl	equ	0xFFD
  4207                           stkptr	equ	0xFFC
  4208                           pclatu	equ	0xFFB
  4209                           pclath	equ	0xFFA
  4210                           pcl	equ	0xFF9
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           prodh	equ	0xFF4
  4216                           prodl	equ	0xFF3
  4217                           indf0	equ	0xFEF
  4218                           postinc0	equ	0xFEE
  4219                           postdec0	equ	0xFED
  4220                           preinc0	equ	0xFEC
  4221                           plusw0	equ	0xFEB
  4222                           fsr0h	equ	0xFEA
  4223                           fsr0l	equ	0xFE9
  4224                           wreg	equ	0xFE8
  4225                           indf1	equ	0xFE7
  4226                           postinc1	equ	0xFE6
  4227                           postdec1	equ	0xFE5
  4228                           preinc1	equ	0xFE4
  4229                           plusw1	equ	0xFE3
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           bsr	equ	0xFE0
  4233                           indf2	equ	0xFDF
  4234                           postinc2	equ	0xFDE
  4235                           postdec2	equ	0xFDD
  4236                           preinc2	equ	0xFDC
  4237                           plusw2	equ	0xFDB
  4238                           fsr2h	equ	0xFDA
  4239                           fsr2l	equ	0xFD9
  4240                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        78
    BSS         246
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     30      99
    BANK0           128      0     127
    BANK1           256     23     151
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    highIsr$1368	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    highIsr$1367	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    highIsr$1366	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    highIsr$1365	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1144_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    down@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    up@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    right@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    left@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(COMRAM[42]), 

    display	PTR struct GameElement[16][4] size(2) Largest target is 42
		 -> NULL(NULL[0]), objs(COMRAM[42]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(BANK0[8]), frisbeeChar(BANK0[8]), selected_teamB_player_with_frisbee(BANK0[8]), selected_teamA_player_with_frisbee(BANK0[8]), 
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), teamB_player(BANK0[8]), teamA_player(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _UpdateAndPrintDisplay->_LCDGoto
    _UpdateAndPrintDisplay->___awmod
    _UpdateAndPrintDisplay->___wmul
    _InitLCD->_LCDCmd
    _InitGameObjects->___wmul
    _LCDAddSpecialCharacter->_LCDGoto
    _LCDGoto->_LCDCmd

Critical Paths under _lowIsr in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_left
    _highIsr->_up
    _up->i2___wmul
    _right->i2___wmul
    _left->i2___wmul
    _down->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowIsr in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UpdateAndPrintDisplay
    _UpdateAndPrintDisplay->___awmod
    _UpdateAndPrintDisplay->___wmul
    _InitGameObjects->___wmul
    _AddCustomCharacters->_LCDAddSpecialCharacter

Critical Paths under _lowIsr in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowIsr in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowIsr in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowIsr in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowIsr in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowIsr in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowIsr in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowIsr in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowIsr in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowIsr in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowIsr in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowIsr in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowIsr in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowIsr in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowIsr in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19040
                _AddCustomCharacters
                    _InitGameObjects
                     _InitInterrupts
                            _InitLCD
              _UpdateAndPrintDisplay
 ---------------------------------------------------------------------------------
 (1) _UpdateAndPrintDisplay                               21    21      0    9595
                                              2 BANK1     21    21      0
                             _LCDDat
                            _LCDGoto
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                             26 COMRAM     4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGameObjects                                     18    18      0    7441
                                              2 BANK1     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    7082
                                             26 COMRAM     4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _AddCustomCharacters                                  0     0      0    1973
             _LCDAddSpecialCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDAddSpecialCharacter                               4     2      2    1973
                                              0 BANK1      4     2      2
                             _LCDCmd
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1    1030
                                             28 COMRAM     2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      31
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      31
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lowIsr                                               1     1      0       0
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _highIsr                                              8     8      0    1783
                                             17 COMRAM     8     8      0
               _SetupDebouncingTimer
                               _down
                               _left
                              _right
                                 _up
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     523
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _up                                                  11     9      2     296
                                              6 COMRAM    11     9      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _right                                               10     8      2     372
                                              6 COMRAM    10     8      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _left                                                11     9      2     296
                                              6 COMRAM    11     9      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _down                                                10     8      2     296
                                              6 COMRAM    10     8      2
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _SetupDebouncingTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddCustomCharacters
     _LCDAddSpecialCharacter
       _LCDCmd
       _LCDDat
       _LCDGoto
         _LCDCmd
   _InitGameObjects
     ___wmul
   _InitInterrupts
   _InitLCD
     _LCDCmd
   _UpdateAndPrintDisplay
     _LCDDat
     _LCDGoto
       _LCDCmd
     ___awmod
     ___wmul

 _lowIsr (ROOT)

 _highIsr (ROOT)
   _SetupDebouncingTimer
   _down
     i2___wmul (ARG)
   _left
     i2___wmul (ARG)
   _right
     i2___wmul (ARG)
   _up
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      97       7       59.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1E      63       1       78.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     179      34        0.0%
DATA                 0      0     179       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu May 25 18:40:58 2023

                                    _a 000D                                      _b 000B  
                                    _c 0009                                     _up 1936  
                                   bsr 000FE0             LCDAddSpecialCharacter@data 0180  
                  ___wmul@multiplicand 0057  LCDAddSpecialCharacter@character_index 0182  
                                  l132 21D0                                    l135 21A0  
                                  l144 1FD8                                    l160 20F8  
                                  l163 1F64                                    l155 216E  
                                  l237 146C                                    l319 21F8  
                                  l264 14FE                                    l273 1934  
                                  l285 20AE                                    ?_up 0041  
                                  l563 1EE2                           ___awmod@sign 0181  
                                  wreg 000FE8                                   ??_up 0043  
                      __end_of_LCDGoto 1FDA                                   l1231 2068  
                                 l1241 2092                                   l1233 2072  
                                 l1251 209C                                   l1243 2094  
                                 l1235 208C                                   l1261 20A6  
                                 l1253 209E                                   l1245 2096  
                                 l1237 208E                                   l1229 204C  
                                 l1263 20AA                                   l1255 20A0  
                                 l1247 2098                                   l1239 2090  
                                 l1265 20AC                                   l1257 20A2  
                                 l1249 209A                                   l2401 1E68  
                                 l2331 21BE                                   l2323 21A4  
                                 l1259 20A4                                   l2411 1EAE  
                                 l2403 1E7A                                   l2341 217C  
                                 l2333 21C0                                   l2325 21A8  
                                 l2501 1918                                   l2421 1EDA  
                                 l2413 1EB6                                   l2405 1E82  
                                 l2343 218C                                   l2335 2172  
                                 l2327 21AC                                   l2351 1F78  
                                 l2415 1EBC                                   l2407 1E8A  
                                 l2503 1006                                   l2345 218E  
                                 l2337 2176                                   l2329 21AE  
                                 l2361 1FC6                                   l2353 1F86  
                                 l2409 1E98                                   l2417 1EC2  
                                 l2601 144A                                   l2521 1078  
                                 l2347 219E                                   l2339 217A  
                                 l2355 1F98                                   l2363 1FD0  
                                 l2451 2146                                   l2419 1ED2  
                                 l2603 1450                                   l2531 10A0  
                                 l2523 107C                                   l2515 1018  
                                 l2365 1FD4                                   l2357 1FA6  
                                 l2349 1F68                                   l2381 20EE  
                                 l2461 215C                                   l2453 2148  
                                 l2613 1488                                   l2621 14C8  
                                 l2605 1474                                   l2533 115E  
                                 l2525 1098                                   l2517 1058  
                                 l2509 1010                                   l2359 1FB8  
                                 l2375 20C8                                   l2367 20B4  
                                 l2383 21D2                                   l2463 2162  
                                 l2455 214A                                   l2447 213E  
                                 l2391 1E38                                   l2623 14DA  
                                 l2615 148C                                   l2607 1478  
                                 l2551 1232                                   l2543 1186  
                                 l2535 1162                                   l2519 105C  
                                 l2377 20DA                                   l2369 20C2  
                                 l2385 21F0                                   l2481 1742  
                                 l2465 2168                                   l2457 2150  
                                 l2449 2142                                   l2393 1E46  
                                 l2625 14FA                                   l2609 1480  
                                 l2553 123C                                   l2545 11B6  
                                 l2537 117E                                   l2379 20DE  
                                 l2467 1EE4                                   l2491 17C2  
                                 l2483 1782                                   l2475 173A  
                                 l2459 2156                                   l2395 1E4E  
                                 l2619 1494                                   l2571 12E8  
                                 l2555 1242                                   l2485 1786  
                                 l2469 1730                                   l2397 1E52  
                                 l2389 1E32                                   l2581 131E  
                                 l2573 12F6                                   l2565 126C  
                                 l2557 1248                                   l2549 11EA  
                                 l2661 2228                                   l2487 17A2  
                                 l2399 1E60                                   l2591 1390  
                                 l2575 1300                                   l2559 1264  
                                 l2663 222C                                   l2497 1876  
                                 l2489 17A6                                   l2585 1328  
                                 l2577 130A                                   l2569 12A0  
                                 l2665 2230                                   l2499 1914  
                                 l2595 139A                                   l2587 137C  
                                 l2579 1314                                   l2659 2220  
                                 l2589 1386                                   l2599 13EE  
                                 l2891 135E                                   l2893 13D0  
                                 l2895 1424                                   l2897 14AA  
                                 STR_1 1001                                   u1420 1F78  
                                 u1500 1EAE                                   u1421 1F74  
                                 u1501 1EAA                                   _LATA 000F89  
                                 u1430 1F98                                   u1510 1ED2  
                                 u1431 1F94                                   u1511 1ECE  
                                 u1440 1FB8                                   u1600 1078  
                                 _LATD 000F8C                                   u1441 1FB4  
                                 u1601 1074                                   u1450 20EE  
                                 u1610 1098                                   u1451 20EA  
                                 u1611 1094                                   u1460 1E46  
                                 u1461 1E42                                   u1470 1E60  
                                 u1630 117E                                   u1471 1E5C  
                                 u1631 117A                                   u1560 17A2  
                                 u1480 1E7A                                   u1640 11B6  
                                 u1561 179E                                   u1481 1E76  
                                 u1641 11B2                                   u1625 10F0  
                                 u1570 17C2                                   u1490 1E98  
                                 u1650 11E6                                   u1571 17BE  
                                 u1555 174C                                   u1491 1E94  
                                 u1651 11E2                                   u1580 1934  
                                 u1660 1264                                   u1581 1930  
                                 u1661 1260                                   u1670 129C  
                                 u1727 14D0                                   u1671 1298  
                                 u1680 146C                                   u1737 21B4  
                                 u1681 1468                                   u1747 21C6  
                                 u1595 1022                                   u1757 2182  
                                 u1767 2194                        _InitGameObjects 1730  
                                 _main 2220                                   _left 1A82  
                                 _down 1CFC                                   _objs 0011  
                                 fsr1h 000FE2                                   fsr2h 000FDA  
                                 indf1 000FE7                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 0064                                   up@pl 0041  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0028                           ___param_bank 000000  
                      __end_of_InitLCD 2170                                  ?_main 003B  
                                ?_left 0041                                  ?_down 0041  
                      __end_of___awmod 1EE4                                  _T0CON 000FD5  
                                _T3CON 000FB1                                  i1l215 0020  
                                i2l210 1714                                  i2l313 1E30  
                                i2l306 1A80                                  i2l319 221E  
                                i2l195 1582                                  i2l292 1BC0  
                                i2l198 15FC                                  i2l288 224A  
                                i2l299 1CFA                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISD 000F95  
                _UpdateAndPrintDisplay 1006                        __end_of_highIsr 1730  
                                _lcd_x 005B                                  _lcd_y 005A  
                                _right 1BC2                                  tablat 000FF5  
                     __end_ofi2___wmul 2220                                  ttemp5 0065  
                                ttemp6 0068                                  ttemp7 006C  
                                status 000FD8                                  wtemp8 0065  
                      __initialization 1FDA                           __end_of_main 223C  
                         __end_of_left 1BC2                           __end_of_down 1E32  
                       _InitInterrupts 204C                                 ??_main 0059  
                               ??_left 0043                                 ??_down 0043  
                        __activetblptr 000002                              ??_LCDGoto 0058  
              __end_of_InitGameObjects 1936                                 _ADCON1 000FC1  
                               ?_right 0041                                 _LCDDat 2170  
                               _LCDCmd 21A2                                 i1l1601 001E  
                               i2l2211 1674                                 i2l2203 160A  
                               i2l1165 223C                                 i2l2213 169C  
                               i2l2221 1706                                 i2l2205 161A  
                               i2l1167 2248                                 i2l2215 16C4  
                               i2l2207 1624                                 i2l2209 164C  
                               i2l2225 170E                                 i2l2075 21FA  
                               i2l2227 1710                                 i2l2219 16CC  
                               i2l2171 151A                                 i2l2077 2216  
                               i2l2229 1712                                 i2l2181 1542  
                               i2l2173 152C                                 i2l2191 15A0  
                               i2l2183 1552                                 i2l2175 1530  
                               i2l2193 15A4                                 i2l2185 1556  
                               i2l2177 1532                                 i2l2195 15C8  
                               i2l2187 157A                                 i2l2179 1534  
                               i2l1821 1BC2                                 i2l2197 15CC  
                               i2l2189 1590                                 i2l2199 15D4  
                               i2l1825 1BE0                                 i2l1841 1936  
                               i2l1835 1CD8                                 i2l1861 1CFC  
                               i2l1837 1CF0                                 i2l1829 1C5C  
                               i2l1845 1956                                 i2l1855 1A56  
                               i2l1865 1D1E                                 i2l1881 1A82  
                               i2l1857 1A72                                 i2l1849 19D6  
                               i2l1875 1E06                                 i2l1877 1E22  
                               i2l1869 1D92                                 i2l1885 1A9E  
                               i2l1895 1B9E                                 i2l1897 1BB6  
                               i2l1889 1B1E                                 i2l2899 16E0  
                            ??_InitLCD 0057                 __end_of_InitInterrupts 20B0  
                               ___wmul 21D2                              ??___awmod 0059  
                               clear_0 2020                                 clear_1 202C  
                               clear_2 2038                                 _lowIsr 0018  
                               _scoreA 0005                        ___awmod@divisor 0057  
                               _scoreB 0003                        ___awmod@counter 0180  
                            ??_highIsr 004C                                 left@pl 0041  
                               down@pl 0041                 ?_UpdateAndPrintDisplay 003B  
                         __pdataCOMRAM 0059                          _frisbee_steps 00C3  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            LCDDat@dat 0056                              LCDCmd@cmd 0056  
                           __accesstop 0080                __end_of__initialization 203E  
                       _selectedPlayer 0007                          ___rparam_used 000001  
         __size_of_AddCustomCharacters 0082                        ?_InitInterrupts 003B  
                       __pcstackCOMRAM 003B                           __pidataBANK0 20FA  
             ??_LCDAddSpecialCharacter 0059                          __end_of_right 1CFC  
                           __end_of_up 1A82                              ?i2___wmul 003B  
                     ?_InitGameObjects 003B          __size_of_SetupDebouncingTimer 0010  
                              ??_right 0043            UpdateAndPrintDisplay@temp_d 018C  
                              ?_LCDDat 003B                                ?_LCDCmd 003B  
                           __pbssBANK0 00C3                             __pbssBANK1 0100  
                           _game_state 0059                                ?___wmul 0055  
                              ?_lowIsr 003B                             ??i2___wmul 003F  
                              _LCDGoto 1F66                                i2u90_40 19D2  
                              i2u90_41 19CE                                i2u83_40 1BDC  
                              i2u83_41 1BD8                                i2u91_45 19EA  
                              i2u92_40 1A52                                i2u92_41 1A4E  
                              i2u84_45 1BF4                                i2u93_40 1D1A  
                              i2u85_40 1C58                                i2u93_41 1D16  
                              i2u85_41 1C54                                i2u94_40 1D8E  
                              i2u94_41 1D8A                                i2u86_45 1C70  
                              i2u95_40 1E02                                i2u87_40 1CD4  
                              i2u95_41 1DFE                                i2u87_41 1CD0  
                              i2u96_40 1A9A                                i2u88_40 1952  
                              i2u96_41 1A96                                i2u88_41 194E  
                              i2u97_45 1AB2                                i2u89_45 196A  
                              i2u98_40 1B1A                                i2u98_41 1B16  
                              i2u99_45 1B32                       InitGameObjects@i 018E  
                     InitGameObjects@j 0190                        __size_of_LCDDat 0032  
                      __size_of_LCDCmd 0030                                _InitLCD 213E  
                              __Hparam 0000                                __Lparam 0000  
                              ___awmod 1E32                        __size_of___wmul 0028  
                         __psmallconst 1000        __size_of_LCDAddSpecialCharacter 004A  
                              __pcinit 1FDA                                __ramtop 1000  
                      __size_of_lowIsr 0010                                __ptext0 2220  
                              __ptext1 1006                                __ptext2 1E32  
                              __ptext3 213E                                __ptext4 204C  
                              __ptext5 1730                                __ptext6 21D2  
                              __ptext7 1EE4                                __ptext8 20B0  
                              __ptext9 1F66                                _highIsr 0008  
                              _display 0100                              _T0CONbits 000FD5  
                            _T3CONbits 000FB1                       ___awmod@dividend 0055  
                       __pintcode_body 1500                   end_of_initialization 203E  
                       _frisbee_target 008B                          __Lmediumconst 0000  
                              int_func 1500                    i2___wmul@multiplier 003B  
                              right@pl 0041                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc1 000FE6                                postinc2 000FDE  
              ??_UpdateAndPrintDisplay 0182                              _PORTEbits 000F84  
                  _AddCustomCharacters 1EE4                              _TRISEbits 000F96  
               _LCDAddSpecialCharacter 20B0                       ??_InitInterrupts 0055  
                       __end_of_LCDDat 21A2                         __end_of_LCDCmd 21D2  
                           LCDGoto@p_1 0057                             LCDGoto@p_2 0058  
                 ?_AddCustomCharacters 003B     _selected_teamA_player_with_frisbee 00A3  
                       __end_of___wmul 21FA                          __pidataCOMRAM 224C  
                       __end_of_lowIsr 0028                       i2___wmul@product 003F  
                  start_initialization 1FDA                      __size_ofi2___wmul 0026  
                             ??_LCDDat 0055                               ??_LCDCmd 0055  
                ??_AddCustomCharacters 0059           __end_of_SetupDebouncingTimer 224C  
              LCDAddSpecialCharacter@i 0183                               ??___wmul 0059  
                       _currentSegment 0001                            __pdataBANK0 0080  
                             ??_lowIsr 0054                               ?_LCDGoto 0057  
                          __pbssCOMRAM 0001                          __pcstackBANK1 0180  
                             ?_InitLCD 003B               __size_of_InitGameObjects 0206  
               UpdateAndPrintDisplay@i 018D                 UpdateAndPrintDisplay@j 018F  
                            __pintcode 0008                               ?___awmod 0055  
                          __pintcodelo 0018                               ?_highIsr 003B  
                          __smallconst 1000                           _teamA_player 005C  
                         _teamB_player 00BB                         __size_of_right 013A  
                            _segValues 0080                            __size_of_up 014C  
                       ___wmul@product 0180                  _selected_teamA_player 00B3  
                _selected_teamB_player 00AB                               i2u100_40 1B9A  
                             i2u100_41 1B96                               i2u130_40 1542  
                             i2u130_41 153E                               i2u131_40 1552  
                             i2u131_41 154E                               i2u132_40 1590  
                             i2u132_41 158C                               i2u133_40 15A0  
                             i2u133_41 159C                               i2u134_40 160A  
                             i2u134_41 1606                               i2u135_40 161A  
                             i2u135_41 1616                               i2u129_40 152C  
                             i2u129_41 1528                               _PIR1bits 000F9E  
                            _portbVals 000F         __size_of_UpdateAndPrintDisplay 04FA  
                    ___wmul@multiplier 0055          __end_of_UpdateAndPrintDisplay 1500  
                             i2___wmul 21FA                       __size_of_LCDGoto 0074  
              ?_LCDAddSpecialCharacter 0180                   _SetupDebouncingTimer 223C  
                          _INTCON2bits 000FF1                            _INTCON3bits 000FF0  
                            copy_data0 1FEE                              copy_data1 200E  
                     __size_of_InitLCD 0032                               __Hrparam 0000  
                             __Lrparam 0000                            _frisbeeChar 0093  
                    ??_InitGameObjects 0182                       __size_of___awmod 00B2  
                i2___wmul@multiplicand 003D                       __size_of_highIsr 1728  
       __end_of_LCDAddSpecialCharacter 20FA                       _acceptInterrupts 0010  
                             __ptext10 21A2                               __ptext11 2170  
                             __ptext14 21FA                               __ptext15 1936  
                             __ptext16 1BC2                  ?_SetupDebouncingTimer 003B  
                             __ptext17 1A82                               __ptext18 1CFC  
                             __ptext19 223C             UpdateAndPrintDisplay@i_620 0191  
           UpdateAndPrintDisplay@i_621 0193             UpdateAndPrintDisplay@i_622 0195  
                        __size_of_main 001C                          __size_of_left 0140  
                        __size_of_down 0136     _selected_teamB_player_with_frisbee 009B  
                             int$flags 0064                             _INTCONbits 000FF2  
          __end_of_AddCustomCharacters 1F66                               intlevel1 0000  
                             intlevel2 0000                   InitGameObjects@i_627 0192  
              __size_of_InitInterrupts 0064                 ??_SetupDebouncingTimer 003B  
