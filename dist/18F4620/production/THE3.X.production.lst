

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu May 25 22:12:02 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4620 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  0030FC                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _segValues
    88  0030FC  3F                 	db	63
    89  0030FD  06                 	db	6
    90  0030FE  5B                 	db	91
    91  0030FF  4F                 	db	79
    92  003100  66                 	db	102
    93  003101  6D                 	db	109
    94  003102  7D                 	db	125
    95  003103  07                 	db	7
    96  003104  7F                 	db	127
    97  003105  6F                 	db	111
    98  003106  40                 	db	64
    99                           
   100                           ;initializer for _gameSpeed
   101  003107  0010               	dw	16
   102                           
   103                           ;initializer for _game_state
   104  003109  01                 	db	1
   105                           
   106                           ;initializer for _frisbee_target
   107  00310A  0E                 	db	14
   108  00310B  11                 	db	17
   109  00310C  11                 	db	17
   110  00310D  11                 	db	17
   111  00310E  0E                 	db	14
   112  00310F  00                 	db	0
   113  003110  00                 	db	0
   114  003111  00                 	db	0
   115                           
   116                           	psect	idataBANK0
   117  002FC0                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _lcd_y
   121  002FC0  01                 	db	1
   122                           
   123                           ;initializer for _lcd_x
   124  002FC1  01                 	db	1
   125                           
   126                           ;initializer for _frisbeeChar
   127  002FC2  0E                 	db	14
   128  002FC3  1F                 	db	31
   129  002FC4  1F                 	db	31
   130  002FC5  1F                 	db	31
   131  002FC6  0E                 	db	14
   132  002FC7  00                 	db	0
   133  002FC8  00                 	db	0
   134  002FC9  00                 	db	0
   135                           
   136                           ;initializer for _selected_teamB_player_with_frisbee
   137  002FCA  1F                 	db	31
   138  002FCB  15                 	db	21
   139  002FCC  0A                 	db	10
   140  002FCD  04                 	db	4
   141  002FCE  0E                 	db	14
   142  002FCF  1F                 	db	31
   143  002FD0  0A                 	db	10
   144  002FD1  1F                 	db	31
   145                           
   146                           ;initializer for _selected_teamA_player_with_frisbee
   147  002FD2  1F                 	db	31
   148  002FD3  15                 	db	21
   149  002FD4  0A                 	db	10
   150  002FD5  04                 	db	4
   151  002FD6  04                 	db	4
   152  002FD7  04                 	db	4
   153  002FD8  0A                 	db	10
   154  002FD9  1F                 	db	31
   155                           
   156                           ;initializer for _selected_teamB_player
   157  002FDA  11                 	db	17
   158  002FDB  15                 	db	21
   159  002FDC  0A                 	db	10
   160  002FDD  04                 	db	4
   161  002FDE  0E                 	db	14
   162  002FDF  1F                 	db	31
   163  002FE0  0A                 	db	10
   164  002FE1  1F                 	db	31
   165                           
   166                           ;initializer for _selected_teamA_player
   167  002FE2  11                 	db	17
   168  002FE3  15                 	db	21
   169  002FE4  0A                 	db	10
   170  002FE5  04                 	db	4
   171  002FE6  04                 	db	4
   172  002FE7  04                 	db	4
   173  002FE8  0A                 	db	10
   174  002FE9  1F                 	db	31
   175                           
   176                           ;initializer for _teamB_player
   177  002FEA  11                 	db	17
   178  002FEB  15                 	db	21
   179  002FEC  0A                 	db	10
   180  002FED  04                 	db	4
   181  002FEE  0E                 	db	14
   182  002FEF  1F                 	db	31
   183  002FF0  0A                 	db	10
   184  002FF1  0A                 	db	10
   185                           
   186                           ;initializer for _teamA_player
   187  002FF2  11                 	db	17
   188  002FF3  15                 	db	21
   189  002FF4  0A                 	db	10
   190  002FF5  04                 	db	4
   191  002FF6  04                 	db	4
   192  002FF7  04                 	db	4
   193  002FF8  0A                 	db	10
   194  002FF9  0A                 	db	10
   195  0000                     _T2CON	set	4042
   196  0000                     _RCONbits	set	4048
   197  0000                     _T1CON	set	4045
   198  0000                     _IPR1bits	set	3999
   199  0000                     _TMR0H	set	4055
   200  0000                     _TMR0L	set	4054
   201  0000                     _T0CON	set	4053
   202  0000                     _TRISA	set	3986
   203  0000                     _TRISB	set	3987
   204  0000                     _T3CON	set	4017
   205  0000                     _INTCON2bits	set	4081
   206  0000                     _ADCON1	set	4033
   207  0000                     _LATD	set	3980
   208  0000                     _LATA	set	3977
   209  0000                     _PORTA	set	3968
   210  0000                     _PIE1bits	set	3997
   211  0000                     _INTCON3bits	set	4080
   212  0000                     _TMR1H	set	4047
   213  0000                     _TMR1L	set	4046
   214  0000                     _T1CONbits	set	4045
   215  0000                     _PIR1bits	set	3998
   216  0000                     _T0CONbits	set	4053
   217  0000                     _INTCONbits	set	4082
   218  0000                     _PORTB	set	3969
   219  0000                     _TRISD	set	3989
   220  0000                     _TRISEbits	set	3990
   221  0000                     _PORTD	set	3971
   222  0000                     _PORTEbits	set	3972
   223  0000                     _TMR3H	set	4019
   224  0000                     _TMR3L	set	4018
   225  0000                     _T3CONbits	set	4017
   226                           
   227                           	psect	smallconst
   228  001000                     __psmallconst:
   229                           	callstack 0
   230  001000  00                 	db	0
   231  001001                     STR_1:
   232  001001  25                 	db	37
   233  001002  64                 	db	100	;'d'
   234  001003  00                 	db	0
   235  001004  00                 	db	0	; dummy byte at the end
   236  0000                     
   237                           ; #config settings
   238                           
   239                           	psect	cinit
   240  002E36                     __pcinit:
   241                           	callstack 0
   242  002E36                     start_initialization:
   243                           	callstack 0
   244  002E36                     __initialization:
   245                           	callstack 0
   246                           
   247                           ; Initialize objects allocated to BANK0 (58 bytes)
   248                           ; load TBLPTR registers with __pidataBANK0
   249  002E36  0EC0               	movlw	low __pidataBANK0
   250  002E38  6EF6               	movwf	tblptrl,c
   251  002E3A  0E2F               	movlw	high __pidataBANK0
   252  002E3C  6EF7               	movwf	tblptrh,c
   253  002E3E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   254  002E40  6EF8               	movwf	tblptru,c
   255  002E42  EE00  F080         	lfsr	0,__pdataBANK0
   256  002E46  EE10 F03A          	lfsr	1,58
   257  002E4A                     copy_data0:
   258  002E4A  0009               	tblrd		*+
   259  002E4C  CFF5 FFEE          	movff	tablat,postinc0
   260  002E50  50E5               	movf	postdec1,w,c
   261  002E52  50E1               	movf	fsr1l,w,c
   262  002E54  E1FA               	bnz	copy_data0
   263                           
   264                           ; Initialize objects allocated to COMRAM (22 bytes)
   265                           ; load TBLPTR registers with __pidataCOMRAM
   266  002E56  0EFC               	movlw	low __pidataCOMRAM
   267  002E58  6EF6               	movwf	tblptrl,c
   268  002E5A  0E30               	movlw	high __pidataCOMRAM
   269  002E5C  6EF7               	movwf	tblptrh,c
   270  002E5E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   271  002E60  6EF8               	movwf	tblptru,c
   272  002E62  EE00  F052         	lfsr	0,__pdataCOMRAM
   273  002E66  EE10 F016          	lfsr	1,22
   274  002E6A                     copy_data1:
   275  002E6A  0009               	tblrd		*+
   276  002E6C  CFF5 FFEE          	movff	tablat,postinc0
   277  002E70  50E5               	movf	postdec1,w,c
   278  002E72  50E1               	movf	fsr1l,w,c
   279  002E74  E1FA               	bnz	copy_data1
   280                           
   281                           ; Clear objects allocated to BANK1 (188 bytes)
   282  002E76  EE01  F000         	lfsr	0,__pbssBANK1
   283  002E7A  0EBC               	movlw	188
   284  002E7C                     clear_0:
   285  002E7C  6AEE               	clrf	postinc0,c
   286  002E7E  06E8               	decf	wreg,f,c
   287  002E80  E1FD               	bnz	clear_0
   288                           
   289                           ; Clear objects allocated to BANK0 (42 bytes)
   290  002E82  EE00  F0BA         	lfsr	0,__pbssBANK0
   291  002E86  0E2A               	movlw	42
   292  002E88                     clear_1:
   293  002E88  6AEE               	clrf	postinc0,c
   294  002E8A  06E8               	decf	wreg,f,c
   295  002E8C  E1FD               	bnz	clear_1
   296                           
   297                           ; Clear objects allocated to COMRAM (22 bytes)
   298  002E8E  EE00  F03C         	lfsr	0,__pbssCOMRAM
   299  002E92  0E16               	movlw	22
   300  002E94                     clear_2:
   301  002E94  6AEE               	clrf	postinc0,c
   302  002E96  06E8               	decf	wreg,f,c
   303  002E98  E1FD               	bnz	clear_2
   304  002E9A                     end_of_initialization:
   305                           	callstack 0
   306  002E9A                     __end_of__initialization:
   307                           	callstack 0
   308  002E9A  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   309  002E9C  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   310  002E9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   311  002EA0  6EF8               	movwf	tblptru,c
   312  002EA2  0100               	movlb	0
   313  002EA4  EF70  F018         	goto	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMRAM
   316  00003C                     __pbssCOMRAM:
   317                           	callstack 0
   318  00003C                     _curFrisbeeSteps:
   319                           	callstack 0
   320  00003C                     	ds	2
   321  00003E                     _frisbeeSteps:
   322                           	callstack 0
   323  00003E                     	ds	2
   324  000040                     _pulseCounter:
   325                           	callstack 0
   326  000040                     	ds	2
   327  000042                     _currentSegment:
   328                           	callstack 0
   329  000042                     	ds	2
   330  000044                     _scoreB:
   331                           	callstack 0
   332  000044                     	ds	2
   333  000046                     _scoreA:
   334                           	callstack 0
   335  000046                     	ds	2
   336  000048                     _selectedPlayer:
   337                           	callstack 0
   338  000048                     	ds	2
   339  00004A                     _c:
   340                           	callstack 0
   341  00004A                     	ds	2
   342  00004C                     _b:
   343                           	callstack 0
   344  00004C                     	ds	2
   345  00004E                     _a:
   346                           	callstack 0
   347  00004E                     	ds	2
   348  000050                     _portbVals:
   349                           	callstack 0
   350  000050                     	ds	1
   351  000051                     _acceptInterrupts:
   352                           	callstack 0
   353  000051                     	ds	1
   354                           
   355                           	psect	dataCOMRAM
   356  000052                     __pdataCOMRAM:
   357                           	callstack 0
   358  000052                     _segValues:
   359                           	callstack 0
   360  000052                     	ds	11
   361  00005D                     _gameSpeed:
   362                           	callstack 0
   363  00005D                     	ds	2
   364  00005F                     _game_state:
   365                           	callstack 0
   366  00005F                     	ds	1
   367  000060                     _frisbee_target:
   368                           	callstack 0
   369  000060                     	ds	8
   370                           
   371                           	psect	bssBANK0
   372  0000BA                     __pbssBANK0:
   373                           	callstack 0
   374  0000BA                     _objs:
   375                           	callstack 0
   376  0000BA                     	ds	42
   377                           
   378                           	psect	dataBANK0
   379  000080                     __pdataBANK0:
   380                           	callstack 0
   381  000080                     _lcd_y:
   382                           	callstack 0
   383  000080                     	ds	1
   384  000081                     _lcd_x:
   385                           	callstack 0
   386  000081                     	ds	1
   387  000082                     _frisbeeChar:
   388                           	callstack 0
   389  000082                     	ds	8
   390  00008A                     _selected_teamB_player_with_frisbee:
   391                           	callstack 0
   392  00008A                     	ds	8
   393  000092                     _selected_teamA_player_with_frisbee:
   394                           	callstack 0
   395  000092                     	ds	8
   396  00009A                     _selected_teamB_player:
   397                           	callstack 0
   398  00009A                     	ds	8
   399  0000A2                     _selected_teamA_player:
   400                           	callstack 0
   401  0000A2                     	ds	8
   402  0000AA                     _teamB_player:
   403                           	callstack 0
   404  0000AA                     	ds	8
   405  0000B2                     _teamA_player:
   406                           	callstack 0
   407  0000B2                     	ds	8
   408                           
   409                           	psect	bssBANK1
   410  000100                     __pbssBANK1:
   411                           	callstack 0
   412  000100                     _display:
   413                           	callstack 0
   414  000100                     	ds	128
   415  000180                     _frisbee_steps:
   416                           	callstack 0
   417  000180                     	ds	60
   418                           
   419                           	psect	cstackBANK1
   420  0001BC                     __pcstackBANK1:
   421                           	callstack 0
   422  0001BC                     ??_InitGameObjects:
   423  0001BC                     ??_UpdateAndPrintDisplay:
   424                           
   425                           ; 1 bytes @ 0x0
   426  0001BC                     	ds	10
   427  0001C6                     UpdateAndPrintDisplay@i:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xA
   431  0001C6                     	ds	2
   432  0001C8                     UpdateAndPrintDisplay@j:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xC
   436  0001C8                     	ds	2
   437  0001CA                     UpdateAndPrintDisplay@i_828:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xE
   441  0001CA                     	ds	2
   442  0001CC                     UpdateAndPrintDisplay@i_829:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x10
   446  0001CC                     	ds	2
   447  0001CE                     UpdateAndPrintDisplay@i_830:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x12
   451  0001CE                     	ds	2
   452                           
   453                           	psect	cstackBANK0
   454  0000E4                     __pcstackBANK0:
   455                           	callstack 0
   456  0000E4                     ??_lowIsr:
   457                           
   458                           ; 1 bytes @ 0x0
   459  0000E4                     	ds	6
   460  0000EA                     lowIsr@temp_d:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x6
   464  0000EA                     	ds	1
   465  0000EB                     lowIsr@temp_a:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x7
   469  0000EB                     	ds	1
   470  0000EC                     ??_LCDCmd:
   471  0000EC                     ??_LCDDat:
   472  0000EC                     ?___wmul:
   473                           	callstack 0
   474  0000EC                     ___wmul@multiplier:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x8
   478  0000EC                     	ds	1
   479  0000ED                     LCDCmd@cmd:
   480                           	callstack 0
   481  0000ED                     LCDDat@dat:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x9
   485  0000ED                     	ds	1
   486  0000EE                     LCDGoto@p_1:
   487                           	callstack 0
   488  0000EE                     ___wmul@multiplicand:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xA
   492  0000EE                     	ds	1
   493  0000EF                     LCDGoto@p_2:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xB
   497  0000EF                     	ds	1
   498  0000F0                     LCDAddSpecialCharacter@data:
   499                           	callstack 0
   500  0000F0                     ___wmul@product:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xC
   504  0000F0                     	ds	2
   505  0000F2                     LCDAddSpecialCharacter@character_index:
   506                           	callstack 0
   507  0000F2                     InitGameObjects@i:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xE
   511  0000F2                     	ds	1
   512  0000F3                     LCDAddSpecialCharacter@i:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0xF
   516  0000F3                     	ds	1
   517  0000F4                     InitGameObjects@j:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x10
   521  0000F4                     	ds	2
   522  0000F6                     InitGameObjects@i_841:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x12
   526  0000F6                     	ds	2
   527  0000F8                     
   528                           ; 1 bytes @ 0x14
   529                           
   530                           	psect	cstackCOMRAM
   531  000001                     __pcstackCOMRAM:
   532                           	callstack 0
   533  000001                     ?___lwmod:
   534                           	callstack 0
   535  000001                     ?i2___wmul:
   536                           	callstack 0
   537  000001                     CatchFrisbee@pl:
   538                           	callstack 0
   539  000001                     ___lwmod@dividend:
   540                           	callstack 0
   541  000001                     i2___wmul@multiplier:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x0
   545  000001                     	ds	2
   546  000003                     ??_CatchFrisbee:
   547  000003                     ___lwmod@divisor:
   548                           	callstack 0
   549  000003                     i2___wmul@multiplicand:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2
   553  000003                     	ds	2
   554  000005                     ___lwmod@counter:
   555                           	callstack 0
   556  000005                     i2___wmul@product:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x4
   560  000005                     	ds	1
   561  000006                     ?_random_generator:
   562                           	callstack 0
   563  000006                     random_generator@modulo:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x5
   567  000006                     	ds	1
   568  000007                     
   569                           ; 1 bytes @ 0x6
   570  000007                     	ds	1
   571  000008                     ??_random_generator:
   572  000008                     CheckIfCaughtFrisbee@i:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x7
   576  000008                     	ds	2
   577  00000A                     random_generator@i:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x9
   581  00000A                     	ds	1
   582  00000B                     left@pl:
   583                           	callstack 0
   584  00000B                     right@pl:
   585                           	callstack 0
   586  00000B                     up@pl:
   587                           	callstack 0
   588  00000B                     down@pl:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0xA
   592  00000B                     	ds	1
   593  00000C                     random_generator@temp:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0xB
   597  00000C                     	ds	1
   598  00000D                     ??_up:
   599  00000D                     ??_right:
   600  00000D                     ??_down:
   601  00000D                     ??_left:
   602  00000D                     random_generator@res:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0xC
   606  00000D                     	ds	1
   607  00000E                     ?_compute_frisbee_target_and_route:
   608                           	callstack 0
   609  00000E                     compute_frisbee_target_and_route@current_fisbee_x_position:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0xD
   613  00000E                     	ds	2
   614  000010                     compute_frisbee_target_and_route@current_fisbee_y_position:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0xF
   618  000010                     	ds	2
   619  000012                     ??_compute_frisbee_target_and_route:
   620                           
   621                           ; 1 bytes @ 0x11
   622  000012                     	ds	2
   623  000014                     compute_frisbee_target_and_route@i:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x13
   627  000014                     	ds	2
   628  000016                     compute_frisbee_target_and_route@i_686:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x15
   632  000016                     	ds	2
   633  000018                     compute_frisbee_target_and_route@i_687:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x17
   637  000018                     	ds	2
   638  00001A                     compute_frisbee_target_and_route@i_689:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x19
   642  00001A                     	ds	2
   643  00001C                     compute_frisbee_target_and_route@i_690:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x1B
   647  00001C                     	ds	2
   648  00001E                     compute_frisbee_target_and_route@i_691:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x1D
   652  00001E                     	ds	2
   653  000020                     compute_frisbee_target_and_route@number_of_steps:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x1F
   657  000020                     	ds	2
   658  000022                     compute_frisbee_target_and_route@target_x:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x21
   662  000022                     	ds	2
   663  000024                     compute_frisbee_target_and_route@target_y:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x23
   667  000024                     	ds	2
   668  000026                     compute_frisbee_target_and_route@x:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x25
   672  000026                     	ds	2
   673  000028                     compute_frisbee_target_and_route@y:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x27
   677  000028                     	ds	2
   678  00002A                     compute_frisbee_target_and_route@x_step_size:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x29
   682  00002A                     	ds	2
   683  00002C                     compute_frisbee_target_and_route@y_step_size:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x2B
   687  00002C                     	ds	2
   688  00002E                     ??_highIsr:
   689                           
   690                           ; 1 bytes @ 0x2D
   691  00002E                     	ds	14
   692                           
   693 ;;
   694 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   695 ;;
   696 ;; *************** function _main *****************
   697 ;; Defined at:
   698 ;;		line 207 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels required when called:    9
   718 ;; This function calls:
   719 ;;		_AddCustomCharacters
   720 ;;		_InitGameObjects
   721 ;;		_InitInterrupts
   722 ;;		_InitLCD
   723 ;;		_UpdateAndPrintDisplay
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text0
   730  0030E0                     __ptext0:
   731                           	callstack 0
   732  0030E0                     _main:
   733                           	callstack 22
   734  0030E0                     
   735                           ;main.c: 209:     InitInterrupts();
   736  0030E0  EC59  F016         	call	_InitInterrupts	;wreg free
   737                           
   738                           ;main.c: 210:     InitLCD();
   739  0030E4  EC17  F018         	call	_InitLCD	;wreg free
   740  0030E8                     
   741                           ;main.c: 211:     InitGameObjects();
   742  0030E8  EC5D  F014         	call	_InitGameObjects	;wreg free
   743  0030EC                     
   744                           ;main.c: 213:     AddCustomCharacters();
   745  0030EC  EC9E  F016         	call	_AddCustomCharacters	;wreg free
   746  0030F0                     l3312:
   747                           
   748                           ;main.c: 218:         UpdateAndPrintDisplay();
   749  0030F0  EC03  F008         	call	_UpdateAndPrintDisplay	;wreg free
   750  0030F4  EF78  F018         	goto	l3312
   751  0030F8  EF61  F000         	goto	start
   752  0030FC                     __end_of_main:
   753                           	callstack 0
   754                           
   755 ;; *************** function _UpdateAndPrintDisplay *****************
   756 ;; Defined at:
   757 ;;		line 222 in file "main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  j               2   12[BANK1 ] int 
   762 ;;  i               2   18[BANK1 ] int 
   763 ;;  i               2   16[BANK1 ] int 
   764 ;;  i               2   14[BANK1 ] int 
   765 ;;  i               2   10[BANK1 ] int 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;Total ram usage:       20 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    7
   782 ;; This function calls:
   783 ;;		_LCDDat
   784 ;;		_LCDGoto
   785 ;;		___wmul
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text1
   792  001006                     __ptext1:
   793                           	callstack 0
   794  001006                     _UpdateAndPrintDisplay:
   795                           	callstack 23
   796  001006                     
   797                           ;main.c: 223:     for (int i = 0; i < 4; i++) {
   798  001006  0E00               	movlw	0
   799  001008  0101               	movlb	1	; () banked
   800  00100A  6FC7               	movwf	(UpdateAndPrintDisplay@i+1)& (0+255),b
   801  00100C  0E00               	movlw	0
   802  00100E  6FC6               	movwf	UpdateAndPrintDisplay@i& (0+255),b
   803  001010                     l3150:
   804                           
   805                           ; BSR set to: 1
   806                           ;main.c: 224:         for (int j = 0; j < 16; j++) {
   807  001010  0E00               	movlw	0
   808  001012  6FC9               	movwf	(UpdateAndPrintDisplay@j+1)& (0+255),b
   809  001014  0E00               	movlw	0
   810  001016  6FC8               	movwf	UpdateAndPrintDisplay@j& (0+255),b
   811  001018                     l3156:
   812                           
   813                           ; BSR set to: 1
   814                           ;main.c: 225:             display[i][j] = ((void*)0);
   815  001018  C1C6  F1BC         	movff	UpdateAndPrintDisplay@i,??_UpdateAndPrintDisplay
   816  00101C  C1C7  F1BD         	movff	UpdateAndPrintDisplay@i+1,??_UpdateAndPrintDisplay+1
   817  001020  0E05               	movlw	5
   818  001022                     u2985:
   819  001022  90D8               	bcf	status,0,c
   820  001024  37BC               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
   821  001026  37BD               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   822  001028  2EE8               	decfsz	wreg,f,c
   823  00102A  EF11  F008         	goto	u2985
   824  00102E  0E00               	movlw	low _display
   825  001030  6FBE               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   826  001032  0E01               	movlw	high _display
   827  001034  6FBF               	movwf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   828  001036  51BC               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
   829  001038  27BE               	addwf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   830  00103A  51BD               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
   831  00103C  23BF               	addwfc	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   832  00103E  90D8               	bcf	status,0,c
   833  001040  35C8               	rlcf	UpdateAndPrintDisplay@j& (0+255),w,b
   834  001042  6ED9               	movwf	fsr2l,c
   835  001044  35C9               	rlcf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   836  001046  6EDA               	movwf	fsr2h,c
   837  001048  51BE               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
   838  00104A  26D9               	addwf	fsr2l,f,c
   839  00104C  51BF               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
   840  00104E  22DA               	addwfc	fsr2h,f,c
   841  001050  0E00               	movlw	0
   842  001052  6EDE               	movwf	postinc2,c
   843  001054  0E00               	movlw	0
   844  001056  6EDD               	movwf	postdec2,c
   845  001058                     
   846                           ; BSR set to: 1
   847                           ;main.c: 226:         }
   848  001058  4BC8               	infsnz	UpdateAndPrintDisplay@j& (0+255),f,b
   849  00105A  2BC9               	incf	(UpdateAndPrintDisplay@j+1)& (0+255),f,b
   850  00105C                     
   851                           ; BSR set to: 1
   852  00105C  BFC9               	btfsc	(UpdateAndPrintDisplay@j+1)& (0+255),7,b
   853  00105E  EF3A  F008         	goto	u2991
   854  001062  51C9               	movf	(UpdateAndPrintDisplay@j+1)& (0+255),w,b
   855  001064  E109               	bnz	u2990
   856  001066  0E10               	movlw	16
   857  001068  5DC8               	subwf	UpdateAndPrintDisplay@j& (0+255),w,b
   858  00106A  A0D8               	btfss	status,0,c
   859  00106C  EF3A  F008         	goto	u2991
   860  001070  EF3C  F008         	goto	u2990
   861  001074                     u2991:
   862  001074  EF0C  F008         	goto	l3156
   863  001078                     u2990:
   864  001078                     
   865                           ; BSR set to: 1
   866                           ;main.c: 227:     }
   867  001078  4BC6               	infsnz	UpdateAndPrintDisplay@i& (0+255),f,b
   868  00107A  2BC7               	incf	(UpdateAndPrintDisplay@i+1)& (0+255),f,b
   869  00107C                     
   870                           ; BSR set to: 1
   871  00107C  BFC7               	btfsc	(UpdateAndPrintDisplay@i+1)& (0+255),7,b
   872  00107E  EF4A  F008         	goto	u3001
   873  001082  51C7               	movf	(UpdateAndPrintDisplay@i+1)& (0+255),w,b
   874  001084  E109               	bnz	u3000
   875  001086  0E04               	movlw	4
   876  001088  5DC6               	subwf	UpdateAndPrintDisplay@i& (0+255),w,b
   877  00108A  A0D8               	btfss	status,0,c
   878  00108C  EF4A  F008         	goto	u3001
   879  001090  EF4C  F008         	goto	u3000
   880  001094                     u3001:
   881  001094  EF08  F008         	goto	l3150
   882  001098                     u3000:
   883  001098                     
   884                           ; BSR set to: 1
   885                           ;main.c: 228:     for (int i = 6 -1; i >= 0; i--) {
   886  001098  0E00               	movlw	0
   887  00109A  6FCB               	movwf	(UpdateAndPrintDisplay@i_828+1)& (0+255),b
   888  00109C  0E05               	movlw	5
   889  00109E  6FCA               	movwf	UpdateAndPrintDisplay@i_828& (0+255),b
   890  0010A0                     l3172:
   891                           
   892                           ; BSR set to: 1
   893                           ;main.c: 229:         if (objs[i].active) {
   894  0010A0  C1CA  F0EC         	movff	UpdateAndPrintDisplay@i_828,___wmul@multiplier
   895  0010A4  C1CB  F0ED         	movff	UpdateAndPrintDisplay@i_828+1,___wmul@multiplier+1
   896  0010A8  0E00               	movlw	0
   897  0010AA  0100               	movlb	0	; () banked
   898  0010AC  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
   899  0010AE  0E07               	movlw	7
   900  0010B0  6FEE               	movwf	___wmul@multiplicand& (0+255),b
   901  0010B2  EC49  F018         	call	___wmul	;wreg free
   902  0010B6  0EBE               	movlw	low (_objs+4)
   903  0010B8  0100               	movlb	0	; () banked
   904  0010BA  25EC               	addwf	?___wmul& (0+255),w,b
   905  0010BC  6ED9               	movwf	fsr2l,c
   906  0010BE  0E00               	movlw	high (_objs+4)
   907  0010C0  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
   908  0010C2  6EDA               	movwf	fsr2h,c
   909  0010C4  50DF               	movf	indf2,w,c
   910  0010C6  B4D8               	btfsc	status,2,c
   911  0010C8  EF68  F008         	goto	u3011
   912  0010CC  EF6A  F008         	goto	u3010
   913  0010D0                     u3011:
   914  0010D0  EFD1  F008         	goto	l3176
   915  0010D4                     u3010:
   916  0010D4                     
   917                           ; BSR set to: 0
   918                           ;main.c: 230:             display[objs[i].y-1][objs[i].x-1] = &objs[i];
   919  0010D4  C1CA  F0EC         	movff	UpdateAndPrintDisplay@i_828,___wmul@multiplier
   920  0010D8  C1CB  F0ED         	movff	UpdateAndPrintDisplay@i_828+1,___wmul@multiplier+1
   921  0010DC  0E00               	movlw	0
   922  0010DE  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
   923  0010E0  0E07               	movlw	7
   924  0010E2  6FEE               	movwf	___wmul@multiplicand& (0+255),b
   925  0010E4  EC49  F018         	call	___wmul	;wreg free
   926  0010E8  0EBA               	movlw	low _objs
   927  0010EA  0101               	movlb	1	; () banked
   928  0010EC  6FBC               	movwf	??_UpdateAndPrintDisplay& (0+255),b
   929  0010EE  0E00               	movlw	high _objs
   930  0010F0  6FBD               	movwf	(??_UpdateAndPrintDisplay+1)& (0+255),b
   931  0010F2  0100               	movlb	0	; () banked
   932  0010F4  51EC               	movf	?___wmul& (0+255),w,b
   933  0010F6  0101               	movlb	1	; () banked
   934  0010F8  27BC               	addwf	??_UpdateAndPrintDisplay& (0+255),f,b
   935  0010FA  0100               	movlb	0	; () banked
   936  0010FC  51ED               	movf	(?___wmul+1)& (0+255),w,b
   937  0010FE  0101               	movlb	1	; () banked
   938  001100  23BD               	addwfc	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
   939  001102  C1CA  F0EC         	movff	UpdateAndPrintDisplay@i_828,___wmul@multiplier
   940  001106  C1CB  F0ED         	movff	UpdateAndPrintDisplay@i_828+1,___wmul@multiplier+1
   941  00110A  0E00               	movlw	0
   942  00110C  0100               	movlb	0	; () banked
   943  00110E  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
   944  001110  0E07               	movlw	7
   945  001112  6FEE               	movwf	___wmul@multiplicand& (0+255),b
   946  001114  EC49  F018         	call	___wmul	;wreg free
   947  001118  0EBB               	movlw	low (_objs+1)
   948  00111A  0100               	movlb	0	; () banked
   949  00111C  25EC               	addwf	?___wmul& (0+255),w,b
   950  00111E  6ED9               	movwf	fsr2l,c
   951  001120  0E00               	movlw	high (_objs+1)
   952  001122  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
   953  001124  6EDA               	movwf	fsr2h,c
   954  001126  50DF               	movf	indf2,w,c
   955  001128  0101               	movlb	1	; () banked
   956  00112A  6FBE               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
   957  00112C  6BBF               	clrf	(??_UpdateAndPrintDisplay+3)& (0+255),b
   958  00112E  0E05               	movlw	5
   959  001130                     u3025:
   960  001130  90D8               	bcf	status,0,c
   961  001132  37BE               	rlcf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
   962  001134  37BF               	rlcf	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
   963  001136  2EE8               	decfsz	wreg,f,c
   964  001138  EF98  F008         	goto	u3025
   965  00113C  C1CA  F0EC         	movff	UpdateAndPrintDisplay@i_828,___wmul@multiplier
   966  001140  C1CB  F0ED         	movff	UpdateAndPrintDisplay@i_828+1,___wmul@multiplier+1
   967  001144  0E00               	movlw	0
   968  001146  0100               	movlb	0	; () banked
   969  001148  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
   970  00114A  0E07               	movlw	7
   971  00114C  6FEE               	movwf	___wmul@multiplicand& (0+255),b
   972  00114E  EC49  F018         	call	___wmul	;wreg free
   973  001152  0EBA               	movlw	low _objs
   974  001154  0100               	movlb	0	; () banked
   975  001156  25EC               	addwf	?___wmul& (0+255),w,b
   976  001158  6ED9               	movwf	fsr2l,c
   977  00115A  0E00               	movlw	high _objs
   978  00115C  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
   979  00115E  6EDA               	movwf	fsr2h,c
   980  001160  50DF               	movf	indf2,w,c
   981  001162  0101               	movlb	1	; () banked
   982  001164  6FC0               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
   983  001166  6BC1               	clrf	(??_UpdateAndPrintDisplay+5)& (0+255),b
   984  001168  90D8               	bcf	status,0,c
   985  00116A  37C0               	rlcf	(??_UpdateAndPrintDisplay+4)& (0+255),f,b
   986  00116C  37C1               	rlcf	(??_UpdateAndPrintDisplay+5)& (0+255),f,b
   987  00116E  0EDE               	movlw	222
   988  001170  6FC2               	movwf	(??_UpdateAndPrintDisplay+6)& (0+255),b
   989  001172  0EFF               	movlw	255
   990  001174  6FC3               	movwf	(??_UpdateAndPrintDisplay+7)& (0+255),b
   991  001176  0E00               	movlw	low _display
   992  001178  6FC4               	movwf	(??_UpdateAndPrintDisplay+8)& (0+255),b
   993  00117A  0E01               	movlw	high _display
   994  00117C  6FC5               	movwf	(??_UpdateAndPrintDisplay+9)& (0+255),b
   995  00117E  51C2               	movf	(??_UpdateAndPrintDisplay+6)& (0+255),w,b
   996  001180  27C4               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
   997  001182  51C3               	movf	(??_UpdateAndPrintDisplay+7)& (0+255),w,b
   998  001184  23C5               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
   999  001186  51C0               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1000  001188  27C4               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),f,b
  1001  00118A  51C1               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1002  00118C  23C5               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),f,b
  1003  00118E  51BE               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1004  001190  25C4               	addwf	(??_UpdateAndPrintDisplay+8)& (0+255),w,b
  1005  001192  6ED9               	movwf	fsr2l,c
  1006  001194  51BF               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1007  001196  21C5               	addwfc	(??_UpdateAndPrintDisplay+9)& (0+255),w,b
  1008  001198  6EDA               	movwf	fsr2h,c
  1009  00119A  C1BC  FFDE         	movff	??_UpdateAndPrintDisplay,postinc2
  1010  00119E  C1BD  FFDD         	movff	??_UpdateAndPrintDisplay+1,postdec2
  1011  0011A2                     l3176:
  1012                           
  1013                           ;main.c: 232:     }
  1014  0011A2  0101               	movlb	1	; () banked
  1015  0011A4  07CA               	decf	UpdateAndPrintDisplay@i_828& (0+255),f,b
  1016  0011A6  A0D8               	btfss	status,0,c
  1017  0011A8  07CB               	decf	(UpdateAndPrintDisplay@i_828+1)& (0+255),f,b
  1018  0011AA                     
  1019                           ; BSR set to: 1
  1020  0011AA  BFCB               	btfsc	(UpdateAndPrintDisplay@i_828+1)& (0+255),7,b
  1021  0011AC  EFDC  F008         	goto	u3030
  1022  0011B0  EFDA  F008         	goto	u3031
  1023  0011B4                     u3031:
  1024  0011B4  EF50  F008         	goto	l3172
  1025  0011B8                     u3030:
  1026  0011B8                     
  1027                           ; BSR set to: 1
  1028                           ;main.c: 234:     for (int i = 0; i < 6; i++) {
  1029  0011B8  0E00               	movlw	0
  1030  0011BA  6FCD               	movwf	(UpdateAndPrintDisplay@i_829+1)& (0+255),b
  1031  0011BC  0E00               	movlw	0
  1032  0011BE  6FCC               	movwf	UpdateAndPrintDisplay@i_829& (0+255),b
  1033  0011C0                     l3186:
  1034                           
  1035                           ; BSR set to: 1
  1036                           ;main.c: 237:         if ((objs[i].oldX == 0 && objs[i].oldY == 0) || display[objs[i].ol
      +                          dY-1][objs[i].oldX-1] != ((void*)0)) {
  1037  0011C0  C1CC  F0EC         	movff	UpdateAndPrintDisplay@i_829,___wmul@multiplier
  1038  0011C4  C1CD  F0ED         	movff	UpdateAndPrintDisplay@i_829+1,___wmul@multiplier+1
  1039  0011C8  0E00               	movlw	0
  1040  0011CA  0100               	movlb	0	; () banked
  1041  0011CC  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1042  0011CE  0E07               	movlw	7
  1043  0011D0  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1044  0011D2  EC49  F018         	call	___wmul	;wreg free
  1045  0011D6  0EBC               	movlw	low (_objs+2)
  1046  0011D8  0100               	movlb	0	; () banked
  1047  0011DA  25EC               	addwf	?___wmul& (0+255),w,b
  1048  0011DC  6ED9               	movwf	fsr2l,c
  1049  0011DE  0E00               	movlw	high (_objs+2)
  1050  0011E0  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1051  0011E2  6EDA               	movwf	fsr2h,c
  1052  0011E4  50DF               	movf	indf2,w,c
  1053  0011E6  A4D8               	btfss	status,2,c
  1054  0011E8  EFF8  F008         	goto	u3041
  1055  0011EC  EFFA  F008         	goto	u3040
  1056  0011F0                     u3041:
  1057  0011F0  EF13  F009         	goto	l3190
  1058  0011F4                     u3040:
  1059  0011F4                     
  1060                           ; BSR set to: 0
  1061  0011F4  C1CC  F0EC         	movff	UpdateAndPrintDisplay@i_829,___wmul@multiplier
  1062  0011F8  C1CD  F0ED         	movff	UpdateAndPrintDisplay@i_829+1,___wmul@multiplier+1
  1063  0011FC  0E00               	movlw	0
  1064  0011FE  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1065  001200  0E07               	movlw	7
  1066  001202  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1067  001204  EC49  F018         	call	___wmul	;wreg free
  1068  001208  0EBD               	movlw	low (_objs+3)
  1069  00120A  0100               	movlb	0	; () banked
  1070  00120C  25EC               	addwf	?___wmul& (0+255),w,b
  1071  00120E  6ED9               	movwf	fsr2l,c
  1072  001210  0E00               	movlw	high (_objs+3)
  1073  001212  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1074  001214  6EDA               	movwf	fsr2h,c
  1075  001216  50DF               	movf	indf2,w,c
  1076  001218  B4D8               	btfsc	status,2,c
  1077  00121A  EF11  F009         	goto	u3051
  1078  00121E  EF13  F009         	goto	u3050
  1079  001222                     u3051:
  1080  001222  EF98  F009         	goto	l3198
  1081  001226                     u3050:
  1082  001226                     l3190:
  1083                           
  1084                           ; BSR set to: 0
  1085  001226  C1CC  F0EC         	movff	UpdateAndPrintDisplay@i_829,___wmul@multiplier
  1086  00122A  C1CD  F0ED         	movff	UpdateAndPrintDisplay@i_829+1,___wmul@multiplier+1
  1087  00122E  0E00               	movlw	0
  1088  001230  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1089  001232  0E07               	movlw	7
  1090  001234  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1091  001236  EC49  F018         	call	___wmul	;wreg free
  1092  00123A  0EBD               	movlw	low (_objs+3)
  1093  00123C  0100               	movlb	0	; () banked
  1094  00123E  25EC               	addwf	?___wmul& (0+255),w,b
  1095  001240  6ED9               	movwf	fsr2l,c
  1096  001242  0E00               	movlw	high (_objs+3)
  1097  001244  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1098  001246  6EDA               	movwf	fsr2h,c
  1099  001248  50DF               	movf	indf2,w,c
  1100  00124A  0101               	movlb	1	; () banked
  1101  00124C  6FBC               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1102  00124E  6BBD               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1103  001250  0E05               	movlw	5
  1104  001252                     u3065:
  1105  001252  90D8               	bcf	status,0,c
  1106  001254  37BC               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1107  001256  37BD               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1108  001258  2EE8               	decfsz	wreg,f,c
  1109  00125A  EF29  F009         	goto	u3065
  1110  00125E  C1CC  F0EC         	movff	UpdateAndPrintDisplay@i_829,___wmul@multiplier
  1111  001262  C1CD  F0ED         	movff	UpdateAndPrintDisplay@i_829+1,___wmul@multiplier+1
  1112  001266  0E00               	movlw	0
  1113  001268  0100               	movlb	0	; () banked
  1114  00126A  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1115  00126C  0E07               	movlw	7
  1116  00126E  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1117  001270  EC49  F018         	call	___wmul	;wreg free
  1118  001274  0EBC               	movlw	low (_objs+2)
  1119  001276  0100               	movlb	0	; () banked
  1120  001278  25EC               	addwf	?___wmul& (0+255),w,b
  1121  00127A  6ED9               	movwf	fsr2l,c
  1122  00127C  0E00               	movlw	high (_objs+2)
  1123  00127E  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1124  001280  6EDA               	movwf	fsr2h,c
  1125  001282  50DF               	movf	indf2,w,c
  1126  001284  0101               	movlb	1	; () banked
  1127  001286  6FBE               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1128  001288  6BBF               	clrf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1129  00128A  90D8               	bcf	status,0,c
  1130  00128C  37BE               	rlcf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1131  00128E  37BF               	rlcf	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1132  001290  0EDE               	movlw	222
  1133  001292  6FC0               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1134  001294  0EFF               	movlw	255
  1135  001296  6FC1               	movwf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1136  001298  0E00               	movlw	low _display
  1137  00129A  6FC2               	movwf	(??_UpdateAndPrintDisplay+6)& (0+255),b
  1138  00129C  0E01               	movlw	high _display
  1139  00129E  6FC3               	movwf	(??_UpdateAndPrintDisplay+7)& (0+255),b
  1140  0012A0  51C0               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1141  0012A2  27C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),f,b
  1142  0012A4  51C1               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1143  0012A6  23C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),f,b
  1144  0012A8  51BE               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1145  0012AA  27C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),f,b
  1146  0012AC  51BF               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1147  0012AE  23C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),f,b
  1148  0012B0  51BC               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1149  0012B2  25C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),w,b
  1150  0012B4  6ED9               	movwf	fsr2l,c
  1151  0012B6  51BD               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1152  0012B8  21C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),w,b
  1153  0012BA  6EDA               	movwf	fsr2h,c
  1154  0012BC  50DE               	movf	postinc2,w,c
  1155  0012BE  10DE               	iorwf	postinc2,w,c
  1156  0012C0  B4D8               	btfsc	status,2,c
  1157  0012C2  EF65  F009         	goto	u3071
  1158  0012C6  EF67  F009         	goto	u3070
  1159  0012CA                     u3071:
  1160  0012CA  EF69  F009         	goto	l3192
  1161  0012CE                     u3070:
  1162  0012CE  EF98  F009         	goto	l3198
  1163  0012D2                     l3192:
  1164                           
  1165                           ; BSR set to: 1
  1166                           ;main.c: 240:         lcd_x = objs[i].oldX;
  1167  0012D2  C1CC  F0EC         	movff	UpdateAndPrintDisplay@i_829,___wmul@multiplier
  1168  0012D6  C1CD  F0ED         	movff	UpdateAndPrintDisplay@i_829+1,___wmul@multiplier+1
  1169  0012DA  0E00               	movlw	0
  1170  0012DC  0100               	movlb	0	; () banked
  1171  0012DE  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1172  0012E0  0E07               	movlw	7
  1173  0012E2  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1174  0012E4  EC49  F018         	call	___wmul	;wreg free
  1175  0012E8  0EBC               	movlw	low (_objs+2)
  1176  0012EA  0100               	movlb	0	; () banked
  1177  0012EC  25EC               	addwf	?___wmul& (0+255),w,b
  1178  0012EE  6ED9               	movwf	fsr2l,c
  1179  0012F0  0E00               	movlw	high (_objs+2)
  1180  0012F2  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1181  0012F4  6EDA               	movwf	fsr2h,c
  1182  0012F6  50DF               	movf	indf2,w,c
  1183  0012F8  6F81               	movwf	_lcd_x& (0+255),b
  1184                           
  1185                           ;main.c: 241:         lcd_y = objs[i].oldY;
  1186  0012FA  C1CC  F0EC         	movff	UpdateAndPrintDisplay@i_829,___wmul@multiplier
  1187  0012FE  C1CD  F0ED         	movff	UpdateAndPrintDisplay@i_829+1,___wmul@multiplier+1
  1188  001302  0E00               	movlw	0
  1189  001304  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1190  001306  0E07               	movlw	7
  1191  001308  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1192  00130A  EC49  F018         	call	___wmul	;wreg free
  1193  00130E  0EBD               	movlw	low (_objs+3)
  1194  001310  0100               	movlb	0	; () banked
  1195  001312  25EC               	addwf	?___wmul& (0+255),w,b
  1196  001314  6ED9               	movwf	fsr2l,c
  1197  001316  0E00               	movlw	high (_objs+3)
  1198  001318  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1199  00131A  6EDA               	movwf	fsr2h,c
  1200  00131C  50DF               	movf	indf2,w,c
  1201  00131E  6F80               	movwf	_lcd_y& (0+255),b
  1202  001320                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 242:         LCDGoto(lcd_x, lcd_y);
  1205  001320  C080  F0EE         	movff	_lcd_y,LCDGoto@p_1
  1206  001324  5181               	movf	_lcd_x& (0+255),w,b
  1207  001326  ECDF  F016         	call	_LCDGoto
  1208  00132A                     
  1209                           ;main.c: 243:         LCDDat(' ');
  1210  00132A  0E20               	movlw	32
  1211  00132C  ECFD  F017         	call	_LCDDat
  1212  001330                     l3198:
  1213  001330  0101               	movlb	1	; () banked
  1214  001332  4BCC               	infsnz	UpdateAndPrintDisplay@i_829& (0+255),f,b
  1215  001334  2BCD               	incf	(UpdateAndPrintDisplay@i_829+1)& (0+255),f,b
  1216  001336                     
  1217                           ; BSR set to: 1
  1218  001336  BFCD               	btfsc	(UpdateAndPrintDisplay@i_829+1)& (0+255),7,b
  1219  001338  EFA7  F009         	goto	u3081
  1220  00133C  51CD               	movf	(UpdateAndPrintDisplay@i_829+1)& (0+255),w,b
  1221  00133E  E109               	bnz	u3080
  1222  001340  0E06               	movlw	6
  1223  001342  5DCC               	subwf	UpdateAndPrintDisplay@i_829& (0+255),w,b
  1224  001344  A0D8               	btfss	status,0,c
  1225  001346  EFA7  F009         	goto	u3081
  1226  00134A  EFA9  F009         	goto	u3080
  1227  00134E                     u3081:
  1228  00134E  EFE0  F008         	goto	l3186
  1229  001352                     u3080:
  1230  001352                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 246:     for (int i = 0; i < 6; i++) {
  1233  001352  0E00               	movlw	0
  1234  001354  6FCF               	movwf	(UpdateAndPrintDisplay@i_830+1)& (0+255),b
  1235  001356  0E00               	movlw	0
  1236  001358  6FCE               	movwf	UpdateAndPrintDisplay@i_830& (0+255),b
  1237  00135A                     l3208:
  1238                           
  1239                           ; BSR set to: 1
  1240                           ;main.c: 247:         lcd_x = objs[i].x;
  1241  00135A  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1242  00135E  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1243  001362  0E00               	movlw	0
  1244  001364  0100               	movlb	0	; () banked
  1245  001366  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1246  001368  0E07               	movlw	7
  1247  00136A  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1248  00136C  EC49  F018         	call	___wmul	;wreg free
  1249  001370  0EBA               	movlw	low _objs
  1250  001372  0100               	movlb	0	; () banked
  1251  001374  25EC               	addwf	?___wmul& (0+255),w,b
  1252  001376  6ED9               	movwf	fsr2l,c
  1253  001378  0E00               	movlw	high _objs
  1254  00137A  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1255  00137C  6EDA               	movwf	fsr2h,c
  1256  00137E  50DF               	movf	indf2,w,c
  1257  001380  6F81               	movwf	_lcd_x& (0+255),b
  1258                           
  1259                           ;main.c: 248:         lcd_y = objs[i].y;
  1260  001382  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1261  001386  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1262  00138A  0E00               	movlw	0
  1263  00138C  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1264  00138E  0E07               	movlw	7
  1265  001390  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1266  001392  EC49  F018         	call	___wmul	;wreg free
  1267  001396  0EBB               	movlw	low (_objs+1)
  1268  001398  0100               	movlb	0	; () banked
  1269  00139A  25EC               	addwf	?___wmul& (0+255),w,b
  1270  00139C  6ED9               	movwf	fsr2l,c
  1271  00139E  0E00               	movlw	high (_objs+1)
  1272  0013A0  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1273  0013A2  6EDA               	movwf	fsr2h,c
  1274  0013A4  50DF               	movf	indf2,w,c
  1275  0013A6  6F80               	movwf	_lcd_y& (0+255),b
  1276                           
  1277                           ;main.c: 249:         if (objs[i].type == OT_TARGET || objs[i].type == OT_FRISBEE) {
  1278  0013A8  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1279  0013AC  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1280  0013B0  0E00               	movlw	0
  1281  0013B2  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1282  0013B4  0E07               	movlw	7
  1283  0013B6  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1284  0013B8  EC49  F018         	call	___wmul	;wreg free
  1285  0013BC  0EBF               	movlw	low (_objs+5)
  1286  0013BE  0100               	movlb	0	; () banked
  1287  0013C0  25EC               	addwf	?___wmul& (0+255),w,b
  1288  0013C2  6ED9               	movwf	fsr2l,c
  1289  0013C4  0E00               	movlw	high (_objs+5)
  1290  0013C6  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1291  0013C8  6EDA               	movwf	fsr2h,c
  1292  0013CA  0E03               	movlw	3
  1293  0013CC  18DE               	xorwf	postinc2,w,c
  1294  0013CE  B4D8               	btfsc	status,2,c
  1295  0013D0  EFEC  F009         	goto	u3091
  1296  0013D4  EFEE  F009         	goto	u3090
  1297  0013D8                     u3091:
  1298  0013D8  EF08  F00A         	goto	l3212
  1299  0013DC                     u3090:
  1300  0013DC                     
  1301                           ; BSR set to: 0
  1302  0013DC  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1303  0013E0  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1304  0013E4  0E00               	movlw	0
  1305  0013E6  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1306  0013E8  0E07               	movlw	7
  1307  0013EA  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1308  0013EC  EC49  F018         	call	___wmul	;wreg free
  1309  0013F0  0EBF               	movlw	low (_objs+5)
  1310  0013F2  0100               	movlb	0	; () banked
  1311  0013F4  25EC               	addwf	?___wmul& (0+255),w,b
  1312  0013F6  6ED9               	movwf	fsr2l,c
  1313  0013F8  0E00               	movlw	high (_objs+5)
  1314  0013FA  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1315  0013FC  6EDA               	movwf	fsr2h,c
  1316  0013FE  0E02               	movlw	2
  1317  001400  18DE               	xorwf	postinc2,w,c
  1318  001402  A4D8               	btfss	status,2,c
  1319  001404  EF06  F00A         	goto	u3101
  1320  001408  EF08  F00A         	goto	u3100
  1321  00140C                     u3101:
  1322  00140C  EF7B  F00A         	goto	l3220
  1323  001410                     u3100:
  1324  001410                     l3212:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;main.c: 250:             if (display[lcd_y-1][lcd_x-1]->type == OT_PLAYERA) continue;
  1328  001410  5180               	movf	_lcd_y& (0+255),w,b
  1329  001412  0101               	movlb	1	; () banked
  1330  001414  6FBC               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1331  001416  6BBD               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1332  001418  0E05               	movlw	5
  1333  00141A                     u3115:
  1334  00141A  90D8               	bcf	status,0,c
  1335  00141C  37BC               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1336  00141E  37BD               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1337  001420  2EE8               	decfsz	wreg,f,c
  1338  001422  EF0D  F00A         	goto	u3115
  1339  001426  0100               	movlb	0	; () banked
  1340  001428  5181               	movf	_lcd_x& (0+255),w,b
  1341  00142A  0101               	movlb	1	; () banked
  1342  00142C  6FBE               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1343  00142E  6BBF               	clrf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1344  001430  90D8               	bcf	status,0,c
  1345  001432  37BE               	rlcf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1346  001434  37BF               	rlcf	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1347  001436  0EDE               	movlw	222
  1348  001438  6FC0               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1349  00143A  0EFF               	movlw	255
  1350  00143C  6FC1               	movwf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1351  00143E  0E00               	movlw	low _display
  1352  001440  6FC2               	movwf	(??_UpdateAndPrintDisplay+6)& (0+255),b
  1353  001442  0E01               	movlw	high _display
  1354  001444  6FC3               	movwf	(??_UpdateAndPrintDisplay+7)& (0+255),b
  1355  001446  51C0               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1356  001448  27C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),f,b
  1357  00144A  51C1               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1358  00144C  23C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),f,b
  1359  00144E  51BE               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1360  001450  27C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),f,b
  1361  001452  51BF               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1362  001454  23C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),f,b
  1363  001456  51BC               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1364  001458  25C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),w,b
  1365  00145A  6ED9               	movwf	fsr2l,c
  1366  00145C  51BD               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1367  00145E  21C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),w,b
  1368  001460  6EDA               	movwf	fsr2h,c
  1369  001462  EE10 F005          	lfsr	1,5
  1370  001466  50DE               	movf	postinc2,w,c
  1371  001468  26E1               	addwf	fsr1l,f,c
  1372  00146A  50DD               	movf	postdec2,w,c
  1373  00146C  22E2               	addwfc	fsr1h,f,c
  1374  00146E  50E7               	movf	indf1,w,c
  1375  001470  A4D8               	btfss	status,2,c
  1376  001472  EF3D  F00A         	goto	u3121
  1377  001476  EF3F  F00A         	goto	u3120
  1378  00147A                     u3121:
  1379  00147A  EF41  F00A         	goto	l3216
  1380  00147E                     u3120:
  1381  00147E  EF61  F00B         	goto	l3258
  1382  001482                     l3216:
  1383                           
  1384                           ; BSR set to: 1
  1385                           ;main.c: 251:             if (display[lcd_y-1][lcd_x-1]->type == OT_PLAYERB) continue;
  1386  001482  0100               	movlb	0	; () banked
  1387  001484  5180               	movf	_lcd_y& (0+255),w,b
  1388  001486  0101               	movlb	1	; () banked
  1389  001488  6FBC               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1390  00148A  6BBD               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1391  00148C  0E05               	movlw	5
  1392  00148E                     u3135:
  1393  00148E  90D8               	bcf	status,0,c
  1394  001490  37BC               	rlcf	??_UpdateAndPrintDisplay& (0+255),f,b
  1395  001492  37BD               	rlcf	(??_UpdateAndPrintDisplay+1)& (0+255),f,b
  1396  001494  2EE8               	decfsz	wreg,f,c
  1397  001496  EF47  F00A         	goto	u3135
  1398  00149A  0100               	movlb	0	; () banked
  1399  00149C  5181               	movf	_lcd_x& (0+255),w,b
  1400  00149E  0101               	movlb	1	; () banked
  1401  0014A0  6FBE               	movwf	(??_UpdateAndPrintDisplay+2)& (0+255),b
  1402  0014A2  6BBF               	clrf	(??_UpdateAndPrintDisplay+3)& (0+255),b
  1403  0014A4  90D8               	bcf	status,0,c
  1404  0014A6  37BE               	rlcf	(??_UpdateAndPrintDisplay+2)& (0+255),f,b
  1405  0014A8  37BF               	rlcf	(??_UpdateAndPrintDisplay+3)& (0+255),f,b
  1406  0014AA  0EDE               	movlw	222
  1407  0014AC  6FC0               	movwf	(??_UpdateAndPrintDisplay+4)& (0+255),b
  1408  0014AE  0EFF               	movlw	255
  1409  0014B0  6FC1               	movwf	(??_UpdateAndPrintDisplay+5)& (0+255),b
  1410  0014B2  0E00               	movlw	low _display
  1411  0014B4  6FC2               	movwf	(??_UpdateAndPrintDisplay+6)& (0+255),b
  1412  0014B6  0E01               	movlw	high _display
  1413  0014B8  6FC3               	movwf	(??_UpdateAndPrintDisplay+7)& (0+255),b
  1414  0014BA  51C0               	movf	(??_UpdateAndPrintDisplay+4)& (0+255),w,b
  1415  0014BC  27C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),f,b
  1416  0014BE  51C1               	movf	(??_UpdateAndPrintDisplay+5)& (0+255),w,b
  1417  0014C0  23C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),f,b
  1418  0014C2  51BE               	movf	(??_UpdateAndPrintDisplay+2)& (0+255),w,b
  1419  0014C4  27C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),f,b
  1420  0014C6  51BF               	movf	(??_UpdateAndPrintDisplay+3)& (0+255),w,b
  1421  0014C8  23C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),f,b
  1422  0014CA  51BC               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1423  0014CC  25C2               	addwf	(??_UpdateAndPrintDisplay+6)& (0+255),w,b
  1424  0014CE  6ED9               	movwf	fsr2l,c
  1425  0014D0  51BD               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1426  0014D2  21C3               	addwfc	(??_UpdateAndPrintDisplay+7)& (0+255),w,b
  1427  0014D4  6EDA               	movwf	fsr2h,c
  1428  0014D6  EE10 F005          	lfsr	1,5
  1429  0014DA  50DE               	movf	postinc2,w,c
  1430  0014DC  26E1               	addwf	fsr1l,f,c
  1431  0014DE  50DD               	movf	postdec2,w,c
  1432  0014E0  22E2               	addwfc	fsr1h,f,c
  1433  0014E2  04E6               	decf	postinc1,w,c
  1434  0014E4  A4D8               	btfss	status,2,c
  1435  0014E6  EF77  F00A         	goto	u3141
  1436  0014EA  EF79  F00A         	goto	u3140
  1437  0014EE                     u3141:
  1438  0014EE  EF7B  F00A         	goto	l3220
  1439  0014F2                     u3140:
  1440  0014F2  EF61  F00B         	goto	l3258
  1441  0014F6                     l3220:
  1442                           
  1443                           ;main.c: 254:         if (lcd_x == 0 || lcd_y == 0) {
  1444  0014F6  0100               	movlb	0	; () banked
  1445  0014F8  5181               	movf	_lcd_x& (0+255),w,b
  1446  0014FA  B4D8               	btfsc	status,2,c
  1447  0014FC  EF82  F00A         	goto	u3151
  1448  001500  EF84  F00A         	goto	u3150
  1449  001504                     u3151:
  1450  001504  EF61  F00B         	goto	l3258
  1451  001508                     u3150:
  1452  001508                     
  1453                           ; BSR set to: 0
  1454  001508  5180               	movf	_lcd_y& (0+255),w,b
  1455  00150A  A4D8               	btfss	status,2,c
  1456  00150C  EF8A  F00A         	goto	u3161
  1457  001510  EF8C  F00A         	goto	u3160
  1458  001514                     u3161:
  1459  001514  EF8E  F00A         	goto	l3224
  1460  001518                     u3160:
  1461  001518  EF61  F00B         	goto	l3258
  1462  00151C                     l3224:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;main.c: 257:         LCDGoto(lcd_x, lcd_y);
  1466  00151C  C080  F0EE         	movff	_lcd_y,LCDGoto@p_1
  1467  001520  5181               	movf	_lcd_x& (0+255),w,b
  1468  001522  ECDF  F016         	call	_LCDGoto
  1469  001526                     
  1470                           ;main.c: 259:         if (objs[i].active == 0) {
  1471  001526  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1472  00152A  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1473  00152E  0E00               	movlw	0
  1474  001530  0100               	movlb	0	; () banked
  1475  001532  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1476  001534  0E07               	movlw	7
  1477  001536  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1478  001538  EC49  F018         	call	___wmul	;wreg free
  1479  00153C  0EBE               	movlw	low (_objs+4)
  1480  00153E  0100               	movlb	0	; () banked
  1481  001540  25EC               	addwf	?___wmul& (0+255),w,b
  1482  001542  6ED9               	movwf	fsr2l,c
  1483  001544  0E00               	movlw	high (_objs+4)
  1484  001546  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1485  001548  6EDA               	movwf	fsr2h,c
  1486  00154A  50DF               	movf	indf2,w,c
  1487  00154C  A4D8               	btfss	status,2,c
  1488  00154E  EFAB  F00A         	goto	u3171
  1489  001552  EFAD  F00A         	goto	u3170
  1490  001556                     u3171:
  1491  001556  EF32  F00B         	goto	l3256
  1492  00155A                     u3170:
  1493  00155A                     
  1494                           ; BSR set to: 0
  1495                           ;main.c: 260:             LCDDat(' ');
  1496  00155A  0E20               	movlw	32
  1497  00155C  ECFD  F017         	call	_LCDDat
  1498                           
  1499                           ;main.c: 261:             continue;
  1500  001560  EF61  F00B         	goto	l3258
  1501  001564                     l3230:
  1502                           
  1503                           ; BSR set to: 1
  1504                           ;main.c: 266:                 LCDDat(6);
  1505  001564  0E06               	movlw	6
  1506  001566  ECFD  F017         	call	_LCDDat
  1507                           
  1508                           ;main.c: 267:                 break;
  1509  00156A  EF61  F00B         	goto	l3258
  1510  00156E                     l3232:
  1511                           
  1512                           ; BSR set to: 1
  1513                           ;main.c: 269:                 LCDDat(7);
  1514  00156E  0E07               	movlw	7
  1515  001570  ECFD  F017         	call	_LCDDat
  1516                           
  1517                           ;main.c: 270:                 break;
  1518  001574  EF61  F00B         	goto	l3258
  1519  001578                     l3234:
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;main.c: 274:                         LCDDat(0);
  1523  001578  0E00               	movlw	0
  1524  00157A  ECFD  F017         	call	_LCDDat
  1525                           
  1526                           ;main.c: 275:                         break;
  1527  00157E  EF61  F00B         	goto	l3258
  1528  001582                     l3236:
  1529                           
  1530                           ; BSR set to: 1
  1531                           ;main.c: 277:                         LCDDat(2);
  1532  001582  0E02               	movlw	2
  1533  001584  ECFD  F017         	call	_LCDDat
  1534                           
  1535                           ;main.c: 278:                         break;
  1536  001588  EF61  F00B         	goto	l3258
  1537  00158C                     l3238:
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;main.c: 280:                         LCDDat(4);
  1541  00158C  0E04               	movlw	4
  1542  00158E  ECFD  F017         	call	_LCDDat
  1543                           
  1544                           ;main.c: 281:                         break;
  1545  001592  EF61  F00B         	goto	l3258
  1546  001596                     l3242:
  1547                           
  1548                           ; BSR set to: 1
  1549  001596  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1550  00159A  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1551  00159E  0E00               	movlw	0
  1552  0015A0  0100               	movlb	0	; () banked
  1553  0015A2  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1554  0015A4  0E07               	movlw	7
  1555  0015A6  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1556  0015A8  EC49  F018         	call	___wmul	;wreg free
  1557  0015AC  0EC0               	movlw	low (_objs+6)
  1558  0015AE  0100               	movlb	0	; () banked
  1559  0015B0  25EC               	addwf	?___wmul& (0+255),w,b
  1560  0015B2  6ED9               	movwf	fsr2l,c
  1561  0015B4  0E00               	movlw	high (_objs+6)
  1562  0015B6  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1563  0015B8  6EDA               	movwf	fsr2h,c
  1564  0015BA  50DF               	movf	indf2,w,c
  1565  0015BC  0101               	movlb	1	; () banked
  1566  0015BE  6FBC               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1567  0015C0  6BBD               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1568                           
  1569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1570                           ; Switch size 1, requested type "simple"
  1571                           ; Number of cases is 1, Range of values is 0 to 0
  1572                           ; switch strategies available:
  1573                           ; Name         Instructions Cycles
  1574                           ; simple_byte            4     3 (average)
  1575                           ;	Chosen strategy is simple_byte
  1576  0015C2  51BD               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1577  0015C4  0A00               	xorlw	0	; case 0
  1578  0015C6  B4D8               	btfsc	status,2,c
  1579  0015C8  EFE8  F00A         	goto	l3468
  1580  0015CC  EF61  F00B         	goto	l3258
  1581  0015D0                     l3468:
  1582                           
  1583                           ; BSR set to: 1
  1584                           ; Switch size 1, requested type "simple"
  1585                           ; Number of cases is 3, Range of values is 0 to 2
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte           10     6 (average)
  1589                           ;	Chosen strategy is simple_byte
  1590  0015D0  51BC               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1591  0015D2  0A00               	xorlw	0	; case 0
  1592  0015D4  B4D8               	btfsc	status,2,c
  1593  0015D6  EFBC  F00A         	goto	l3234
  1594  0015DA  0A01               	xorlw	1	; case 1
  1595  0015DC  B4D8               	btfsc	status,2,c
  1596  0015DE  EFC1  F00A         	goto	l3236
  1597  0015E2  0A03               	xorlw	3	; case 2
  1598  0015E4  B4D8               	btfsc	status,2,c
  1599  0015E6  EFC6  F00A         	goto	l3238
  1600  0015EA  EF61  F00B         	goto	l3258
  1601  0015EE                     l3244:
  1602                           
  1603                           ; BSR set to: 1
  1604                           ;main.c: 290:                         LCDDat(1);
  1605  0015EE  0E01               	movlw	1
  1606  0015F0  ECFD  F017         	call	_LCDDat
  1607                           
  1608                           ;main.c: 291:                         break;
  1609  0015F4  EF61  F00B         	goto	l3258
  1610  0015F8                     l3246:
  1611                           
  1612                           ; BSR set to: 1
  1613                           ;main.c: 293:                         LCDDat(3);
  1614  0015F8  0E03               	movlw	3
  1615  0015FA  ECFD  F017         	call	_LCDDat
  1616                           
  1617                           ;main.c: 294:                         break;
  1618  0015FE  EF61  F00B         	goto	l3258
  1619  001602                     l3248:
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 296:                         LCDDat(5);
  1623  001602  0E05               	movlw	5
  1624  001604  ECFD  F017         	call	_LCDDat
  1625                           
  1626                           ;main.c: 297:                         break;
  1627  001608  EF61  F00B         	goto	l3258
  1628  00160C                     l3252:
  1629                           
  1630                           ; BSR set to: 1
  1631  00160C  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1632  001610  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1633  001614  0E00               	movlw	0
  1634  001616  0100               	movlb	0	; () banked
  1635  001618  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1636  00161A  0E07               	movlw	7
  1637  00161C  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1638  00161E  EC49  F018         	call	___wmul	;wreg free
  1639  001622  0EC0               	movlw	low (_objs+6)
  1640  001624  0100               	movlb	0	; () banked
  1641  001626  25EC               	addwf	?___wmul& (0+255),w,b
  1642  001628  6ED9               	movwf	fsr2l,c
  1643  00162A  0E00               	movlw	high (_objs+6)
  1644  00162C  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1645  00162E  6EDA               	movwf	fsr2h,c
  1646  001630  50DF               	movf	indf2,w,c
  1647  001632  0101               	movlb	1	; () banked
  1648  001634  6FBC               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1649  001636  6BBD               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1650                           
  1651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1652                           ; Switch size 1, requested type "simple"
  1653                           ; Number of cases is 1, Range of values is 0 to 0
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte            4     3 (average)
  1657                           ;	Chosen strategy is simple_byte
  1658  001638  51BD               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1659  00163A  0A00               	xorlw	0	; case 0
  1660  00163C  B4D8               	btfsc	status,2,c
  1661  00163E  EF23  F00B         	goto	l3470
  1662  001642  EF61  F00B         	goto	l3258
  1663  001646                     l3470:
  1664                           
  1665                           ; BSR set to: 1
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 3, Range of values is 0 to 2
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte           10     6 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672  001646  51BC               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1673  001648  0A00               	xorlw	0	; case 0
  1674  00164A  B4D8               	btfsc	status,2,c
  1675  00164C  EFF7  F00A         	goto	l3244
  1676  001650  0A01               	xorlw	1	; case 1
  1677  001652  B4D8               	btfsc	status,2,c
  1678  001654  EFFC  F00A         	goto	l3246
  1679  001658  0A03               	xorlw	3	; case 2
  1680  00165A  B4D8               	btfsc	status,2,c
  1681  00165C  EF01  F00B         	goto	l3248
  1682  001660  EF61  F00B         	goto	l3258
  1683  001664                     l3256:
  1684                           
  1685                           ; BSR set to: 0
  1686  001664  C1CE  F0EC         	movff	UpdateAndPrintDisplay@i_830,___wmul@multiplier
  1687  001668  C1CF  F0ED         	movff	UpdateAndPrintDisplay@i_830+1,___wmul@multiplier+1
  1688  00166C  0E00               	movlw	0
  1689  00166E  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1690  001670  0E07               	movlw	7
  1691  001672  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  1692  001674  EC49  F018         	call	___wmul	;wreg free
  1693  001678  0EBF               	movlw	low (_objs+5)
  1694  00167A  0100               	movlb	0	; () banked
  1695  00167C  25EC               	addwf	?___wmul& (0+255),w,b
  1696  00167E  6ED9               	movwf	fsr2l,c
  1697  001680  0E00               	movlw	high (_objs+5)
  1698  001682  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  1699  001684  6EDA               	movwf	fsr2h,c
  1700  001686  50DF               	movf	indf2,w,c
  1701  001688  0101               	movlb	1	; () banked
  1702  00168A  6FBC               	movwf	??_UpdateAndPrintDisplay& (0+255),b
  1703  00168C  6BBD               	clrf	(??_UpdateAndPrintDisplay+1)& (0+255),b
  1704                           
  1705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 1, Range of values is 0 to 0
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte            4     3 (average)
  1711                           ;	Chosen strategy is simple_byte
  1712  00168E  51BD               	movf	(??_UpdateAndPrintDisplay+1)& (0+255),w,b
  1713  001690  0A00               	xorlw	0	; case 0
  1714  001692  B4D8               	btfsc	status,2,c
  1715  001694  EF4E  F00B         	goto	l3472
  1716  001698  EF61  F00B         	goto	l3258
  1717  00169C                     l3472:
  1718                           
  1719                           ; BSR set to: 1
  1720                           ; Switch size 1, requested type "simple"
  1721                           ; Number of cases is 4, Range of values is 0 to 3
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte           13     7 (average)
  1725                           ;	Chosen strategy is simple_byte
  1726  00169C  51BC               	movf	??_UpdateAndPrintDisplay& (0+255),w,b
  1727  00169E  0A00               	xorlw	0	; case 0
  1728  0016A0  B4D8               	btfsc	status,2,c
  1729  0016A2  EFCB  F00A         	goto	l3242
  1730  0016A6  0A01               	xorlw	1	; case 1
  1731  0016A8  B4D8               	btfsc	status,2,c
  1732  0016AA  EF06  F00B         	goto	l3252
  1733  0016AE  0A03               	xorlw	3	; case 2
  1734  0016B0  B4D8               	btfsc	status,2,c
  1735  0016B2  EFB2  F00A         	goto	l3230
  1736  0016B6  0A01               	xorlw	1	; case 3
  1737  0016B8  B4D8               	btfsc	status,2,c
  1738  0016BA  EFB7  F00A         	goto	l3232
  1739  0016BE  EF61  F00B         	goto	l3258
  1740  0016C2                     l3258:
  1741  0016C2  0101               	movlb	1	; () banked
  1742  0016C4  4BCE               	infsnz	UpdateAndPrintDisplay@i_830& (0+255),f,b
  1743  0016C6  2BCF               	incf	(UpdateAndPrintDisplay@i_830+1)& (0+255),f,b
  1744  0016C8                     
  1745                           ; BSR set to: 1
  1746  0016C8  BFCF               	btfsc	(UpdateAndPrintDisplay@i_830+1)& (0+255),7,b
  1747  0016CA  EF70  F00B         	goto	u3181
  1748  0016CE  51CF               	movf	(UpdateAndPrintDisplay@i_830+1)& (0+255),w,b
  1749  0016D0  E109               	bnz	u3180
  1750  0016D2  0E06               	movlw	6
  1751  0016D4  5DCE               	subwf	UpdateAndPrintDisplay@i_830& (0+255),w,b
  1752  0016D6  A0D8               	btfss	status,0,c
  1753  0016D8  EF70  F00B         	goto	u3181
  1754  0016DC  EF72  F00B         	goto	u3180
  1755  0016E0                     u3181:
  1756  0016E0  EFAD  F009         	goto	l3208
  1757  0016E4                     u3180:
  1758  0016E4                     
  1759                           ; BSR set to: 1
  1760  0016E4  0012               	return		;funcret
  1761  0016E6                     __end_of_UpdateAndPrintDisplay:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function _InitLCD *****************
  1765 ;; Defined at:
  1766 ;;		line 124 in file "./lcd.h"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    6
  1787 ;; This function calls:
  1788 ;;		_LCDCmd
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text2
  1795  00302E                     __ptext2:
  1796                           	callstack 0
  1797  00302E                     _InitLCD:
  1798                           	callstack 24
  1799  00302E                     
  1800                           ;./lcd.h: 125:   TRISEbits.RE1 = 0;
  1801  00302E  9296               	bcf	150,1,c	;volatile
  1802                           
  1803                           ;./lcd.h: 126:   TRISEbits.RE2 = 0;
  1804  003030  9496               	bcf	150,2,c	;volatile
  1805  003032                     
  1806                           ;./lcd.h: 127:   TRISD = 0;
  1807  003032  0E00               	movlw	0
  1808  003034  6E95               	movwf	149,c	;volatile
  1809  003036                     
  1810                           ;./lcd.h: 129:   PORTEbits.RE1 = 0;
  1811  003036  9284               	bcf	132,1,c	;volatile
  1812  003038                     
  1813                           ;./lcd.h: 130:   PORTEbits.RE2 = 0;
  1814  003038  9484               	bcf	132,2,c	;volatile
  1815  00303A                     
  1816                           ;./lcd.h: 131:   LCDCmd(0x38);
  1817  00303A  0E38               	movlw	56
  1818  00303C  EC30  F018         	call	_LCDCmd
  1819  003040                     
  1820                           ;./lcd.h: 132:   LCDCmd(0x08);
  1821  003040  0E08               	movlw	8
  1822  003042  EC30  F018         	call	_LCDCmd
  1823  003046                     
  1824                           ;./lcd.h: 133:   LCDCmd(0x0C);
  1825  003046  0E0C               	movlw	12
  1826  003048  EC30  F018         	call	_LCDCmd
  1827  00304C                     
  1828                           ;./lcd.h: 134:   LCDCmd(0x06);
  1829  00304C  0E06               	movlw	6
  1830  00304E  EC30  F018         	call	_LCDCmd
  1831  003052                     
  1832                           ;./lcd.h: 135:   LCDCmd(0x01);
  1833  003052  0E01               	movlw	1
  1834  003054  EC30  F018         	call	_LCDCmd
  1835  003058                     
  1836                           ;./lcd.h: 136:   LCDCmd(0x80);
  1837  003058  0E80               	movlw	128
  1838  00305A  EC30  F018         	call	_LCDCmd
  1839  00305E  0012               	return		;funcret
  1840  003060                     __end_of_InitLCD:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _InitInterrupts *****************
  1844 ;; Defined at:
  1845 ;;		line 400 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    5
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text3
  1874  002CB2                     __ptext3:
  1875                           	callstack 0
  1876  002CB2                     _InitInterrupts:
  1877                           	callstack 25
  1878  002CB2                     
  1879                           ;main.c: 401:     a = b = c = 0;
  1880  002CB2  0E00               	movlw	0
  1881  002CB4  6E4B               	movwf	(_c+1)^0,c
  1882  002CB6  0E00               	movlw	0
  1883  002CB8  6E4A               	movwf	_c^0,c
  1884  002CBA  C04A  F04C         	movff	_c,_b
  1885  002CBE  C04B  F04D         	movff	_c+1,_b+1
  1886  002CC2  C04C  F04E         	movff	_b,_a
  1887  002CC6  C04D  F04F         	movff	_b+1,_a+1
  1888                           
  1889                           ;main.c: 403:     ADCON1 = 0b0111;
  1890  002CCA  0E07               	movlw	7
  1891  002CCC  6EC1               	movwf	193,c	;volatile
  1892  002CCE                     
  1893                           ;main.c: 404:     INTCON2bits.RBPU = 0;
  1894  002CCE  9EF1               	bcf	241,7,c	;volatile
  1895                           
  1896                           ;main.c: 405:     PORTB = 0;
  1897  002CD0  0E00               	movlw	0
  1898  002CD2  6E81               	movwf	129,c	;volatile
  1899                           
  1900                           ;main.c: 407:     T3CON = 0b10000001;
  1901  002CD4  0E81               	movlw	129
  1902  002CD6  6EB1               	movwf	177,c	;volatile
  1903  002CD8                     
  1904                           ;main.c: 408:     TRISB = 0xff;
  1905  002CD8  6893               	setf	147,c	;volatile
  1906                           
  1907                           ;main.c: 409:     TRISA = 0x0;
  1908  002CDA  0E00               	movlw	0
  1909  002CDC  6E92               	movwf	146,c	;volatile
  1910                           
  1911                           ;main.c: 410:     TRISD = 0x0;
  1912  002CDE  0E00               	movlw	0
  1913  002CE0  6E95               	movwf	149,c	;volatile
  1914                           
  1915                           ;main.c: 412:     T0CON = 0b00010011;
  1916  002CE2  0E13               	movlw	19
  1917  002CE4  6ED5               	movwf	213,c	;volatile
  1918                           
  1919                           ;main.c: 413:     acceptInterrupts = 0;
  1920  002CE6  0E00               	movlw	0
  1921  002CE8  6E51               	movwf	_acceptInterrupts^0,c
  1922                           
  1923                           ;main.c: 414:     TMR0L = 0;
  1924  002CEA  0E00               	movlw	0
  1925  002CEC  6ED6               	movwf	214,c	;volatile
  1926                           
  1927                           ;main.c: 415:     TMR0H = 0x80;
  1928  002CEE  0E80               	movlw	128
  1929  002CF0  6ED7               	movwf	215,c	;volatile
  1930  002CF2                     
  1931                           ;main.c: 416:     T0CONbits.TMR0ON = 1;
  1932  002CF2  8ED5               	bsf	213,7,c	;volatile
  1933  002CF4                     
  1934                           ;main.c: 418:     INTCONbits.PEIE = 1;
  1935  002CF4  8CF2               	bsf	242,6,c	;volatile
  1936  002CF6                     
  1937                           ;main.c: 419:     INTCONbits.INT0E = 1;
  1938  002CF6  88F2               	bsf	242,4,c	;volatile
  1939  002CF8                     
  1940                           ;main.c: 420:     INTCONbits.RBIE = 1;
  1941  002CF8  86F2               	bsf	242,3,c	;volatile
  1942  002CFA                     
  1943                           ;main.c: 421:     INTCONbits.T0IE = 1;
  1944  002CFA  8AF2               	bsf	242,5,c	;volatile
  1945  002CFC                     
  1946                           ;main.c: 422:     INTCON3bits.INT1E = 1;
  1947  002CFC  86F0               	bsf	240,3,c	;volatile
  1948  002CFE                     
  1949                           ;main.c: 424:     INTCON2bits.INTEDG0 = 0;
  1950  002CFE  9CF1               	bcf	241,6,c	;volatile
  1951  002D00                     
  1952                           ;main.c: 425:     INTCON2bits.INTEDG1 = 0;
  1953  002D00  9AF1               	bcf	241,5,c	;volatile
  1954  002D02                     
  1955                           ;main.c: 428:     INTCONbits.RBIF = 0;
  1956  002D02  90F2               	bcf	242,0,c	;volatile
  1957  002D04                     
  1958                           ;main.c: 429:     INTCONbits.INT0IF = 0;
  1959  002D04  92F2               	bcf	242,1,c	;volatile
  1960  002D06                     
  1961                           ;main.c: 430:     INTCON3bits.INT1IF = 0;
  1962  002D06  90F0               	bcf	240,0,c	;volatile
  1963  002D08                     
  1964                           ;main.c: 432:     INTCONbits.RBIE = 0;
  1965  002D08  96F2               	bcf	242,3,c	;volatile
  1966  002D0A                     
  1967                           ;main.c: 433:     INTCONbits.GIE = 1;
  1968  002D0A  8EF2               	bsf	242,7,c	;volatile
  1969  002D0C                     
  1970                           ;main.c: 434:     PORTB = PORTB;
  1971  002D0C  CF81 FF81          	movff	3969,3969	;volatile
  1972  002D10                     
  1973                           ;main.c: 435:     INTCONbits.RBIF = 0;
  1974  002D10  90F2               	bcf	242,0,c	;volatile
  1975  002D12                     
  1976                           ;main.c: 436:     INTCONbits.RBIE = 1;
  1977  002D12  86F2               	bsf	242,3,c	;volatile
  1978  002D14                     
  1979                           ;main.c: 439:     INTCON2bits.RBIP = 1;
  1980  002D14  80F1               	bsf	241,0,c	;volatile
  1981  002D16                     
  1982                           ;main.c: 440:     INTCON2bits.TMR0IP = 1;
  1983  002D16  84F1               	bsf	241,2,c	;volatile
  1984  002D18                     
  1985                           ;main.c: 441:     INTCON3bits.INT1IP = 1;
  1986  002D18  8CF0               	bsf	240,6,c	;volatile
  1987  002D1A                     
  1988                           ;main.c: 442:     IPR1bits.TMR1IP = 1;
  1989  002D1A  809F               	bsf	159,0,c	;volatile
  1990  002D1C                     
  1991                           ;main.c: 444:     PIE1bits.TMR1IE = 1;
  1992  002D1C  809D               	bsf	157,0,c	;volatile
  1993  002D1E                     
  1994                           ;main.c: 445:     PIR1bits.TMR1IF = 0;
  1995  002D1E  909E               	bcf	158,0,c	;volatile
  1996  002D20                     
  1997                           ;main.c: 446:     IPR1bits.TMR1IP = 1;
  1998  002D20  809F               	bsf	159,0,c	;volatile
  1999                           
  2000                           ;main.c: 447:     TMR1L = 0xED;
  2001  002D22  0EED               	movlw	237
  2002  002D24  6ECE               	movwf	206,c	;volatile
  2003                           
  2004                           ;main.c: 448:     TMR1H = 0x85;
  2005  002D26  0E85               	movlw	133
  2006  002D28  6ECF               	movwf	207,c	;volatile
  2007                           
  2008                           ;main.c: 449:     T1CON = 0b10110000;
  2009  002D2A  0EB0               	movlw	176
  2010  002D2C  6ECD               	movwf	205,c	;volatile
  2011  002D2E                     
  2012                           ;main.c: 451:     PIE1bits.TMR2IE = 1;
  2013  002D2E  829D               	bsf	157,1,c	;volatile
  2014  002D30                     
  2015                           ;main.c: 452:     PIR1bits.TMR2IF = 0;
  2016  002D30  929E               	bcf	158,1,c	;volatile
  2017  002D32                     
  2018                           ;main.c: 453:     IPR1bits.TMR2IP = 0;
  2019  002D32  929F               	bcf	159,1,c	;volatile
  2020  002D34                     
  2021                           ;main.c: 454:     RCONbits.IPEN = 1;
  2022  002D34  8ED0               	bsf	208,7,c	;volatile
  2023                           
  2024                           ;main.c: 455:     T2CON = 0b01111111;
  2025  002D36  0E7F               	movlw	127
  2026  002D38  6ECA               	movwf	202,c	;volatile
  2027  002D3A  0012               	return		;funcret
  2028  002D3C                     __end_of_InitInterrupts:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _InitGameObjects *****************
  2032 ;; Defined at:
  2033 ;;		line 310 in file "main.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  j               2   16[BANK0 ] int 
  2038 ;;  i               2   18[BANK0 ] int 
  2039 ;;  i               2   14[BANK0 ] int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Totals:         0       6      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;Total ram usage:       18 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    6
  2056 ;; This function calls:
  2057 ;;		___wmul
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text4
  2064  0028BA                     __ptext4:
  2065                           	callstack 0
  2066  0028BA                     _InitGameObjects:
  2067                           	callstack 24
  2068  0028BA                     
  2069                           ;main.c: 311:     for (int i = 0; i < 4; i++) {
  2070  0028BA  0E00               	movlw	0
  2071  0028BC  0100               	movlb	0	; () banked
  2072  0028BE  6FF3               	movwf	(InitGameObjects@i+1)& (0+255),b
  2073  0028C0  0E00               	movlw	0
  2074  0028C2  6FF2               	movwf	InitGameObjects@i& (0+255),b
  2075  0028C4                     l3116:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;main.c: 312:         for (int j = 0; j < 16; j++) {
  2079  0028C4  0E00               	movlw	0
  2080  0028C6  6FF5               	movwf	(InitGameObjects@j+1)& (0+255),b
  2081  0028C8  0E00               	movlw	0
  2082  0028CA  6FF4               	movwf	InitGameObjects@j& (0+255),b
  2083  0028CC                     l3122:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;main.c: 313:             display[i][j] = ((void*)0);
  2087  0028CC  C0F2  F1BC         	movff	InitGameObjects@i,??_InitGameObjects
  2088  0028D0  C0F3  F1BD         	movff	InitGameObjects@i+1,??_InitGameObjects+1
  2089  0028D4  0E05               	movlw	5
  2090  0028D6                     u2945:
  2091  0028D6  90D8               	bcf	status,0,c
  2092  0028D8  0101               	movlb	1	; () banked
  2093  0028DA  37BC               	rlcf	??_InitGameObjects& (0+255),f,b
  2094  0028DC  37BD               	rlcf	(??_InitGameObjects+1)& (0+255),f,b
  2095  0028DE  2EE8               	decfsz	wreg,f,c
  2096  0028E0  EF6B  F014         	goto	u2945
  2097  0028E4  0E00               	movlw	low _display
  2098  0028E6  6FBE               	movwf	(??_InitGameObjects+2)& (0+255),b
  2099  0028E8  0E01               	movlw	high _display
  2100  0028EA  6FBF               	movwf	(??_InitGameObjects+3)& (0+255),b
  2101  0028EC  51BC               	movf	??_InitGameObjects& (0+255),w,b
  2102  0028EE  27BE               	addwf	(??_InitGameObjects+2)& (0+255),f,b
  2103  0028F0  51BD               	movf	(??_InitGameObjects+1)& (0+255),w,b
  2104  0028F2  23BF               	addwfc	(??_InitGameObjects+3)& (0+255),f,b
  2105  0028F4  90D8               	bcf	status,0,c
  2106  0028F6  0100               	movlb	0	; () banked
  2107  0028F8  35F4               	rlcf	InitGameObjects@j& (0+255),w,b
  2108  0028FA  6ED9               	movwf	fsr2l,c
  2109  0028FC  35F5               	rlcf	(InitGameObjects@j+1)& (0+255),w,b
  2110  0028FE  6EDA               	movwf	fsr2h,c
  2111  002900  0101               	movlb	1	; () banked
  2112  002902  51BE               	movf	(??_InitGameObjects+2)& (0+255),w,b
  2113  002904  26D9               	addwf	fsr2l,f,c
  2114  002906  51BF               	movf	(??_InitGameObjects+3)& (0+255),w,b
  2115  002908  22DA               	addwfc	fsr2h,f,c
  2116  00290A  0E00               	movlw	0
  2117  00290C  6EDE               	movwf	postinc2,c
  2118  00290E  0E00               	movlw	0
  2119  002910  6EDD               	movwf	postdec2,c
  2120  002912                     
  2121                           ; BSR set to: 1
  2122                           ;main.c: 314:         }
  2123  002912  0100               	movlb	0	; () banked
  2124  002914  4BF4               	infsnz	InitGameObjects@j& (0+255),f,b
  2125  002916  2BF5               	incf	(InitGameObjects@j+1)& (0+255),f,b
  2126  002918                     
  2127                           ; BSR set to: 0
  2128  002918  BFF5               	btfsc	(InitGameObjects@j+1)& (0+255),7,b
  2129  00291A  EF98  F014         	goto	u2951
  2130  00291E  51F5               	movf	(InitGameObjects@j+1)& (0+255),w,b
  2131  002920  E109               	bnz	u2950
  2132  002922  0E10               	movlw	16
  2133  002924  5DF4               	subwf	InitGameObjects@j& (0+255),w,b
  2134  002926  A0D8               	btfss	status,0,c
  2135  002928  EF98  F014         	goto	u2951
  2136  00292C  EF9A  F014         	goto	u2950
  2137  002930                     u2951:
  2138  002930  EF66  F014         	goto	l3122
  2139  002934                     u2950:
  2140  002934                     
  2141                           ; BSR set to: 0
  2142                           ;main.c: 315:     }
  2143  002934  4BF2               	infsnz	InitGameObjects@i& (0+255),f,b
  2144  002936  2BF3               	incf	(InitGameObjects@i+1)& (0+255),f,b
  2145  002938                     
  2146                           ; BSR set to: 0
  2147  002938  BFF3               	btfsc	(InitGameObjects@i+1)& (0+255),7,b
  2148  00293A  EFA8  F014         	goto	u2961
  2149  00293E  51F3               	movf	(InitGameObjects@i+1)& (0+255),w,b
  2150  002940  E109               	bnz	u2960
  2151  002942  0E04               	movlw	4
  2152  002944  5DF2               	subwf	InitGameObjects@i& (0+255),w,b
  2153  002946  A0D8               	btfss	status,0,c
  2154  002948  EFA8  F014         	goto	u2961
  2155  00294C  EFAA  F014         	goto	u2960
  2156  002950                     u2961:
  2157  002950  EF62  F014         	goto	l3116
  2158  002954                     u2960:
  2159  002954                     
  2160                           ; BSR set to: 0
  2161                           ;main.c: 317:     selectedPlayer = 0;
  2162  002954  0E00               	movlw	0
  2163  002956  6E49               	movwf	(_selectedPlayer+1)^0,c
  2164  002958  0E00               	movlw	0
  2165  00295A  6E48               	movwf	_selectedPlayer^0,c
  2166                           
  2167                           ;main.c: 319:     objs[0].x = 3;
  2168  00295C  0E03               	movlw	3
  2169  00295E  6FBA               	movwf	_objs& (0+255),b
  2170                           
  2171                           ;main.c: 320:     objs[0].y = 2;
  2172  002960  0E02               	movlw	2
  2173  002962  6FBB               	movwf	(_objs+1)& (0+255),b
  2174                           
  2175                           ;main.c: 321:     objs[0].oldX = 0;
  2176  002964  0E00               	movlw	0
  2177  002966  6FBC               	movwf	(_objs+2)& (0+255),b
  2178                           
  2179                           ;main.c: 322:     objs[0].oldY = 0;
  2180  002968  0E00               	movlw	0
  2181  00296A  6FBD               	movwf	(_objs+3)& (0+255),b
  2182                           
  2183                           ;main.c: 323:     objs[0].type = OT_PLAYERA;
  2184  00296C  0E00               	movlw	0
  2185  00296E  6FBF               	movwf	(_objs+5)& (0+255),b
  2186                           
  2187                           ;main.c: 324:     objs[0].state = OS_SELECTED;
  2188  002970  0E01               	movlw	1
  2189  002972  6FC0               	movwf	(_objs+6)& (0+255),b
  2190                           
  2191                           ;main.c: 325:     objs[0].active = 1;
  2192  002974  0E01               	movlw	1
  2193  002976  6FBE               	movwf	(_objs+4)& (0+255),b
  2194                           
  2195                           ;main.c: 327:     objs[1].x = 3;
  2196  002978  0E03               	movlw	3
  2197  00297A  6FC1               	movwf	(_objs+7)& (0+255),b
  2198                           
  2199                           ;main.c: 328:     objs[1].y = 3;
  2200  00297C  0E03               	movlw	3
  2201  00297E  6FC2               	movwf	(_objs+8)& (0+255),b
  2202                           
  2203                           ;main.c: 329:     objs[1].oldX = 0;
  2204  002980  0E00               	movlw	0
  2205  002982  6FC3               	movwf	(_objs+9)& (0+255),b
  2206                           
  2207                           ;main.c: 330:     objs[1].oldY = 0;
  2208  002984  0E00               	movlw	0
  2209  002986  6FC4               	movwf	(_objs+10)& (0+255),b
  2210                           
  2211                           ;main.c: 331:     objs[1].type = OT_PLAYERA;
  2212  002988  0E00               	movlw	0
  2213  00298A  6FC6               	movwf	(_objs+12)& (0+255),b
  2214                           
  2215                           ;main.c: 332:     objs[1].state = OS_DEFAULT;
  2216  00298C  0E00               	movlw	0
  2217  00298E  6FC7               	movwf	(_objs+13)& (0+255),b
  2218                           
  2219                           ;main.c: 333:     objs[1].active = 1;
  2220  002990  0E01               	movlw	1
  2221  002992  6FC5               	movwf	(_objs+11)& (0+255),b
  2222                           
  2223                           ;main.c: 335:     objs[2].x = 14;
  2224  002994  0E0E               	movlw	14
  2225  002996  6FC8               	movwf	(_objs+14)& (0+255),b
  2226                           
  2227                           ;main.c: 336:     objs[2].y = 2;
  2228  002998  0E02               	movlw	2
  2229  00299A  6FC9               	movwf	(_objs+15)& (0+255),b
  2230                           
  2231                           ;main.c: 337:     objs[2].oldX = 0;
  2232  00299C  0E00               	movlw	0
  2233  00299E  6FCA               	movwf	(_objs+16)& (0+255),b
  2234                           
  2235                           ;main.c: 338:     objs[2].oldY = 0;
  2236  0029A0  0E00               	movlw	0
  2237  0029A2  6FCB               	movwf	(_objs+17)& (0+255),b
  2238                           
  2239                           ;main.c: 339:     objs[2].type = OT_PLAYERB;
  2240  0029A4  0E01               	movlw	1
  2241  0029A6  6FCD               	movwf	(_objs+19)& (0+255),b
  2242                           
  2243                           ;main.c: 340:     objs[2].state = OS_DEFAULT;
  2244  0029A8  0E00               	movlw	0
  2245  0029AA  6FCE               	movwf	(_objs+20)& (0+255),b
  2246                           
  2247                           ;main.c: 341:     objs[2].active = 1;
  2248  0029AC  0E01               	movlw	1
  2249  0029AE  6FCC               	movwf	(_objs+18)& (0+255),b
  2250                           
  2251                           ;main.c: 343:     objs[3].x = 14;
  2252  0029B0  0E0E               	movlw	14
  2253  0029B2  6FCF               	movwf	(_objs+21)& (0+255),b
  2254                           
  2255                           ;main.c: 344:     objs[3].y = 3;
  2256  0029B4  0E03               	movlw	3
  2257  0029B6  6FD0               	movwf	(_objs+22)& (0+255),b
  2258                           
  2259                           ;main.c: 345:     objs[3].oldX = 0;
  2260  0029B8  0E00               	movlw	0
  2261  0029BA  6FD1               	movwf	(_objs+23)& (0+255),b
  2262                           
  2263                           ;main.c: 346:     objs[3].oldY = 0;
  2264  0029BC  0E00               	movlw	0
  2265  0029BE  6FD2               	movwf	(_objs+24)& (0+255),b
  2266                           
  2267                           ;main.c: 347:     objs[3].type = OT_PLAYERB;
  2268  0029C0  0E01               	movlw	1
  2269  0029C2  6FD4               	movwf	(_objs+26)& (0+255),b
  2270                           
  2271                           ;main.c: 348:     objs[3].state = OS_DEFAULT;
  2272  0029C4  0E00               	movlw	0
  2273  0029C6  6FD5               	movwf	(_objs+27)& (0+255),b
  2274                           
  2275                           ;main.c: 349:     objs[3].active = 1;
  2276  0029C8  0E01               	movlw	1
  2277  0029CA  6FD3               	movwf	(_objs+25)& (0+255),b
  2278                           
  2279                           ;main.c: 351:     objs[5].x = 9;
  2280  0029CC  0E09               	movlw	9
  2281  0029CE  6FDD               	movwf	(_objs+35)& (0+255),b
  2282                           
  2283                           ;main.c: 352:     objs[5].y = 2;
  2284  0029D0  0E02               	movlw	2
  2285  0029D2  6FDE               	movwf	(_objs+36)& (0+255),b
  2286                           
  2287                           ;main.c: 353:     objs[5].oldX = 0;
  2288  0029D4  0E00               	movlw	0
  2289  0029D6  6FDF               	movwf	(_objs+37)& (0+255),b
  2290                           
  2291                           ;main.c: 354:     objs[5].oldY = 0;
  2292  0029D8  0E00               	movlw	0
  2293  0029DA  6FE0               	movwf	(_objs+38)& (0+255),b
  2294                           
  2295                           ;main.c: 355:     objs[5].type = OT_FRISBEE;
  2296  0029DC  0E02               	movlw	2
  2297  0029DE  6FE2               	movwf	(_objs+40)& (0+255),b
  2298                           
  2299                           ;main.c: 356:     objs[5].state = OS_FELL;
  2300  0029E0  0E04               	movlw	4
  2301  0029E2  6FE3               	movwf	(_objs+41)& (0+255),b
  2302                           
  2303                           ;main.c: 357:     objs[5].active = 1;
  2304  0029E4  0E01               	movlw	1
  2305  0029E6  6FE1               	movwf	(_objs+39)& (0+255),b
  2306                           
  2307                           ;main.c: 359:     objs[4].x = 1;
  2308  0029E8  0E01               	movlw	1
  2309  0029EA  6FD6               	movwf	(_objs+28)& (0+255),b
  2310                           
  2311                           ;main.c: 360:     objs[4].y = 1;
  2312  0029EC  0E01               	movlw	1
  2313  0029EE  6FD7               	movwf	(_objs+29)& (0+255),b
  2314                           
  2315                           ;main.c: 361:     objs[4].oldX = 0;
  2316  0029F0  0E00               	movlw	0
  2317  0029F2  6FD8               	movwf	(_objs+30)& (0+255),b
  2318                           
  2319                           ;main.c: 362:     objs[4].oldY = 0;
  2320  0029F4  0E00               	movlw	0
  2321  0029F6  6FD9               	movwf	(_objs+31)& (0+255),b
  2322                           
  2323                           ;main.c: 363:     objs[4].type = OT_TARGET;
  2324  0029F8  0E03               	movlw	3
  2325  0029FA  6FDB               	movwf	(_objs+33)& (0+255),b
  2326                           
  2327                           ;main.c: 364:     objs[4].active = 0;
  2328  0029FC  0E00               	movlw	0
  2329  0029FE  6FDA               	movwf	(_objs+32)& (0+255),b
  2330                           
  2331                           ;main.c: 366:     for (int i = 0; i < 6; i++) {
  2332  002A00  0E00               	movlw	0
  2333  002A02  6FF7               	movwf	(InitGameObjects@i_841+1)& (0+255),b
  2334  002A04  0E00               	movlw	0
  2335  002A06  6FF6               	movwf	InitGameObjects@i_841& (0+255),b
  2336  002A08                     l3138:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;main.c: 367:         display[objs[i].y][objs[i].x] = &objs[i];
  2340  002A08  C0F6  F0EC         	movff	InitGameObjects@i_841,___wmul@multiplier
  2341  002A0C  C0F7  F0ED         	movff	InitGameObjects@i_841+1,___wmul@multiplier+1
  2342  002A10  0E00               	movlw	0
  2343  002A12  6FEF               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2344  002A14  0E07               	movlw	7
  2345  002A16  6FEE               	movwf	___wmul@multiplicand& (0+255),b
  2346  002A18  EC49  F018         	call	___wmul	;wreg free
  2347  002A1C  0EBA               	movlw	low _objs
  2348  002A1E  0101               	movlb	1	; () banked
  2349  002A20  6FBC               	movwf	??_InitGameObjects& (0+255),b
  2350  002A22  0E00               	movlw	high _objs
  2351  002A24  6FBD               	movwf	(??_InitGameObjects+1)& (0+255),b
  2352  002A26  0100               	movlb	0	; () banked
  2353  002A28  51EC               	movf	?___wmul& (0+255),w,b
  2354  002A2A  0101               	movlb	1	; () banked
  2355  002A2C  27BC               	addwf	??_InitGameObjects& (0+255),f,b
  2356  002A2E  0100               	movlb	0	; () banked
  2357  002A30  51ED               	movf	(?___wmul+1)& (0+255),w,b
  2358  002A32  0101               	movlb	1	; () banked
  2359  002A34  23BD               	addwfc	(??_InitGameObjects+1)& (0+255),f,b
  2360  002A36  0E07               	movlw	7
  2361  002A38  0100               	movlb	0	; () banked
  2362  002A3A  03F6               	mulwf	InitGameObjects@i_841& (0+255),b
  2363  002A3C  CFF3 F1BE          	movff	prodl,??_InitGameObjects+2
  2364  002A40  CFF4 F1BF          	movff	prodh,??_InitGameObjects+3
  2365  002A44  03F7               	mulwf	(InitGameObjects@i_841+1)& (0+255),b
  2366  002A46  50F3               	movf	prodl,w,c
  2367  002A48  0101               	movlb	1	; () banked
  2368  002A4A  27BF               	addwf	(??_InitGameObjects+3)& (0+255),f,b
  2369  002A4C  0EBA               	movlw	low _objs
  2370  002A4E  25BE               	addwf	(??_InitGameObjects+2)& (0+255),w,b
  2371  002A50  6ED9               	movwf	fsr2l,c
  2372  002A52  0E00               	movlw	high _objs
  2373  002A54  21BF               	addwfc	(??_InitGameObjects+3)& (0+255),w,b
  2374  002A56  6EDA               	movwf	fsr2h,c
  2375  002A58  50DF               	movf	indf2,w,c
  2376  002A5A  6FC0               	movwf	(??_InitGameObjects+4)& (0+255),b
  2377  002A5C  51C0               	movf	(??_InitGameObjects+4)& (0+255),w,b
  2378  002A5E  0D02               	mullw	2
  2379  002A60  CFF3 F1C1          	movff	prodl,??_InitGameObjects+5
  2380  002A64  CFF4 F1C2          	movff	prodh,??_InitGameObjects+6
  2381  002A68  0E07               	movlw	7
  2382  002A6A  0100               	movlb	0	; () banked
  2383  002A6C  03F6               	mulwf	InitGameObjects@i_841& (0+255),b
  2384  002A6E  CFF3 F1C3          	movff	prodl,??_InitGameObjects+7
  2385  002A72  CFF4 F1C4          	movff	prodh,??_InitGameObjects+8
  2386  002A76  03F7               	mulwf	(InitGameObjects@i_841+1)& (0+255),b
  2387  002A78  50F3               	movf	prodl,w,c
  2388  002A7A  0101               	movlb	1	; () banked
  2389  002A7C  27C4               	addwf	(??_InitGameObjects+8)& (0+255),f,b
  2390  002A7E  0EBB               	movlw	low (_objs+1)
  2391  002A80  25C3               	addwf	(??_InitGameObjects+7)& (0+255),w,b
  2392  002A82  6ED9               	movwf	fsr2l,c
  2393  002A84  0E00               	movlw	high (_objs+1)
  2394  002A86  21C4               	addwfc	(??_InitGameObjects+8)& (0+255),w,b
  2395  002A88  6EDA               	movwf	fsr2h,c
  2396  002A8A  50DF               	movf	indf2,w,c
  2397  002A8C  6FC5               	movwf	(??_InitGameObjects+9)& (0+255),b
  2398  002A8E  51C5               	movf	(??_InitGameObjects+9)& (0+255),w,b
  2399  002A90  0D20               	mullw	32
  2400  002A92  0E00               	movlw	low _display
  2401  002A94  6FC6               	movwf	(??_InitGameObjects+10)& (0+255),b
  2402  002A96  0E01               	movlw	high _display
  2403  002A98  6FC7               	movwf	(??_InitGameObjects+11)& (0+255),b
  2404  002A9A  50F3               	movf	243,w,c
  2405  002A9C  27C6               	addwf	(??_InitGameObjects+10)& (0+255),f,b
  2406  002A9E  50F4               	movf	244,w,c
  2407  002AA0  23C7               	addwfc	(??_InitGameObjects+11)& (0+255),f,b
  2408  002AA2  51C1               	movf	(??_InitGameObjects+5)& (0+255),w,b
  2409  002AA4  25C6               	addwf	(??_InitGameObjects+10)& (0+255),w,b
  2410  002AA6  6ED9               	movwf	fsr2l,c
  2411  002AA8  51C2               	movf	(??_InitGameObjects+6)& (0+255),w,b
  2412  002AAA  21C7               	addwfc	(??_InitGameObjects+11)& (0+255),w,b
  2413  002AAC  6EDA               	movwf	fsr2h,c
  2414  002AAE  C1BC  FFDE         	movff	??_InitGameObjects,postinc2
  2415  002AB2  C1BD  FFDD         	movff	??_InitGameObjects+1,postdec2
  2416  002AB6                     
  2417                           ; BSR set to: 1
  2418                           ;main.c: 368:     }
  2419  002AB6  0100               	movlb	0	; () banked
  2420  002AB8  4BF6               	infsnz	InitGameObjects@i_841& (0+255),f,b
  2421  002ABA  2BF7               	incf	(InitGameObjects@i_841+1)& (0+255),f,b
  2422  002ABC                     
  2423                           ; BSR set to: 0
  2424  002ABC  BFF7               	btfsc	(InitGameObjects@i_841+1)& (0+255),7,b
  2425  002ABE  EF6A  F015         	goto	u2971
  2426  002AC2  51F7               	movf	(InitGameObjects@i_841+1)& (0+255),w,b
  2427  002AC4  E109               	bnz	u2970
  2428  002AC6  0E06               	movlw	6
  2429  002AC8  5DF6               	subwf	InitGameObjects@i_841& (0+255),w,b
  2430  002ACA  A0D8               	btfss	status,0,c
  2431  002ACC  EF6A  F015         	goto	u2971
  2432  002AD0  EF6C  F015         	goto	u2970
  2433  002AD4                     u2971:
  2434  002AD4  EF04  F015         	goto	l3138
  2435  002AD8                     u2970:
  2436  002AD8                     
  2437                           ; BSR set to: 0
  2438  002AD8  0012               	return		;funcret
  2439  002ADA                     __end_of_InitGameObjects:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function ___wmul *****************
  2443 ;; Defined at:
  2444 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  multiplier      2    8[BANK0 ] unsigned int 
  2447 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  product         2   12[BANK0 ] unsigned int 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  2    8[BANK0 ] unsigned int 
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0, prodl, prodh
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2459 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;Total ram usage:        6 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    5
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_UpdateAndPrintDisplay
  2470 ;;		_InitGameObjects
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text5
  2475  003092                     __ptext5:
  2476                           	callstack 0
  2477  003092                     ___wmul:
  2478                           	callstack 24
  2479  003092  0100               	movlb	0	; () banked
  2480  003094  51EC               	movf	___wmul@multiplier& (0+255),w,b
  2481  003096  03EE               	mulwf	___wmul@multiplicand& (0+255),b
  2482  003098  CFF3 F0F0          	movff	prodl,___wmul@product
  2483  00309C  CFF4 F0F1          	movff	prodh,___wmul@product+1
  2484  0030A0  51EC               	movf	___wmul@multiplier& (0+255),w,b
  2485  0030A2  03EF               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2486  0030A4  50F3               	movf	243,w,c
  2487  0030A6  27F1               	addwf	(___wmul@product+1)& (0+255),f,b
  2488  0030A8  51ED               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2489  0030AA  03EE               	mulwf	___wmul@multiplicand& (0+255),b
  2490  0030AC  50F3               	movf	243,w,c
  2491  0030AE  27F1               	addwf	(___wmul@product+1)& (0+255),f,b
  2492  0030B0                     
  2493                           ; BSR set to: 0
  2494  0030B0  C0F0  F0EC         	movff	___wmul@product,?___wmul
  2495  0030B4  C0F1  F0ED         	movff	___wmul@product+1,?___wmul+1
  2496  0030B8                     
  2497                           ; BSR set to: 0
  2498  0030B8  0012               	return		;funcret
  2499  0030BA                     __end_of___wmul:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _AddCustomCharacters *****************
  2503 ;; Defined at:
  2504 ;;		line 161 in file "./lcd.h"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    8
  2525 ;; This function calls:
  2526 ;;		_LCDAddSpecialCharacter
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text6
  2533  002D3C                     __ptext6:
  2534                           	callstack 0
  2535  002D3C                     _AddCustomCharacters:
  2536                           	callstack 22
  2537  002D3C                     
  2538                           ;./lcd.h: 162:     LCDAddSpecialCharacter(0, teamA_player);
  2539  002D3C  0EB2               	movlw	low _teamA_player
  2540  002D3E  0100               	movlb	0	; () banked
  2541  002D40  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2542  002D42  0E00               	movlw	high _teamA_player
  2543  002D44  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2544  002D46  0E00               	movlw	0
  2545  002D48  ECBB  F017         	call	_LCDAddSpecialCharacter
  2546                           
  2547                           ;./lcd.h: 163:     LCDAddSpecialCharacter(1, teamB_player);
  2548  002D4C  0EAA               	movlw	low _teamB_player
  2549  002D4E  0100               	movlb	0	; () banked
  2550  002D50  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2551  002D52  0E00               	movlw	high _teamB_player
  2552  002D54  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2553  002D56  0E01               	movlw	1
  2554  002D58  ECBB  F017         	call	_LCDAddSpecialCharacter
  2555                           
  2556                           ;./lcd.h: 164:     LCDAddSpecialCharacter(2, selected_teamA_player);
  2557  002D5C  0EA2               	movlw	low _selected_teamA_player
  2558  002D5E  0100               	movlb	0	; () banked
  2559  002D60  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2560  002D62  0E00               	movlw	high _selected_teamA_player
  2561  002D64  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2562  002D66  0E02               	movlw	2
  2563  002D68  ECBB  F017         	call	_LCDAddSpecialCharacter
  2564                           
  2565                           ;./lcd.h: 165:     LCDAddSpecialCharacter(3, selected_teamB_player);
  2566  002D6C  0E9A               	movlw	low _selected_teamB_player
  2567  002D6E  0100               	movlb	0	; () banked
  2568  002D70  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2569  002D72  0E00               	movlw	high _selected_teamB_player
  2570  002D74  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2571  002D76  0E03               	movlw	3
  2572  002D78  ECBB  F017         	call	_LCDAddSpecialCharacter
  2573                           
  2574                           ;./lcd.h: 166:     LCDAddSpecialCharacter(4, selected_teamA_player_with_frisbee);
  2575  002D7C  0E92               	movlw	low _selected_teamA_player_with_frisbee
  2576  002D7E  0100               	movlb	0	; () banked
  2577  002D80  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2578  002D82  0E00               	movlw	high _selected_teamA_player_with_frisbee
  2579  002D84  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2580  002D86  0E04               	movlw	4
  2581  002D88  ECBB  F017         	call	_LCDAddSpecialCharacter
  2582                           
  2583                           ;./lcd.h: 167:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
  2584  002D8C  0E8A               	movlw	low _selected_teamB_player_with_frisbee
  2585  002D8E  0100               	movlb	0	; () banked
  2586  002D90  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2587  002D92  0E00               	movlw	high _selected_teamB_player_with_frisbee
  2588  002D94  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2589  002D96  0E05               	movlw	5
  2590  002D98  ECBB  F017         	call	_LCDAddSpecialCharacter
  2591                           
  2592                           ;./lcd.h: 168:     LCDAddSpecialCharacter(6, frisbeeChar);
  2593  002D9C  0E82               	movlw	low _frisbeeChar
  2594  002D9E  0100               	movlb	0	; () banked
  2595  002DA0  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2596  002DA2  0E00               	movlw	high _frisbeeChar
  2597  002DA4  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2598  002DA6  0E06               	movlw	6
  2599  002DA8  ECBB  F017         	call	_LCDAddSpecialCharacter
  2600                           
  2601                           ;./lcd.h: 169:     LCDAddSpecialCharacter(7, frisbee_target);
  2602  002DAC  0E60               	movlw	low _frisbee_target
  2603  002DAE  0100               	movlb	0	; () banked
  2604  002DB0  6FF0               	movwf	LCDAddSpecialCharacter@data& (0+255),b
  2605  002DB2  0E00               	movlw	high _frisbee_target
  2606  002DB4  6FF1               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
  2607  002DB6  0E07               	movlw	7
  2608  002DB8  ECBB  F017         	call	_LCDAddSpecialCharacter
  2609  002DBC  0012               	return		;funcret
  2610  002DBE                     __end_of_AddCustomCharacters:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _LCDAddSpecialCharacter *****************
  2614 ;; Defined at:
  2615 ;;		line 145 in file "./lcd.h"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  character_in    1    wreg     unsigned char 
  2618 ;;  data            2   12[BANK0 ] PTR unsigned char 
  2619 ;;		 -> frisbee_target(8), frisbeeChar(8), selected_teamB_player_with_frisbee(8), selected_teamA_player_with_frisbee(8),
      + 
  2620 ;;		 -> selected_teamB_player(8), selected_teamA_player(8), teamB_player(8), teamA_player(8), 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  character_in    1   14[BANK0 ] unsigned char 
  2623 ;;  i               1   15[BANK0 ] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2633 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;Total ram usage:        4 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    7
  2640 ;; This function calls:
  2641 ;;		_LCDCmd
  2642 ;;		_LCDDat
  2643 ;;		_LCDGoto
  2644 ;; This function is called by:
  2645 ;;		_AddCustomCharacters
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text7
  2650  002F76                     __ptext7:
  2651                           	callstack 0
  2652  002F76                     _LCDAddSpecialCharacter:
  2653                           	callstack 22
  2654                           
  2655                           ;incstack = 0
  2656                           ;LCDAddSpecialCharacter@character_index stored from wreg
  2657  002F76  0100               	movlb	0	; () banked
  2658  002F78  6FF2               	movwf	LCDAddSpecialCharacter@character_index& (0+255),b
  2659  002F7A                     
  2660                           ;./lcd.h: 151:     LCDCmd(0b01000000+(character_index*8));
  2661  002F7A  0100               	movlb	0	; () banked
  2662  002F7C  51F2               	movf	LCDAddSpecialCharacter@character_index& (0+255),w,b
  2663  002F7E  0D08               	mullw	8
  2664  002F80  50F3               	movf	243,w,c
  2665  002F82  0F40               	addlw	64
  2666  002F84  EC30  F018         	call	_LCDCmd
  2667  002F88                     
  2668                           ;./lcd.h: 152:     for(byte i=0; i < 8; i++) {
  2669  002F88  0E00               	movlw	0
  2670  002F8A  0100               	movlb	0	; () banked
  2671  002F8C  6FF3               	movwf	LCDAddSpecialCharacter@i& (0+255),b
  2672  002F8E                     l3052:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;./lcd.h: 153:         LCDDat(data[i]);
  2676  002F8E  51F3               	movf	LCDAddSpecialCharacter@i& (0+255),w,b
  2677  002F90  25F0               	addwf	LCDAddSpecialCharacter@data& (0+255),w,b
  2678  002F92  6ED9               	movwf	fsr2l,c
  2679  002F94  0E00               	movlw	0
  2680  002F96  21F1               	addwfc	(LCDAddSpecialCharacter@data+1)& (0+255),w,b
  2681  002F98  6EDA               	movwf	fsr2h,c
  2682  002F9A  50DF               	movf	indf2,w,c
  2683  002F9C  ECFD  F017         	call	_LCDDat
  2684  002FA0                     
  2685                           ;./lcd.h: 154:     }
  2686  002FA0  0100               	movlb	0	; () banked
  2687  002FA2  2BF3               	incf	LCDAddSpecialCharacter@i& (0+255),f,b
  2688  002FA4                     
  2689                           ; BSR set to: 0
  2690  002FA4  0E07               	movlw	7
  2691  002FA6  65F3               	cpfsgt	LCDAddSpecialCharacter@i& (0+255),b
  2692  002FA8  EFD8  F017         	goto	u2901
  2693  002FAC  EFDA  F017         	goto	u2900
  2694  002FB0                     u2901:
  2695  002FB0  EFC7  F017         	goto	l3052
  2696  002FB4                     u2900:
  2697  002FB4                     
  2698                           ; BSR set to: 0
  2699                           ;./lcd.h: 156:     LCDGoto(lcd_x, lcd_y);
  2700  002FB4  C080  F0EE         	movff	_lcd_y,LCDGoto@p_1
  2701  002FB8  5181               	movf	_lcd_x& (0+255),w,b
  2702  002FBA  ECDF  F016         	call	_LCDGoto
  2703  002FBE  0012               	return		;funcret
  2704  002FC0                     __end_of_LCDAddSpecialCharacter:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _LCDGoto *****************
  2708 ;; Defined at:
  2709 ;;		line 88 in file "./lcd.h"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  p_2             1    wreg     unsigned char 
  2712 ;;  p_1             1   10[BANK0 ] unsigned char 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  p_2             1   11[BANK0 ] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        2 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    6
  2731 ;; This function calls:
  2732 ;;		_LCDCmd
  2733 ;; This function is called by:
  2734 ;;		_LCDAddSpecialCharacter
  2735 ;;		_UpdateAndPrintDisplay
  2736 ;;		_LCDStr
  2737 ;;		_PrintPORTBandIntCounts
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text8
  2742  002DBE                     __ptext8:
  2743                           	callstack 0
  2744  002DBE                     _LCDGoto:
  2745                           	callstack 23
  2746                           
  2747                           ;incstack = 0
  2748                           ;LCDGoto@p_2 stored from wreg
  2749  002DBE  0100               	movlb	0	; () banked
  2750  002DC0  6FEF               	movwf	LCDGoto@p_2& (0+255),b
  2751  002DC2                     
  2752                           ;./lcd.h: 89:   if(p_1==1) {
  2753  002DC2  0100               	movlb	0	; () banked
  2754  002DC4  05EE               	decf	LCDGoto@p_1& (0+255),w,b
  2755  002DC6  A4D8               	btfss	status,2,c
  2756  002DC8  EFE8  F016         	goto	u2871
  2757  002DCC  EFEA  F016         	goto	u2870
  2758  002DD0                     u2871:
  2759  002DD0  EFF1  F016         	goto	l3030
  2760  002DD4                     u2870:
  2761  002DD4                     
  2762                           ; BSR set to: 0
  2763                           ;./lcd.h: 90:     LCDCmd(0x80 +((p_2-1)%16));
  2764  002DD4  05EF               	decf	LCDGoto@p_2& (0+255),w,b
  2765  002DD6  0B0F               	andlw	15
  2766  002DD8  0F80               	addlw	128
  2767  002DDA  EC30  F018         	call	_LCDCmd
  2768                           
  2769                           ;./lcd.h: 91:   }
  2770  002DDE  EF16  F017         	goto	l3040
  2771  002DE2                     l3030:
  2772                           
  2773                           ; BSR set to: 0
  2774  002DE2  0E02               	movlw	2
  2775  002DE4  19EE               	xorwf	LCDGoto@p_1& (0+255),w,b
  2776  002DE6  A4D8               	btfss	status,2,c
  2777  002DE8  EFF8  F016         	goto	u2881
  2778  002DEC  EFFA  F016         	goto	u2880
  2779  002DF0                     u2881:
  2780  002DF0  EF01  F017         	goto	l3034
  2781  002DF4                     u2880:
  2782  002DF4                     
  2783                           ; BSR set to: 0
  2784                           ;./lcd.h: 93:     LCDCmd(0xC0 +((p_2-1)%16));
  2785  002DF4  05EF               	decf	LCDGoto@p_2& (0+255),w,b
  2786  002DF6  0B0F               	andlw	15
  2787  002DF8  0FC0               	addlw	192
  2788  002DFA  EC30  F018         	call	_LCDCmd
  2789                           
  2790                           ;./lcd.h: 94:   }
  2791  002DFE  EF16  F017         	goto	l3040
  2792  002E02                     l3034:
  2793                           
  2794                           ; BSR set to: 0
  2795  002E02  0E03               	movlw	3
  2796  002E04  19EE               	xorwf	LCDGoto@p_1& (0+255),w,b
  2797  002E06  A4D8               	btfss	status,2,c
  2798  002E08  EF08  F017         	goto	u2891
  2799  002E0C  EF0A  F017         	goto	u2890
  2800  002E10                     u2891:
  2801  002E10  EF11  F017         	goto	l3038
  2802  002E14                     u2890:
  2803  002E14                     
  2804                           ; BSR set to: 0
  2805                           ;./lcd.h: 96:     LCDCmd(0x90 +((p_2-1)%16));
  2806  002E14  05EF               	decf	LCDGoto@p_2& (0+255),w,b
  2807  002E16  0B0F               	andlw	15
  2808  002E18  0F90               	addlw	144
  2809  002E1A  EC30  F018         	call	_LCDCmd
  2810                           
  2811                           ;./lcd.h: 97:   }
  2812  002E1E  EF16  F017         	goto	l3040
  2813  002E22                     l3038:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;./lcd.h: 99:     LCDCmd(0xD0 +((p_2-1)%16));
  2817  002E22  05EF               	decf	LCDGoto@p_2& (0+255),w,b
  2818  002E24  0B0F               	andlw	15
  2819  002E26  0FD0               	addlw	208
  2820  002E28  EC30  F018         	call	_LCDCmd
  2821  002E2C                     l3040:
  2822                           
  2823                           ;./lcd.h: 101:   lcd_x = p_2;
  2824  002E2C  C0EF  F081         	movff	LCDGoto@p_2,_lcd_x
  2825  002E30                     
  2826                           ;./lcd.h: 102:   lcd_y = p_1;
  2827  002E30  C0EE  F080         	movff	LCDGoto@p_1,_lcd_y
  2828  002E34  0012               	return		;funcret
  2829  002E36                     __end_of_LCDGoto:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _LCDCmd *****************
  2833 ;; Defined at:
  2834 ;;		line 64 in file "./lcd.h"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  cmd             1    wreg     unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  cmd             1    9[BANK0 ] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    5
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_LCDGoto
  2859 ;;		_InitLCD
  2860 ;;		_LCDAddSpecialCharacter
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text9
  2865  003060                     __ptext9:
  2866                           	callstack 0
  2867  003060                     _LCDCmd:
  2868                           	callstack 23
  2869                           
  2870                           ;incstack = 0
  2871                           ;LCDCmd@cmd stored from wreg
  2872  003060  0100               	movlb	0	; () banked
  2873  003062  6FED               	movwf	LCDCmd@cmd& (0+255),b
  2874  003064                     
  2875                           ;./lcd.h: 65:   PORTEbits.RE1 = 0;
  2876  003064  9284               	bcf	132,1,c	;volatile
  2877                           
  2878                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  2879  003066  9484               	bcf	132,2,c	;volatile
  2880  003068                     
  2881                           ;./lcd.h: 67:   PORTD = cmd;
  2882  003068  C0ED  FF83         	movff	LCDCmd@cmd,3971	;volatile
  2883  00306C                     
  2884                           ;./lcd.h: 68:   PORTEbits.RE1 = 1;
  2885  00306C  8284               	bsf	132,1,c	;volatile
  2886  00306E                     
  2887                           ;./lcd.h: 69:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2888  00306E  0E07               	movlw	7
  2889  003070  0100               	movlb	0	; () banked
  2890  003072  6FEC               	movwf	??_LCDCmd& (0+255),b
  2891  003074  0E7D               	movlw	125
  2892  003076                     u3227:
  2893  003076  2EE8               	decfsz	wreg,f,c
  2894  003078  D7FE               	bra	u3227
  2895  00307A  2FEC               	decfsz	??_LCDCmd& (0+255),f,b
  2896  00307C  D7FC               	bra	u3227
  2897  00307E                     
  2898                           ;./lcd.h: 70:   PORTEbits.RE1 = 0;
  2899  00307E  9284               	bcf	132,1,c	;volatile
  2900  003080                     
  2901                           ;./lcd.h: 71:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2902  003080  0E07               	movlw	7
  2903  003082  0100               	movlb	0	; () banked
  2904  003084  6FEC               	movwf	??_LCDCmd& (0+255),b
  2905  003086  0E7D               	movlw	125
  2906  003088                     u3237:
  2907  003088  2EE8               	decfsz	wreg,f,c
  2908  00308A  D7FE               	bra	u3237
  2909  00308C  2FEC               	decfsz	??_LCDCmd& (0+255),f,b
  2910  00308E  D7FC               	bra	u3237
  2911  003090  0012               	return		;funcret
  2912  003092                     __end_of_LCDCmd:
  2913                           	callstack 0
  2914                           
  2915 ;; *************** function _LCDDat *****************
  2916 ;; Defined at:
  2917 ;;		line 74 in file "./lcd.h"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  dat             1    wreg     unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  dat             1    9[BANK0 ] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;Total ram usage:        2 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    5
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_LCDAddSpecialCharacter
  2942 ;;		_UpdateAndPrintDisplay
  2943 ;;		_LCDStr
  2944 ;;		_PrintPORTBandIntCounts
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text10
  2949  002FFA                     __ptext10:
  2950                           	callstack 0
  2951  002FFA                     _LCDDat:
  2952                           	callstack 24
  2953                           
  2954                           ;incstack = 0
  2955                           ;LCDDat@dat stored from wreg
  2956  002FFA  0100               	movlb	0	; () banked
  2957  002FFC  6FED               	movwf	LCDDat@dat& (0+255),b
  2958  002FFE                     
  2959                           ;./lcd.h: 75:   PORTEbits.RE1 = 0;
  2960  002FFE  9284               	bcf	132,1,c	;volatile
  2961                           
  2962                           ;./lcd.h: 76:   PORTEbits.RE2 = 1;
  2963  003000  8484               	bsf	132,2,c	;volatile
  2964  003002                     
  2965                           ;./lcd.h: 77:   PORTD = dat;
  2966  003002  C0ED  FF83         	movff	LCDDat@dat,3971	;volatile
  2967  003006                     
  2968                           ;./lcd.h: 78:   PORTEbits.RE1 = 1;
  2969  003006  8284               	bsf	132,1,c	;volatile
  2970  003008                     
  2971                           ;./lcd.h: 79:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2972  003008  0E07               	movlw	7
  2973  00300A  0100               	movlb	0	; () banked
  2974  00300C  6FEC               	movwf	??_LCDDat& (0+255),b
  2975  00300E  0E7D               	movlw	125
  2976  003010                     u3247:
  2977  003010  2EE8               	decfsz	wreg,f,c
  2978  003012  D7FE               	bra	u3247
  2979  003014  2FEC               	decfsz	??_LCDDat& (0+255),f,b
  2980  003016  D7FC               	bra	u3247
  2981  003018                     
  2982                           ;./lcd.h: 80:   PORTEbits.RE1 = 0;
  2983  003018  9284               	bcf	132,1,c	;volatile
  2984  00301A                     
  2985                           ;./lcd.h: 81:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  2986  00301A  0E07               	movlw	7
  2987  00301C  0100               	movlb	0	; () banked
  2988  00301E  6FEC               	movwf	??_LCDDat& (0+255),b
  2989  003020  0E7D               	movlw	125
  2990  003022                     u3257:
  2991  003022  2EE8               	decfsz	wreg,f,c
  2992  003024  D7FE               	bra	u3257
  2993  003026  2FEC               	decfsz	??_LCDDat& (0+255),f,b
  2994  003028  D7FC               	bra	u3257
  2995  00302A                     
  2996                           ;./lcd.h: 82:   PORTEbits.RE2 = 0;
  2997  00302A  9484               	bcf	132,2,c	;volatile
  2998  00302C  0012               	return		;funcret
  2999  00302E                     __end_of_LCDDat:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function _lowIsr *****************
  3003 ;; Defined at:
  3004 ;;		line 178 in file "main.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  temp_a          1    7[BANK0 ] unsigned char 
  3009 ;;  temp_d          1    6[BANK0 ] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        8 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    4
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		Interrupt level 1
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	intcodelo
  3034  000018                     __pintcodelo:
  3035                           	callstack 0
  3036  000018                     _lowIsr:
  3037                           	callstack 22
  3038                           
  3039                           ;incstack = 0
  3040  000018  8068               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3041  00001A  CFD8 F0E5          	movff	status,??_lowIsr+1
  3042  00001E  CFE8 F0E6          	movff	wreg,??_lowIsr+2
  3043  000022  CFE0 F0E7          	movff	bsr,??_lowIsr+3
  3044  000026  CFD9 F0E8          	movff	fsr2l,??_lowIsr+4
  3045  00002A  CFDA F0E9          	movff	fsr2h,??_lowIsr+5
  3046  00002E                     
  3047                           ;main.c: 179:     PIR1bits.TMR2IF = 0;
  3048  00002E  929E               	bcf	158,1,c	;volatile
  3049                           
  3050                           ;main.c: 180:     PIE1bits.TMR2IE = 0;
  3051  000030  929D               	bcf	157,1,c	;volatile
  3052                           
  3053                           ;main.c: 182:     byte temp_d = PORTD;
  3054  000032  CF83 F0EA          	movff	3971,lowIsr@temp_d	;volatile
  3055                           
  3056                           ;main.c: 183:     byte temp_a = PORTA;
  3057  000036  CF80 F0EB          	movff	3968,lowIsr@temp_a	;volatile
  3058  00003A                     
  3059                           ;main.c: 185:     LATA = 0b1000;
  3060  00003A  0E08               	movlw	8
  3061  00003C  6E89               	movwf	137,c	;volatile
  3062  00003E                     
  3063                           ;main.c: 186:     LATD = segValues[scoreA];
  3064  00003E  0E52               	movlw	low _segValues
  3065  000040  2446               	addwf	_scoreA^0,w,c
  3066  000042  6ED9               	movwf	fsr2l,c
  3067  000044  0E00               	movlw	high _segValues
  3068  000046  2047               	addwfc	(_scoreA+1)^0,w,c
  3069  000048  6EDA               	movwf	fsr2h,c
  3070  00004A  50DF               	movf	indf2,w,c
  3071  00004C  6E8C               	movwf	140,c	;volatile
  3072  00004E                     
  3073                           ;main.c: 187:     _delay((unsigned long)((4000)*(10000000L/4000000.0)));
  3074  00004E  0E0D               	movlw	13
  3075  000050  0100               	movlb	0	; () banked
  3076  000052  6FE4               	movwf	??_lowIsr& (0+255),b
  3077  000054  0EFB               	movlw	251
  3078  000056                     i1u326_27:
  3079  000056  2EE8               	decfsz	wreg,f,c
  3080  000058  D7FE               	bra	i1u326_27
  3081  00005A  2FE4               	decfsz	??_lowIsr& (0+255),f,b
  3082  00005C  D7FC               	bra	i1u326_27
  3083  00005E  D000               	nop2	
  3084  000060                     
  3085                           ;main.c: 189:     LATA = 0b10000;
  3086  000060  0E10               	movlw	16
  3087  000062  6E89               	movwf	137,c	;volatile
  3088  000064                     
  3089                           ;main.c: 190:     LATD = segValues[10];
  3090  000064  C05C  FF8C         	movff	_segValues+10,3980	;volatile
  3091  000068                     
  3092                           ;main.c: 191:     _delay((unsigned long)((4000)*(10000000L/4000000.0)));
  3093  000068  0E0D               	movlw	13
  3094  00006A  0100               	movlb	0	; () banked
  3095  00006C  6FE4               	movwf	??_lowIsr& (0+255),b
  3096  00006E  0EFB               	movlw	251
  3097  000070                     i1u327_27:
  3098  000070  2EE8               	decfsz	wreg,f,c
  3099  000072  D7FE               	bra	i1u327_27
  3100  000074  2FE4               	decfsz	??_lowIsr& (0+255),f,b
  3101  000076  D7FC               	bra	i1u327_27
  3102  000078  D000               	nop2	
  3103  00007A                     
  3104                           ;main.c: 193:     LATA = 0b100000;
  3105  00007A  0E20               	movlw	32
  3106  00007C  6E89               	movwf	137,c	;volatile
  3107  00007E                     
  3108                           ;main.c: 194:     LATD = segValues[scoreB];
  3109  00007E  0E52               	movlw	low _segValues
  3110  000080  2444               	addwf	_scoreB^0,w,c
  3111  000082  6ED9               	movwf	fsr2l,c
  3112  000084  0E00               	movlw	high _segValues
  3113  000086  2045               	addwfc	(_scoreB+1)^0,w,c
  3114  000088  6EDA               	movwf	fsr2h,c
  3115  00008A  50DF               	movf	indf2,w,c
  3116  00008C  6E8C               	movwf	140,c	;volatile
  3117  00008E                     
  3118                           ;main.c: 195:     _delay((unsigned long)((4000)*(10000000L/4000000.0)));
  3119  00008E  0E0D               	movlw	13
  3120  000090  0100               	movlb	0	; () banked
  3121  000092  6FE4               	movwf	??_lowIsr& (0+255),b
  3122  000094  0EFB               	movlw	251
  3123  000096                     i1u328_27:
  3124  000096  2EE8               	decfsz	wreg,f,c
  3125  000098  D7FE               	bra	i1u328_27
  3126  00009A  2FE4               	decfsz	??_lowIsr& (0+255),f,b
  3127  00009C  D7FC               	bra	i1u328_27
  3128  00009E  D000               	nop2	
  3129  0000A0                     
  3130                           ;main.c: 197:     LATA = temp_a;
  3131  0000A0  C0EB  FF89         	movff	lowIsr@temp_a,3977	;volatile
  3132  0000A4                     
  3133                           ;main.c: 198:     LATD = temp_d;
  3134  0000A4  C0EA  FF8C         	movff	lowIsr@temp_d,3980	;volatile
  3135  0000A8                     
  3136                           ;main.c: 200:     PIE1bits.TMR2IE = 1;
  3137  0000A8  829D               	bsf	157,1,c	;volatile
  3138  0000AA  C0E9  FFDA         	movff	??_lowIsr+5,fsr2h
  3139  0000AE  C0E8  FFD9         	movff	??_lowIsr+4,fsr2l
  3140  0000B2  C0E7  FFE0         	movff	??_lowIsr+3,bsr
  3141  0000B6  C0E6  FFE8         	movff	??_lowIsr+2,wreg
  3142  0000BA  C0E5  FFD8         	movff	??_lowIsr+1,status
  3143  0000BE  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3144  0000C0  0010               	retfie	
  3145  0000C2                     __end_of_lowIsr:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _highIsr *****************
  3149 ;; Defined at:
  3150 ;;		line 45 in file "main.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;Total ram usage:       14 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		_CheckIfCaughtFrisbee
  3173 ;;		_SetupDebouncingTimer
  3174 ;;		_compute_frisbee_target_and_route
  3175 ;;		_down
  3176 ;;		_left
  3177 ;;		_right
  3178 ;;		_up
  3179 ;;		i2___wmul
  3180 ;; This function is called by:
  3181 ;;		Interrupt level 2
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	intcode
  3186  000008                     __pintcode:
  3187                           	callstack 0
  3188  000008                     _highIsr:
  3189                           	callstack 22
  3190                           
  3191                           ;incstack = 0
  3192  000008  8268               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3193  00000A  ED73  F00B         	call	int_func,f	;refresh shadow registers
  3194                           
  3195                           	psect	intcode_body
  3196  0016E6                     __pintcode_body:
  3197                           	callstack 22
  3198  0016E6                     int_func:
  3199                           	callstack 22
  3200  0016E6  0006               	pop		; remove dummy address from shadow register refresh
  3201  0016E8  CFE1 F036          	movff	fsr1l,??_highIsr+8
  3202  0016EC  CFE2 F037          	movff	fsr1h,??_highIsr+9
  3203  0016F0  CFD9 F038          	movff	fsr2l,??_highIsr+10
  3204  0016F4  CFDA F039          	movff	fsr2h,??_highIsr+11
  3205  0016F8  CFF3 F03A          	movff	prodl,??_highIsr+12
  3206  0016FC  CFF4 F03B          	movff	prodh,??_highIsr+13
  3207  001700                     
  3208                           ;main.c: 46:     portbVals = PORTB;
  3209  001700  CF81 F050          	movff	3969,_portbVals	;volatile
  3210                           
  3211                           ;main.c: 48:     if (INTCONbits.TMR0IF) {
  3212  001704  A4F2               	btfss	242,2,c	;volatile
  3213  001706  EF87  F00B         	goto	i2u231_41
  3214  00170A  EF89  F00B         	goto	i2u231_40
  3215  00170E                     i2u231_41:
  3216  00170E  EF8D  F00B         	goto	i2l2632
  3217  001712                     i2u231_40:
  3218  001712                     
  3219                           ;main.c: 49:         acceptInterrupts = 1;
  3220  001712  0E01               	movlw	1
  3221  001714  6E51               	movwf	_acceptInterrupts^0,c
  3222  001716                     
  3223                           ;main.c: 50:         T0CONbits.TMR0ON = 0;
  3224  001716  9ED5               	bcf	213,7,c	;volatile
  3225  001718                     
  3226                           ;main.c: 51:         INTCONbits.TMR0IF = 0;
  3227  001718  94F2               	bcf	242,2,c	;volatile
  3228  00171A                     i2l2632:
  3229                           
  3230                           ;main.c: 54:     if (PIR1bits.TMR1IF) {
  3231  00171A  A09E               	btfss	158,0,c	;volatile
  3232  00171C  EF92  F00B         	goto	i2u232_41
  3233  001720  EF94  F00B         	goto	i2u232_40
  3234  001724                     i2u232_41:
  3235  001724  EF63  F00C         	goto	i2l2682
  3236  001728                     i2u232_40:
  3237  001728                     
  3238                           ;main.c: 55:         PIR1bits.TMR1IF = 0;
  3239  001728  909E               	bcf	158,0,c	;volatile
  3240                           
  3241                           ;main.c: 56:         T1CONbits.TMR1ON = 0;
  3242  00172A  90CD               	bcf	205,0,c	;volatile
  3243  00172C                     
  3244                           ;main.c: 57:         TMR1L = 0xED;
  3245  00172C  0EED               	movlw	237
  3246  00172E  6ECE               	movwf	206,c	;volatile
  3247                           
  3248                           ;main.c: 58:         TMR1H = 0x85;
  3249  001730  0E85               	movlw	133
  3250  001732  6ECF               	movwf	207,c	;volatile
  3251  001734                     
  3252                           ;main.c: 59:         T1CONbits.TMR1ON = 1;
  3253  001734  80CD               	bsf	205,0,c	;volatile
  3254  001736                     
  3255                           ;main.c: 61:         pulseCounter++;
  3256  001736  4A40               	infsnz	_pulseCounter^0,f,c
  3257  001738  2A41               	incf	(_pulseCounter+1)^0,f,c
  3258  00173A                     
  3259                           ;main.c: 63:         if (objs[5].state == OS_FLYING && pulseCounter % 2 == 0 && game_sta
      +                          te == GS_ACTIVE) {
  3260  00173A  0E03               	movlw	3
  3261  00173C  0100               	movlb	0	; () banked
  3262  00173E  19E3               	xorwf	(_objs+41)& (0+255),w,b
  3263  001740  A4D8               	btfss	status,2,c
  3264  001742  EFA5  F00B         	goto	i2u233_41
  3265  001746  EFA7  F00B         	goto	i2u233_40
  3266  00174A                     i2u233_41:
  3267  00174A  EFC1  F00B         	goto	i2l224
  3268  00174E                     i2u233_40:
  3269  00174E                     
  3270                           ; BSR set to: 0
  3271  00174E  B040               	btfsc	_pulseCounter^0,0,c
  3272  001750  EFAC  F00B         	goto	i2u234_41
  3273  001754  EFAE  F00B         	goto	i2u234_40
  3274  001758                     i2u234_41:
  3275  001758  EFC1  F00B         	goto	i2l224
  3276  00175C                     i2u234_40:
  3277  00175C                     
  3278                           ; BSR set to: 0
  3279  00175C  505F               	movf	_game_state^0,w,c
  3280  00175E  A4D8               	btfss	status,2,c
  3281  001760  EFB4  F00B         	goto	i2u235_41
  3282  001764  EFB6  F00B         	goto	i2u235_40
  3283  001768                     i2u235_41:
  3284  001768  EFC1  F00B         	goto	i2l224
  3285  00176C                     i2u235_40:
  3286  00176C                     
  3287                           ; BSR set to: 0
  3288                           ;main.c: 64:             objs[4].active = ~objs[4].active;
  3289  00176C  05DA               	decf	(_objs+32)& (0+255),w,b
  3290  00176E  A4D8               	btfss	status,2,c
  3291  001770  EFBC  F00B         	goto	i2u236_41
  3292  001774  EFBF  F00B         	goto	i2u236_40
  3293  001778                     i2u236_41:
  3294  001778  0E01               	movlw	1
  3295  00177A  EFC0  F00B         	goto	i2u237_40
  3296  00177E                     i2u236_40:
  3297  00177E  0E00               	movlw	0
  3298  001780                     i2u237_40:
  3299  001780  6FDA               	movwf	(_objs+32)& (0+255),b
  3300  001782                     i2l224:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;main.c: 67:         if (pulseCounter == gameSpeed && game_state == GS_ACTIVE) {
  3304  001782  505D               	movf	_gameSpeed^0,w,c
  3305  001784  1840               	xorwf	_pulseCounter^0,w,c
  3306  001786  E107               	bnz	i2u238_41
  3307  001788  505E               	movf	(_gameSpeed+1)^0,w,c
  3308  00178A  1841               	xorwf	(_pulseCounter+1)^0,w,c
  3309  00178C  A4D8               	btfss	status,2,c
  3310  00178E  EFCB  F00B         	goto	i2u238_41
  3311  001792  EFCD  F00B         	goto	i2u238_40
  3312  001796                     i2u238_41:
  3313  001796  EF63  F00C         	goto	i2l2682
  3314  00179A                     i2u238_40:
  3315  00179A                     
  3316                           ; BSR set to: 0
  3317  00179A  505F               	movf	_game_state^0,w,c
  3318  00179C  A4D8               	btfss	status,2,c
  3319  00179E  EFD3  F00B         	goto	i2u239_41
  3320  0017A2  EFD5  F00B         	goto	i2u239_40
  3321  0017A6                     i2u239_41:
  3322  0017A6  EF63  F00C         	goto	i2l2682
  3323  0017AA                     i2u239_40:
  3324  0017AA                     
  3325                           ; BSR set to: 0
  3326                           ;main.c: 68:             pulseCounter = 0;
  3327  0017AA  0E00               	movlw	0
  3328  0017AC  6E41               	movwf	(_pulseCounter+1)^0,c
  3329  0017AE  0E00               	movlw	0
  3330  0017B0  6E40               	movwf	_pulseCounter^0,c
  3331  0017B2                     
  3332                           ; BSR set to: 0
  3333                           ;main.c: 69:             if (objs[5].state == OS_FLYING) {
  3334  0017B2  0E03               	movlw	3
  3335  0017B4  19E3               	xorwf	(_objs+41)& (0+255),w,b
  3336  0017B6  A4D8               	btfss	status,2,c
  3337  0017B8  EFE0  F00B         	goto	i2u240_41
  3338  0017BC  EFE2  F00B         	goto	i2u240_40
  3339  0017C0                     i2u240_41:
  3340  0017C0  EF63  F00C         	goto	i2l2682
  3341  0017C4                     i2u240_40:
  3342  0017C4                     
  3343                           ; BSR set to: 0
  3344                           ;main.c: 70:                 curFrisbeeSteps++;
  3345  0017C4  4A3C               	infsnz	_curFrisbeeSteps^0,f,c
  3346  0017C6  2A3D               	incf	(_curFrisbeeSteps+1)^0,f,c
  3347  0017C8                     
  3348                           ; BSR set to: 0
  3349                           ;main.c: 72:                 objs[5].oldX = objs[5].x;
  3350  0017C8  C0DD  F0DF         	movff	_objs+35,_objs+37
  3351  0017CC                     
  3352                           ; BSR set to: 0
  3353                           ;main.c: 73:                 objs[5].oldY = objs[5].y;
  3354  0017CC  C0DE  F0E0         	movff	_objs+36,_objs+38
  3355  0017D0                     
  3356                           ; BSR set to: 0
  3357                           ;main.c: 75:                 objs[5].x = frisbee_steps[curFrisbeeSteps][0];
  3358  0017D0  0E80               	movlw	low _frisbee_steps
  3359  0017D2  6E2E               	movwf	??_highIsr^0,c
  3360  0017D4  0E01               	movlw	high _frisbee_steps
  3361  0017D6  6E2F               	movwf	(??_highIsr+1)^0,c
  3362  0017D8  90D8               	bcf	status,0,c
  3363  0017DA  343C               	rlcf	_curFrisbeeSteps^0,w,c
  3364  0017DC  6ED9               	movwf	fsr2l,c
  3365  0017DE  343D               	rlcf	(_curFrisbeeSteps+1)^0,w,c
  3366  0017E0  6EDA               	movwf	fsr2h,c
  3367  0017E2  90D8               	bcf	status,0,c
  3368  0017E4  36D9               	rlcf	fsr2l,f,c
  3369  0017E6  36DA               	rlcf	fsr2h,f,c
  3370  0017E8  502E               	movf	??_highIsr^0,w,c
  3371  0017EA  26D9               	addwf	fsr2l,f,c
  3372  0017EC  502F               	movf	(??_highIsr+1)^0,w,c
  3373  0017EE  22DA               	addwfc	fsr2h,f,c
  3374  0017F0  50DF               	movf	indf2,w,c
  3375  0017F2  6FDD               	movwf	(_objs+35)& (0+255),b
  3376  0017F4                     
  3377                           ; BSR set to: 0
  3378                           ;main.c: 76:                 objs[5].y = frisbee_steps[curFrisbeeSteps][1];
  3379  0017F4  0E80               	movlw	low _frisbee_steps
  3380  0017F6  6E2E               	movwf	??_highIsr^0,c
  3381  0017F8  0E01               	movlw	high _frisbee_steps
  3382  0017FA  6E2F               	movwf	(??_highIsr+1)^0,c
  3383  0017FC  0E02               	movlw	2
  3384  0017FE  262E               	addwf	??_highIsr^0,f,c
  3385  001800  0E00               	movlw	0
  3386  001802  222F               	addwfc	(??_highIsr+1)^0,f,c
  3387  001804  90D8               	bcf	status,0,c
  3388  001806  343C               	rlcf	_curFrisbeeSteps^0,w,c
  3389  001808  6ED9               	movwf	fsr2l,c
  3390  00180A  343D               	rlcf	(_curFrisbeeSteps+1)^0,w,c
  3391  00180C  6EDA               	movwf	fsr2h,c
  3392  00180E  90D8               	bcf	status,0,c
  3393  001810  36D9               	rlcf	fsr2l,f,c
  3394  001812  36DA               	rlcf	fsr2h,f,c
  3395  001814  502E               	movf	??_highIsr^0,w,c
  3396  001816  26D9               	addwf	fsr2l,f,c
  3397  001818  502F               	movf	(??_highIsr+1)^0,w,c
  3398  00181A  22DA               	addwfc	fsr2h,f,c
  3399  00181C  50DF               	movf	indf2,w,c
  3400  00181E  6FDE               	movwf	(_objs+36)& (0+255),b
  3401  001820                     
  3402                           ; BSR set to: 0
  3403                           ;main.c: 78:                 CheckIfCaughtFrisbee();
  3404  001820  EC6D  F015         	call	_CheckIfCaughtFrisbee	;wreg free
  3405  001824                     
  3406                           ;main.c: 81:                 if (objs[5].x == objs[4].x && objs[5].y == objs[4].y) {
  3407  001824  0100               	movlb	0	; () banked
  3408  001826  51D6               	movf	(_objs+28)& (0+255),w,b
  3409  001828  19DD               	xorwf	(_objs+35)& (0+255),w,b
  3410  00182A  A4D8               	btfss	status,2,c
  3411  00182C  EF1A  F00C         	goto	i2u241_41
  3412  001830  EF1C  F00C         	goto	i2u241_40
  3413  001834                     i2u241_41:
  3414  001834  EF63  F00C         	goto	i2l225
  3415  001838                     i2u241_40:
  3416  001838                     
  3417                           ; BSR set to: 0
  3418  001838  51D7               	movf	(_objs+29)& (0+255),w,b
  3419  00183A  19DE               	xorwf	(_objs+36)& (0+255),w,b
  3420  00183C  A4D8               	btfss	status,2,c
  3421  00183E  EF23  F00C         	goto	i2u242_41
  3422  001842  EF25  F00C         	goto	i2u242_40
  3423  001846                     i2u242_41:
  3424  001846  EF63  F00C         	goto	i2l225
  3425  00184A                     i2u242_40:
  3426  00184A                     
  3427                           ; BSR set to: 0
  3428                           ;main.c: 82:                     objs[5].state = OS_FELL;
  3429  00184A  0E04               	movlw	4
  3430  00184C  6FE3               	movwf	(_objs+41)& (0+255),b
  3431                           
  3432                           ;main.c: 83:                     objs[4].active = 0;
  3433  00184E  0E00               	movlw	0
  3434  001850  6FDA               	movwf	(_objs+32)& (0+255),b
  3435  001852                     
  3436                           ; BSR set to: 0
  3437                           ;main.c: 84:                     display[objs[4].y-1][objs[4].x-1] = &objs[5];
  3438  001852  51D7               	movf	(_objs+29)& (0+255),w,b
  3439  001854  6E2E               	movwf	??_highIsr^0,c
  3440  001856  6A2F               	clrf	(??_highIsr+1)^0,c
  3441  001858  0E05               	movlw	5
  3442  00185A                     i2u243_45:
  3443  00185A  90D8               	bcf	status,0,c
  3444  00185C  362E               	rlcf	??_highIsr^0,f,c
  3445  00185E  362F               	rlcf	(??_highIsr+1)^0,f,c
  3446  001860  2EE8               	decfsz	wreg,f,c
  3447  001862  EF2D  F00C         	goto	i2u243_45
  3448  001866  51D6               	movf	(_objs+28)& (0+255),w,b
  3449  001868  6E30               	movwf	(??_highIsr+2)^0,c
  3450  00186A  6A31               	clrf	(??_highIsr+3)^0,c
  3451  00186C  90D8               	bcf	status,0,c
  3452  00186E  3630               	rlcf	(??_highIsr+2)^0,f,c
  3453  001870  3631               	rlcf	(??_highIsr+3)^0,f,c
  3454  001872  0EDE               	movlw	222
  3455  001874  6E32               	movwf	(??_highIsr+4)^0,c
  3456  001876  0EFF               	movlw	255
  3457  001878  6E33               	movwf	(??_highIsr+5)^0,c
  3458  00187A  0E00               	movlw	low _display
  3459  00187C  6E34               	movwf	(??_highIsr+6)^0,c
  3460  00187E  0E01               	movlw	high _display
  3461  001880  6E35               	movwf	(??_highIsr+7)^0,c
  3462  001882  5032               	movf	(??_highIsr+4)^0,w,c
  3463  001884  2634               	addwf	(??_highIsr+6)^0,f,c
  3464  001886  5033               	movf	(??_highIsr+5)^0,w,c
  3465  001888  2235               	addwfc	(??_highIsr+7)^0,f,c
  3466  00188A  5030               	movf	(??_highIsr+2)^0,w,c
  3467  00188C  2634               	addwf	(??_highIsr+6)^0,f,c
  3468  00188E  5031               	movf	(??_highIsr+3)^0,w,c
  3469  001890  2235               	addwfc	(??_highIsr+7)^0,f,c
  3470  001892  502E               	movf	??_highIsr^0,w,c
  3471  001894  2434               	addwf	(??_highIsr+6)^0,w,c
  3472  001896  6ED9               	movwf	fsr2l,c
  3473  001898  502F               	movf	(??_highIsr+1)^0,w,c
  3474  00189A  2035               	addwfc	(??_highIsr+7)^0,w,c
  3475  00189C  6EDA               	movwf	fsr2h,c
  3476  00189E  0EDD               	movlw	low (_objs+35)
  3477  0018A0  6EDE               	movwf	postinc2,c
  3478  0018A2  0E00               	movlw	high (_objs+35)
  3479  0018A4  6EDD               	movwf	postdec2,c
  3480  0018A6                     
  3481                           ; BSR set to: 0
  3482                           ;main.c: 85:                     objs[4].x = objs[4].y = objs[4].oldX = objs[4].oldY = 0
      +                          ;
  3483  0018A6  0E00               	movlw	0
  3484  0018A8  6FD9               	movwf	(_objs+31)& (0+255),b
  3485  0018AA  C0D9  F0D8         	movff	_objs+31,_objs+30
  3486  0018AE  C0D8  F0D7         	movff	_objs+30,_objs+29
  3487  0018B2  C0D7  F0D6         	movff	_objs+29,_objs+28
  3488  0018B6                     
  3489                           ; BSR set to: 0
  3490                           ;main.c: 86:                     game_state = GS_INACTIVE;
  3491  0018B6  0E01               	movlw	1
  3492  0018B8  6E5F               	movwf	_game_state^0,c
  3493  0018BA                     
  3494                           ; BSR set to: 0
  3495                           ;main.c: 88:                     curFrisbeeSteps = 0;
  3496  0018BA  0E00               	movlw	0
  3497  0018BC  6E3D               	movwf	(_curFrisbeeSteps+1)^0,c
  3498  0018BE  0E00               	movlw	0
  3499  0018C0  6E3C               	movwf	_curFrisbeeSteps^0,c
  3500  0018C2  EF63  F00C         	goto	i2l2682
  3501  0018C6                     i2l225:
  3502  0018C6                     i2l2682:
  3503                           
  3504                           ;main.c: 94:     if (INTCONbits.INT0IF ){
  3505  0018C6  A2F2               	btfss	242,1,c	;volatile
  3506  0018C8  EF68  F00C         	goto	i2u244_41
  3507  0018CC  EF6A  F00C         	goto	i2u244_40
  3508  0018D0                     i2u244_41:
  3509  0018D0  EF25  F00D         	goto	i2l228
  3510  0018D4                     i2u244_40:
  3511  0018D4                     
  3512                           ;main.c: 95:         if (acceptInterrupts) {
  3513  0018D4  5051               	movf	_acceptInterrupts^0,w,c
  3514  0018D6  B4D8               	btfsc	status,2,c
  3515  0018D8  EF70  F00C         	goto	i2u245_41
  3516  0018DC  EF72  F00C         	goto	i2u245_40
  3517  0018E0                     i2u245_41:
  3518  0018E0  EF06  F00E         	goto	i2l2766
  3519  0018E4                     i2u245_40:
  3520  0018E4                     
  3521                           ;main.c: 96:             a++;
  3522  0018E4  4A4E               	infsnz	_a^0,f,c
  3523  0018E6  2A4F               	incf	(_a+1)^0,f,c
  3524  0018E8                     
  3525                           ;main.c: 97:             SetupDebouncingTimer();
  3526  0018E8  EC89  F018         	call	_SetupDebouncingTimer	;wreg free
  3527  0018EC                     
  3528                           ;main.c: 99:             if (objs[selectedPlayer].state == OS_SEL_W_FRISBEE) {
  3529  0018EC  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3530  0018F0  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3531  0018F4  0E00               	movlw	0
  3532  0018F6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3533  0018F8  0E07               	movlw	7
  3534  0018FA  6E03               	movwf	i2___wmul@multiplicand^0,c
  3535  0018FC  EC5D  F018         	call	i2___wmul	;wreg free
  3536  001900  0EC0               	movlw	low (_objs+6)
  3537  001902  2401               	addwf	?i2___wmul^0,w,c
  3538  001904  6ED9               	movwf	fsr2l,c
  3539  001906  0E00               	movlw	high (_objs+6)
  3540  001908  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3541  00190A  6EDA               	movwf	fsr2h,c
  3542  00190C  0E02               	movlw	2
  3543  00190E  18DE               	xorwf	postinc2,w,c
  3544  001910  A4D8               	btfss	status,2,c
  3545  001912  EF8D  F00C         	goto	i2u246_41
  3546  001916  EF8F  F00C         	goto	i2u246_40
  3547  00191A                     i2u246_41:
  3548  00191A  EF06  F00E         	goto	i2l2766
  3549  00191E                     i2u246_40:
  3550  00191E                     
  3551                           ;main.c: 100:                 frisbeeSteps = compute_frisbee_target_and_route(objs[selec
      +                          tedPlayer].x, objs[selectedPlayer].y);
  3552  00191E  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3553  001922  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3554  001926  0E00               	movlw	0
  3555  001928  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3556  00192A  0E07               	movlw	7
  3557  00192C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3558  00192E  EC5D  F018         	call	i2___wmul	;wreg free
  3559  001932  0EBA               	movlw	low _objs
  3560  001934  2401               	addwf	?i2___wmul^0,w,c
  3561  001936  6ED9               	movwf	fsr2l,c
  3562  001938  0E00               	movlw	high _objs
  3563  00193A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3564  00193C  6EDA               	movwf	fsr2h,c
  3565  00193E  50DF               	movf	indf2,w,c
  3566  001940  6E2E               	movwf	??_highIsr^0,c
  3567  001942  502E               	movf	??_highIsr^0,w,c
  3568  001944  6E0E               	movwf	compute_frisbee_target_and_route@current_fisbee_x_position^0,c
  3569  001946  6A0F               	clrf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,c
  3570  001948  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3571  00194C  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3572  001950  0E00               	movlw	0
  3573  001952  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3574  001954  0E07               	movlw	7
  3575  001956  6E03               	movwf	i2___wmul@multiplicand^0,c
  3576  001958  EC5D  F018         	call	i2___wmul	;wreg free
  3577  00195C  0EBB               	movlw	low (_objs+1)
  3578  00195E  2401               	addwf	?i2___wmul^0,w,c
  3579  001960  6ED9               	movwf	fsr2l,c
  3580  001962  0E00               	movlw	high (_objs+1)
  3581  001964  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3582  001966  6EDA               	movwf	fsr2h,c
  3583  001968  50DF               	movf	indf2,w,c
  3584  00196A  6E2F               	movwf	(??_highIsr+1)^0,c
  3585  00196C  502F               	movf	(??_highIsr+1)^0,w,c
  3586  00196E  6E10               	movwf	compute_frisbee_target_and_route@current_fisbee_y_position^0,c
  3587  001970  6A11               	clrf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,c
  3588  001972  EC17  F00E         	call	_compute_frisbee_target_and_route	;wreg free
  3589  001976  C00E  F03E         	movff	?_compute_frisbee_target_and_route,_frisbeeSteps
  3590  00197A  C00F  F03F         	movff	?_compute_frisbee_target_and_route+1,_frisbeeSteps+1
  3591  00197E                     
  3592                           ;main.c: 102:                 objs[4].active = 1;
  3593  00197E  0E01               	movlw	1
  3594  001980  0100               	movlb	0	; () banked
  3595  001982  6FDA               	movwf	(_objs+32)& (0+255),b
  3596  001984                     
  3597                           ; BSR set to: 0
  3598                           ;main.c: 104:                 objs[4].x = frisbee_steps[frisbeeSteps-1][0];
  3599  001984  0EFC               	movlw	252
  3600  001986  6E2E               	movwf	??_highIsr^0,c
  3601  001988  0EFF               	movlw	255
  3602  00198A  6E2F               	movwf	(??_highIsr+1)^0,c
  3603  00198C  0E80               	movlw	low _frisbee_steps
  3604  00198E  6E30               	movwf	(??_highIsr+2)^0,c
  3605  001990  0E01               	movlw	high _frisbee_steps
  3606  001992  6E31               	movwf	(??_highIsr+3)^0,c
  3607  001994  502E               	movf	??_highIsr^0,w,c
  3608  001996  2630               	addwf	(??_highIsr+2)^0,f,c
  3609  001998  502F               	movf	(??_highIsr+1)^0,w,c
  3610  00199A  2231               	addwfc	(??_highIsr+3)^0,f,c
  3611  00199C  90D8               	bcf	status,0,c
  3612  00199E  343E               	rlcf	_frisbeeSteps^0,w,c
  3613  0019A0  6ED9               	movwf	fsr2l,c
  3614  0019A2  343F               	rlcf	(_frisbeeSteps+1)^0,w,c
  3615  0019A4  6EDA               	movwf	fsr2h,c
  3616  0019A6  90D8               	bcf	status,0,c
  3617  0019A8  36D9               	rlcf	fsr2l,f,c
  3618  0019AA  36DA               	rlcf	fsr2h,f,c
  3619  0019AC  5030               	movf	(??_highIsr+2)^0,w,c
  3620  0019AE  26D9               	addwf	fsr2l,f,c
  3621  0019B0  5031               	movf	(??_highIsr+3)^0,w,c
  3622  0019B2  22DA               	addwfc	fsr2h,f,c
  3623  0019B4  50DF               	movf	indf2,w,c
  3624  0019B6  6FD6               	movwf	(_objs+28)& (0+255),b
  3625  0019B8                     
  3626                           ; BSR set to: 0
  3627                           ;main.c: 105:                 objs[4].y = frisbee_steps[frisbeeSteps-1][1];
  3628  0019B8  0EFE               	movlw	254
  3629  0019BA  6E2E               	movwf	??_highIsr^0,c
  3630  0019BC  0EFF               	movlw	255
  3631  0019BE  6E2F               	movwf	(??_highIsr+1)^0,c
  3632  0019C0  0E80               	movlw	low _frisbee_steps
  3633  0019C2  6E30               	movwf	(??_highIsr+2)^0,c
  3634  0019C4  0E01               	movlw	high _frisbee_steps
  3635  0019C6  6E31               	movwf	(??_highIsr+3)^0,c
  3636  0019C8  502E               	movf	??_highIsr^0,w,c
  3637  0019CA  2630               	addwf	(??_highIsr+2)^0,f,c
  3638  0019CC  502F               	movf	(??_highIsr+1)^0,w,c
  3639  0019CE  2231               	addwfc	(??_highIsr+3)^0,f,c
  3640  0019D0  90D8               	bcf	status,0,c
  3641  0019D2  343E               	rlcf	_frisbeeSteps^0,w,c
  3642  0019D4  6ED9               	movwf	fsr2l,c
  3643  0019D6  343F               	rlcf	(_frisbeeSteps+1)^0,w,c
  3644  0019D8  6EDA               	movwf	fsr2h,c
  3645  0019DA  90D8               	bcf	status,0,c
  3646  0019DC  36D9               	rlcf	fsr2l,f,c
  3647  0019DE  36DA               	rlcf	fsr2h,f,c
  3648  0019E0  5030               	movf	(??_highIsr+2)^0,w,c
  3649  0019E2  26D9               	addwf	fsr2l,f,c
  3650  0019E4  5031               	movf	(??_highIsr+3)^0,w,c
  3651  0019E6  22DA               	addwfc	fsr2h,f,c
  3652  0019E8  50DF               	movf	indf2,w,c
  3653  0019EA  6FD7               	movwf	(_objs+29)& (0+255),b
  3654  0019EC                     
  3655                           ; BSR set to: 0
  3656                           ;main.c: 106:                 objs[4].oldX = objs[4].oldY = 0;
  3657  0019EC  0E00               	movlw	0
  3658  0019EE  6FD9               	movwf	(_objs+31)& (0+255),b
  3659  0019F0  C0D9  F0D8         	movff	_objs+31,_objs+30
  3660  0019F4                     
  3661                           ; BSR set to: 0
  3662                           ;main.c: 108:                 objs[5].x = frisbee_steps[0][0];
  3663  0019F4  C180  F0DD         	movff	_frisbee_steps,_objs+35
  3664  0019F8                     
  3665                           ; BSR set to: 0
  3666                           ;main.c: 109:                 objs[5].y = frisbee_steps[0][1];
  3667  0019F8  C182  F0DE         	movff	_frisbee_steps+2,_objs+36
  3668  0019FC                     
  3669                           ; BSR set to: 0
  3670                           ;main.c: 110:                 objs[5].oldX = objs[5].oldY = 0;
  3671  0019FC  0E00               	movlw	0
  3672  0019FE  6FE0               	movwf	(_objs+38)& (0+255),b
  3673  001A00  C0E0  F0DF         	movff	_objs+38,_objs+37
  3674  001A04                     
  3675                           ; BSR set to: 0
  3676                           ;main.c: 111:                 objs[5].active = 1;
  3677  001A04  0E01               	movlw	1
  3678  001A06  6FE1               	movwf	(_objs+39)& (0+255),b
  3679  001A08                     
  3680                           ; BSR set to: 0
  3681                           ;main.c: 112:                 objs[5].state = OS_FLYING;
  3682  001A08  0E03               	movlw	3
  3683  001A0A  6FE3               	movwf	(_objs+41)& (0+255),b
  3684  001A0C                     
  3685                           ; BSR set to: 0
  3686                           ;main.c: 114:                 objs[selectedPlayer].state = OS_SELECTED;
  3687  001A0C  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3688  001A10  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3689  001A14  0E00               	movlw	0
  3690  001A16  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3691  001A18  0E07               	movlw	7
  3692  001A1A  6E03               	movwf	i2___wmul@multiplicand^0,c
  3693  001A1C  EC5D  F018         	call	i2___wmul	;wreg free
  3694  001A20  0EC0               	movlw	low (_objs+6)
  3695  001A22  2401               	addwf	?i2___wmul^0,w,c
  3696  001A24  6ED9               	movwf	fsr2l,c
  3697  001A26  0E00               	movlw	high (_objs+6)
  3698  001A28  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3699  001A2A  6EDA               	movwf	fsr2h,c
  3700  001A2C  0E01               	movlw	1
  3701  001A2E  6EDF               	movwf	indf2,c
  3702  001A30                     
  3703                           ;main.c: 116:                 CheckIfCaughtFrisbee();
  3704  001A30  EC6D  F015         	call	_CheckIfCaughtFrisbee	;wreg free
  3705  001A34                     
  3706                           ;main.c: 119:                 game_state = GS_ACTIVE;
  3707  001A34  0E00               	movlw	0
  3708  001A36  6E5F               	movwf	_game_state^0,c
  3709  001A38                     
  3710                           ;main.c: 121:                 PIR1bits.TMR1IF = 0;
  3711  001A38  909E               	bcf	158,0,c	;volatile
  3712  001A3A                     
  3713                           ;main.c: 122:                 T1CONbits.TMR1ON = 0;
  3714  001A3A  90CD               	bcf	205,0,c	;volatile
  3715  001A3C                     
  3716                           ;main.c: 123:                 TMR1L = 0xED;
  3717  001A3C  0EED               	movlw	237
  3718  001A3E  6ECE               	movwf	206,c	;volatile
  3719  001A40                     
  3720                           ;main.c: 124:                 TMR1H = 0x85;
  3721  001A40  0E85               	movlw	133
  3722  001A42  6ECF               	movwf	207,c	;volatile
  3723  001A44                     
  3724                           ;main.c: 125:                 T1CONbits.TMR1ON = 1;
  3725  001A44  80CD               	bsf	205,0,c	;volatile
  3726  001A46  EF06  F00E         	goto	i2l2766
  3727  001A4A                     i2l228:
  3728  001A4A  A0F0               	btfss	240,0,c	;volatile
  3729  001A4C  EF2A  F00D         	goto	i2u247_41
  3730  001A50  EF2C  F00D         	goto	i2u247_40
  3731  001A54                     i2u247_41:
  3732  001A54  EF7D  F00D         	goto	i2l232
  3733  001A58                     i2u247_40:
  3734  001A58                     
  3735                           ;main.c: 133:         if (acceptInterrupts) {
  3736  001A58  5051               	movf	_acceptInterrupts^0,w,c
  3737  001A5A  B4D8               	btfsc	status,2,c
  3738  001A5C  EF32  F00D         	goto	i2u248_41
  3739  001A60  EF34  F00D         	goto	i2u248_40
  3740  001A64                     i2u248_41:
  3741  001A64  EF06  F00E         	goto	i2l2766
  3742  001A68                     i2u248_40:
  3743  001A68                     
  3744                           ;main.c: 134:             b++;
  3745  001A68  4A4C               	infsnz	_b^0,f,c
  3746  001A6A  2A4D               	incf	(_b+1)^0,f,c
  3747  001A6C                     
  3748                           ;main.c: 135:             if (objs[selectedPlayer].state != OS_SEL_W_FRISBEE) {
  3749  001A6C  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3750  001A70  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3751  001A74  0E00               	movlw	0
  3752  001A76  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3753  001A78  0E07               	movlw	7
  3754  001A7A  6E03               	movwf	i2___wmul@multiplicand^0,c
  3755  001A7C  EC5D  F018         	call	i2___wmul	;wreg free
  3756  001A80  0EC0               	movlw	low (_objs+6)
  3757  001A82  2401               	addwf	?i2___wmul^0,w,c
  3758  001A84  6ED9               	movwf	fsr2l,c
  3759  001A86  0E00               	movlw	high (_objs+6)
  3760  001A88  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3761  001A8A  6EDA               	movwf	fsr2h,c
  3762  001A8C  0E02               	movlw	2
  3763  001A8E  18DE               	xorwf	postinc2,w,c
  3764  001A90  B4D8               	btfsc	status,2,c
  3765  001A92  EF4D  F00D         	goto	i2u249_41
  3766  001A96  EF4F  F00D         	goto	i2u249_40
  3767  001A9A                     i2u249_41:
  3768  001A9A  EF79  F00D         	goto	i2l2742
  3769  001A9E                     i2u249_40:
  3770  001A9E                     
  3771                           ;main.c: 136:                 objs[selectedPlayer].state = OS_DEFAULT;
  3772  001A9E  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3773  001AA2  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3774  001AA6  0E00               	movlw	0
  3775  001AA8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3776  001AAA  0E07               	movlw	7
  3777  001AAC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3778  001AAE  EC5D  F018         	call	i2___wmul	;wreg free
  3779  001AB2  0EC0               	movlw	low (_objs+6)
  3780  001AB4  2401               	addwf	?i2___wmul^0,w,c
  3781  001AB6  6ED9               	movwf	fsr2l,c
  3782  001AB8  0E00               	movlw	high (_objs+6)
  3783  001ABA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3784  001ABC  6EDA               	movwf	fsr2h,c
  3785  001ABE  0E00               	movlw	0
  3786  001AC0  6EDF               	movwf	indf2,c
  3787  001AC2                     
  3788                           ;main.c: 137:                 selectedPlayer++;
  3789  001AC2  4A48               	infsnz	_selectedPlayer^0,f,c
  3790  001AC4  2A49               	incf	(_selectedPlayer+1)^0,f,c
  3791  001AC6                     
  3792                           ;main.c: 138:                 selectedPlayer = selectedPlayer % 4;
  3793  001AC6  0E03               	movlw	3
  3794  001AC8  1448               	andwf	_selectedPlayer^0,w,c
  3795  001ACA  6E48               	movwf	_selectedPlayer^0,c
  3796  001ACC  6A49               	clrf	(_selectedPlayer+1)^0,c
  3797  001ACE                     
  3798                           ;main.c: 139:                 objs[selectedPlayer].state = OS_SELECTED;
  3799  001ACE  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3800  001AD2  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3801  001AD6  0E00               	movlw	0
  3802  001AD8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3803  001ADA  0E07               	movlw	7
  3804  001ADC  6E03               	movwf	i2___wmul@multiplicand^0,c
  3805  001ADE  EC5D  F018         	call	i2___wmul	;wreg free
  3806  001AE2  0EC0               	movlw	low (_objs+6)
  3807  001AE4  2401               	addwf	?i2___wmul^0,w,c
  3808  001AE6  6ED9               	movwf	fsr2l,c
  3809  001AE8  0E00               	movlw	high (_objs+6)
  3810  001AEA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3811  001AEC  6EDA               	movwf	fsr2h,c
  3812  001AEE  0E01               	movlw	1
  3813  001AF0  6EDF               	movwf	indf2,c
  3814  001AF2                     i2l2742:
  3815                           
  3816                           ;main.c: 143:             SetupDebouncingTimer();
  3817  001AF2  EC89  F018         	call	_SetupDebouncingTimer	;wreg free
  3818  001AF6  EF06  F00E         	goto	i2l2766
  3819  001AFA                     i2l232:
  3820  001AFA  A0F2               	btfss	242,0,c	;volatile
  3821  001AFC  EF82  F00D         	goto	i2u250_41
  3822  001B00  EF84  F00D         	goto	i2u250_40
  3823  001B04                     i2u250_41:
  3824  001B04  EF06  F00E         	goto	i2l2766
  3825  001B08                     i2u250_40:
  3826  001B08                     
  3827                           ;main.c: 148:         if (acceptInterrupts) {
  3828  001B08  5051               	movf	_acceptInterrupts^0,w,c
  3829  001B0A  B4D8               	btfsc	status,2,c
  3830  001B0C  EF8A  F00D         	goto	i2u251_41
  3831  001B10  EF8C  F00D         	goto	i2u251_40
  3832  001B14                     i2u251_41:
  3833  001B14  EF06  F00E         	goto	i2l2766
  3834  001B18                     i2u251_40:
  3835  001B18                     
  3836                           ;main.c: 149:             portbVals = portbVals >> 4;
  3837  001B18  3850               	swapf	_portbVals^0,w,c
  3838  001B1A  0B0F               	andlw	15
  3839  001B1C  6E50               	movwf	_portbVals^0,c
  3840                           
  3841                           ;main.c: 150:             switch (portbVals) {
  3842  001B1E  EFE5  F00D         	goto	i2l2760
  3843  001B22                     i2l2748:
  3844                           
  3845                           ;main.c: 152:                     up(&objs[selectedPlayer]);
  3846  001B22  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3847  001B26  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3848  001B2A  0E00               	movlw	0
  3849  001B2C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3850  001B2E  0E07               	movlw	7
  3851  001B30  6E03               	movwf	i2___wmul@multiplicand^0,c
  3852  001B32  EC5D  F018         	call	i2___wmul	;wreg free
  3853  001B36  0EBA               	movlw	low _objs
  3854  001B38  2401               	addwf	?i2___wmul^0,w,c
  3855  001B3A  6E0B               	movwf	up@pl^0,c
  3856  001B3C  0E00               	movlw	high _objs
  3857  001B3E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3858  001B40  6E0C               	movwf	(up@pl+1)^0,c
  3859  001B42  ECC3  F00F         	call	_up	;wreg free
  3860                           
  3861                           ;main.c: 153:                     break;
  3862  001B46  EF02  F00E         	goto	i2l2762
  3863  001B4A                     i2l2750:
  3864                           
  3865                           ;main.c: 155:                     right(&objs[selectedPlayer]);
  3866  001B4A  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3867  001B4E  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3868  001B52  0E00               	movlw	0
  3869  001B54  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3870  001B56  0E07               	movlw	7
  3871  001B58  6E03               	movwf	i2___wmul@multiplicand^0,c
  3872  001B5A  EC5D  F018         	call	i2___wmul	;wreg free
  3873  001B5E  0EBA               	movlw	low _objs
  3874  001B60  2401               	addwf	?i2___wmul^0,w,c
  3875  001B62  6E0B               	movwf	right@pl^0,c
  3876  001B64  0E00               	movlw	high _objs
  3877  001B66  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3878  001B68  6E0C               	movwf	(right@pl+1)^0,c
  3879  001B6A  EC1F  F012         	call	_right	;wreg free
  3880                           
  3881                           ;main.c: 156:                     break;
  3882  001B6E  EF02  F00E         	goto	i2l2762
  3883  001B72                     i2l2752:
  3884                           
  3885                           ;main.c: 158:                     down(&objs[selectedPlayer]);
  3886  001B72  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3887  001B76  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3888  001B7A  0E00               	movlw	0
  3889  001B7C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3890  001B7E  0E07               	movlw	7
  3891  001B80  6E03               	movwf	i2___wmul@multiplicand^0,c
  3892  001B82  EC5D  F018         	call	i2___wmul	;wreg free
  3893  001B86  0EBA               	movlw	low _objs
  3894  001B88  2401               	addwf	?i2___wmul^0,w,c
  3895  001B8A  6E0B               	movwf	down@pl^0,c
  3896  001B8C  0E00               	movlw	high _objs
  3897  001B8E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3898  001B90  6E0C               	movwf	(down@pl+1)^0,c
  3899  001B92  EC44  F013         	call	_down	;wreg free
  3900                           
  3901                           ;main.c: 159:                     break;
  3902  001B96  EF02  F00E         	goto	i2l2762
  3903  001B9A                     i2l2754:
  3904                           
  3905                           ;main.c: 161:                     left(&objs[selectedPlayer]);
  3906  001B9A  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  3907  001B9E  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  3908  001BA2  0E00               	movlw	0
  3909  001BA4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3910  001BA6  0E07               	movlw	7
  3911  001BA8  6E03               	movwf	i2___wmul@multiplicand^0,c
  3912  001BAA  EC5D  F018         	call	i2___wmul	;wreg free
  3913  001BAE  0EBA               	movlw	low _objs
  3914  001BB0  2401               	addwf	?i2___wmul^0,w,c
  3915  001BB2  6E0B               	movwf	left@pl^0,c
  3916  001BB4  0E00               	movlw	high _objs
  3917  001BB6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3918  001BB8  6E0C               	movwf	(left@pl+1)^0,c
  3919  001BBA  ECF3  F010         	call	_left	;wreg free
  3920                           
  3921                           ;main.c: 162:                     break;
  3922  001BBE  EF02  F00E         	goto	i2l2762
  3923  001BC2                     i2l2756:
  3924                           
  3925                           ;main.c: 164:                     portbVals = 0;
  3926  001BC2  0E00               	movlw	0
  3927  001BC4  6E50               	movwf	_portbVals^0,c
  3928                           
  3929                           ;main.c: 165:                     break;
  3930  001BC6  EF02  F00E         	goto	i2l2762
  3931  001BCA                     i2l2760:
  3932  001BCA  5050               	movf	_portbVals^0,w,c
  3933  001BCC  6E2E               	movwf	??_highIsr^0,c
  3934  001BCE  6A2F               	clrf	(??_highIsr+1)^0,c
  3935                           
  3936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3937                           ; Switch size 1, requested type "simple"
  3938                           ; Number of cases is 1, Range of values is 0 to 0
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte            4     3 (average)
  3942                           ;	Chosen strategy is simple_byte
  3943  001BD0  502F               	movf	(??_highIsr+1)^0,w,c
  3944  001BD2  0A00               	xorlw	0	; case 0
  3945  001BD4  B4D8               	btfsc	status,2,c
  3946  001BD6  EFEF  F00D         	goto	i2l3474
  3947  001BDA  EFE1  F00D         	goto	i2l2756
  3948  001BDE                     i2l3474:
  3949                           
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 4, Range of values is 7 to 14
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte           13     7 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956  001BDE  502E               	movf	??_highIsr^0,w,c
  3957  001BE0  0A07               	xorlw	7	; case 7
  3958  001BE2  B4D8               	btfsc	status,2,c
  3959  001BE4  EFCD  F00D         	goto	i2l2754
  3960  001BE8  0A0C               	xorlw	12	; case 11
  3961  001BEA  B4D8               	btfsc	status,2,c
  3962  001BEC  EFB9  F00D         	goto	i2l2752
  3963  001BF0  0A06               	xorlw	6	; case 13
  3964  001BF2  B4D8               	btfsc	status,2,c
  3965  001BF4  EFA5  F00D         	goto	i2l2750
  3966  001BF8  0A03               	xorlw	3	; case 14
  3967  001BFA  B4D8               	btfsc	status,2,c
  3968  001BFC  EF91  F00D         	goto	i2l2748
  3969  001C00  EFE1  F00D         	goto	i2l2756
  3970  001C04                     i2l2762:
  3971                           
  3972                           ;main.c: 168:             c++;
  3973  001C04  4A4A               	infsnz	_c^0,f,c
  3974  001C06  2A4B               	incf	(_c+1)^0,f,c
  3975  001C08  EF79  F00D         	goto	i2l2742
  3976  001C0C                     i2l2766:
  3977                           
  3978                           ;main.c: 172:     INTCON3bits.INT1IF = 0;
  3979  001C0C  90F0               	bcf	240,0,c	;volatile
  3980  001C0E                     
  3981                           ;main.c: 173:     INTCONbits.INT0IF = 0;
  3982  001C0E  92F2               	bcf	242,1,c	;volatile
  3983  001C10                     
  3984                           ;main.c: 174:     INTCONbits.RBIF = 0;
  3985  001C10  90F2               	bcf	242,0,c	;volatile
  3986  001C12  C03B  FFF4         	movff	??_highIsr+13,prodh
  3987  001C16  C03A  FFF3         	movff	??_highIsr+12,prodl
  3988  001C1A  C039  FFDA         	movff	??_highIsr+11,fsr2h
  3989  001C1E  C038  FFD9         	movff	??_highIsr+10,fsr2l
  3990  001C22  C037  FFE2         	movff	??_highIsr+9,fsr1h
  3991  001C26  C036  FFE1         	movff	??_highIsr+8,fsr1l
  3992  001C2A  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3993  001C2C  0011               	retfie		f
  3994  001C2E                     __end_of_highIsr:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _up *****************
  3998 ;; Defined at:
  3999 ;;		line 535 in file "main.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  pl              2   10[COMRAM] PTR struct GameElement
  4002 ;;		 -> objs(42), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;Total ram usage:       12 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    1
  4021 ;; This function calls:
  4022 ;;		_CatchFrisbee
  4023 ;; This function is called by:
  4024 ;;		_highIsr
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text13
  4029  001F86                     __ptext13:
  4030                           	callstack 0
  4031  001F86                     _up:
  4032                           	callstack 23
  4033  001F86                     
  4034                           ;main.c: 536:     if (pl->y == 1) return;
  4035  001F86  EE20 F001          	lfsr	2,1
  4036  001F8A  500B               	movf	up@pl^0,w,c
  4037  001F8C  26D9               	addwf	fsr2l,f,c
  4038  001F8E  500C               	movf	(up@pl+1)^0,w,c
  4039  001F90  22DA               	addwfc	fsr2h,f,c
  4040  001F92  04DE               	decf	postinc2,w,c
  4041  001F94  A4D8               	btfss	status,2,c
  4042  001F96  EFCF  F00F         	goto	i2u174_41
  4043  001F9A  EFD1  F00F         	goto	i2u174_40
  4044  001F9E                     i2u174_41:
  4045  001F9E  EFD3  F00F         	goto	i2l2300
  4046  001FA2                     i2u174_40:
  4047  001FA2  EFF2  F010         	goto	i2l363
  4048  001FA6                     i2l2300:
  4049                           
  4050                           ;main.c: 537:     if (display[pl->y-2][pl->x-1] != ((void*)0)) {
  4051  001FA6  EE20 F001          	lfsr	2,1
  4052  001FAA  500B               	movf	up@pl^0,w,c
  4053  001FAC  26D9               	addwf	fsr2l,f,c
  4054  001FAE  500C               	movf	(up@pl+1)^0,w,c
  4055  001FB0  22DA               	addwfc	fsr2h,f,c
  4056  001FB2  50DF               	movf	indf2,w,c
  4057  001FB4  6E0D               	movwf	??_up^0,c
  4058  001FB6  6A0E               	clrf	(??_up+1)^0,c
  4059  001FB8  0E05               	movlw	5
  4060  001FBA                     i2u175_45:
  4061  001FBA  90D8               	bcf	status,0,c
  4062  001FBC  360D               	rlcf	??_up^0,f,c
  4063  001FBE  360E               	rlcf	(??_up+1)^0,f,c
  4064  001FC0  2EE8               	decfsz	wreg,f,c
  4065  001FC2  EFDD  F00F         	goto	i2u175_45
  4066  001FC6  C00B  FFD9         	movff	up@pl,fsr2l
  4067  001FCA  C00C  FFDA         	movff	up@pl+1,fsr2h
  4068  001FCE  50DF               	movf	indf2,w,c
  4069  001FD0  6E0F               	movwf	(??_up+2)^0,c
  4070  001FD2  6A10               	clrf	(??_up+3)^0,c
  4071  001FD4  90D8               	bcf	status,0,c
  4072  001FD6  360F               	rlcf	(??_up+2)^0,f,c
  4073  001FD8  3610               	rlcf	(??_up+3)^0,f,c
  4074  001FDA  0EBE               	movlw	190
  4075  001FDC  6E11               	movwf	(??_up+4)^0,c
  4076  001FDE  0EFF               	movlw	255
  4077  001FE0  6E12               	movwf	(??_up+5)^0,c
  4078  001FE2  0E00               	movlw	low _display
  4079  001FE4  6E13               	movwf	(??_up+6)^0,c
  4080  001FE6  0E01               	movlw	high _display
  4081  001FE8  6E14               	movwf	(??_up+7)^0,c
  4082  001FEA  5011               	movf	(??_up+4)^0,w,c
  4083  001FEC  2613               	addwf	(??_up+6)^0,f,c
  4084  001FEE  5012               	movf	(??_up+5)^0,w,c
  4085  001FF0  2214               	addwfc	(??_up+7)^0,f,c
  4086  001FF2  500F               	movf	(??_up+2)^0,w,c
  4087  001FF4  2613               	addwf	(??_up+6)^0,f,c
  4088  001FF6  5010               	movf	(??_up+3)^0,w,c
  4089  001FF8  2214               	addwfc	(??_up+7)^0,f,c
  4090  001FFA  500D               	movf	??_up^0,w,c
  4091  001FFC  2413               	addwf	(??_up+6)^0,w,c
  4092  001FFE  6ED9               	movwf	fsr2l,c
  4093  002000  500E               	movf	(??_up+1)^0,w,c
  4094  002002  2014               	addwfc	(??_up+7)^0,w,c
  4095  002004  6EDA               	movwf	fsr2h,c
  4096  002006  50DE               	movf	postinc2,w,c
  4097  002008  10DE               	iorwf	postinc2,w,c
  4098  00200A  B4D8               	btfsc	status,2,c
  4099  00200C  EF0A  F010         	goto	i2u176_41
  4100  002010  EF0C  F010         	goto	i2u176_40
  4101  002014                     i2u176_41:
  4102  002014  EFD1  F010         	goto	i2l2314
  4103  002018                     i2u176_40:
  4104  002018                     
  4105                           ;main.c: 538:         if (display[pl->y-2][pl->x-1]->type == OT_PLAYERA) return;
  4106  002018  EE20 F001          	lfsr	2,1
  4107  00201C  500B               	movf	up@pl^0,w,c
  4108  00201E  26D9               	addwf	fsr2l,f,c
  4109  002020  500C               	movf	(up@pl+1)^0,w,c
  4110  002022  22DA               	addwfc	fsr2h,f,c
  4111  002024  50DF               	movf	indf2,w,c
  4112  002026  6E0D               	movwf	??_up^0,c
  4113  002028  6A0E               	clrf	(??_up+1)^0,c
  4114  00202A  0E05               	movlw	5
  4115  00202C                     i2u177_45:
  4116  00202C  90D8               	bcf	status,0,c
  4117  00202E  360D               	rlcf	??_up^0,f,c
  4118  002030  360E               	rlcf	(??_up+1)^0,f,c
  4119  002032  2EE8               	decfsz	wreg,f,c
  4120  002034  EF16  F010         	goto	i2u177_45
  4121  002038  C00B  FFD9         	movff	up@pl,fsr2l
  4122  00203C  C00C  FFDA         	movff	up@pl+1,fsr2h
  4123  002040  50DF               	movf	indf2,w,c
  4124  002042  6E0F               	movwf	(??_up+2)^0,c
  4125  002044  6A10               	clrf	(??_up+3)^0,c
  4126  002046  90D8               	bcf	status,0,c
  4127  002048  360F               	rlcf	(??_up+2)^0,f,c
  4128  00204A  3610               	rlcf	(??_up+3)^0,f,c
  4129  00204C  0EBE               	movlw	190
  4130  00204E  6E11               	movwf	(??_up+4)^0,c
  4131  002050  0EFF               	movlw	255
  4132  002052  6E12               	movwf	(??_up+5)^0,c
  4133  002054  0E00               	movlw	low _display
  4134  002056  6E13               	movwf	(??_up+6)^0,c
  4135  002058  0E01               	movlw	high _display
  4136  00205A  6E14               	movwf	(??_up+7)^0,c
  4137  00205C  5011               	movf	(??_up+4)^0,w,c
  4138  00205E  2613               	addwf	(??_up+6)^0,f,c
  4139  002060  5012               	movf	(??_up+5)^0,w,c
  4140  002062  2214               	addwfc	(??_up+7)^0,f,c
  4141  002064  500F               	movf	(??_up+2)^0,w,c
  4142  002066  2613               	addwf	(??_up+6)^0,f,c
  4143  002068  5010               	movf	(??_up+3)^0,w,c
  4144  00206A  2214               	addwfc	(??_up+7)^0,f,c
  4145  00206C  500D               	movf	??_up^0,w,c
  4146  00206E  2413               	addwf	(??_up+6)^0,w,c
  4147  002070  6ED9               	movwf	fsr2l,c
  4148  002072  500E               	movf	(??_up+1)^0,w,c
  4149  002074  2014               	addwfc	(??_up+7)^0,w,c
  4150  002076  6EDA               	movwf	fsr2h,c
  4151  002078  EE10 F005          	lfsr	1,5
  4152  00207C  50DE               	movf	postinc2,w,c
  4153  00207E  26E1               	addwf	fsr1l,f,c
  4154  002080  50DD               	movf	postdec2,w,c
  4155  002082  22E2               	addwfc	fsr1h,f,c
  4156  002084  50E7               	movf	indf1,w,c
  4157  002086  A4D8               	btfss	status,2,c
  4158  002088  EF48  F010         	goto	i2u178_41
  4159  00208C  EF4A  F010         	goto	i2u178_40
  4160  002090                     i2u178_41:
  4161  002090  EF4C  F010         	goto	i2l2306
  4162  002094                     i2u178_40:
  4163  002094  EFF2  F010         	goto	i2l363
  4164  002098                     i2l2306:
  4165                           
  4166                           ;main.c: 539:         if (display[pl->y-2][pl->x-1]->type == OT_PLAYERB) return;
  4167  002098  EE20 F001          	lfsr	2,1
  4168  00209C  500B               	movf	up@pl^0,w,c
  4169  00209E  26D9               	addwf	fsr2l,f,c
  4170  0020A0  500C               	movf	(up@pl+1)^0,w,c
  4171  0020A2  22DA               	addwfc	fsr2h,f,c
  4172  0020A4  50DF               	movf	indf2,w,c
  4173  0020A6  6E0D               	movwf	??_up^0,c
  4174  0020A8  6A0E               	clrf	(??_up+1)^0,c
  4175  0020AA  0E05               	movlw	5
  4176  0020AC                     i2u179_45:
  4177  0020AC  90D8               	bcf	status,0,c
  4178  0020AE  360D               	rlcf	??_up^0,f,c
  4179  0020B0  360E               	rlcf	(??_up+1)^0,f,c
  4180  0020B2  2EE8               	decfsz	wreg,f,c
  4181  0020B4  EF56  F010         	goto	i2u179_45
  4182  0020B8  C00B  FFD9         	movff	up@pl,fsr2l
  4183  0020BC  C00C  FFDA         	movff	up@pl+1,fsr2h
  4184  0020C0  50DF               	movf	indf2,w,c
  4185  0020C2  6E0F               	movwf	(??_up+2)^0,c
  4186  0020C4  6A10               	clrf	(??_up+3)^0,c
  4187  0020C6  90D8               	bcf	status,0,c
  4188  0020C8  360F               	rlcf	(??_up+2)^0,f,c
  4189  0020CA  3610               	rlcf	(??_up+3)^0,f,c
  4190  0020CC  0EBE               	movlw	190
  4191  0020CE  6E11               	movwf	(??_up+4)^0,c
  4192  0020D0  0EFF               	movlw	255
  4193  0020D2  6E12               	movwf	(??_up+5)^0,c
  4194  0020D4  0E00               	movlw	low _display
  4195  0020D6  6E13               	movwf	(??_up+6)^0,c
  4196  0020D8  0E01               	movlw	high _display
  4197  0020DA  6E14               	movwf	(??_up+7)^0,c
  4198  0020DC  5011               	movf	(??_up+4)^0,w,c
  4199  0020DE  2613               	addwf	(??_up+6)^0,f,c
  4200  0020E0  5012               	movf	(??_up+5)^0,w,c
  4201  0020E2  2214               	addwfc	(??_up+7)^0,f,c
  4202  0020E4  500F               	movf	(??_up+2)^0,w,c
  4203  0020E6  2613               	addwf	(??_up+6)^0,f,c
  4204  0020E8  5010               	movf	(??_up+3)^0,w,c
  4205  0020EA  2214               	addwfc	(??_up+7)^0,f,c
  4206  0020EC  500D               	movf	??_up^0,w,c
  4207  0020EE  2413               	addwf	(??_up+6)^0,w,c
  4208  0020F0  6ED9               	movwf	fsr2l,c
  4209  0020F2  500E               	movf	(??_up+1)^0,w,c
  4210  0020F4  2014               	addwfc	(??_up+7)^0,w,c
  4211  0020F6  6EDA               	movwf	fsr2h,c
  4212  0020F8  EE10 F005          	lfsr	1,5
  4213  0020FC  50DE               	movf	postinc2,w,c
  4214  0020FE  26E1               	addwf	fsr1l,f,c
  4215  002100  50DD               	movf	postdec2,w,c
  4216  002102  22E2               	addwfc	fsr1h,f,c
  4217  002104  04E6               	decf	postinc1,w,c
  4218  002106  A4D8               	btfss	status,2,c
  4219  002108  EF88  F010         	goto	i2u180_41
  4220  00210C  EF8A  F010         	goto	i2u180_40
  4221  002110                     i2u180_41:
  4222  002110  EF8C  F010         	goto	i2l2310
  4223  002114                     i2u180_40:
  4224  002114  EFF2  F010         	goto	i2l363
  4225  002118                     i2l2310:
  4226                           
  4227                           ;main.c: 540:         if (display[pl->y-2][pl->x-1]->type == OT_FRISBEE) {
  4228  002118  EE20 F001          	lfsr	2,1
  4229  00211C  500B               	movf	up@pl^0,w,c
  4230  00211E  26D9               	addwf	fsr2l,f,c
  4231  002120  500C               	movf	(up@pl+1)^0,w,c
  4232  002122  22DA               	addwfc	fsr2h,f,c
  4233  002124  50DF               	movf	indf2,w,c
  4234  002126  6E0D               	movwf	??_up^0,c
  4235  002128  6A0E               	clrf	(??_up+1)^0,c
  4236  00212A  0E05               	movlw	5
  4237  00212C                     i2u181_45:
  4238  00212C  90D8               	bcf	status,0,c
  4239  00212E  360D               	rlcf	??_up^0,f,c
  4240  002130  360E               	rlcf	(??_up+1)^0,f,c
  4241  002132  2EE8               	decfsz	wreg,f,c
  4242  002134  EF96  F010         	goto	i2u181_45
  4243  002138  C00B  FFD9         	movff	up@pl,fsr2l
  4244  00213C  C00C  FFDA         	movff	up@pl+1,fsr2h
  4245  002140  50DF               	movf	indf2,w,c
  4246  002142  6E0F               	movwf	(??_up+2)^0,c
  4247  002144  6A10               	clrf	(??_up+3)^0,c
  4248  002146  90D8               	bcf	status,0,c
  4249  002148  360F               	rlcf	(??_up+2)^0,f,c
  4250  00214A  3610               	rlcf	(??_up+3)^0,f,c
  4251  00214C  0EBE               	movlw	190
  4252  00214E  6E11               	movwf	(??_up+4)^0,c
  4253  002150  0EFF               	movlw	255
  4254  002152  6E12               	movwf	(??_up+5)^0,c
  4255  002154  0E00               	movlw	low _display
  4256  002156  6E13               	movwf	(??_up+6)^0,c
  4257  002158  0E01               	movlw	high _display
  4258  00215A  6E14               	movwf	(??_up+7)^0,c
  4259  00215C  5011               	movf	(??_up+4)^0,w,c
  4260  00215E  2613               	addwf	(??_up+6)^0,f,c
  4261  002160  5012               	movf	(??_up+5)^0,w,c
  4262  002162  2214               	addwfc	(??_up+7)^0,f,c
  4263  002164  500F               	movf	(??_up+2)^0,w,c
  4264  002166  2613               	addwf	(??_up+6)^0,f,c
  4265  002168  5010               	movf	(??_up+3)^0,w,c
  4266  00216A  2214               	addwfc	(??_up+7)^0,f,c
  4267  00216C  500D               	movf	??_up^0,w,c
  4268  00216E  2413               	addwf	(??_up+6)^0,w,c
  4269  002170  6ED9               	movwf	fsr2l,c
  4270  002172  500E               	movf	(??_up+1)^0,w,c
  4271  002174  2014               	addwfc	(??_up+7)^0,w,c
  4272  002176  6EDA               	movwf	fsr2h,c
  4273  002178  EE10 F005          	lfsr	1,5
  4274  00217C  50DE               	movf	postinc2,w,c
  4275  00217E  26E1               	addwf	fsr1l,f,c
  4276  002180  50DD               	movf	postdec2,w,c
  4277  002182  22E2               	addwfc	fsr1h,f,c
  4278  002184  0E02               	movlw	2
  4279  002186  18E6               	xorwf	postinc1,w,c
  4280  002188  A4D8               	btfss	status,2,c
  4281  00218A  EFC9  F010         	goto	i2u182_41
  4282  00218E  EFCB  F010         	goto	i2u182_40
  4283  002192                     i2u182_41:
  4284  002192  EFD1  F010         	goto	i2l2314
  4285  002196                     i2u182_40:
  4286  002196                     
  4287                           ;main.c: 541:             CatchFrisbee(pl);
  4288  002196  C00B  F001         	movff	up@pl,CatchFrisbee@pl
  4289  00219A  C00C  F002         	movff	up@pl+1,CatchFrisbee@pl+1
  4290  00219E  EC13  F016         	call	_CatchFrisbee	;wreg free
  4291  0021A2                     i2l2314:
  4292                           
  4293                           ;main.c: 544:     pl->oldX = pl->x;
  4294  0021A2  C00B  FFD9         	movff	up@pl,fsr2l
  4295  0021A6  C00C  FFDA         	movff	up@pl+1,fsr2h
  4296  0021AA  EE10 F002          	lfsr	1,2
  4297  0021AE  500B               	movf	up@pl^0,w,c
  4298  0021B0  26E1               	addwf	fsr1l,f,c
  4299  0021B2  500C               	movf	(up@pl+1)^0,w,c
  4300  0021B4  22E2               	addwfc	fsr1h,f,c
  4301  0021B6  CFDF FFE7          	movff	indf2,indf1
  4302  0021BA                     
  4303                           ;main.c: 545:     pl->oldY = pl->y;
  4304  0021BA  EE20 F001          	lfsr	2,1
  4305  0021BE  500B               	movf	up@pl^0,w,c
  4306  0021C0  26D9               	addwf	fsr2l,f,c
  4307  0021C2  500C               	movf	(up@pl+1)^0,w,c
  4308  0021C4  22DA               	addwfc	fsr2h,f,c
  4309  0021C6  EE10 F003          	lfsr	1,3
  4310  0021CA  500B               	movf	up@pl^0,w,c
  4311  0021CC  26E1               	addwf	fsr1l,f,c
  4312  0021CE  500C               	movf	(up@pl+1)^0,w,c
  4313  0021D0  22E2               	addwfc	fsr1h,f,c
  4314  0021D2  CFDF FFE7          	movff	indf2,indf1
  4315  0021D6                     
  4316                           ;main.c: 546:     pl->y--;
  4317  0021D6  EE20 F001          	lfsr	2,1
  4318  0021DA  500B               	movf	up@pl^0,w,c
  4319  0021DC  26D9               	addwf	fsr2l,f,c
  4320  0021DE  500C               	movf	(up@pl+1)^0,w,c
  4321  0021E0  22DA               	addwfc	fsr2h,f,c
  4322  0021E2  06DF               	decf	indf2,f,c
  4323  0021E4                     i2l363:
  4324  0021E4  0012               	return		;funcret
  4325  0021E6                     __end_of_up:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _right *****************
  4329 ;; Defined at:
  4330 ;;		line 521 in file "main.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  pl              2   10[COMRAM] PTR struct GameElement
  4333 ;;		 -> objs(42), 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;Total ram usage:       11 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    1
  4352 ;; This function calls:
  4353 ;;		_CatchFrisbee
  4354 ;; This function is called by:
  4355 ;;		_highIsr
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text14
  4360  00243E                     __ptext14:
  4361                           	callstack 0
  4362  00243E                     _right:
  4363                           	callstack 23
  4364  00243E                     
  4365                           ;main.c: 522:     if (pl->x == 16) return;
  4366  00243E  C00B  FFD9         	movff	right@pl,fsr2l
  4367  002442  C00C  FFDA         	movff	right@pl+1,fsr2h
  4368  002446  0E10               	movlw	16
  4369  002448  18DE               	xorwf	postinc2,w,c
  4370  00244A  A4D8               	btfss	status,2,c
  4371  00244C  EF2A  F012         	goto	i2u183_41
  4372  002450  EF2C  F012         	goto	i2u183_40
  4373  002454                     i2u183_41:
  4374  002454  EF2E  F012         	goto	i2l2326
  4375  002458                     i2u183_40:
  4376  002458  EF43  F013         	goto	i2l355
  4377  00245C                     i2l2326:
  4378                           
  4379                           ;main.c: 523:     if (display[pl->y-1][pl->x] != ((void*)0)) {
  4380  00245C  EE20 F001          	lfsr	2,1
  4381  002460  500B               	movf	right@pl^0,w,c
  4382  002462  26D9               	addwf	fsr2l,f,c
  4383  002464  500C               	movf	(right@pl+1)^0,w,c
  4384  002466  22DA               	addwfc	fsr2h,f,c
  4385  002468  50DF               	movf	indf2,w,c
  4386  00246A  6E0D               	movwf	??_right^0,c
  4387  00246C  6A0E               	clrf	(??_right+1)^0,c
  4388  00246E  0E05               	movlw	5
  4389  002470                     i2u184_45:
  4390  002470  90D8               	bcf	status,0,c
  4391  002472  360D               	rlcf	??_right^0,f,c
  4392  002474  360E               	rlcf	(??_right+1)^0,f,c
  4393  002476  2EE8               	decfsz	wreg,f,c
  4394  002478  EF38  F012         	goto	i2u184_45
  4395  00247C  C00B  FFD9         	movff	right@pl,fsr2l
  4396  002480  C00C  FFDA         	movff	right@pl+1,fsr2h
  4397  002484  50DF               	movf	indf2,w,c
  4398  002486  6E0F               	movwf	(??_right+2)^0,c
  4399  002488  500F               	movf	(??_right+2)^0,w,c
  4400  00248A  0D02               	mullw	2
  4401  00248C  0EE0               	movlw	224
  4402  00248E  6E10               	movwf	(??_right+3)^0,c
  4403  002490  0EFF               	movlw	255
  4404  002492  6E11               	movwf	(??_right+4)^0,c
  4405  002494  0E00               	movlw	low _display
  4406  002496  6E12               	movwf	(??_right+5)^0,c
  4407  002498  0E01               	movlw	high _display
  4408  00249A  6E13               	movwf	(??_right+6)^0,c
  4409  00249C  5010               	movf	(??_right+3)^0,w,c
  4410  00249E  2612               	addwf	(??_right+5)^0,f,c
  4411  0024A0  5011               	movf	(??_right+4)^0,w,c
  4412  0024A2  2213               	addwfc	(??_right+6)^0,f,c
  4413  0024A4  50F3               	movf	243,w,c
  4414  0024A6  2612               	addwf	(??_right+5)^0,f,c
  4415  0024A8  50F4               	movf	244,w,c
  4416  0024AA  2213               	addwfc	(??_right+6)^0,f,c
  4417  0024AC  500D               	movf	??_right^0,w,c
  4418  0024AE  2412               	addwf	(??_right+5)^0,w,c
  4419  0024B0  6ED9               	movwf	fsr2l,c
  4420  0024B2  500E               	movf	(??_right+1)^0,w,c
  4421  0024B4  2013               	addwfc	(??_right+6)^0,w,c
  4422  0024B6  6EDA               	movwf	fsr2h,c
  4423  0024B8  50DE               	movf	postinc2,w,c
  4424  0024BA  10DE               	iorwf	postinc2,w,c
  4425  0024BC  B4D8               	btfsc	status,2,c
  4426  0024BE  EF63  F012         	goto	i2u185_41
  4427  0024C2  EF65  F012         	goto	i2u185_40
  4428  0024C6                     i2u185_41:
  4429  0024C6  EF24  F013         	goto	i2l2340
  4430  0024CA                     i2u185_40:
  4431  0024CA                     
  4432                           ;main.c: 524:         if (display[pl->y-1][pl->x]->type == OT_PLAYERA) return;
  4433  0024CA  EE20 F001          	lfsr	2,1
  4434  0024CE  500B               	movf	right@pl^0,w,c
  4435  0024D0  26D9               	addwf	fsr2l,f,c
  4436  0024D2  500C               	movf	(right@pl+1)^0,w,c
  4437  0024D4  22DA               	addwfc	fsr2h,f,c
  4438  0024D6  50DF               	movf	indf2,w,c
  4439  0024D8  6E0D               	movwf	??_right^0,c
  4440  0024DA  6A0E               	clrf	(??_right+1)^0,c
  4441  0024DC  0E05               	movlw	5
  4442  0024DE                     i2u186_45:
  4443  0024DE  90D8               	bcf	status,0,c
  4444  0024E0  360D               	rlcf	??_right^0,f,c
  4445  0024E2  360E               	rlcf	(??_right+1)^0,f,c
  4446  0024E4  2EE8               	decfsz	wreg,f,c
  4447  0024E6  EF6F  F012         	goto	i2u186_45
  4448  0024EA  C00B  FFD9         	movff	right@pl,fsr2l
  4449  0024EE  C00C  FFDA         	movff	right@pl+1,fsr2h
  4450  0024F2  50DF               	movf	indf2,w,c
  4451  0024F4  6E0F               	movwf	(??_right+2)^0,c
  4452  0024F6  500F               	movf	(??_right+2)^0,w,c
  4453  0024F8  0D02               	mullw	2
  4454  0024FA  0EE0               	movlw	224
  4455  0024FC  6E10               	movwf	(??_right+3)^0,c
  4456  0024FE  0EFF               	movlw	255
  4457  002500  6E11               	movwf	(??_right+4)^0,c
  4458  002502  0E00               	movlw	low _display
  4459  002504  6E12               	movwf	(??_right+5)^0,c
  4460  002506  0E01               	movlw	high _display
  4461  002508  6E13               	movwf	(??_right+6)^0,c
  4462  00250A  5010               	movf	(??_right+3)^0,w,c
  4463  00250C  2612               	addwf	(??_right+5)^0,f,c
  4464  00250E  5011               	movf	(??_right+4)^0,w,c
  4465  002510  2213               	addwfc	(??_right+6)^0,f,c
  4466  002512  50F3               	movf	243,w,c
  4467  002514  2612               	addwf	(??_right+5)^0,f,c
  4468  002516  50F4               	movf	244,w,c
  4469  002518  2213               	addwfc	(??_right+6)^0,f,c
  4470  00251A  500D               	movf	??_right^0,w,c
  4471  00251C  2412               	addwf	(??_right+5)^0,w,c
  4472  00251E  6ED9               	movwf	fsr2l,c
  4473  002520  500E               	movf	(??_right+1)^0,w,c
  4474  002522  2013               	addwfc	(??_right+6)^0,w,c
  4475  002524  6EDA               	movwf	fsr2h,c
  4476  002526  EE10 F005          	lfsr	1,5
  4477  00252A  50DE               	movf	postinc2,w,c
  4478  00252C  26E1               	addwf	fsr1l,f,c
  4479  00252E  50DD               	movf	postdec2,w,c
  4480  002530  22E2               	addwfc	fsr1h,f,c
  4481  002532  50E7               	movf	indf1,w,c
  4482  002534  A4D8               	btfss	status,2,c
  4483  002536  EF9F  F012         	goto	i2u187_41
  4484  00253A  EFA1  F012         	goto	i2u187_40
  4485  00253E                     i2u187_41:
  4486  00253E  EFA3  F012         	goto	i2l2332
  4487  002542                     i2u187_40:
  4488  002542  EF43  F013         	goto	i2l355
  4489  002546                     i2l2332:
  4490                           
  4491                           ;main.c: 525:         if (display[pl->y-1][pl->x]->type == OT_PLAYERB) return;
  4492  002546  EE20 F001          	lfsr	2,1
  4493  00254A  500B               	movf	right@pl^0,w,c
  4494  00254C  26D9               	addwf	fsr2l,f,c
  4495  00254E  500C               	movf	(right@pl+1)^0,w,c
  4496  002550  22DA               	addwfc	fsr2h,f,c
  4497  002552  50DF               	movf	indf2,w,c
  4498  002554  6E0D               	movwf	??_right^0,c
  4499  002556  6A0E               	clrf	(??_right+1)^0,c
  4500  002558  0E05               	movlw	5
  4501  00255A                     i2u188_45:
  4502  00255A  90D8               	bcf	status,0,c
  4503  00255C  360D               	rlcf	??_right^0,f,c
  4504  00255E  360E               	rlcf	(??_right+1)^0,f,c
  4505  002560  2EE8               	decfsz	wreg,f,c
  4506  002562  EFAD  F012         	goto	i2u188_45
  4507  002566  C00B  FFD9         	movff	right@pl,fsr2l
  4508  00256A  C00C  FFDA         	movff	right@pl+1,fsr2h
  4509  00256E  50DF               	movf	indf2,w,c
  4510  002570  6E0F               	movwf	(??_right+2)^0,c
  4511  002572  500F               	movf	(??_right+2)^0,w,c
  4512  002574  0D02               	mullw	2
  4513  002576  0EE0               	movlw	224
  4514  002578  6E10               	movwf	(??_right+3)^0,c
  4515  00257A  0EFF               	movlw	255
  4516  00257C  6E11               	movwf	(??_right+4)^0,c
  4517  00257E  0E00               	movlw	low _display
  4518  002580  6E12               	movwf	(??_right+5)^0,c
  4519  002582  0E01               	movlw	high _display
  4520  002584  6E13               	movwf	(??_right+6)^0,c
  4521  002586  5010               	movf	(??_right+3)^0,w,c
  4522  002588  2612               	addwf	(??_right+5)^0,f,c
  4523  00258A  5011               	movf	(??_right+4)^0,w,c
  4524  00258C  2213               	addwfc	(??_right+6)^0,f,c
  4525  00258E  50F3               	movf	243,w,c
  4526  002590  2612               	addwf	(??_right+5)^0,f,c
  4527  002592  50F4               	movf	244,w,c
  4528  002594  2213               	addwfc	(??_right+6)^0,f,c
  4529  002596  500D               	movf	??_right^0,w,c
  4530  002598  2412               	addwf	(??_right+5)^0,w,c
  4531  00259A  6ED9               	movwf	fsr2l,c
  4532  00259C  500E               	movf	(??_right+1)^0,w,c
  4533  00259E  2013               	addwfc	(??_right+6)^0,w,c
  4534  0025A0  6EDA               	movwf	fsr2h,c
  4535  0025A2  EE10 F005          	lfsr	1,5
  4536  0025A6  50DE               	movf	postinc2,w,c
  4537  0025A8  26E1               	addwf	fsr1l,f,c
  4538  0025AA  50DD               	movf	postdec2,w,c
  4539  0025AC  22E2               	addwfc	fsr1h,f,c
  4540  0025AE  04E6               	decf	postinc1,w,c
  4541  0025B0  A4D8               	btfss	status,2,c
  4542  0025B2  EFDD  F012         	goto	i2u189_41
  4543  0025B6  EFDF  F012         	goto	i2u189_40
  4544  0025BA                     i2u189_41:
  4545  0025BA  EFE1  F012         	goto	i2l2336
  4546  0025BE                     i2u189_40:
  4547  0025BE  EF43  F013         	goto	i2l355
  4548  0025C2                     i2l2336:
  4549                           
  4550                           ;main.c: 526:         if (display[pl->y-1][pl->x]->type == OT_FRISBEE) {
  4551  0025C2  EE20 F001          	lfsr	2,1
  4552  0025C6  500B               	movf	right@pl^0,w,c
  4553  0025C8  26D9               	addwf	fsr2l,f,c
  4554  0025CA  500C               	movf	(right@pl+1)^0,w,c
  4555  0025CC  22DA               	addwfc	fsr2h,f,c
  4556  0025CE  50DF               	movf	indf2,w,c
  4557  0025D0  6E0D               	movwf	??_right^0,c
  4558  0025D2  6A0E               	clrf	(??_right+1)^0,c
  4559  0025D4  0E05               	movlw	5
  4560  0025D6                     i2u190_45:
  4561  0025D6  90D8               	bcf	status,0,c
  4562  0025D8  360D               	rlcf	??_right^0,f,c
  4563  0025DA  360E               	rlcf	(??_right+1)^0,f,c
  4564  0025DC  2EE8               	decfsz	wreg,f,c
  4565  0025DE  EFEB  F012         	goto	i2u190_45
  4566  0025E2  C00B  FFD9         	movff	right@pl,fsr2l
  4567  0025E6  C00C  FFDA         	movff	right@pl+1,fsr2h
  4568  0025EA  50DF               	movf	indf2,w,c
  4569  0025EC  6E0F               	movwf	(??_right+2)^0,c
  4570  0025EE  500F               	movf	(??_right+2)^0,w,c
  4571  0025F0  0D02               	mullw	2
  4572  0025F2  0EE0               	movlw	224
  4573  0025F4  6E10               	movwf	(??_right+3)^0,c
  4574  0025F6  0EFF               	movlw	255
  4575  0025F8  6E11               	movwf	(??_right+4)^0,c
  4576  0025FA  0E00               	movlw	low _display
  4577  0025FC  6E12               	movwf	(??_right+5)^0,c
  4578  0025FE  0E01               	movlw	high _display
  4579  002600  6E13               	movwf	(??_right+6)^0,c
  4580  002602  5010               	movf	(??_right+3)^0,w,c
  4581  002604  2612               	addwf	(??_right+5)^0,f,c
  4582  002606  5011               	movf	(??_right+4)^0,w,c
  4583  002608  2213               	addwfc	(??_right+6)^0,f,c
  4584  00260A  50F3               	movf	243,w,c
  4585  00260C  2612               	addwf	(??_right+5)^0,f,c
  4586  00260E  50F4               	movf	244,w,c
  4587  002610  2213               	addwfc	(??_right+6)^0,f,c
  4588  002612  500D               	movf	??_right^0,w,c
  4589  002614  2412               	addwf	(??_right+5)^0,w,c
  4590  002616  6ED9               	movwf	fsr2l,c
  4591  002618  500E               	movf	(??_right+1)^0,w,c
  4592  00261A  2013               	addwfc	(??_right+6)^0,w,c
  4593  00261C  6EDA               	movwf	fsr2h,c
  4594  00261E  EE10 F005          	lfsr	1,5
  4595  002622  50DE               	movf	postinc2,w,c
  4596  002624  26E1               	addwf	fsr1l,f,c
  4597  002626  50DD               	movf	postdec2,w,c
  4598  002628  22E2               	addwfc	fsr1h,f,c
  4599  00262A  0E02               	movlw	2
  4600  00262C  18E6               	xorwf	postinc1,w,c
  4601  00262E  A4D8               	btfss	status,2,c
  4602  002630  EF1C  F013         	goto	i2u191_41
  4603  002634  EF1E  F013         	goto	i2u191_40
  4604  002638                     i2u191_41:
  4605  002638  EF24  F013         	goto	i2l2340
  4606  00263C                     i2u191_40:
  4607  00263C                     
  4608                           ;main.c: 527:             CatchFrisbee(pl);
  4609  00263C  C00B  F001         	movff	right@pl,CatchFrisbee@pl
  4610  002640  C00C  F002         	movff	right@pl+1,CatchFrisbee@pl+1
  4611  002644  EC13  F016         	call	_CatchFrisbee	;wreg free
  4612  002648                     i2l2340:
  4613                           
  4614                           ;main.c: 530:     pl->oldX = pl->x;
  4615  002648  C00B  FFD9         	movff	right@pl,fsr2l
  4616  00264C  C00C  FFDA         	movff	right@pl+1,fsr2h
  4617  002650  EE10 F002          	lfsr	1,2
  4618  002654  500B               	movf	right@pl^0,w,c
  4619  002656  26E1               	addwf	fsr1l,f,c
  4620  002658  500C               	movf	(right@pl+1)^0,w,c
  4621  00265A  22E2               	addwfc	fsr1h,f,c
  4622  00265C  CFDF FFE7          	movff	indf2,indf1
  4623  002660                     
  4624                           ;main.c: 531:     pl->oldY = pl->y;
  4625  002660  EE20 F001          	lfsr	2,1
  4626  002664  500B               	movf	right@pl^0,w,c
  4627  002666  26D9               	addwf	fsr2l,f,c
  4628  002668  500C               	movf	(right@pl+1)^0,w,c
  4629  00266A  22DA               	addwfc	fsr2h,f,c
  4630  00266C  EE10 F003          	lfsr	1,3
  4631  002670  500B               	movf	right@pl^0,w,c
  4632  002672  26E1               	addwf	fsr1l,f,c
  4633  002674  500C               	movf	(right@pl+1)^0,w,c
  4634  002676  22E2               	addwfc	fsr1h,f,c
  4635  002678  CFDF FFE7          	movff	indf2,indf1
  4636  00267C                     
  4637                           ;main.c: 532:     pl->x++;
  4638  00267C  C00B  FFD9         	movff	right@pl,fsr2l
  4639  002680  C00C  FFDA         	movff	right@pl+1,fsr2h
  4640  002684  2ADF               	incf	indf2,f,c
  4641  002686                     i2l355:
  4642  002686  0012               	return		;funcret
  4643  002688                     __end_of_right:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function _left *****************
  4647 ;; Defined at:
  4648 ;;		line 507 in file "main.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  pl              2   10[COMRAM] PTR struct GameElement
  4651 ;;		 -> objs(42), 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;Total ram usage:       12 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    1
  4670 ;; This function calls:
  4671 ;;		_CatchFrisbee
  4672 ;; This function is called by:
  4673 ;;		_highIsr
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text15
  4678  0021E6                     __ptext15:
  4679                           	callstack 0
  4680  0021E6                     _left:
  4681                           	callstack 23
  4682  0021E6                     
  4683                           ;main.c: 508:     if (pl->x == 1) return;
  4684  0021E6  C00B  FFD9         	movff	left@pl,fsr2l
  4685  0021EA  C00C  FFDA         	movff	left@pl+1,fsr2h
  4686  0021EE  04DE               	decf	postinc2,w,c
  4687  0021F0  A4D8               	btfss	status,2,c
  4688  0021F2  EFFD  F010         	goto	i2u197_41
  4689  0021F6  EFFF  F010         	goto	i2u197_40
  4690  0021FA                     i2u197_41:
  4691  0021FA  EF01  F011         	goto	i2l2378
  4692  0021FE                     i2u197_40:
  4693  0021FE  EF1E  F012         	goto	i2l347
  4694  002202                     i2l2378:
  4695                           
  4696                           ;main.c: 509:     if (display[pl->y-1][pl->x-2] != ((void*)0)) {
  4697  002202  EE20 F001          	lfsr	2,1
  4698  002206  500B               	movf	left@pl^0,w,c
  4699  002208  26D9               	addwf	fsr2l,f,c
  4700  00220A  500C               	movf	(left@pl+1)^0,w,c
  4701  00220C  22DA               	addwfc	fsr2h,f,c
  4702  00220E  50DF               	movf	indf2,w,c
  4703  002210  6E0D               	movwf	??_left^0,c
  4704  002212  6A0E               	clrf	(??_left+1)^0,c
  4705  002214  0E05               	movlw	5
  4706  002216                     i2u198_45:
  4707  002216  90D8               	bcf	status,0,c
  4708  002218  360D               	rlcf	??_left^0,f,c
  4709  00221A  360E               	rlcf	(??_left+1)^0,f,c
  4710  00221C  2EE8               	decfsz	wreg,f,c
  4711  00221E  EF0B  F011         	goto	i2u198_45
  4712  002222  C00B  FFD9         	movff	left@pl,fsr2l
  4713  002226  C00C  FFDA         	movff	left@pl+1,fsr2h
  4714  00222A  50DF               	movf	indf2,w,c
  4715  00222C  6E0F               	movwf	(??_left+2)^0,c
  4716  00222E  6A10               	clrf	(??_left+3)^0,c
  4717  002230  90D8               	bcf	status,0,c
  4718  002232  360F               	rlcf	(??_left+2)^0,f,c
  4719  002234  3610               	rlcf	(??_left+3)^0,f,c
  4720  002236  0EDC               	movlw	220
  4721  002238  6E11               	movwf	(??_left+4)^0,c
  4722  00223A  0EFF               	movlw	255
  4723  00223C  6E12               	movwf	(??_left+5)^0,c
  4724  00223E  0E00               	movlw	low _display
  4725  002240  6E13               	movwf	(??_left+6)^0,c
  4726  002242  0E01               	movlw	high _display
  4727  002244  6E14               	movwf	(??_left+7)^0,c
  4728  002246  5011               	movf	(??_left+4)^0,w,c
  4729  002248  2613               	addwf	(??_left+6)^0,f,c
  4730  00224A  5012               	movf	(??_left+5)^0,w,c
  4731  00224C  2214               	addwfc	(??_left+7)^0,f,c
  4732  00224E  500F               	movf	(??_left+2)^0,w,c
  4733  002250  2613               	addwf	(??_left+6)^0,f,c
  4734  002252  5010               	movf	(??_left+3)^0,w,c
  4735  002254  2214               	addwfc	(??_left+7)^0,f,c
  4736  002256  500D               	movf	??_left^0,w,c
  4737  002258  2413               	addwf	(??_left+6)^0,w,c
  4738  00225A  6ED9               	movwf	fsr2l,c
  4739  00225C  500E               	movf	(??_left+1)^0,w,c
  4740  00225E  2014               	addwfc	(??_left+7)^0,w,c
  4741  002260  6EDA               	movwf	fsr2h,c
  4742  002262  50DE               	movf	postinc2,w,c
  4743  002264  10DE               	iorwf	postinc2,w,c
  4744  002266  B4D8               	btfsc	status,2,c
  4745  002268  EF38  F011         	goto	i2u199_41
  4746  00226C  EF3A  F011         	goto	i2u199_40
  4747  002270                     i2u199_41:
  4748  002270  EFFF  F011         	goto	i2l2392
  4749  002274                     i2u199_40:
  4750  002274                     
  4751                           ;main.c: 510:         if (display[pl->y-1][pl->x-2]->type == OT_PLAYERA) return;
  4752  002274  EE20 F001          	lfsr	2,1
  4753  002278  500B               	movf	left@pl^0,w,c
  4754  00227A  26D9               	addwf	fsr2l,f,c
  4755  00227C  500C               	movf	(left@pl+1)^0,w,c
  4756  00227E  22DA               	addwfc	fsr2h,f,c
  4757  002280  50DF               	movf	indf2,w,c
  4758  002282  6E0D               	movwf	??_left^0,c
  4759  002284  6A0E               	clrf	(??_left+1)^0,c
  4760  002286  0E05               	movlw	5
  4761  002288                     i2u200_45:
  4762  002288  90D8               	bcf	status,0,c
  4763  00228A  360D               	rlcf	??_left^0,f,c
  4764  00228C  360E               	rlcf	(??_left+1)^0,f,c
  4765  00228E  2EE8               	decfsz	wreg,f,c
  4766  002290  EF44  F011         	goto	i2u200_45
  4767  002294  C00B  FFD9         	movff	left@pl,fsr2l
  4768  002298  C00C  FFDA         	movff	left@pl+1,fsr2h
  4769  00229C  50DF               	movf	indf2,w,c
  4770  00229E  6E0F               	movwf	(??_left+2)^0,c
  4771  0022A0  6A10               	clrf	(??_left+3)^0,c
  4772  0022A2  90D8               	bcf	status,0,c
  4773  0022A4  360F               	rlcf	(??_left+2)^0,f,c
  4774  0022A6  3610               	rlcf	(??_left+3)^0,f,c
  4775  0022A8  0EDC               	movlw	220
  4776  0022AA  6E11               	movwf	(??_left+4)^0,c
  4777  0022AC  0EFF               	movlw	255
  4778  0022AE  6E12               	movwf	(??_left+5)^0,c
  4779  0022B0  0E00               	movlw	low _display
  4780  0022B2  6E13               	movwf	(??_left+6)^0,c
  4781  0022B4  0E01               	movlw	high _display
  4782  0022B6  6E14               	movwf	(??_left+7)^0,c
  4783  0022B8  5011               	movf	(??_left+4)^0,w,c
  4784  0022BA  2613               	addwf	(??_left+6)^0,f,c
  4785  0022BC  5012               	movf	(??_left+5)^0,w,c
  4786  0022BE  2214               	addwfc	(??_left+7)^0,f,c
  4787  0022C0  500F               	movf	(??_left+2)^0,w,c
  4788  0022C2  2613               	addwf	(??_left+6)^0,f,c
  4789  0022C4  5010               	movf	(??_left+3)^0,w,c
  4790  0022C6  2214               	addwfc	(??_left+7)^0,f,c
  4791  0022C8  500D               	movf	??_left^0,w,c
  4792  0022CA  2413               	addwf	(??_left+6)^0,w,c
  4793  0022CC  6ED9               	movwf	fsr2l,c
  4794  0022CE  500E               	movf	(??_left+1)^0,w,c
  4795  0022D0  2014               	addwfc	(??_left+7)^0,w,c
  4796  0022D2  6EDA               	movwf	fsr2h,c
  4797  0022D4  EE10 F005          	lfsr	1,5
  4798  0022D8  50DE               	movf	postinc2,w,c
  4799  0022DA  26E1               	addwf	fsr1l,f,c
  4800  0022DC  50DD               	movf	postdec2,w,c
  4801  0022DE  22E2               	addwfc	fsr1h,f,c
  4802  0022E0  50E7               	movf	indf1,w,c
  4803  0022E2  A4D8               	btfss	status,2,c
  4804  0022E4  EF76  F011         	goto	i2u201_41
  4805  0022E8  EF78  F011         	goto	i2u201_40
  4806  0022EC                     i2u201_41:
  4807  0022EC  EF7A  F011         	goto	i2l2384
  4808  0022F0                     i2u201_40:
  4809  0022F0  EF1E  F012         	goto	i2l347
  4810  0022F4                     i2l2384:
  4811                           
  4812                           ;main.c: 511:         if (display[pl->y-1][pl->x-2]->type == OT_PLAYERB) return;
  4813  0022F4  EE20 F001          	lfsr	2,1
  4814  0022F8  500B               	movf	left@pl^0,w,c
  4815  0022FA  26D9               	addwf	fsr2l,f,c
  4816  0022FC  500C               	movf	(left@pl+1)^0,w,c
  4817  0022FE  22DA               	addwfc	fsr2h,f,c
  4818  002300  50DF               	movf	indf2,w,c
  4819  002302  6E0D               	movwf	??_left^0,c
  4820  002304  6A0E               	clrf	(??_left+1)^0,c
  4821  002306  0E05               	movlw	5
  4822  002308                     i2u202_45:
  4823  002308  90D8               	bcf	status,0,c
  4824  00230A  360D               	rlcf	??_left^0,f,c
  4825  00230C  360E               	rlcf	(??_left+1)^0,f,c
  4826  00230E  2EE8               	decfsz	wreg,f,c
  4827  002310  EF84  F011         	goto	i2u202_45
  4828  002314  C00B  FFD9         	movff	left@pl,fsr2l
  4829  002318  C00C  FFDA         	movff	left@pl+1,fsr2h
  4830  00231C  50DF               	movf	indf2,w,c
  4831  00231E  6E0F               	movwf	(??_left+2)^0,c
  4832  002320  6A10               	clrf	(??_left+3)^0,c
  4833  002322  90D8               	bcf	status,0,c
  4834  002324  360F               	rlcf	(??_left+2)^0,f,c
  4835  002326  3610               	rlcf	(??_left+3)^0,f,c
  4836  002328  0EDC               	movlw	220
  4837  00232A  6E11               	movwf	(??_left+4)^0,c
  4838  00232C  0EFF               	movlw	255
  4839  00232E  6E12               	movwf	(??_left+5)^0,c
  4840  002330  0E00               	movlw	low _display
  4841  002332  6E13               	movwf	(??_left+6)^0,c
  4842  002334  0E01               	movlw	high _display
  4843  002336  6E14               	movwf	(??_left+7)^0,c
  4844  002338  5011               	movf	(??_left+4)^0,w,c
  4845  00233A  2613               	addwf	(??_left+6)^0,f,c
  4846  00233C  5012               	movf	(??_left+5)^0,w,c
  4847  00233E  2214               	addwfc	(??_left+7)^0,f,c
  4848  002340  500F               	movf	(??_left+2)^0,w,c
  4849  002342  2613               	addwf	(??_left+6)^0,f,c
  4850  002344  5010               	movf	(??_left+3)^0,w,c
  4851  002346  2214               	addwfc	(??_left+7)^0,f,c
  4852  002348  500D               	movf	??_left^0,w,c
  4853  00234A  2413               	addwf	(??_left+6)^0,w,c
  4854  00234C  6ED9               	movwf	fsr2l,c
  4855  00234E  500E               	movf	(??_left+1)^0,w,c
  4856  002350  2014               	addwfc	(??_left+7)^0,w,c
  4857  002352  6EDA               	movwf	fsr2h,c
  4858  002354  EE10 F005          	lfsr	1,5
  4859  002358  50DE               	movf	postinc2,w,c
  4860  00235A  26E1               	addwf	fsr1l,f,c
  4861  00235C  50DD               	movf	postdec2,w,c
  4862  00235E  22E2               	addwfc	fsr1h,f,c
  4863  002360  04E6               	decf	postinc1,w,c
  4864  002362  A4D8               	btfss	status,2,c
  4865  002364  EFB6  F011         	goto	i2u203_41
  4866  002368  EFB8  F011         	goto	i2u203_40
  4867  00236C                     i2u203_41:
  4868  00236C  EFBA  F011         	goto	i2l2388
  4869  002370                     i2u203_40:
  4870  002370  EF1E  F012         	goto	i2l347
  4871  002374                     i2l2388:
  4872                           
  4873                           ;main.c: 512:         if (display[pl->y-1][pl->x-2]->type == OT_FRISBEE) {
  4874  002374  EE20 F001          	lfsr	2,1
  4875  002378  500B               	movf	left@pl^0,w,c
  4876  00237A  26D9               	addwf	fsr2l,f,c
  4877  00237C  500C               	movf	(left@pl+1)^0,w,c
  4878  00237E  22DA               	addwfc	fsr2h,f,c
  4879  002380  50DF               	movf	indf2,w,c
  4880  002382  6E0D               	movwf	??_left^0,c
  4881  002384  6A0E               	clrf	(??_left+1)^0,c
  4882  002386  0E05               	movlw	5
  4883  002388                     i2u204_45:
  4884  002388  90D8               	bcf	status,0,c
  4885  00238A  360D               	rlcf	??_left^0,f,c
  4886  00238C  360E               	rlcf	(??_left+1)^0,f,c
  4887  00238E  2EE8               	decfsz	wreg,f,c
  4888  002390  EFC4  F011         	goto	i2u204_45
  4889  002394  C00B  FFD9         	movff	left@pl,fsr2l
  4890  002398  C00C  FFDA         	movff	left@pl+1,fsr2h
  4891  00239C  50DF               	movf	indf2,w,c
  4892  00239E  6E0F               	movwf	(??_left+2)^0,c
  4893  0023A0  6A10               	clrf	(??_left+3)^0,c
  4894  0023A2  90D8               	bcf	status,0,c
  4895  0023A4  360F               	rlcf	(??_left+2)^0,f,c
  4896  0023A6  3610               	rlcf	(??_left+3)^0,f,c
  4897  0023A8  0EDC               	movlw	220
  4898  0023AA  6E11               	movwf	(??_left+4)^0,c
  4899  0023AC  0EFF               	movlw	255
  4900  0023AE  6E12               	movwf	(??_left+5)^0,c
  4901  0023B0  0E00               	movlw	low _display
  4902  0023B2  6E13               	movwf	(??_left+6)^0,c
  4903  0023B4  0E01               	movlw	high _display
  4904  0023B6  6E14               	movwf	(??_left+7)^0,c
  4905  0023B8  5011               	movf	(??_left+4)^0,w,c
  4906  0023BA  2613               	addwf	(??_left+6)^0,f,c
  4907  0023BC  5012               	movf	(??_left+5)^0,w,c
  4908  0023BE  2214               	addwfc	(??_left+7)^0,f,c
  4909  0023C0  500F               	movf	(??_left+2)^0,w,c
  4910  0023C2  2613               	addwf	(??_left+6)^0,f,c
  4911  0023C4  5010               	movf	(??_left+3)^0,w,c
  4912  0023C6  2214               	addwfc	(??_left+7)^0,f,c
  4913  0023C8  500D               	movf	??_left^0,w,c
  4914  0023CA  2413               	addwf	(??_left+6)^0,w,c
  4915  0023CC  6ED9               	movwf	fsr2l,c
  4916  0023CE  500E               	movf	(??_left+1)^0,w,c
  4917  0023D0  2014               	addwfc	(??_left+7)^0,w,c
  4918  0023D2  6EDA               	movwf	fsr2h,c
  4919  0023D4  EE10 F005          	lfsr	1,5
  4920  0023D8  50DE               	movf	postinc2,w,c
  4921  0023DA  26E1               	addwf	fsr1l,f,c
  4922  0023DC  50DD               	movf	postdec2,w,c
  4923  0023DE  22E2               	addwfc	fsr1h,f,c
  4924  0023E0  0E02               	movlw	2
  4925  0023E2  18E6               	xorwf	postinc1,w,c
  4926  0023E4  A4D8               	btfss	status,2,c
  4927  0023E6  EFF7  F011         	goto	i2u205_41
  4928  0023EA  EFF9  F011         	goto	i2u205_40
  4929  0023EE                     i2u205_41:
  4930  0023EE  EFFF  F011         	goto	i2l2392
  4931  0023F2                     i2u205_40:
  4932  0023F2                     
  4933                           ;main.c: 513:             CatchFrisbee(pl);
  4934  0023F2  C00B  F001         	movff	left@pl,CatchFrisbee@pl
  4935  0023F6  C00C  F002         	movff	left@pl+1,CatchFrisbee@pl+1
  4936  0023FA  EC13  F016         	call	_CatchFrisbee	;wreg free
  4937  0023FE                     i2l2392:
  4938                           
  4939                           ;main.c: 516:     pl->oldX = pl->x;
  4940  0023FE  C00B  FFD9         	movff	left@pl,fsr2l
  4941  002402  C00C  FFDA         	movff	left@pl+1,fsr2h
  4942  002406  EE10 F002          	lfsr	1,2
  4943  00240A  500B               	movf	left@pl^0,w,c
  4944  00240C  26E1               	addwf	fsr1l,f,c
  4945  00240E  500C               	movf	(left@pl+1)^0,w,c
  4946  002410  22E2               	addwfc	fsr1h,f,c
  4947  002412  CFDF FFE7          	movff	indf2,indf1
  4948  002416                     
  4949                           ;main.c: 517:     pl->oldY = pl->y;
  4950  002416  EE20 F001          	lfsr	2,1
  4951  00241A  500B               	movf	left@pl^0,w,c
  4952  00241C  26D9               	addwf	fsr2l,f,c
  4953  00241E  500C               	movf	(left@pl+1)^0,w,c
  4954  002420  22DA               	addwfc	fsr2h,f,c
  4955  002422  EE10 F003          	lfsr	1,3
  4956  002426  500B               	movf	left@pl^0,w,c
  4957  002428  26E1               	addwf	fsr1l,f,c
  4958  00242A  500C               	movf	(left@pl+1)^0,w,c
  4959  00242C  22E2               	addwfc	fsr1h,f,c
  4960  00242E  CFDF FFE7          	movff	indf2,indf1
  4961  002432                     
  4962                           ;main.c: 518:     pl->x--;
  4963  002432  C00B  FFD9         	movff	left@pl,fsr2l
  4964  002436  C00C  FFDA         	movff	left@pl+1,fsr2h
  4965  00243A  06DF               	decf	indf2,f,c
  4966  00243C                     i2l347:
  4967  00243C  0012               	return		;funcret
  4968  00243E                     __end_of_left:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _down *****************
  4972 ;; Defined at:
  4973 ;;		line 549 in file "main.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  pl              2   10[COMRAM] PTR struct GameElement
  4976 ;;		 -> objs(42), 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;Total ram usage:       11 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    1
  4995 ;; This function calls:
  4996 ;;		_CatchFrisbee
  4997 ;; This function is called by:
  4998 ;;		_highIsr
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text16
  5003  002688                     __ptext16:
  5004                           	callstack 0
  5005  002688                     _down:
  5006                           	callstack 23
  5007  002688                     
  5008                           ;main.c: 550:     if (pl->y == 4) return;
  5009  002688  EE20 F001          	lfsr	2,1
  5010  00268C  500B               	movf	down@pl^0,w,c
  5011  00268E  26D9               	addwf	fsr2l,f,c
  5012  002690  500C               	movf	(down@pl+1)^0,w,c
  5013  002692  22DA               	addwfc	fsr2h,f,c
  5014  002694  0E04               	movlw	4
  5015  002696  18DE               	xorwf	postinc2,w,c
  5016  002698  A4D8               	btfss	status,2,c
  5017  00269A  EF51  F013         	goto	i2u192_41
  5018  00269E  EF53  F013         	goto	i2u192_40
  5019  0026A2                     i2u192_41:
  5020  0026A2  EF55  F013         	goto	i2l2352
  5021  0026A6                     i2u192_40:
  5022  0026A6  EF5C  F014         	goto	i2l371
  5023  0026AA                     i2l2352:
  5024                           
  5025                           ;main.c: 551:     if (display[pl->y][pl->x-1] != ((void*)0)) {
  5026  0026AA  C00B  FFD9         	movff	down@pl,fsr2l
  5027  0026AE  C00C  FFDA         	movff	down@pl+1,fsr2h
  5028  0026B2  50DF               	movf	indf2,w,c
  5029  0026B4  6E0D               	movwf	??_down^0,c
  5030  0026B6  6A0E               	clrf	(??_down+1)^0,c
  5031  0026B8  90D8               	bcf	status,0,c
  5032  0026BA  360D               	rlcf	??_down^0,f,c
  5033  0026BC  360E               	rlcf	(??_down+1)^0,f,c
  5034  0026BE  EE20 F001          	lfsr	2,1
  5035  0026C2  500B               	movf	down@pl^0,w,c
  5036  0026C4  26D9               	addwf	fsr2l,f,c
  5037  0026C6  500C               	movf	(down@pl+1)^0,w,c
  5038  0026C8  22DA               	addwfc	fsr2h,f,c
  5039  0026CA  50DF               	movf	indf2,w,c
  5040  0026CC  6E0F               	movwf	(??_down+2)^0,c
  5041  0026CE  500F               	movf	(??_down+2)^0,w,c
  5042  0026D0  0D20               	mullw	32
  5043  0026D2  0EFE               	movlw	254
  5044  0026D4  6E10               	movwf	(??_down+3)^0,c
  5045  0026D6  0EFF               	movlw	255
  5046  0026D8  6E11               	movwf	(??_down+4)^0,c
  5047  0026DA  0E00               	movlw	low _display
  5048  0026DC  6E12               	movwf	(??_down+5)^0,c
  5049  0026DE  0E01               	movlw	high _display
  5050  0026E0  6E13               	movwf	(??_down+6)^0,c
  5051  0026E2  5010               	movf	(??_down+3)^0,w,c
  5052  0026E4  2612               	addwf	(??_down+5)^0,f,c
  5053  0026E6  5011               	movf	(??_down+4)^0,w,c
  5054  0026E8  2213               	addwfc	(??_down+6)^0,f,c
  5055  0026EA  50F3               	movf	243,w,c
  5056  0026EC  2612               	addwf	(??_down+5)^0,f,c
  5057  0026EE  50F4               	movf	244,w,c
  5058  0026F0  2213               	addwfc	(??_down+6)^0,f,c
  5059  0026F2  500D               	movf	??_down^0,w,c
  5060  0026F4  2412               	addwf	(??_down+5)^0,w,c
  5061  0026F6  6ED9               	movwf	fsr2l,c
  5062  0026F8  500E               	movf	(??_down+1)^0,w,c
  5063  0026FA  2013               	addwfc	(??_down+6)^0,w,c
  5064  0026FC  6EDA               	movwf	fsr2h,c
  5065  0026FE  50DE               	movf	postinc2,w,c
  5066  002700  10DE               	iorwf	postinc2,w,c
  5067  002702  B4D8               	btfsc	status,2,c
  5068  002704  EF86  F013         	goto	i2u193_41
  5069  002708  EF88  F013         	goto	i2u193_40
  5070  00270C                     i2u193_41:
  5071  00270C  EF3B  F014         	goto	i2l2366
  5072  002710                     i2u193_40:
  5073  002710                     
  5074                           ;main.c: 552:         if (display[pl->y][pl->x-1]->type == OT_PLAYERA) return;
  5075  002710  C00B  FFD9         	movff	down@pl,fsr2l
  5076  002714  C00C  FFDA         	movff	down@pl+1,fsr2h
  5077  002718  50DF               	movf	indf2,w,c
  5078  00271A  6E0D               	movwf	??_down^0,c
  5079  00271C  6A0E               	clrf	(??_down+1)^0,c
  5080  00271E  90D8               	bcf	status,0,c
  5081  002720  360D               	rlcf	??_down^0,f,c
  5082  002722  360E               	rlcf	(??_down+1)^0,f,c
  5083  002724  EE20 F001          	lfsr	2,1
  5084  002728  500B               	movf	down@pl^0,w,c
  5085  00272A  26D9               	addwf	fsr2l,f,c
  5086  00272C  500C               	movf	(down@pl+1)^0,w,c
  5087  00272E  22DA               	addwfc	fsr2h,f,c
  5088  002730  50DF               	movf	indf2,w,c
  5089  002732  6E0F               	movwf	(??_down+2)^0,c
  5090  002734  500F               	movf	(??_down+2)^0,w,c
  5091  002736  0D20               	mullw	32
  5092  002738  0EFE               	movlw	254
  5093  00273A  6E10               	movwf	(??_down+3)^0,c
  5094  00273C  0EFF               	movlw	255
  5095  00273E  6E11               	movwf	(??_down+4)^0,c
  5096  002740  0E00               	movlw	low _display
  5097  002742  6E12               	movwf	(??_down+5)^0,c
  5098  002744  0E01               	movlw	high _display
  5099  002746  6E13               	movwf	(??_down+6)^0,c
  5100  002748  5010               	movf	(??_down+3)^0,w,c
  5101  00274A  2612               	addwf	(??_down+5)^0,f,c
  5102  00274C  5011               	movf	(??_down+4)^0,w,c
  5103  00274E  2213               	addwfc	(??_down+6)^0,f,c
  5104  002750  50F3               	movf	243,w,c
  5105  002752  2612               	addwf	(??_down+5)^0,f,c
  5106  002754  50F4               	movf	244,w,c
  5107  002756  2213               	addwfc	(??_down+6)^0,f,c
  5108  002758  500D               	movf	??_down^0,w,c
  5109  00275A  2412               	addwf	(??_down+5)^0,w,c
  5110  00275C  6ED9               	movwf	fsr2l,c
  5111  00275E  500E               	movf	(??_down+1)^0,w,c
  5112  002760  2013               	addwfc	(??_down+6)^0,w,c
  5113  002762  6EDA               	movwf	fsr2h,c
  5114  002764  EE10 F005          	lfsr	1,5
  5115  002768  50DE               	movf	postinc2,w,c
  5116  00276A  26E1               	addwf	fsr1l,f,c
  5117  00276C  50DD               	movf	postdec2,w,c
  5118  00276E  22E2               	addwfc	fsr1h,f,c
  5119  002770  50E7               	movf	indf1,w,c
  5120  002772  A4D8               	btfss	status,2,c
  5121  002774  EFBE  F013         	goto	i2u194_41
  5122  002778  EFC0  F013         	goto	i2u194_40
  5123  00277C                     i2u194_41:
  5124  00277C  EFC2  F013         	goto	i2l2358
  5125  002780                     i2u194_40:
  5126  002780  EF5C  F014         	goto	i2l371
  5127  002784                     i2l2358:
  5128                           
  5129                           ;main.c: 553:         if (display[pl->y][pl->x-1]->type == OT_PLAYERB) return;
  5130  002784  C00B  FFD9         	movff	down@pl,fsr2l
  5131  002788  C00C  FFDA         	movff	down@pl+1,fsr2h
  5132  00278C  50DF               	movf	indf2,w,c
  5133  00278E  6E0D               	movwf	??_down^0,c
  5134  002790  6A0E               	clrf	(??_down+1)^0,c
  5135  002792  90D8               	bcf	status,0,c
  5136  002794  360D               	rlcf	??_down^0,f,c
  5137  002796  360E               	rlcf	(??_down+1)^0,f,c
  5138  002798  EE20 F001          	lfsr	2,1
  5139  00279C  500B               	movf	down@pl^0,w,c
  5140  00279E  26D9               	addwf	fsr2l,f,c
  5141  0027A0  500C               	movf	(down@pl+1)^0,w,c
  5142  0027A2  22DA               	addwfc	fsr2h,f,c
  5143  0027A4  50DF               	movf	indf2,w,c
  5144  0027A6  6E0F               	movwf	(??_down+2)^0,c
  5145  0027A8  500F               	movf	(??_down+2)^0,w,c
  5146  0027AA  0D20               	mullw	32
  5147  0027AC  0EFE               	movlw	254
  5148  0027AE  6E10               	movwf	(??_down+3)^0,c
  5149  0027B0  0EFF               	movlw	255
  5150  0027B2  6E11               	movwf	(??_down+4)^0,c
  5151  0027B4  0E00               	movlw	low _display
  5152  0027B6  6E12               	movwf	(??_down+5)^0,c
  5153  0027B8  0E01               	movlw	high _display
  5154  0027BA  6E13               	movwf	(??_down+6)^0,c
  5155  0027BC  5010               	movf	(??_down+3)^0,w,c
  5156  0027BE  2612               	addwf	(??_down+5)^0,f,c
  5157  0027C0  5011               	movf	(??_down+4)^0,w,c
  5158  0027C2  2213               	addwfc	(??_down+6)^0,f,c
  5159  0027C4  50F3               	movf	243,w,c
  5160  0027C6  2612               	addwf	(??_down+5)^0,f,c
  5161  0027C8  50F4               	movf	244,w,c
  5162  0027CA  2213               	addwfc	(??_down+6)^0,f,c
  5163  0027CC  500D               	movf	??_down^0,w,c
  5164  0027CE  2412               	addwf	(??_down+5)^0,w,c
  5165  0027D0  6ED9               	movwf	fsr2l,c
  5166  0027D2  500E               	movf	(??_down+1)^0,w,c
  5167  0027D4  2013               	addwfc	(??_down+6)^0,w,c
  5168  0027D6  6EDA               	movwf	fsr2h,c
  5169  0027D8  EE10 F005          	lfsr	1,5
  5170  0027DC  50DE               	movf	postinc2,w,c
  5171  0027DE  26E1               	addwf	fsr1l,f,c
  5172  0027E0  50DD               	movf	postdec2,w,c
  5173  0027E2  22E2               	addwfc	fsr1h,f,c
  5174  0027E4  04E6               	decf	postinc1,w,c
  5175  0027E6  A4D8               	btfss	status,2,c
  5176  0027E8  EFF8  F013         	goto	i2u195_41
  5177  0027EC  EFFA  F013         	goto	i2u195_40
  5178  0027F0                     i2u195_41:
  5179  0027F0  EFFC  F013         	goto	i2l2362
  5180  0027F4                     i2u195_40:
  5181  0027F4  EF5C  F014         	goto	i2l371
  5182  0027F8                     i2l2362:
  5183                           
  5184                           ;main.c: 554:         if (display[pl->y][pl->x-1]->type == OT_FRISBEE) {
  5185  0027F8  C00B  FFD9         	movff	down@pl,fsr2l
  5186  0027FC  C00C  FFDA         	movff	down@pl+1,fsr2h
  5187  002800  50DF               	movf	indf2,w,c
  5188  002802  6E0D               	movwf	??_down^0,c
  5189  002804  6A0E               	clrf	(??_down+1)^0,c
  5190  002806  90D8               	bcf	status,0,c
  5191  002808  360D               	rlcf	??_down^0,f,c
  5192  00280A  360E               	rlcf	(??_down+1)^0,f,c
  5193  00280C  EE20 F001          	lfsr	2,1
  5194  002810  500B               	movf	down@pl^0,w,c
  5195  002812  26D9               	addwf	fsr2l,f,c
  5196  002814  500C               	movf	(down@pl+1)^0,w,c
  5197  002816  22DA               	addwfc	fsr2h,f,c
  5198  002818  50DF               	movf	indf2,w,c
  5199  00281A  6E0F               	movwf	(??_down+2)^0,c
  5200  00281C  500F               	movf	(??_down+2)^0,w,c
  5201  00281E  0D20               	mullw	32
  5202  002820  0EFE               	movlw	254
  5203  002822  6E10               	movwf	(??_down+3)^0,c
  5204  002824  0EFF               	movlw	255
  5205  002826  6E11               	movwf	(??_down+4)^0,c
  5206  002828  0E00               	movlw	low _display
  5207  00282A  6E12               	movwf	(??_down+5)^0,c
  5208  00282C  0E01               	movlw	high _display
  5209  00282E  6E13               	movwf	(??_down+6)^0,c
  5210  002830  5010               	movf	(??_down+3)^0,w,c
  5211  002832  2612               	addwf	(??_down+5)^0,f,c
  5212  002834  5011               	movf	(??_down+4)^0,w,c
  5213  002836  2213               	addwfc	(??_down+6)^0,f,c
  5214  002838  50F3               	movf	243,w,c
  5215  00283A  2612               	addwf	(??_down+5)^0,f,c
  5216  00283C  50F4               	movf	244,w,c
  5217  00283E  2213               	addwfc	(??_down+6)^0,f,c
  5218  002840  500D               	movf	??_down^0,w,c
  5219  002842  2412               	addwf	(??_down+5)^0,w,c
  5220  002844  6ED9               	movwf	fsr2l,c
  5221  002846  500E               	movf	(??_down+1)^0,w,c
  5222  002848  2013               	addwfc	(??_down+6)^0,w,c
  5223  00284A  6EDA               	movwf	fsr2h,c
  5224  00284C  EE10 F005          	lfsr	1,5
  5225  002850  50DE               	movf	postinc2,w,c
  5226  002852  26E1               	addwf	fsr1l,f,c
  5227  002854  50DD               	movf	postdec2,w,c
  5228  002856  22E2               	addwfc	fsr1h,f,c
  5229  002858  0E02               	movlw	2
  5230  00285A  18E6               	xorwf	postinc1,w,c
  5231  00285C  A4D8               	btfss	status,2,c
  5232  00285E  EF33  F014         	goto	i2u196_41
  5233  002862  EF35  F014         	goto	i2u196_40
  5234  002866                     i2u196_41:
  5235  002866  EF3B  F014         	goto	i2l2366
  5236  00286A                     i2u196_40:
  5237  00286A                     
  5238                           ;main.c: 555:             CatchFrisbee(pl);
  5239  00286A  C00B  F001         	movff	down@pl,CatchFrisbee@pl
  5240  00286E  C00C  F002         	movff	down@pl+1,CatchFrisbee@pl+1
  5241  002872  EC13  F016         	call	_CatchFrisbee	;wreg free
  5242  002876                     i2l2366:
  5243                           
  5244                           ;main.c: 558:     pl->oldX = pl->x;
  5245  002876  C00B  FFD9         	movff	down@pl,fsr2l
  5246  00287A  C00C  FFDA         	movff	down@pl+1,fsr2h
  5247  00287E  EE10 F002          	lfsr	1,2
  5248  002882  500B               	movf	down@pl^0,w,c
  5249  002884  26E1               	addwf	fsr1l,f,c
  5250  002886  500C               	movf	(down@pl+1)^0,w,c
  5251  002888  22E2               	addwfc	fsr1h,f,c
  5252  00288A  CFDF FFE7          	movff	indf2,indf1
  5253  00288E                     
  5254                           ;main.c: 559:     pl->oldY = pl->y;
  5255  00288E  EE20 F001          	lfsr	2,1
  5256  002892  500B               	movf	down@pl^0,w,c
  5257  002894  26D9               	addwf	fsr2l,f,c
  5258  002896  500C               	movf	(down@pl+1)^0,w,c
  5259  002898  22DA               	addwfc	fsr2h,f,c
  5260  00289A  EE10 F003          	lfsr	1,3
  5261  00289E  500B               	movf	down@pl^0,w,c
  5262  0028A0  26E1               	addwf	fsr1l,f,c
  5263  0028A2  500C               	movf	(down@pl+1)^0,w,c
  5264  0028A4  22E2               	addwfc	fsr1h,f,c
  5265  0028A6  CFDF FFE7          	movff	indf2,indf1
  5266  0028AA                     
  5267                           ;main.c: 560:     pl->y++;
  5268  0028AA  EE20 F001          	lfsr	2,1
  5269  0028AE  500B               	movf	down@pl^0,w,c
  5270  0028B0  26D9               	addwf	fsr2l,f,c
  5271  0028B2  500C               	movf	(down@pl+1)^0,w,c
  5272  0028B4  22DA               	addwfc	fsr2h,f,c
  5273  0028B6  2ADF               	incf	indf2,f,c
  5274  0028B8                     i2l371:
  5275  0028B8  0012               	return		;funcret
  5276  0028BA                     __end_of_down:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _CatchFrisbee *****************
  5280 ;; Defined at:
  5281 ;;		line 497 in file "main.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  pl              2    0[COMRAM] PTR struct GameElement
  5284 ;;		 -> objs(42), 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:       10 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_left
  5306 ;;		_right
  5307 ;;		_up
  5308 ;;		_down
  5309 ;;		_upleft
  5310 ;;		_upright
  5311 ;;		_downleft
  5312 ;;		_downright
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text17
  5317  002C26                     __ptext17:
  5318                           	callstack 0
  5319  002C26                     _CatchFrisbee:
  5320                           	callstack 23
  5321  002C26                     
  5322                           ;main.c: 498:     if (game_state == GS_INACTIVE) {
  5323  002C26  045F               	decf	_game_state^0,w,c
  5324  002C28  A4D8               	btfss	status,2,c
  5325  002C2A  EF19  F016         	goto	i2u152_41
  5326  002C2E  EF1B  F016         	goto	i2u152_40
  5327  002C32                     i2u152_41:
  5328  002C32  EF58  F016         	goto	i2l343
  5329  002C36                     i2u152_40:
  5330  002C36                     
  5331                           ;main.c: 499:         pl->state = OS_SEL_W_FRISBEE;
  5332  002C36  EE20 F006          	lfsr	2,6
  5333  002C3A  5001               	movf	CatchFrisbee@pl^0,w,c
  5334  002C3C  26D9               	addwf	fsr2l,f,c
  5335  002C3E  5002               	movf	(CatchFrisbee@pl+1)^0,w,c
  5336  002C40  22DA               	addwfc	fsr2h,f,c
  5337  002C42  0E02               	movlw	2
  5338  002C44  6EDF               	movwf	indf2,c
  5339  002C46                     
  5340                           ;main.c: 500:         objs[5].active = 0;
  5341  002C46  0E00               	movlw	0
  5342  002C48  0100               	movlb	0	; () banked
  5343  002C4A  6FE1               	movwf	(_objs+39)& (0+255),b
  5344  002C4C                     
  5345                           ; BSR set to: 0
  5346                           ;main.c: 501:         display[objs[5].y-1][objs[5].x-1] = ((void*)0);
  5347  002C4C  51DE               	movf	(_objs+36)& (0+255),w,b
  5348  002C4E  6E03               	movwf	??_CatchFrisbee^0,c
  5349  002C50  6A04               	clrf	(??_CatchFrisbee+1)^0,c
  5350  002C52  0E05               	movlw	5
  5351  002C54                     i2u153_45:
  5352  002C54  90D8               	bcf	status,0,c
  5353  002C56  3603               	rlcf	??_CatchFrisbee^0,f,c
  5354  002C58  3604               	rlcf	(??_CatchFrisbee+1)^0,f,c
  5355  002C5A  2EE8               	decfsz	wreg,f,c
  5356  002C5C  EF2A  F016         	goto	i2u153_45
  5357  002C60  51DD               	movf	(_objs+35)& (0+255),w,b
  5358  002C62  6E05               	movwf	(??_CatchFrisbee+2)^0,c
  5359  002C64  6A06               	clrf	(??_CatchFrisbee+3)^0,c
  5360  002C66  90D8               	bcf	status,0,c
  5361  002C68  3605               	rlcf	(??_CatchFrisbee+2)^0,f,c
  5362  002C6A  3606               	rlcf	(??_CatchFrisbee+3)^0,f,c
  5363  002C6C  0EDE               	movlw	222
  5364  002C6E  6E07               	movwf	(??_CatchFrisbee+4)^0,c
  5365  002C70  0EFF               	movlw	255
  5366  002C72  6E08               	movwf	(??_CatchFrisbee+5)^0,c
  5367  002C74  0E00               	movlw	low _display
  5368  002C76  6E09               	movwf	(??_CatchFrisbee+6)^0,c
  5369  002C78  0E01               	movlw	high _display
  5370  002C7A  6E0A               	movwf	(??_CatchFrisbee+7)^0,c
  5371  002C7C  5007               	movf	(??_CatchFrisbee+4)^0,w,c
  5372  002C7E  2609               	addwf	(??_CatchFrisbee+6)^0,f,c
  5373  002C80  5008               	movf	(??_CatchFrisbee+5)^0,w,c
  5374  002C82  220A               	addwfc	(??_CatchFrisbee+7)^0,f,c
  5375  002C84  5005               	movf	(??_CatchFrisbee+2)^0,w,c
  5376  002C86  2609               	addwf	(??_CatchFrisbee+6)^0,f,c
  5377  002C88  5006               	movf	(??_CatchFrisbee+3)^0,w,c
  5378  002C8A  220A               	addwfc	(??_CatchFrisbee+7)^0,f,c
  5379  002C8C  5003               	movf	??_CatchFrisbee^0,w,c
  5380  002C8E  2409               	addwf	(??_CatchFrisbee+6)^0,w,c
  5381  002C90  6ED9               	movwf	fsr2l,c
  5382  002C92  5004               	movf	(??_CatchFrisbee+1)^0,w,c
  5383  002C94  200A               	addwfc	(??_CatchFrisbee+7)^0,w,c
  5384  002C96  6EDA               	movwf	fsr2h,c
  5385  002C98  0E00               	movlw	0
  5386  002C9A  6EDE               	movwf	postinc2,c
  5387  002C9C  0E00               	movlw	0
  5388  002C9E  6EDD               	movwf	postdec2,c
  5389                           
  5390                           ;main.c: 502:         objs[5].x = objs[5].y = objs[5].oldX = objs[5].oldY = 0;
  5391  002CA0  0E00               	movlw	0
  5392  002CA2  6FE0               	movwf	(_objs+38)& (0+255),b
  5393  002CA4  C0E0  F0DF         	movff	_objs+38,_objs+37
  5394  002CA8  C0DF  F0DE         	movff	_objs+37,_objs+36
  5395  002CAC  C0DE  F0DD         	movff	_objs+36,_objs+35
  5396  002CB0                     i2l343:
  5397  002CB0  0012               	return		;funcret
  5398  002CB2                     __end_of_CatchFrisbee:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function _compute_frisbee_target_and_route *****************
  5402 ;; Defined at:
  5403 ;;		line 151 in file "./the3.h"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  current_fisb    2   13[COMRAM] unsigned short 
  5406 ;;  current_fisb    2   15[COMRAM] unsigned short 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  i               2   27[COMRAM] unsigned short 
  5409 ;;  i               2   25[COMRAM] unsigned short 
  5410 ;;  i               2   21[COMRAM] unsigned short 
  5411 ;;  i               2   19[COMRAM] unsigned short 
  5412 ;;  i               2   29[COMRAM] unsigned short 
  5413 ;;  i               2   23[COMRAM] unsigned short 
  5414 ;;  y_step_size     2   43[COMRAM] unsigned short 
  5415 ;;  x_step_size     2   41[COMRAM] unsigned short 
  5416 ;;  y               2   39[COMRAM] unsigned short 
  5417 ;;  x               2   37[COMRAM] unsigned short 
  5418 ;;  target_y        2   35[COMRAM] unsigned short 
  5419 ;;  target_x        2   33[COMRAM] unsigned short 
  5420 ;;  number_of_st    2   31[COMRAM] unsigned short 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  2   13[COMRAM] unsigned short 
  5423 ;; Registers used:
  5424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;Total ram usage:       32 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    2
  5437 ;; This function calls:
  5438 ;;		_random_generator
  5439 ;; This function is called by:
  5440 ;;		_highIsr
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text18
  5445  001C2E                     __ptext18:
  5446                           	callstack 0
  5447  001C2E                     _compute_frisbee_target_and_route:
  5448                           	callstack 22
  5449  001C2E                     i2l107:
  5450  001C2E                     
  5451                           ;./the3.h: 165:         target_x = random_generator(16) + 1;
  5452  001C2E  0E00               	movlw	0
  5453  001C30  6E07               	movwf	(random_generator@modulo+1)^0,c
  5454  001C32  0E10               	movlw	16
  5455  001C34  6E06               	movwf	random_generator@modulo^0,c
  5456  001C36  EC54  F017         	call	_random_generator	;wreg free
  5457  001C3A  0E01               	movlw	1
  5458  001C3C  2406               	addwf	?_random_generator^0,w,c
  5459  001C3E  6E22               	movwf	compute_frisbee_target_and_route@target_x^0,c
  5460  001C40  0E00               	movlw	0
  5461  001C42  2007               	addwfc	(?_random_generator+1)^0,w,c
  5462  001C44  6E23               	movwf	(compute_frisbee_target_and_route@target_x+1)^0,c
  5463                           
  5464                           ;./the3.h: 166:         target_y = random_generator(4) + 1;
  5465  001C46  0E00               	movlw	0
  5466  001C48  6E07               	movwf	(random_generator@modulo+1)^0,c
  5467  001C4A  0E04               	movlw	4
  5468  001C4C  6E06               	movwf	random_generator@modulo^0,c
  5469  001C4E  EC54  F017         	call	_random_generator	;wreg free
  5470  001C52  0E01               	movlw	1
  5471  001C54  2406               	addwf	?_random_generator^0,w,c
  5472  001C56  6E24               	movwf	compute_frisbee_target_and_route@target_y^0,c
  5473  001C58  0E00               	movlw	0
  5474  001C5A  2007               	addwfc	(?_random_generator+1)^0,w,c
  5475  001C5C  6E25               	movwf	(compute_frisbee_target_and_route@target_y+1)^0,c
  5476  001C5E                     
  5477                           ;./the3.h: 169:         if (target_x < current_fisbee_x_position)
  5478  001C5E  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  5479  001C60  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  5480  001C62  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  5481  001C64  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  5482  001C66  B0D8               	btfsc	status,0,c
  5483  001C68  EF38  F00E         	goto	i2u154_41
  5484  001C6C  EF3A  F00E         	goto	i2u154_40
  5485  001C70                     i2u154_41:
  5486  001C70  EF42  F00E         	goto	i2l2140
  5487  001C74                     i2u154_40:
  5488  001C74                     
  5489                           ;./the3.h: 170:             x_step_size = current_fisbee_x_position - target_x;
  5490  001C74  5022               	movf	compute_frisbee_target_and_route@target_x^0,w,c
  5491  001C76  5C0E               	subwf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  5492  001C78  6E2A               	movwf	compute_frisbee_target_and_route@x_step_size^0,c
  5493  001C7A  5023               	movf	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  5494  001C7C  580F               	subwfb	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  5495  001C7E  6E2B               	movwf	(compute_frisbee_target_and_route@x_step_size+1)^0,c
  5496  001C80  EF48  F00E         	goto	i2l109
  5497  001C84                     i2l2140:
  5498                           
  5499                           ;./the3.h: 172:             x_step_size = target_x - current_fisbee_x_position;
  5500  001C84  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  5501  001C86  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  5502  001C88  6E2A               	movwf	compute_frisbee_target_and_route@x_step_size^0,c
  5503  001C8A  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  5504  001C8C  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  5505  001C8E  6E2B               	movwf	(compute_frisbee_target_and_route@x_step_size+1)^0,c
  5506  001C90                     i2l109:
  5507                           
  5508                           ;./the3.h: 175:         if (target_y < current_fisbee_y_position)
  5509  001C90  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  5510  001C92  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  5511  001C94  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  5512  001C96  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  5513  001C98  B0D8               	btfsc	status,0,c
  5514  001C9A  EF51  F00E         	goto	i2u155_41
  5515  001C9E  EF53  F00E         	goto	i2u155_40
  5516  001CA2                     i2u155_41:
  5517  001CA2  EF5B  F00E         	goto	i2l2144
  5518  001CA6                     i2u155_40:
  5519  001CA6                     
  5520                           ;./the3.h: 176:             y_step_size = current_fisbee_y_position - target_y;
  5521  001CA6  5024               	movf	compute_frisbee_target_and_route@target_y^0,w,c
  5522  001CA8  5C10               	subwf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  5523  001CAA  6E2C               	movwf	compute_frisbee_target_and_route@y_step_size^0,c
  5524  001CAC  5025               	movf	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  5525  001CAE  5811               	subwfb	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  5526  001CB0  6E2D               	movwf	(compute_frisbee_target_and_route@y_step_size+1)^0,c
  5527  001CB2  EF61  F00E         	goto	i2l111
  5528  001CB6                     i2l2144:
  5529                           
  5530                           ;./the3.h: 178:             y_step_size = target_y - current_fisbee_y_position;
  5531  001CB6  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  5532  001CB8  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  5533  001CBA  6E2C               	movwf	compute_frisbee_target_and_route@y_step_size^0,c
  5534  001CBC  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  5535  001CBE  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  5536  001CC0  6E2D               	movwf	(compute_frisbee_target_and_route@y_step_size+1)^0,c
  5537  001CC2                     i2l111:
  5538                           
  5539                           ;./the3.h: 181:         if (x_step_size <= 2 && y_step_size <= 2)
  5540  001CC2  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  5541  001CC4  E107               	bnz	i2u156_41
  5542  001CC6  0E03               	movlw	3
  5543  001CC8  5C2A               	subwf	compute_frisbee_target_and_route@x_step_size^0,w,c
  5544  001CCA  B0D8               	btfsc	status,0,c
  5545  001CCC  EF6A  F00E         	goto	i2u156_41
  5546  001CD0  EF6C  F00E         	goto	i2u156_40
  5547  001CD4                     i2u156_41:
  5548  001CD4  EF79  F00E         	goto	i2l2150
  5549  001CD8                     i2u156_40:
  5550  001CD8  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  5551  001CDA  E107               	bnz	i2u157_41
  5552  001CDC  0E03               	movlw	3
  5553  001CDE  5C2C               	subwf	compute_frisbee_target_and_route@y_step_size^0,w,c
  5554  001CE0  B0D8               	btfsc	status,0,c
  5555  001CE2  EF75  F00E         	goto	i2u157_41
  5556  001CE6  EF77  F00E         	goto	i2u157_40
  5557  001CEA                     i2u157_41:
  5558  001CEA  EF79  F00E         	goto	i2l2150
  5559  001CEE                     i2u157_40:
  5560  001CEE  EF17  F00E         	goto	i2l107
  5561  001CF2                     i2l2150:
  5562                           
  5563                           ;./the3.h: 185:         if (x_step_size > y_step_size)
  5564  001CF2  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  5565  001CF4  5C2C               	subwf	compute_frisbee_target_and_route@y_step_size^0,w,c
  5566  001CF6  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  5567  001CF8  582D               	subwfb	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  5568  001CFA  B0D8               	btfsc	status,0,c
  5569  001CFC  EF82  F00E         	goto	i2u158_41
  5570  001D00  EF84  F00E         	goto	i2u158_40
  5571  001D04                     i2u158_41:
  5572  001D04  EF8A  F00E         	goto	i2l114
  5573  001D08                     i2u158_40:
  5574  001D08                     
  5575                           ;./the3.h: 186:             number_of_steps = x_step_size;
  5576  001D08  C02A  F020         	movff	compute_frisbee_target_and_route@x_step_size,compute_frisbee_target_and_route@num
      +                          ber_of_steps
  5577  001D0C  C02B  F021         	movff	compute_frisbee_target_and_route@x_step_size+1,compute_frisbee_target_and_route@n
      +                          umber_of_steps+1
  5578  001D10  EF8E  F00E         	goto	i2l116
  5579  001D14                     i2l114:
  5580                           
  5581                           ;./the3.h: 188:             number_of_steps = y_step_size;
  5582  001D14  C02C  F020         	movff	compute_frisbee_target_and_route@y_step_size,compute_frisbee_target_and_route@num
      +                          ber_of_steps
  5583  001D18  C02D  F021         	movff	compute_frisbee_target_and_route@y_step_size+1,compute_frisbee_target_and_route@n
      +                          umber_of_steps+1
  5584  001D1C                     i2l116:
  5585                           
  5586                           ;./the3.h: 201:     unsigned short x = current_fisbee_x_position;
  5587  001D1C  C00E  F026         	movff	compute_frisbee_target_and_route@current_fisbee_x_position,compute_frisbee_target
      +                          _and_route@x
  5588  001D20  C00F  F027         	movff	compute_frisbee_target_and_route@current_fisbee_x_position+1,compute_frisbee_targ
      +                          et_and_route@x+1
  5589  001D24                     
  5590                           ;./the3.h: 202:     if (target_x < current_fisbee_x_position) {
  5591  001D24  500E               	movf	compute_frisbee_target_and_route@current_fisbee_x_position^0,w,c
  5592  001D26  5C22               	subwf	compute_frisbee_target_and_route@target_x^0,w,c
  5593  001D28  500F               	movf	(compute_frisbee_target_and_route@current_fisbee_x_position+1)^0,w,c
  5594  001D2A  5823               	subwfb	(compute_frisbee_target_and_route@target_x+1)^0,w,c
  5595  001D2C  B0D8               	btfsc	status,0,c
  5596  001D2E  EF9B  F00E         	goto	i2u159_41
  5597  001D32  EF9D  F00E         	goto	i2u159_40
  5598  001D36                     i2u159_41:
  5599  001D36  EFCC  F00E         	goto	i2l2166
  5600  001D3A                     i2u159_40:
  5601  001D3A                     
  5602                           ;./the3.h: 203:         for (unsigned short i = 0; i < x_step_size; i++) {
  5603  001D3A  0E00               	movlw	0
  5604  001D3C  6E15               	movwf	(compute_frisbee_target_and_route@i+1)^0,c
  5605  001D3E  0E00               	movlw	0
  5606  001D40  6E14               	movwf	compute_frisbee_target_and_route@i^0,c
  5607  001D42  EFBF  F00E         	goto	i2l2164
  5608  001D46                     i2l2158:
  5609                           
  5610                           ;./the3.h: 204:             x = x - 1;
  5611  001D46  0EFF               	movlw	255
  5612  001D48  2426               	addwf	compute_frisbee_target_and_route@x^0,w,c
  5613  001D4A  6E26               	movwf	compute_frisbee_target_and_route@x^0,c
  5614  001D4C  0EFF               	movlw	255
  5615  001D4E  2027               	addwfc	(compute_frisbee_target_and_route@x+1)^0,w,c
  5616  001D50  6E27               	movwf	(compute_frisbee_target_and_route@x+1)^0,c
  5617  001D52                     
  5618                           ;./the3.h: 205:             frisbee_steps[i][0] = x;
  5619  001D52  0E80               	movlw	low _frisbee_steps
  5620  001D54  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  5621  001D56  0E01               	movlw	high _frisbee_steps
  5622  001D58  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  5623  001D5A  90D8               	bcf	status,0,c
  5624  001D5C  3414               	rlcf	compute_frisbee_target_and_route@i^0,w,c
  5625  001D5E  6ED9               	movwf	fsr2l,c
  5626  001D60  3415               	rlcf	(compute_frisbee_target_and_route@i+1)^0,w,c
  5627  001D62  6EDA               	movwf	fsr2h,c
  5628  001D64  90D8               	bcf	status,0,c
  5629  001D66  36D9               	rlcf	fsr2l,f,c
  5630  001D68  36DA               	rlcf	fsr2h,f,c
  5631  001D6A  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  5632  001D6C  26D9               	addwf	fsr2l,f,c
  5633  001D6E  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  5634  001D70  22DA               	addwfc	fsr2h,f,c
  5635  001D72  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  5636  001D76  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  5637  001D7A                     
  5638                           ;./the3.h: 206:         }
  5639  001D7A  4A14               	infsnz	compute_frisbee_target_and_route@i^0,f,c
  5640  001D7C  2A15               	incf	(compute_frisbee_target_and_route@i+1)^0,f,c
  5641  001D7E                     i2l2164:
  5642  001D7E  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  5643  001D80  5C14               	subwf	compute_frisbee_target_and_route@i^0,w,c
  5644  001D82  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  5645  001D84  5815               	subwfb	(compute_frisbee_target_and_route@i+1)^0,w,c
  5646  001D86  A0D8               	btfss	status,0,c
  5647  001D88  EFC8  F00E         	goto	i2u160_41
  5648  001D8C  EFCA  F00E         	goto	i2u160_40
  5649  001D90                     i2u160_41:
  5650  001D90  EFA3  F00E         	goto	i2l2158
  5651  001D94                     i2u160_40:
  5652  001D94  EFF9  F00E         	goto	i2l121
  5653  001D98                     i2l2166:
  5654                           
  5655                           ;./the3.h: 209:         for (unsigned short i = 0; i < x_step_size; i++) {
  5656  001D98  0E00               	movlw	0
  5657  001D9A  6E17               	movwf	(compute_frisbee_target_and_route@i_686+1)^0,c
  5658  001D9C  0E00               	movlw	0
  5659  001D9E  6E16               	movwf	compute_frisbee_target_and_route@i_686^0,c
  5660  001DA0  EFEE  F00E         	goto	i2l2174
  5661  001DA4                     i2l2168:
  5662                           
  5663                           ;./the3.h: 210:             x = x + 1;
  5664  001DA4  0E01               	movlw	1
  5665  001DA6  2426               	addwf	compute_frisbee_target_and_route@x^0,w,c
  5666  001DA8  6E26               	movwf	compute_frisbee_target_and_route@x^0,c
  5667  001DAA  0E00               	movlw	0
  5668  001DAC  2027               	addwfc	(compute_frisbee_target_and_route@x+1)^0,w,c
  5669  001DAE  6E27               	movwf	(compute_frisbee_target_and_route@x+1)^0,c
  5670  001DB0                     
  5671                           ;./the3.h: 211:             frisbee_steps[i][0] = x;
  5672  001DB0  0E80               	movlw	low _frisbee_steps
  5673  001DB2  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  5674  001DB4  0E01               	movlw	high _frisbee_steps
  5675  001DB6  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  5676  001DB8  90D8               	bcf	status,0,c
  5677  001DBA  3416               	rlcf	compute_frisbee_target_and_route@i_686^0,w,c
  5678  001DBC  6ED9               	movwf	fsr2l,c
  5679  001DBE  3417               	rlcf	(compute_frisbee_target_and_route@i_686+1)^0,w,c
  5680  001DC0  6EDA               	movwf	fsr2h,c
  5681  001DC2  90D8               	bcf	status,0,c
  5682  001DC4  36D9               	rlcf	fsr2l,f,c
  5683  001DC6  36DA               	rlcf	fsr2h,f,c
  5684  001DC8  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  5685  001DCA  26D9               	addwf	fsr2l,f,c
  5686  001DCC  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  5687  001DCE  22DA               	addwfc	fsr2h,f,c
  5688  001DD0  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  5689  001DD4  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  5690  001DD8                     
  5691                           ;./the3.h: 212:         }
  5692  001DD8  4A16               	infsnz	compute_frisbee_target_and_route@i_686^0,f,c
  5693  001DDA  2A17               	incf	(compute_frisbee_target_and_route@i_686+1)^0,f,c
  5694  001DDC                     i2l2174:
  5695  001DDC  502A               	movf	compute_frisbee_target_and_route@x_step_size^0,w,c
  5696  001DDE  5C16               	subwf	compute_frisbee_target_and_route@i_686^0,w,c
  5697  001DE0  502B               	movf	(compute_frisbee_target_and_route@x_step_size+1)^0,w,c
  5698  001DE2  5817               	subwfb	(compute_frisbee_target_and_route@i_686+1)^0,w,c
  5699  001DE4  A0D8               	btfss	status,0,c
  5700  001DE6  EFF7  F00E         	goto	i2u161_41
  5701  001DEA  EFF9  F00E         	goto	i2u161_40
  5702  001DEE                     i2u161_41:
  5703  001DEE  EFD2  F00E         	goto	i2l2168
  5704  001DF2                     i2u161_40:
  5705  001DF2                     i2l121:
  5706                           
  5707                           ;./the3.h: 214:     for (unsigned short i = x_step_size; i < number_of_steps; i++)
  5708  001DF2  C02A  F018         	movff	compute_frisbee_target_and_route@x_step_size,compute_frisbee_target_and_route@i_6
      +                          87
  5709  001DF6  C02B  F019         	movff	compute_frisbee_target_and_route@x_step_size+1,compute_frisbee_target_and_route@i
      +                          _687+1
  5710  001DFA  EF15  F00F         	goto	i2l2180
  5711  001DFE                     i2l2176:
  5712                           
  5713                           ;./the3.h: 215:         frisbee_steps[i][0] = x;
  5714  001DFE  0E80               	movlw	low _frisbee_steps
  5715  001E00  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  5716  001E02  0E01               	movlw	high _frisbee_steps
  5717  001E04  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  5718  001E06  90D8               	bcf	status,0,c
  5719  001E08  3418               	rlcf	compute_frisbee_target_and_route@i_687^0,w,c
  5720  001E0A  6ED9               	movwf	fsr2l,c
  5721  001E0C  3419               	rlcf	(compute_frisbee_target_and_route@i_687+1)^0,w,c
  5722  001E0E  6EDA               	movwf	fsr2h,c
  5723  001E10  90D8               	bcf	status,0,c
  5724  001E12  36D9               	rlcf	fsr2l,f,c
  5725  001E14  36DA               	rlcf	fsr2h,f,c
  5726  001E16  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  5727  001E18  26D9               	addwf	fsr2l,f,c
  5728  001E1A  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  5729  001E1C  22DA               	addwfc	fsr2h,f,c
  5730  001E1E  C026  FFDE         	movff	compute_frisbee_target_and_route@x,postinc2
  5731  001E22  C027  FFDD         	movff	compute_frisbee_target_and_route@x+1,postdec2
  5732  001E26  4A18               	infsnz	compute_frisbee_target_and_route@i_687^0,f,c
  5733  001E28  2A19               	incf	(compute_frisbee_target_and_route@i_687+1)^0,f,c
  5734  001E2A                     i2l2180:
  5735  001E2A  5020               	movf	compute_frisbee_target_and_route@number_of_steps^0,w,c
  5736  001E2C  5C18               	subwf	compute_frisbee_target_and_route@i_687^0,w,c
  5737  001E2E  5021               	movf	(compute_frisbee_target_and_route@number_of_steps+1)^0,w,c
  5738  001E30  5819               	subwfb	(compute_frisbee_target_and_route@i_687+1)^0,w,c
  5739  001E32  A0D8               	btfss	status,0,c
  5740  001E34  EF1E  F00F         	goto	i2u162_41
  5741  001E38  EF20  F00F         	goto	i2u162_40
  5742  001E3C                     i2u162_41:
  5743  001E3C  EFFF  F00E         	goto	i2l2176
  5744  001E40                     i2u162_40:
  5745  001E40                     
  5746                           ;./the3.h: 218:     unsigned short y = current_fisbee_y_position;
  5747  001E40  C010  F028         	movff	compute_frisbee_target_and_route@current_fisbee_y_position,compute_frisbee_target
      +                          _and_route@y
  5748  001E44  C011  F029         	movff	compute_frisbee_target_and_route@current_fisbee_y_position+1,compute_frisbee_targ
      +                          et_and_route@y+1
  5749  001E48                     
  5750                           ;./the3.h: 219:     if (target_y < current_fisbee_y_position) {
  5751  001E48  5010               	movf	compute_frisbee_target_and_route@current_fisbee_y_position^0,w,c
  5752  001E4A  5C24               	subwf	compute_frisbee_target_and_route@target_y^0,w,c
  5753  001E4C  5011               	movf	(compute_frisbee_target_and_route@current_fisbee_y_position+1)^0,w,c
  5754  001E4E  5825               	subwfb	(compute_frisbee_target_and_route@target_y+1)^0,w,c
  5755  001E50  B0D8               	btfsc	status,0,c
  5756  001E52  EF2D  F00F         	goto	i2u163_41
  5757  001E56  EF2F  F00F         	goto	i2u163_40
  5758  001E5A                     i2u163_41:
  5759  001E5A  EF62  F00F         	goto	i2l2194
  5760  001E5E                     i2u163_40:
  5761  001E5E                     
  5762                           ;./the3.h: 220:         for (unsigned short i = 0; i < y_step_size; i++) {
  5763  001E5E  0E00               	movlw	0
  5764  001E60  6E1B               	movwf	(compute_frisbee_target_and_route@i_689+1)^0,c
  5765  001E62  0E00               	movlw	0
  5766  001E64  6E1A               	movwf	compute_frisbee_target_and_route@i_689^0,c
  5767  001E66  EF55  F00F         	goto	i2l2192
  5768  001E6A                     i2l2186:
  5769                           
  5770                           ;./the3.h: 221:             y = y - 1;
  5771  001E6A  0EFF               	movlw	255
  5772  001E6C  2428               	addwf	compute_frisbee_target_and_route@y^0,w,c
  5773  001E6E  6E28               	movwf	compute_frisbee_target_and_route@y^0,c
  5774  001E70  0EFF               	movlw	255
  5775  001E72  2029               	addwfc	(compute_frisbee_target_and_route@y+1)^0,w,c
  5776  001E74  6E29               	movwf	(compute_frisbee_target_and_route@y+1)^0,c
  5777  001E76                     
  5778                           ;./the3.h: 222:             frisbee_steps[i][1] = y;
  5779  001E76  0E80               	movlw	low _frisbee_steps
  5780  001E78  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  5781  001E7A  0E01               	movlw	high _frisbee_steps
  5782  001E7C  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  5783  001E7E  0E02               	movlw	2
  5784  001E80  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  5785  001E82  0E00               	movlw	0
  5786  001E84  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  5787  001E86  90D8               	bcf	status,0,c
  5788  001E88  341A               	rlcf	compute_frisbee_target_and_route@i_689^0,w,c
  5789  001E8A  6ED9               	movwf	fsr2l,c
  5790  001E8C  341B               	rlcf	(compute_frisbee_target_and_route@i_689+1)^0,w,c
  5791  001E8E  6EDA               	movwf	fsr2h,c
  5792  001E90  90D8               	bcf	status,0,c
  5793  001E92  36D9               	rlcf	fsr2l,f,c
  5794  001E94  36DA               	rlcf	fsr2h,f,c
  5795  001E96  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  5796  001E98  26D9               	addwf	fsr2l,f,c
  5797  001E9A  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  5798  001E9C  22DA               	addwfc	fsr2h,f,c
  5799  001E9E  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  5800  001EA2  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  5801  001EA6                     
  5802                           ;./the3.h: 223:         }
  5803  001EA6  4A1A               	infsnz	compute_frisbee_target_and_route@i_689^0,f,c
  5804  001EA8  2A1B               	incf	(compute_frisbee_target_and_route@i_689+1)^0,f,c
  5805  001EAA                     i2l2192:
  5806  001EAA  502C               	movf	compute_frisbee_target_and_route@y_step_size^0,w,c
  5807  001EAC  5C1A               	subwf	compute_frisbee_target_and_route@i_689^0,w,c
  5808  001EAE  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  5809  001EB0  581B               	subwfb	(compute_frisbee_target_and_route@i_689+1)^0,w,c
  5810  001EB2  A0D8               	btfss	status,0,c
  5811  001EB4  EF5E  F00F         	goto	i2u164_41
  5812  001EB8  EF60  F00F         	goto	i2u164_40
  5813  001EBC                     i2u164_41:
  5814  001EBC  EF35  F00F         	goto	i2l2186
  5815  001EC0                     i2u164_40:
  5816  001EC0  EF93  F00F         	goto	i2l132
  5817  001EC4                     i2l2194:
  5818                           
  5819                           ;./the3.h: 226:         for (unsigned short i = 0; i < y_step_size; i++) {
  5820  001EC4  0E00               	movlw	0
  5821  001EC6  6E1D               	movwf	(compute_frisbee_target_and_route@i_690+1)^0,c
  5822  001EC8  0E00               	movlw	0
  5823  001ECA  6E1C               	movwf	compute_frisbee_target_and_route@i_690^0,c
  5824  001ECC  EF88  F00F         	goto	i2l2202
  5825  001ED0                     i2l2196:
  5826                           
  5827                           ;./the3.h: 227:             y = y + 1;
  5828  001ED0  0E01               	movlw	1
  5829  001ED2  2428               	addwf	compute_frisbee_target_and_route@y^0,w,c
  5830  001ED4  6E28               	movwf	compute_frisbee_target_and_route@y^0,c
  5831  001ED6  0E00               	movlw	0
  5832  001ED8  2029               	addwfc	(compute_frisbee_target_and_route@y+1)^0,w,c
  5833  001EDA  6E29               	movwf	(compute_frisbee_target_and_route@y+1)^0,c
  5834  001EDC                     
  5835                           ;./the3.h: 228:             frisbee_steps[i][1] = y;
  5836  001EDC  0E80               	movlw	low _frisbee_steps
  5837  001EDE  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  5838  001EE0  0E01               	movlw	high _frisbee_steps
  5839  001EE2  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  5840  001EE4  0E02               	movlw	2
  5841  001EE6  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  5842  001EE8  0E00               	movlw	0
  5843  001EEA  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  5844  001EEC  90D8               	bcf	status,0,c
  5845  001EEE  341C               	rlcf	compute_frisbee_target_and_route@i_690^0,w,c
  5846  001EF0  6ED9               	movwf	fsr2l,c
  5847  001EF2  341D               	rlcf	(compute_frisbee_target_and_route@i_690+1)^0,w,c
  5848  001EF4  6EDA               	movwf	fsr2h,c
  5849  001EF6  90D8               	bcf	status,0,c
  5850  001EF8  36D9               	rlcf	fsr2l,f,c
  5851  001EFA  36DA               	rlcf	fsr2h,f,c
  5852  001EFC  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  5853  001EFE  26D9               	addwf	fsr2l,f,c
  5854  001F00  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  5855  001F02  22DA               	addwfc	fsr2h,f,c
  5856  001F04  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  5857  001F08  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  5858  001F0C                     
  5859                           ;./the3.h: 229:         }
  5860  001F0C  4A1C               	infsnz	compute_frisbee_target_and_route@i_690^0,f,c
  5861  001F0E  2A1D               	incf	(compute_frisbee_target_and_route@i_690+1)^0,f,c
  5862  001F10                     i2l2202:
  5863  001F10  502C               	movf	compute_frisbee_target_and_route@y_step_size^0,w,c
  5864  001F12  5C1C               	subwf	compute_frisbee_target_and_route@i_690^0,w,c
  5865  001F14  502D               	movf	(compute_frisbee_target_and_route@y_step_size+1)^0,w,c
  5866  001F16  581D               	subwfb	(compute_frisbee_target_and_route@i_690+1)^0,w,c
  5867  001F18  A0D8               	btfss	status,0,c
  5868  001F1A  EF91  F00F         	goto	i2u165_41
  5869  001F1E  EF93  F00F         	goto	i2u165_40
  5870  001F22                     i2u165_41:
  5871  001F22  EF68  F00F         	goto	i2l2196
  5872  001F26                     i2u165_40:
  5873  001F26                     i2l132:
  5874                           
  5875                           ;./the3.h: 231:     for (unsigned short i = y_step_size; i < number_of_steps; i++)
  5876  001F26  C02C  F01E         	movff	compute_frisbee_target_and_route@y_step_size,compute_frisbee_target_and_route@i_6
      +                          91
  5877  001F2A  C02D  F01F         	movff	compute_frisbee_target_and_route@y_step_size+1,compute_frisbee_target_and_route@i
      +                          _691+1
  5878  001F2E  EFB3  F00F         	goto	i2l2208
  5879  001F32                     i2l2204:
  5880                           
  5881                           ;./the3.h: 232:         frisbee_steps[i][1] = y;
  5882  001F32  0E80               	movlw	low _frisbee_steps
  5883  001F34  6E12               	movwf	??_compute_frisbee_target_and_route^0,c
  5884  001F36  0E01               	movlw	high _frisbee_steps
  5885  001F38  6E13               	movwf	(??_compute_frisbee_target_and_route+1)^0,c
  5886  001F3A  0E02               	movlw	2
  5887  001F3C  2612               	addwf	??_compute_frisbee_target_and_route^0,f,c
  5888  001F3E  0E00               	movlw	0
  5889  001F40  2213               	addwfc	(??_compute_frisbee_target_and_route+1)^0,f,c
  5890  001F42  90D8               	bcf	status,0,c
  5891  001F44  341E               	rlcf	compute_frisbee_target_and_route@i_691^0,w,c
  5892  001F46  6ED9               	movwf	fsr2l,c
  5893  001F48  341F               	rlcf	(compute_frisbee_target_and_route@i_691+1)^0,w,c
  5894  001F4A  6EDA               	movwf	fsr2h,c
  5895  001F4C  90D8               	bcf	status,0,c
  5896  001F4E  36D9               	rlcf	fsr2l,f,c
  5897  001F50  36DA               	rlcf	fsr2h,f,c
  5898  001F52  5012               	movf	??_compute_frisbee_target_and_route^0,w,c
  5899  001F54  26D9               	addwf	fsr2l,f,c
  5900  001F56  5013               	movf	(??_compute_frisbee_target_and_route+1)^0,w,c
  5901  001F58  22DA               	addwfc	fsr2h,f,c
  5902  001F5A  C028  FFDE         	movff	compute_frisbee_target_and_route@y,postinc2
  5903  001F5E  C029  FFDD         	movff	compute_frisbee_target_and_route@y+1,postdec2
  5904  001F62  4A1E               	infsnz	compute_frisbee_target_and_route@i_691^0,f,c
  5905  001F64  2A1F               	incf	(compute_frisbee_target_and_route@i_691+1)^0,f,c
  5906  001F66                     i2l2208:
  5907  001F66  5020               	movf	compute_frisbee_target_and_route@number_of_steps^0,w,c
  5908  001F68  5C1E               	subwf	compute_frisbee_target_and_route@i_691^0,w,c
  5909  001F6A  5021               	movf	(compute_frisbee_target_and_route@number_of_steps+1)^0,w,c
  5910  001F6C  581F               	subwfb	(compute_frisbee_target_and_route@i_691+1)^0,w,c
  5911  001F6E  A0D8               	btfss	status,0,c
  5912  001F70  EFBC  F00F         	goto	i2u166_41
  5913  001F74  EFBE  F00F         	goto	i2u166_40
  5914  001F78                     i2u166_41:
  5915  001F78  EF99  F00F         	goto	i2l2204
  5916  001F7C                     i2u166_40:
  5917  001F7C                     
  5918                           ;./the3.h: 234:     return number_of_steps;
  5919  001F7C  C020  F00E         	movff	compute_frisbee_target_and_route@number_of_steps,?_compute_frisbee_target_and_rou
      +                          te
  5920  001F80  C021  F00F         	movff	compute_frisbee_target_and_route@number_of_steps+1,?_compute_frisbee_target_and_r
      +                          oute+1
  5921  001F84  0012               	return		;funcret
  5922  001F86                     __end_of_compute_frisbee_target_and_route:
  5923                           	callstack 0
  5924                           
  5925 ;; *************** function _random_generator *****************
  5926 ;; Defined at:
  5927 ;;		line 237 in file "./the3.h"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  modulo          2    5[COMRAM] unsigned short 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  i               2    9[COMRAM] unsigned short 
  5932 ;;  res             1   12[COMRAM] unsigned char 
  5933 ;;  temp            1   11[COMRAM] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  2    5[COMRAM] unsigned short 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;Total ram usage:        8 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    1
  5950 ;; This function calls:
  5951 ;;		___lwmod
  5952 ;; This function is called by:
  5953 ;;		_compute_frisbee_target_and_route
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text19
  5958  002EA8                     __ptext19:
  5959                           	callstack 0
  5960  002EA8                     _random_generator:
  5961                           	callstack 22
  5962  002EA8                     
  5963                           ;./the3.h: 241:     byte temp;;./the3.h: 242:     byte res;;./the3.h: 244:     T3CONbits
      +                          .TMR3ON = 0;
  5964  002EA8  90B1               	bcf	177,0,c	;volatile
  5965  002EAA                     
  5966                           ;./the3.h: 246:     res = TMR3L % modulo;
  5967  002EAA  CFB2 F001          	movff	4018,___lwmod@dividend	;volatile
  5968  002EAE  6A02               	clrf	(___lwmod@dividend+1)^0,c
  5969  002EB0  C006  F003         	movff	random_generator@modulo,___lwmod@divisor
  5970  002EB4  C007  F004         	movff	random_generator@modulo+1,___lwmod@divisor+1
  5971  002EB8  EC89  F017         	call	___lwmod	;wreg free
  5972  002EBC  5001               	movf	?___lwmod^0,w,c
  5973  002EBE  6E0D               	movwf	random_generator@res^0,c
  5974  002EC0                     
  5975                           ;./the3.h: 247:     TMR3H = TMR3L;
  5976  002EC0  CFB2 FFB3          	movff	4018,4019	;volatile
  5977  002EC4                     
  5978                           ;./the3.h: 249:     for (unsigned short i = 0; i < (modulo & 0b111); i++) {
  5979  002EC4  0E00               	movlw	0
  5980  002EC6  6E0B               	movwf	(random_generator@i+1)^0,c
  5981  002EC8  0E00               	movlw	0
  5982  002ECA  6E0A               	movwf	random_generator@i^0,c
  5983  002ECC  EF73  F017         	goto	i2l2096
  5984  002ED0                     i2l2092:
  5985                           
  5986                           ;./the3.h: 250:         temp = TMR3L & 0b10000000;
  5987  002ED0  50B2               	movf	178,w,c	;volatile
  5988  002ED2  0B80               	andlw	128
  5989  002ED4  6E0C               	movwf	random_generator@temp^0,c
  5990                           
  5991                           ;./the3.h: 251:         TMR3L <<= 1;
  5992  002ED6  90D8               	bcf	status,0,c
  5993  002ED8  36B2               	rlcf	178,f,c
  5994                           
  5995                           ;volatile
  5996                           ;./the3.h: 252:         TMR3L = TMR3L | (temp >> 7);
  5997  002EDA  440C               	rlncf	random_generator@temp^0,w,c
  5998  002EDC  0B01               	andlw	1
  5999  002EDE  10B2               	iorwf	178,w,c	;volatile
  6000  002EE0  6EB2               	movwf	178,c	;volatile
  6001  002EE2                     
  6002                           ;./the3.h: 253:     }
  6003  002EE2  4A0A               	infsnz	random_generator@i^0,f,c
  6004  002EE4  2A0B               	incf	(random_generator@i+1)^0,f,c
  6005  002EE6                     i2l2096:
  6006  002EE6  0E07               	movlw	7
  6007  002EE8  1406               	andwf	random_generator@modulo^0,w,c
  6008  002EEA  6E08               	movwf	??_random_generator^0,c
  6009  002EEC  0E00               	movlw	0
  6010  002EEE  1407               	andwf	(random_generator@modulo+1)^0,w,c
  6011  002EF0  6E09               	movwf	(??_random_generator+1)^0,c
  6012  002EF2  5008               	movf	??_random_generator^0,w,c
  6013  002EF4  5C0A               	subwf	random_generator@i^0,w,c
  6014  002EF6  5009               	movf	(??_random_generator+1)^0,w,c
  6015  002EF8  580B               	subwfb	(random_generator@i+1)^0,w,c
  6016  002EFA  A0D8               	btfss	status,0,c
  6017  002EFC  EF82  F017         	goto	i2u150_41
  6018  002F00  EF84  F017         	goto	i2u150_40
  6019  002F04                     i2u150_41:
  6020  002F04  EF68  F017         	goto	i2l2092
  6021  002F08                     i2u150_40:
  6022  002F08                     
  6023                           ;./the3.h: 256:     T3CONbits.TMR3ON = 1;
  6024  002F08  80B1               	bsf	177,0,c	;volatile
  6025                           
  6026                           ;./the3.h: 257:     return res;
  6027  002F0A  C00D  F006         	movff	random_generator@res,?_random_generator
  6028  002F0E  6A07               	clrf	(?_random_generator+1)^0,c
  6029  002F10  0012               	return		;funcret
  6030  002F12                     __end_of_random_generator:
  6031                           	callstack 0
  6032                           
  6033 ;; *************** function ___lwmod *****************
  6034 ;; Defined at:
  6035 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/lwmod.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  dividend        2    0[COMRAM] unsigned int 
  6038 ;;  divisor         2    2[COMRAM] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  counter         1    4[COMRAM] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  2    0[COMRAM] unsigned int 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;Total ram usage:        5 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_random_generator
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text20
  6064  002F12                     __ptext20:
  6065                           	callstack 0
  6066  002F12                     ___lwmod:
  6067                           	callstack 22
  6068  002F12  5003               	movf	___lwmod@divisor^0,w,c
  6069  002F14  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6070  002F16  B4D8               	btfsc	status,2,c
  6071  002F18  EF90  F017         	goto	i2u147_41
  6072  002F1C  EF92  F017         	goto	i2u147_40
  6073  002F20                     i2u147_41:
  6074  002F20  EFB6  F017         	goto	i2l919
  6075  002F24                     i2u147_40:
  6076  002F24  0E01               	movlw	1
  6077  002F26  6E05               	movwf	___lwmod@counter^0,c
  6078  002F28  EF9A  F017         	goto	i2l2074
  6079  002F2C                     i2l2072:
  6080  002F2C  90D8               	bcf	status,0,c
  6081  002F2E  3603               	rlcf	___lwmod@divisor^0,f,c
  6082  002F30  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6083  002F32  2A05               	incf	___lwmod@counter^0,f,c
  6084  002F34                     i2l2074:
  6085  002F34  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6086  002F36  EF9F  F017         	goto	i2u148_41
  6087  002F3A  EFA1  F017         	goto	i2u148_40
  6088  002F3E                     i2u148_41:
  6089  002F3E  EF96  F017         	goto	i2l2072
  6090  002F42                     i2u148_40:
  6091  002F42                     i2l2076:
  6092  002F42  5003               	movf	___lwmod@divisor^0,w,c
  6093  002F44  5C01               	subwf	___lwmod@dividend^0,w,c
  6094  002F46  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6095  002F48  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6096  002F4A  A0D8               	btfss	status,0,c
  6097  002F4C  EFAA  F017         	goto	i2u149_41
  6098  002F50  EFAC  F017         	goto	i2u149_40
  6099  002F54                     i2u149_41:
  6100  002F54  EFB0  F017         	goto	i2l2080
  6101  002F58                     i2u149_40:
  6102  002F58  5003               	movf	___lwmod@divisor^0,w,c
  6103  002F5A  5E01               	subwf	___lwmod@dividend^0,f,c
  6104  002F5C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6105  002F5E  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6106  002F60                     i2l2080:
  6107  002F60  90D8               	bcf	status,0,c
  6108  002F62  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6109  002F64  3203               	rrcf	___lwmod@divisor^0,f,c
  6110  002F66  2E05               	decfsz	___lwmod@counter^0,f,c
  6111  002F68  EFA1  F017         	goto	i2l2076
  6112  002F6C                     i2l919:
  6113  002F6C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6114  002F70  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6115  002F74  0012               	return		;funcret
  6116  002F76                     __end_of___lwmod:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function _SetupDebouncingTimer *****************
  6120 ;; Defined at:
  6121 ;;		line 461 in file "main.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;Total ram usage:        0 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_highIsr
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text21
  6149  003112                     __ptext21:
  6150                           	callstack 0
  6151  003112                     _SetupDebouncingTimer:
  6152                           	callstack 24
  6153  003112                     
  6154                           ;main.c: 462:     acceptInterrupts = 0;
  6155  003112  0E00               	movlw	0
  6156  003114  6E51               	movwf	_acceptInterrupts^0,c
  6157                           
  6158                           ;main.c: 463:     TMR0L = 0;
  6159  003116  0E00               	movlw	0
  6160  003118  6ED6               	movwf	214,c	;volatile
  6161                           
  6162                           ;main.c: 464:     TMR0H = 0;
  6163  00311A  0E00               	movlw	0
  6164  00311C  6ED7               	movwf	215,c	;volatile
  6165  00311E                     
  6166                           ;main.c: 465:     T0CONbits.TMR0ON = 1;
  6167  00311E  8ED5               	bsf	213,7,c	;volatile
  6168  003120  0012               	return		;funcret
  6169  003122                     __end_of_SetupDebouncingTimer:
  6170                           	callstack 0
  6171                           
  6172 ;; *************** function _CheckIfCaughtFrisbee *****************
  6173 ;; Defined at:
  6174 ;;		line 468 in file "main.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;		None
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  i               2    7[COMRAM] int 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  2   34[None  ] PTR struct GameElement
  6181 ;; Registers used:
  6182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;Total ram usage:        3 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    1
  6195 ;; This function calls:
  6196 ;;		i2___wmul
  6197 ;; This function is called by:
  6198 ;;		_highIsr
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text22
  6203  002ADA                     __ptext22:
  6204                           	callstack 0
  6205  002ADA                     _CheckIfCaughtFrisbee:
  6206                           	callstack 23
  6207  002ADA                     
  6208                           ;main.c: 471:     for (int i = 0; i < 4; i++) {
  6209  002ADA  0E00               	movlw	0
  6210  002ADC  6E09               	movwf	(CheckIfCaughtFrisbee@i+1)^0,c
  6211  002ADE  0E00               	movlw	0
  6212  002AE0  6E08               	movwf	CheckIfCaughtFrisbee@i^0,c
  6213  002AE2                     i2l2260:
  6214                           
  6215                           ;main.c: 472:         if (objs[i].x == objs[5].x && objs[i].y == objs[5].y) {
  6216  002AE2  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  6217  002AE6  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  6218  002AEA  0E00               	movlw	0
  6219  002AEC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6220  002AEE  0E07               	movlw	7
  6221  002AF0  6E03               	movwf	i2___wmul@multiplicand^0,c
  6222  002AF2  EC5D  F018         	call	i2___wmul	;wreg free
  6223  002AF6  0EBA               	movlw	low _objs
  6224  002AF8  2401               	addwf	?i2___wmul^0,w,c
  6225  002AFA  6ED9               	movwf	fsr2l,c
  6226  002AFC  0E00               	movlw	high _objs
  6227  002AFE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6228  002B00  6EDA               	movwf	fsr2h,c
  6229  002B02  0100               	movlb	0	; () banked
  6230  002B04  51DD               	movf	(_objs+35)& (0+255),w,b
  6231  002B06  18DE               	xorwf	postinc2,w,c
  6232  002B08  A4D8               	btfss	status,2,c
  6233  002B0A  EF89  F015         	goto	i2u170_41
  6234  002B0E  EF8B  F015         	goto	i2u170_40
  6235  002B12                     i2u170_41:
  6236  002B12  EF02  F016         	goto	i2l2288
  6237  002B16                     i2u170_40:
  6238  002B16                     
  6239                           ; BSR set to: 0
  6240  002B16  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  6241  002B1A  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  6242  002B1E  0E00               	movlw	0
  6243  002B20  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6244  002B22  0E07               	movlw	7
  6245  002B24  6E03               	movwf	i2___wmul@multiplicand^0,c
  6246  002B26  EC5D  F018         	call	i2___wmul	;wreg free
  6247  002B2A  0EBB               	movlw	low (_objs+1)
  6248  002B2C  2401               	addwf	?i2___wmul^0,w,c
  6249  002B2E  6ED9               	movwf	fsr2l,c
  6250  002B30  0E00               	movlw	high (_objs+1)
  6251  002B32  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6252  002B34  6EDA               	movwf	fsr2h,c
  6253  002B36  0100               	movlb	0	; () banked
  6254  002B38  51DE               	movf	(_objs+36)& (0+255),w,b
  6255  002B3A  18DE               	xorwf	postinc2,w,c
  6256  002B3C  A4D8               	btfss	status,2,c
  6257  002B3E  EFA3  F015         	goto	i2u171_41
  6258  002B42  EFA5  F015         	goto	i2u171_40
  6259  002B46                     i2u171_41:
  6260  002B46  EF02  F016         	goto	i2l2288
  6261  002B4A                     i2u171_40:
  6262  002B4A                     
  6263                           ; BSR set to: 0
  6264                           ;main.c: 473:             if (objs[i].type == OT_PLAYERA) {
  6265  002B4A  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  6266  002B4E  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  6267  002B52  0E00               	movlw	0
  6268  002B54  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6269  002B56  0E07               	movlw	7
  6270  002B58  6E03               	movwf	i2___wmul@multiplicand^0,c
  6271  002B5A  EC5D  F018         	call	i2___wmul	;wreg free
  6272  002B5E  0EBF               	movlw	low (_objs+5)
  6273  002B60  2401               	addwf	?i2___wmul^0,w,c
  6274  002B62  6ED9               	movwf	fsr2l,c
  6275  002B64  0E00               	movlw	high (_objs+5)
  6276  002B66  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6277  002B68  6EDA               	movwf	fsr2h,c
  6278  002B6A  50DF               	movf	indf2,w,c
  6279  002B6C  A4D8               	btfss	status,2,c
  6280  002B6E  EFBB  F015         	goto	i2u172_41
  6281  002B72  EFBD  F015         	goto	i2u172_40
  6282  002B76                     i2u172_41:
  6283  002B76  EFC1  F015         	goto	i2l2268
  6284  002B7A                     i2u172_40:
  6285  002B7A                     
  6286                           ;main.c: 474:                 scoreA++;
  6287  002B7A  4A46               	infsnz	_scoreA^0,f,c
  6288  002B7C  2A47               	incf	(_scoreA+1)^0,f,c
  6289                           
  6290                           ;main.c: 475:             }
  6291  002B7E  EFC3  F015         	goto	i2l2270
  6292  002B82                     i2l2268:
  6293                           
  6294                           ;main.c: 477:                 scoreB++;
  6295  002B82  4A44               	infsnz	_scoreB^0,f,c
  6296  002B84  2A45               	incf	(_scoreB+1)^0,f,c
  6297  002B86                     i2l2270:
  6298                           
  6299                           ;main.c: 479:             game_state = GS_INACTIVE;
  6300  002B86  0E01               	movlw	1
  6301  002B88  6E5F               	movwf	_game_state^0,c
  6302  002B8A                     
  6303                           ;main.c: 480:             curFrisbeeSteps = 0;
  6304  002B8A  0E00               	movlw	0
  6305  002B8C  6E3D               	movwf	(_curFrisbeeSteps+1)^0,c
  6306  002B8E  0E00               	movlw	0
  6307  002B90  6E3C               	movwf	_curFrisbeeSteps^0,c
  6308  002B92                     
  6309                           ;main.c: 481:             objs[4].active = 0;
  6310  002B92  0E00               	movlw	0
  6311  002B94  0100               	movlb	0	; () banked
  6312  002B96  6FDA               	movwf	(_objs+32)& (0+255),b
  6313  002B98                     
  6314                           ; BSR set to: 0
  6315                           ;main.c: 482:             objs[5].active = 0;
  6316  002B98  0E00               	movlw	0
  6317  002B9A  6FE1               	movwf	(_objs+39)& (0+255),b
  6318  002B9C                     
  6319                           ; BSR set to: 0
  6320                           ;main.c: 484:             objs[selectedPlayer].state = OS_DEFAULT;
  6321  002B9C  C048  F001         	movff	_selectedPlayer,i2___wmul@multiplier
  6322  002BA0  C049  F002         	movff	_selectedPlayer+1,i2___wmul@multiplier+1
  6323  002BA4  0E00               	movlw	0
  6324  002BA6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6325  002BA8  0E07               	movlw	7
  6326  002BAA  6E03               	movwf	i2___wmul@multiplicand^0,c
  6327  002BAC  EC5D  F018         	call	i2___wmul	;wreg free
  6328  002BB0  0EC0               	movlw	low (_objs+6)
  6329  002BB2  2401               	addwf	?i2___wmul^0,w,c
  6330  002BB4  6ED9               	movwf	fsr2l,c
  6331  002BB6  0E00               	movlw	high (_objs+6)
  6332  002BB8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6333  002BBA  6EDA               	movwf	fsr2h,c
  6334  002BBC  0E00               	movlw	0
  6335  002BBE  6EDF               	movwf	indf2,c
  6336  002BC0                     
  6337                           ;main.c: 485:             objs[i].state = OS_SEL_W_FRISBEE;
  6338  002BC0  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  6339  002BC4  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  6340  002BC8  0E00               	movlw	0
  6341  002BCA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6342  002BCC  0E07               	movlw	7
  6343  002BCE  6E03               	movwf	i2___wmul@multiplicand^0,c
  6344  002BD0  EC5D  F018         	call	i2___wmul	;wreg free
  6345  002BD4  0EC0               	movlw	low (_objs+6)
  6346  002BD6  2401               	addwf	?i2___wmul^0,w,c
  6347  002BD8  6ED9               	movwf	fsr2l,c
  6348  002BDA  0E00               	movlw	high (_objs+6)
  6349  002BDC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6350  002BDE  6EDA               	movwf	fsr2h,c
  6351  002BE0  0E02               	movlw	2
  6352  002BE2  6EDF               	movwf	indf2,c
  6353  002BE4                     
  6354                           ;main.c: 486:             selectedPlayer = i;
  6355  002BE4  C008  F048         	movff	CheckIfCaughtFrisbee@i,_selectedPlayer
  6356  002BE8  C009  F049         	movff	CheckIfCaughtFrisbee@i+1,_selectedPlayer+1
  6357  002BEC                     
  6358                           ;main.c: 490:             return &objs[i];;	Return value of _CheckIfCaughtFrisbee is nev
      +                          er used
  6359  002BEC  C008  F001         	movff	CheckIfCaughtFrisbee@i,i2___wmul@multiplier
  6360  002BF0  C009  F002         	movff	CheckIfCaughtFrisbee@i+1,i2___wmul@multiplier+1
  6361  002BF4  0E00               	movlw	0
  6362  002BF6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6363  002BF8  0E07               	movlw	7
  6364  002BFA  6E03               	movwf	i2___wmul@multiplicand^0,c
  6365  002BFC  EC5D  F018         	call	i2___wmul	;wreg free
  6366  002C00  EF12  F016         	goto	i2l339
  6367  002C04                     i2l2288:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;main.c: 492:     }
  6371  002C04  4A08               	infsnz	CheckIfCaughtFrisbee@i^0,f,c
  6372  002C06  2A09               	incf	(CheckIfCaughtFrisbee@i+1)^0,f,c
  6373  002C08                     
  6374                           ; BSR set to: 0
  6375  002C08  BE09               	btfsc	(CheckIfCaughtFrisbee@i+1)^0,7,c
  6376  002C0A  EF10  F016         	goto	i2u173_41
  6377  002C0E  5009               	movf	(CheckIfCaughtFrisbee@i+1)^0,w,c
  6378  002C10  E109               	bnz	i2u173_40
  6379  002C12  0E04               	movlw	4
  6380  002C14  5C08               	subwf	CheckIfCaughtFrisbee@i^0,w,c
  6381  002C16  A0D8               	btfss	status,0,c
  6382  002C18  EF10  F016         	goto	i2u173_41
  6383  002C1C  EF12  F016         	goto	i2u173_40
  6384  002C20                     i2u173_41:
  6385  002C20  EF71  F015         	goto	i2l2260
  6386  002C24                     i2u173_40:
  6387  002C24                     i2l339:
  6388  002C24  0012               	return		;funcret
  6389  002C26                     __end_of_CheckIfCaughtFrisbee:
  6390                           	callstack 0
  6391                           
  6392 ;; *************** function i2___wmul *****************
  6393 ;; Defined at:
  6394 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  multiplier      2    0[COMRAM] unsigned int 
  6397 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  product         2    4[COMRAM] unsigned int 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  2    0[COMRAM] unsigned int 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, prodl, prodh
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;Total ram usage:        6 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_highIsr
  6419 ;;		_CheckIfCaughtFrisbee
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text23
  6424  0030BA                     __ptext23:
  6425                           	callstack 0
  6426  0030BA                     i2___wmul:
  6427                           	callstack 24
  6428  0030BA  5001               	movf	i2___wmul@multiplier^0,w,c
  6429  0030BC  0203               	mulwf	i2___wmul@multiplicand^0,c
  6430  0030BE  CFF3 F005          	movff	prodl,i2___wmul@product
  6431  0030C2  CFF4 F006          	movff	prodh,i2___wmul@product+1
  6432  0030C6  5001               	movf	i2___wmul@multiplier^0,w,c
  6433  0030C8  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  6434  0030CA  50F3               	movf	243,w,c
  6435  0030CC  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6436  0030CE  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  6437  0030D0  0203               	mulwf	i2___wmul@multiplicand^0,c
  6438  0030D2  50F3               	movf	243,w,c
  6439  0030D4  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6440  0030D6  C005  F001         	movff	i2___wmul@product,?i2___wmul
  6441  0030DA  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  6442  0030DE  0012               	return		;funcret
  6443  0030E0                     __end_ofi2___wmul:
  6444                           	callstack 0
  6445                           
  6446                           	psect	rparam
  6447  0000                     
  6448                           	psect	temp
  6449  000068                     btemp:
  6450                           	callstack 0
  6451  000068                     	ds	1
  6452  0000                     int$flags	set	btemp
  6453  0000                     wtemp8	set	btemp+1
  6454  0000                     ttemp5	set	btemp+1
  6455  0000                     ttemp6	set	btemp+4
  6456  0000                     ttemp7	set	btemp+8
  6457                           
  6458                           	psect	idloc
  6459                           
  6460                           ;Config register IDLOC0 @ 0x200000
  6461                           ;	unspecified, using default values
  6462  200000                     	org	2097152
  6463  200000  FF                 	db	255
  6464                           
  6465                           ;Config register IDLOC1 @ 0x200001
  6466                           ;	unspecified, using default values
  6467  200001                     	org	2097153
  6468  200001  FF                 	db	255
  6469                           
  6470                           ;Config register IDLOC2 @ 0x200002
  6471                           ;	unspecified, using default values
  6472  200002                     	org	2097154
  6473  200002  FF                 	db	255
  6474                           
  6475                           ;Config register IDLOC3 @ 0x200003
  6476                           ;	unspecified, using default values
  6477  200003                     	org	2097155
  6478  200003  FF                 	db	255
  6479                           
  6480                           ;Config register IDLOC4 @ 0x200004
  6481                           ;	unspecified, using default values
  6482  200004                     	org	2097156
  6483  200004  FF                 	db	255
  6484                           
  6485                           ;Config register IDLOC5 @ 0x200005
  6486                           ;	unspecified, using default values
  6487  200005                     	org	2097157
  6488  200005  FF                 	db	255
  6489                           
  6490                           ;Config register IDLOC6 @ 0x200006
  6491                           ;	unspecified, using default values
  6492  200006                     	org	2097158
  6493  200006  FF                 	db	255
  6494                           
  6495                           ;Config register IDLOC7 @ 0x200007
  6496                           ;	unspecified, using default values
  6497  200007                     	org	2097159
  6498  200007  FF                 	db	255
  6499                           
  6500                           	psect	config
  6501                           
  6502                           ; Padding undefined space
  6503  300000                     	org	3145728
  6504  300000  FF                 	db	255
  6505                           
  6506                           ;Config register CONFIG1H @ 0x300001
  6507                           ;	unspecified, using default values
  6508                           ;	Oscillator Selection bits
  6509                           ;	OSC = 0x7, unprogrammed default
  6510                           ;	Fail-Safe Clock Monitor Enable bit
  6511                           ;	FCMEN = 0x0, unprogrammed default
  6512                           ;	Internal/External Oscillator Switchover bit
  6513                           ;	IESO = 0x0, unprogrammed default
  6514  300001                     	org	3145729
  6515  300001  07                 	db	7
  6516                           
  6517                           ;Config register CONFIG2L @ 0x300002
  6518                           ;	unspecified, using default values
  6519                           ;	Power-up Timer Enable bit
  6520                           ;	PWRT = 0x1, unprogrammed default
  6521                           ;	Brown-out Reset Enable bits
  6522                           ;	BOREN = 0x3, unprogrammed default
  6523                           ;	Brown Out Reset Voltage bits
  6524                           ;	BORV = 0x3, unprogrammed default
  6525  300002                     	org	3145730
  6526  300002  1F                 	db	31
  6527                           
  6528                           ;Config register CONFIG2H @ 0x300003
  6529                           ;	unspecified, using default values
  6530                           ;	Watchdog Timer Enable bit
  6531                           ;	WDT = 0x1, unprogrammed default
  6532                           ;	Watchdog Timer Postscale Select bits
  6533                           ;	WDTPS = 0xF, unprogrammed default
  6534  300003                     	org	3145731
  6535  300003  1F                 	db	31
  6536                           
  6537                           ; Padding undefined space
  6538  300004                     	org	3145732
  6539  300004  FF                 	db	255
  6540                           
  6541                           ;Config register CONFIG3H @ 0x300005
  6542                           ;	unspecified, using default values
  6543                           ;	CCP2 MUX bit
  6544                           ;	CCP2MX = 0x1, unprogrammed default
  6545                           ;	PORTB A/D Enable bit
  6546                           ;	PBADEN = 0x1, unprogrammed default
  6547                           ;	Low-Power Timer1 Oscillator Enable bit
  6548                           ;	LPT1OSC = 0x0, unprogrammed default
  6549                           ;	MCLR Pin Enable bit
  6550                           ;	MCLRE = 0x1, unprogrammed default
  6551  300005                     	org	3145733
  6552  300005  83                 	db	131
  6553                           
  6554                           ;Config register CONFIG4L @ 0x300006
  6555                           ;	unspecified, using default values
  6556                           ;	Stack Full/Underflow Reset Enable bit
  6557                           ;	STVREN = 0x1, unprogrammed default
  6558                           ;	Single-Supply ICSP Enable bit
  6559                           ;	LVP = 0x1, unprogrammed default
  6560                           ;	Extended Instruction Set Enable bit
  6561                           ;	XINST = 0x0, unprogrammed default
  6562                           ;	Background Debugger Enable bit
  6563                           ;	DEBUG = 0x1, unprogrammed default
  6564  300006                     	org	3145734
  6565  300006  85                 	db	133
  6566                           
  6567                           ; Padding undefined space
  6568  300007                     	org	3145735
  6569  300007  FF                 	db	255
  6570                           
  6571                           ;Config register CONFIG5L @ 0x300008
  6572                           ;	unspecified, using default values
  6573                           ;	Code Protection bit
  6574                           ;	CP0 = 0x1, unprogrammed default
  6575                           ;	Code Protection bit
  6576                           ;	CP1 = 0x1, unprogrammed default
  6577                           ;	Code Protection bit
  6578                           ;	CP2 = 0x1, unprogrammed default
  6579                           ;	Code Protection bit
  6580                           ;	CP3 = 0x1, unprogrammed default
  6581  300008                     	org	3145736
  6582  300008  0F                 	db	15
  6583                           
  6584                           ;Config register CONFIG5H @ 0x300009
  6585                           ;	unspecified, using default values
  6586                           ;	Boot Block Code Protection bit
  6587                           ;	CPB = 0x1, unprogrammed default
  6588                           ;	Data EEPROM Code Protection bit
  6589                           ;	CPD = 0x1, unprogrammed default
  6590  300009                     	org	3145737
  6591  300009  C0                 	db	192
  6592                           
  6593                           ;Config register CONFIG6L @ 0x30000A
  6594                           ;	unspecified, using default values
  6595                           ;	Write Protection bit
  6596                           ;	WRT0 = 0x1, unprogrammed default
  6597                           ;	Write Protection bit
  6598                           ;	WRT1 = 0x1, unprogrammed default
  6599                           ;	Write Protection bit
  6600                           ;	WRT2 = 0x1, unprogrammed default
  6601                           ;	Write Protection bit
  6602                           ;	WRT3 = 0x1, unprogrammed default
  6603  30000A                     	org	3145738
  6604  30000A  0F                 	db	15
  6605                           
  6606                           ;Config register CONFIG6H @ 0x30000B
  6607                           ;	unspecified, using default values
  6608                           ;	Configuration Register Write Protection bit
  6609                           ;	WRTC = 0x1, unprogrammed default
  6610                           ;	Boot Block Write Protection bit
  6611                           ;	WRTB = 0x1, unprogrammed default
  6612                           ;	Data EEPROM Write Protection bit
  6613                           ;	WRTD = 0x1, unprogrammed default
  6614  30000B                     	org	3145739
  6615  30000B  E0                 	db	224
  6616                           
  6617                           ;Config register CONFIG7L @ 0x30000C
  6618                           ;	unspecified, using default values
  6619                           ;	Table Read Protection bit
  6620                           ;	EBTR0 = 0x1, unprogrammed default
  6621                           ;	Table Read Protection bit
  6622                           ;	EBTR1 = 0x1, unprogrammed default
  6623                           ;	Table Read Protection bit
  6624                           ;	EBTR2 = 0x1, unprogrammed default
  6625                           ;	Table Read Protection bit
  6626                           ;	EBTR3 = 0x1, unprogrammed default
  6627  30000C                     	org	3145740
  6628  30000C  0F                 	db	15
  6629                           
  6630                           ;Config register CONFIG7H @ 0x30000D
  6631                           ;	unspecified, using default values
  6632                           ;	Boot Block Table Read Protection bit
  6633                           ;	EBTRB = 0x1, unprogrammed default
  6634  30000D                     	org	3145741
  6635  30000D  40                 	db	64
  6636                           tosu	equ	0xFFF
  6637                           tosh	equ	0xFFE
  6638                           tosl	equ	0xFFD
  6639                           stkptr	equ	0xFFC
  6640                           pclatu	equ	0xFFB
  6641                           pclath	equ	0xFFA
  6642                           pcl	equ	0xFF9
  6643                           tblptru	equ	0xFF8
  6644                           tblptrh	equ	0xFF7
  6645                           tblptrl	equ	0xFF6
  6646                           tablat	equ	0xFF5
  6647                           prodh	equ	0xFF4
  6648                           prodl	equ	0xFF3
  6649                           indf0	equ	0xFEF
  6650                           postinc0	equ	0xFEE
  6651                           postdec0	equ	0xFED
  6652                           preinc0	equ	0xFEC
  6653                           plusw0	equ	0xFEB
  6654                           fsr0h	equ	0xFEA
  6655                           fsr0l	equ	0xFE9
  6656                           wreg	equ	0xFE8
  6657                           indf1	equ	0xFE7
  6658                           postinc1	equ	0xFE6
  6659                           postdec1	equ	0xFE5
  6660                           preinc1	equ	0xFE4
  6661                           plusw1	equ	0xFE3
  6662                           fsr1h	equ	0xFE2
  6663                           fsr1l	equ	0xFE1
  6664                           bsr	equ	0xFE0
  6665                           indf2	equ	0xFDF
  6666                           postinc2	equ	0xFDE
  6667                           postdec2	equ	0xFDD
  6668                           preinc2	equ	0xFDC
  6669                           plusw2	equ	0xFDB
  6670                           fsr2h	equ	0xFDA
  6671                           fsr2l	equ	0xFD9
  6672                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        80
    BSS         252
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     59     103
    BANK0           128     20     120
    BANK1           256     20     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    highIsr$1653	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1652	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1651	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    highIsr$1650	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1415_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> PrintPORTBandIntCounts@arr(COMRAM[5]), 

    down@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    up@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    right@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    left@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    CatchFrisbee@pl	PTR struct GameElement size(2) Largest target is 42
		 -> objs(BANK0[42]), 

    display	PTR struct GameElement[16][4] size(2) Largest target is 42
		 -> NULL(NULL[0]), objs(BANK0[42]), 

    sp__CheckIfCaughtFrisbee	PTR struct GameElement size(2) Largest target is 42
		 -> NULL(NULL[0]), objs(BANK0[42]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(COMRAM[8]), frisbeeChar(BANK0[8]), selected_teamB_player_with_frisbee(BANK0[8]), selected_teamA_player_with_frisbee(BANK0[8]), 
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), teamB_player(BANK0[8]), teamA_player(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _lowIsr in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_compute_frisbee_target_and_route
    _up->_CatchFrisbee
    _right->_CatchFrisbee
    _left->_CatchFrisbee
    _down->_CatchFrisbee
    _compute_frisbee_target_and_route->_random_generator
    _random_generator->___lwmod
    _CheckIfCaughtFrisbee->i2___wmul

Critical Paths under _main in BANK0

    _main->_InitGameObjects
    _UpdateAndPrintDisplay->___wmul
    _InitLCD->_LCDCmd
    _InitGameObjects->___wmul
    _AddCustomCharacters->_LCDAddSpecialCharacter
    _LCDAddSpecialCharacter->_LCDGoto
    _LCDGoto->_LCDCmd

Critical Paths under _lowIsr in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UpdateAndPrintDisplay

Critical Paths under _lowIsr in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowIsr in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowIsr in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowIsr in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowIsr in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowIsr in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowIsr in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowIsr in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowIsr in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowIsr in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowIsr in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowIsr in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowIsr in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowIsr in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowIsr in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   37828
                _AddCustomCharacters
                    _InitGameObjects
                     _InitInterrupts
                            _InitLCD
              _UpdateAndPrintDisplay
 ---------------------------------------------------------------------------------
 (1) _UpdateAndPrintDisplay                               20    20      0   18743
                                              0 BANK1     20    20      0
                             _LCDDat
                            _LCDGoto
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGameObjects                                     18    18      0   17081
                                             14 BANK0      6     6      0
                                              0 BANK1     12    12      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4   16722
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _AddCustomCharacters                                  0     0      0    1973
             _LCDAddSpecialCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDAddSpecialCharacter                               4     2      2    1973
                                             12 BANK0      4     2      2
                             _LCDCmd
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1    1030
                                             10 BANK0      2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      31
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      31
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lowIsr                                               8     8      0      46
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _highIsr                                             14    14      0    8373
                                             45 COMRAM    14    14      0
               _CheckIfCaughtFrisbee
               _SetupDebouncingTimer
   _compute_frisbee_target_and_route
                               _down
                               _left
                              _right
                                 _up
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) _up                                                  12    10      2    1036
                                             10 COMRAM    12    10      2
                       _CatchFrisbee
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _right                                               11     9      2    1036
                                             10 COMRAM    11     9      2
                       _CatchFrisbee
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _left                                                12    10      2    1036
                                             10 COMRAM    12    10      2
                       _CatchFrisbee
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _down                                                11     9      2    1036
                                             10 COMRAM    11     9      2
                       _CatchFrisbee
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _CatchFrisbee                                        10     8      2     630
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (7) _compute_frisbee_target_and_route                    32    28      4    1965
                                             13 COMRAM    32    28      4
                   _random_generator
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _random_generator                                     8     6      2     577
                                              5 COMRAM     8     6      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _SetupDebouncingTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CheckIfCaughtFrisbee                                 3     3      0    1221
                                              6 COMRAM     3     3      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4    1043
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddCustomCharacters
     _LCDAddSpecialCharacter
       _LCDCmd
       _LCDDat
       _LCDGoto
         _LCDCmd
   _InitGameObjects
     ___wmul
   _InitInterrupts
   _InitLCD
     _LCDCmd
   _UpdateAndPrintDisplay
     _LCDDat
     _LCDGoto
       _LCDCmd
     ___wmul

 _lowIsr (ROOT)

 _highIsr (ROOT)
   _CheckIfCaughtFrisbee
     i2___wmul
   _SetupDebouncingTimer
   _compute_frisbee_target_and_route
     _random_generator
       ___lwmod
     i2___wmul (ARG)
   _down
     _CatchFrisbee
     i2___wmul (ARG)
   _left
     _CatchFrisbee
     i2___wmul (ARG)
   _right
     _CatchFrisbee
     i2___wmul (ARG)
   _up
     _CatchFrisbee
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      D0       7       81.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     14      78       5       93.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3B      67       1       81.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      34        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu May 25 22:12:02 2023

                                                        _a 004E  
                                                        _b 004C  
                                                        _c 004A  
                                             _pulseCounter 0040  
                                                       _up 1F86  
                                                       bsr 000FE0  
                               LCDAddSpecialCharacter@data 00F0  
                                      ___wmul@multiplicand 00EE  
                    LCDAddSpecialCharacter@character_index 00F2  
                                                      l152 3090  
                                                      l155 302C  
                                                      l307 16E4  
                                                      l164 2E34  
                                                      l180 2FBE  
                                                      l316 2AD8  
                                                      l183 2DBC  
                                                      l175 305E  
                                                      l328 2D3A  
                                                      l418 30B8  
                                                      ?_up 000B  
                                                      wreg 000FE8  
                                                     ??_up 000D  
                                          __end_of_LCDGoto 2E36  
                                                     l3000 3064  
                                                     l3010 3080  
                                                     l3002 3068  
                                                     l3020 3018  
                                                     l3012 2FFE  
                                                     l3004 306C  
                                                     l3100 3046  
                                                     l3022 301A  
                                                     l3014 3002  
                                                     l3006 306E  
                                                     l3030 2DE2  
                                                     l3110 28BA  
                                                     l3102 304C  
                                                     l3024 302A  
                                                     l3016 3006  
                                                     l3008 307E  
                                                     l3032 2DF4  
                                                     l3040 2E2C  
                                                     l2400 2CB2  
                                                     l3104 3052  
                                                     l3200 1336  
                                                     l3018 3008  
                                                     l3042 2E30  
                                                     l3034 2E02  
                                                     l3026 2DC2  
                                                     l3130 2938  
                                                     l3122 28CC  
                                                     l2410 2CF6  
                                                     l2402 2CCE  
                                                     l3106 3058  
                                                     l3210 13DC  
                                                     l3202 1352  
                                                     l3036 2E14  
                                                     l3028 2DD4  
                                                     l3052 2F8E  
                                                     l3044 2F7A  
                                                     l3108 2D3C  
                                                     l3060 3092  
                                                     l3140 2AB6  
                                                     l3132 2954  
                                                     l3124 2912  
                                                     l3116 28C4  
                                                     l2420 2D00  
                                                     l2412 2CF8  
                                                     l2404 2CD8  
                                                     l3220 14F6  
                                                     l3212 1410  
                                                     l3038 2E22  
                                                     l3054 2FA0  
                                                     l3046 2F88  
                                                     l3062 30B0  
                                                     l3142 2ABC  
                                                     l3126 2918  
                                                     l2430 2D0A  
                                                     l2422 2D02  
                                                     l2414 2CFA  
                                                     l2406 2CF2  
                                                     l3230 1564  
                                                     l3222 1508  
                                                     l3150 1010  
                                                     l3310 30EC  
                                                     l3056 2FA4  
                                                     l3128 2934  
                                                     l2440 2D16  
                                                     l2432 2D0C  
                                                     l2424 2D04  
                                                     l2416 2CFC  
                                                     l2408 2CF4  
                                                     l3232 156E  
                                                     l3224 151C  
                                                     l3216 1482  
                                                     l3208 135A  
                                                     l3160 105C  
                                                     l3144 1006  
                                                     l3312 30F0  
                                                     l3058 2FB4  
                                                     l3138 2A08  
                                                     l2450 2D20  
                                                     l2442 2D18  
                                                     l2434 2D10  
                                                     l2426 2D06  
                                                     l2418 2CFE  
                                                     l3090 3032  
                                                     l3242 1596  
                                                     l3234 1578  
                                                     l3226 1526  
                                                     l3162 1078  
                                                     l3306 30E0  
                                                     l2452 2D2E  
                                                     l2444 2D1A  
                                                     l2436 2D12  
                                                     l2428 2D08  
                                                     l3092 3036  
                                                     l3260 16C8  
                                                     l3252 160C  
                                                     l3244 15EE  
                                                     l3236 1582  
                                                     l3228 155A  
                                                     l3180 11B8  
                                                     l3172 10A0  
                                                     l3164 107C  
                                                     l3156 1018  
                                                     l3308 30E8  
                                                     l2454 2D30  
                                                     l2446 2D1C  
                                                     l2438 2D14  
                                                     l3094 3038  
                                                     l3246 15F8  
                                                     l3238 158C  
                                                     l3190 1226  
                                                     l3174 10D4  
                                                     l3166 1098  
                                                     l3158 1058  
                                                     l2456 2D32  
                                                     l2448 2D1E  
                                                     l3096 303A  
                                                     l3088 302E  
                                                     l3248 1602  
                                                     l3256 1664  
                                                     l3192 12D2  
                                                     l3176 11A2  
                                                     l2458 2D34  
                                                     l3098 3040  
                                                     l3258 16C2  
                                                     l3194 1320  
                                                     l3186 11C0  
                                                     l3178 11AA  
                                                     l3196 132A  
                                                     l3188 11F4  
                                                     l3470 1646  
                                                     l3198 1330  
                                                     l3472 169C  
                                                     l3468 15D0  
                                                     STR_1 1001  
                                                     u3000 1098  
                                                     u3001 1094  
                                                     u3010 10D4  
                                                     u3011 10D0  
                                                     u3100 1410  
                                                     u3101 140C  
                                                     _LATA 000F89  
                                                     u3030 11B8  
                                                     u3031 11B4  
                                                     u3120 147E  
                                                     u3040 11F4  
                                                     _LATD 000F8C  
                                                     u3121 147A  
                                                     u3041 11F0  
                                                     u3025 1130  
                                                     u3050 1226  
                                                     u3115 141A  
                                                     u3051 1222  
                                                     u3140 14F2  
                                                     u3141 14EE  
                                                     u3150 1508  
                                                     u3070 12CE  
                                                     u3151 1504  
                                                     u3135 148E  
                                                     u3071 12CA  
                                                     u3160 1518  
                                                     u3080 1352  
                                                     u3161 1514  
                                                     u3081 134E  
                                                     u3065 1252  
                                                     u3170 155A  
                                                     u3090 13DC  
                                                     u3227 3076  
                                                     u3171 1556  
                                                     u3091 13D8  
                                                     u3180 16E4  
                                                     u3237 3088  
                                                     u3181 16E0  
                                                     u3247 3010  
                                                     u3257 3022  
                                                     u2900 2FB4  
                                                     u2901 2FB0  
                                                     u2870 2DD4  
                                                     u2950 2934  
                                                     u2871 2DD0  
                                                     u2951 2930  
                                                     u2880 2DF4  
                                                     u2960 2954  
                                                     u2881 2DF0  
                                                     u2961 2950  
                                                     u2945 28D6  
                                                     u2890 2E14  
                                                     u2970 2AD8  
                                                     u2891 2E10  
                                                     u2971 2AD4  
                                                     u2990 1078  
                                                     u2991 1074  
                                                     u2985 1022  
                                          _InitGameObjects 28BA  
                                                     _main 30E0  
                                                     _left 21E6  
                                                     _down 2688  
                                                     _objs 00BA  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     fsr2l 000FD9  
                                                     btemp 0068  
                                                     up@pl 000B  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 00C2  
                                             ___param_bank 000000  
                                          __end_of_InitLCD 3060  
                                                    ?_main 0001  
                                                    ?_left 000B  
                                                    ?_down 000B  
                                                    _T0CON 000FD5  
                                                    _T1CON 000FCD  
                                                    _T2CON 000FCA  
                                                    _T3CON 000FB1  
                                                    i1l250 00AA  
                                                    i2l111 1CC2  
                                          __end_of___lwmod 2F76  
                                                    i2l121 1DF2  
                                                    i2l114 1D14  
                                                    i2l107 1C2E  
                                                    i2l132 1F26  
                                                    i2l116 1D1C  
                                                    i2l109 1C90  
                                                    i2l127 1E40  
                                                    i2l144 2F08  
                                                    i2l232 1AFA  
                                                    i2l224 1782  
                                                    i2l145 2F10  
                                                    i2l225 18C6  
                                                    i2l138 1F7C  
                                                    i2l331 3120  
                                                    i2l139 1F84  
                                                    i2l228 1A4A  
                                                    i2l245 1C12  
                                                    i2l343 2CB0  
                                                    i2l418 30DE  
                                                    i2l339 2C24  
                                                    i2l371 28B8  
                                                    i2l347 243C  
                                                    i2l355 2686  
                                                    i2l363 21E4  
                                                    i2l926 2F74  
                                                    i2l919 2F6C  
                                                    _TMR0H 000FD7  
                                                    _TMR1H 000FCF  
                                                    _TMR0L 000FD6  
                                                    _TMR3H 000FB3  
                                                    _TMR1L 000FCE  
                                                    _TMR3L 000FB2  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                             __end_of_CheckIfCaughtFrisbee 2C26  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISD 000F95  
                                    _UpdateAndPrintDisplay 1006  
                                          __end_of_highIsr 1C2E  
                                    __size_of_CatchFrisbee 008C  
                                                    _lcd_x 0081  
                                                    _lcd_y 0080  
                                                    _right 243E  
                                                    tablat 000FF5  
                                         __end_ofi2___wmul 30E0  
                                                    ttemp5 0069  
                                                    ttemp6 006C  
                                                    ttemp7 0070  
                                                    status 000FD8  
                                                    wtemp8 0069  
                                 __end_of_random_generator 2F12  
                                          __initialization 2E36  
                                             __end_of_main 30FC  
                                             __end_of_left 243E  
                                             __end_of_down 28BA  
                                           _InitInterrupts 2CB2  
                                                   ??_main 00F8  
                                                   ??_left 000D  
                                                   ??_down 000D  
                                             _CatchFrisbee 2C26  
                                            __activetblptr 000002  
                                                ??_LCDGoto 00EF  
                                  __end_of_InitGameObjects 2ADA  
                                                   _ADCON1 000FC1  
                                                   ?_right 000B  
                                                   _LCDDat 2FFA  
                                                   _LCDCmd 3060  
                                                   i1l3300 00A0  
                                                   i1l3302 00A4  
                                                   i1l3304 00A8  
                                                   i1l3280 002E  
                                                   i1l3290 0064  
                                                   i1l3282 003A  
                                                   i1l3292 0068  
                                                   i1l3284 003E  
                                                   i1l3294 007A  
                                                   i1l3286 004E  
                                                   i2l2200 1F0C  
                                                   i2l2120 2C4C  
                                                   i1l3296 007E  
                                                   i1l3288 0060  
                                                   i2l2130 30D6  
                                                   i2l2202 1F10  
                                                   i2l2114 2C26  
                                                   i1l3298 008E  
                                                   i2l2204 1F32  
                                                   i2l2140 1C84  
                                                   i2l2116 2C36  
                                                   i2l2300 1FA6  
                                                   i2l2070 2F24  
                                                   i2l2206 1F62  
                                                   i2l2150 1CF2  
                                                   i2l2142 1CA6  
                                                   i2l2134 1C2E  
                                                   i2l2118 2C46  
                                                   i2l2310 2118  
                                                   i2l2302 2018  
                                                   i2l2128 30BA  
                                                   i2l2080 2F60  
                                                   i2l2072 2F2C  
                                                   i2l2208 1F66  
                                                   i2l2160 1D52  
                                                   i2l2152 1D08  
                                                   i2l2144 1CB6  
                                                   i2l2136 1C5E  
                                                   i2l2312 2196  
                                                   i2l2082 2F66  
                                                   i2l2074 2F34  
                                                   i2l2090 2EC4  
                                                   i2l2170 1DB0  
                                                   i2l2162 1D7A  
                                                   i2l2154 1D24  
                                                   i2l2146 1CD8  
                                                   i2l2138 1C74  
                                                   i2l2322 243E  
                                                   i2l2306 2098  
                                                   i2l2314 21A2  
                                                   i2l2260 2AE2  
                                                   i2l2076 2F42  
                                                   i2l2068 2F12  
                                                   i2l2092 2ED0  
                                                   i2l2084 2EA8  
                                                   i2l2180 1E2A  
                                                   i2l2172 1DD8  
                                                   i2l2164 1D7E  
                                                   i2l2156 1D3A  
                                                   i2l2332 2546  
                                                   i2l2340 2648  
                                                   i2l2316 21BA  
                                                   i2l2270 2B86  
                                                   i2l2262 2B16  
                                                   i2l2254 2ADA  
                                                   i2l2078 2F58  
                                                   i2l2094 2EE2  
                                                   i2l2086 2EAA  
                                                   i2l2190 1EA6  
                                                   i2l2182 1E48  
                                                   i2l2174 1DDC  
                                                   i2l2158 1D46  
                                                   i2l2166 1D98  
                                                   i2l2342 2660  
                                                   i2l2326 245C  
                                                   i2l2318 21D6  
                                                   i2l2280 2BC0  
                                                   i2l2272 2B8A  
                                                   i2l2264 2B4A  
                                                   i2l2096 2EE6  
                                                   i2l2088 2EC0  
                                                   i2l2192 1EAA  
                                                   i2l2184 1E5E  
                                                   i2l2176 1DFE  
                                                   i2l2168 1DA4  
                                                   i2l2352 26AA  
                                                   i2l2344 267C  
                                                   i2l2336 25C2  
                                                   i2l2328 24CA  
                                                   i2l2290 2C08  
                                                   i2l2282 2BE4  
                                                   i2l2274 2B92  
                                                   i2l2266 2B7A  
                                                   i2l2186 1E6A  
                                                   i2l2194 1EC4  
                                                   i2l2178 1E26  
                                                   i2l2370 28AA  
                                                   i2l2362 27F8  
                                                   i2l2354 2710  
                                                   i2l2338 263C  
                                                   i2l2284 2BEC  
                                                   i2l2276 2B98  
                                                   i2l2268 2B82  
                                                   i2l2292 3112  
                                                   i2l2196 1ED0  
                                                   i2l2188 1E76  
                                                   i2l2364 286A  
                                                   i2l2348 2688  
                                                   i2l2380 2274  
                                                   i2l2700 19EC  
                                                   i2l2278 2B9C  
                                                   i2l2294 311E  
                                                   i2l2198 1EDC  
                                                   i2l2358 2784  
                                                   i2l2366 2876  
                                                   i2l2390 23F2  
                                                   i2l2374 21E6  
                                                   i2l2710 1A08  
                                                   i2l2702 19F4  
                                                   i2l2630 1718  
                                                   i2l2288 2C04  
                                                   i2l2368 288E  
                                                   i2l2384 22F4  
                                                   i2l2392 23FE  
                                                   i2l2296 1F86  
                                                   i2l2720 1A3A  
                                                   i2l2712 1A0C  
                                                   i2l2704 19F8  
                                                   i2l2640 1736  
                                                   i2l2632 171A  
                                                   i2l2624 1700  
                                                   i2l2394 2416  
                                                   i2l2378 2202  
                                                   i2l2730 1A68  
                                                   i2l2722 1A3C  
                                                   i2l2714 1A30  
                                                   i2l2706 19FC  
                                                   i2l2650 179A  
                                                   i2l2642 173A  
                                                   i2l2634 1728  
                                                   i2l2626 1712  
                                                   i2l2396 2432  
                                                   i2l2388 2374  
                                                   i2l2740 1ACE  
                                                   i2l2732 1A6C  
                                                   i2l2724 1A40  
                                                   i2l2716 1A34  
                                                   i2l2708 1A04  
                                                   i2l2660 17CC  
                                                   i2l2652 17AA  
                                                   i2l2644 174E  
                                                   i2l2636 172C  
                                                   i2l2628 1716  
                                                   i2l2750 1B4A  
                                                   i2l2734 1A9E  
                                                   i2l2742 1AF2  
                                                   i2l2726 1A44  
                                                   i2l2718 1A38  
                                                   i2l2670 1838  
                                                   i2l2662 17D0  
                                                   i2l2654 17B2  
                                                   i2l2646 175C  
                                                   i2l2638 1734  
                                                   i2l2752 1B72  
                                                   i2l2760 1BCA  
                                                   i2l2744 1B08  
                                                   i2l2736 1AC2  
                                                   i2l2728 1A58  
                                                   i2l2680 18BA  
                                                   i2l2672 184A  
                                                   i2l2664 17F4  
                                                   i2l2656 17C4  
                                                   i2l2648 176C  
                                                   i2l2770 1C10  
                                                   i2l3474 1BDE  
                                                   i2l2754 1B9A  
                                                   i2l2762 1C04  
                                                   i2l2746 1B18  
                                                   i2l2738 1AC6  
                                                   i2l2690 18EC  
                                                   i2l2674 1852  
                                                   i2l2666 1820  
                                                   i2l2658 17C8  
                                                   i2l2682 18C6  
                                                   i2l2756 1BC2  
                                                   i2l2748 1B22  
                                                   i2l2692 191E  
                                                   i2l2684 18D4  
                                                   i2l2676 18A6  
                                                   i2l2668 1824  
                                                   i2l2694 197E  
                                                   i2l2686 18E4  
                                                   i2l2766 1C0C  
                                                   i2l2678 18B6  
                                                   i2l2768 1C0E  
                                                   i2l2696 1984  
                                                   i2l2688 18E8  
                                                   i2l2698 19B8  
                                                ??_InitLCD 00EE  
                                     random_generator@temp 000C  
                                   __end_of_InitInterrupts 2D3C  
                                    CheckIfCaughtFrisbee@i 0008  
                                                   ___wmul 3092  
                                                ??___lwmod 0005  
                                                   clear_0 2E7C  
                                                   clear_1 2E88  
                                                   clear_2 2E94  
                                                   _lowIsr 0018  
                                                   _scoreA 0046  
                                                   _scoreB 0044  
compute_frisbee_target_and_route@current_fisbee_x_position 000E  
                                                ??_highIsr 002E  
                                                   left@pl 000B  
                                                   down@pl 000B  
                                   ?_UpdateAndPrintDisplay 0001  
compute_frisbee_target_and_route@current_fisbee_y_position 0010  
                                             __pdataCOMRAM 0052  
                                            _frisbee_steps 0180  
                                             __mediumconst 0000  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                LCDDat@dat 00ED  
                                                LCDCmd@cmd 00ED  
                                               __accesstop 0080  
                                  __end_of__initialization 2E9A  
                                           _selectedPlayer 0048  
                                            ___rparam_used 000001  
                             __size_of_AddCustomCharacters 0082  
                                     _CheckIfCaughtFrisbee 2ADA  
                                          ?_InitInterrupts 0001  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 2FC0  
                                 ??_LCDAddSpecialCharacter 00F2  
                                            __end_of_right 2688  
                                               __end_of_up 21E6  
                                                ?i2___wmul 0001  
                                         ?_InitGameObjects 0001  
                            __size_of_SetupDebouncingTimer 0010  
                                                  ??_right 000D  
                                                  ?_LCDDat 0001  
                                                  ?_LCDCmd 0001  
                                               __pbssBANK0 00BA  
                                               __pbssBANK1 0100  
                                    ?_CheckIfCaughtFrisbee 0001  
              compute_frisbee_target_and_route@x_step_size 002A  
                                               _game_state 005F  
                                                  ?___wmul 00EC  
                                                  ?_lowIsr 0001  
              compute_frisbee_target_and_route@y_step_size 002C  
                                               ??i2___wmul 0005  
                                                  _LCDGoto 2DBE  
                                         InitGameObjects@i 00F2  
                                         InitGameObjects@j 00F4  
                                          __size_of_LCDDat 0034  
                                          __size_of_LCDCmd 0032  
                                                  _InitLCD 302E  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                        ?_random_generator 0006  
                                       ??_random_generator 0008  
                                          __size_of___wmul 0028  
                                                  ___lwmod 2F12  
                                             __psmallconst 1000  
                          __size_of_LCDAddSpecialCharacter 004A  
                                                  __pcinit 2E36  
                                                  __ramtop 1000  
                                          __size_of_lowIsr 00AA  
                                                  __ptext0 30E0  
                                                  __ptext1 1006  
                                                  __ptext2 302E  
                                                  __ptext3 2CB2  
                                                  __ptext4 28BA  
                                                  __ptext5 3092  
                                                  __ptext6 2D3C  
                                                  __ptext7 2F76  
                                                  __ptext8 2DBE  
                                                  __ptext9 3060  
                                                  _highIsr 0008  
                                                  _display 0100  
                                                _T0CONbits 000FD5  
                                                _T1CONbits 000FCD  
                                                _T3CONbits 000FB1  
                                           __pintcode_body 16E6  
                                     end_of_initialization 2E9A  
                                           _frisbee_target 0060  
                                            __Lmediumconst 0000  
                                                  int_func 16E6  
                                      i2___wmul@multiplier 0001  
                                   ??_CheckIfCaughtFrisbee 0007  
                                                  right@pl 000B  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                  ??_UpdateAndPrintDisplay 01BC  
                                                _PORTEbits 000F84  
                    compute_frisbee_target_and_route@i_690 001C  
                    compute_frisbee_target_and_route@i_691 001E  
                    compute_frisbee_target_and_route@i_686 0016  
                    compute_frisbee_target_and_route@i_687 0018  
                    compute_frisbee_target_and_route@i_689 001A  
                                      _AddCustomCharacters 2D3C  
                                                _TRISEbits 000F96  
                                   _LCDAddSpecialCharacter 2F76  
                                         ??_InitInterrupts 00EC  
                                           __end_of_LCDDat 302E  
                                           __end_of_LCDCmd 3092  
                                               LCDGoto@p_1 00EE  
                                               LCDGoto@p_2 00EF  
                                     ?_AddCustomCharacters 0001  
          compute_frisbee_target_and_route@number_of_steps 0020  
                 compute_frisbee_target_and_route@target_x 0022  
                 compute_frisbee_target_and_route@target_y 0024  
                       _selected_teamA_player_with_frisbee 0092  
                                           __end_of___wmul 30BA  
                                            __pidataCOMRAM 30FC  
                 __end_of_compute_frisbee_target_and_route 1F86  
                __size_of_compute_frisbee_target_and_route 0358  
                       ??_compute_frisbee_target_and_route 0012  
                        ?_compute_frisbee_target_and_route 000E  
                         _compute_frisbee_target_and_route 1C2E  
                                           __end_of_lowIsr 00C2  
                                         i2___wmul@product 0005  
                                      start_initialization 2E36  
                                        __size_ofi2___wmul 0026  
                                                 ??_LCDDat 00EC  
                                                 ??_LCDCmd 00EC  
                                    ??_AddCustomCharacters 00F4  
                                      random_generator@res 000D  
                             __end_of_SetupDebouncingTimer 3122  
                                  LCDAddSpecialCharacter@i 00F3  
                                                 ??___wmul 00F0  
                                             _frisbeeSteps 003E  
                                           _currentSegment 0042  
                                              __pdataBANK0 0080  
                                             lowIsr@temp_a 00EB  
                                             lowIsr@temp_d 00EA  
                                                 ??_lowIsr 00E4  
                                                 ?_LCDGoto 00EE  
                                              __pbssCOMRAM 003C  
                                            __pcstackBANK0 00E4  
                                            __pcstackBANK1 01BC  
                                                 ?_InitLCD 0001  
                                 __size_of_InitGameObjects 0220  
                                                _gameSpeed 005D  
                                   UpdateAndPrintDisplay@i 01C6  
                                   UpdateAndPrintDisplay@j 01C8  
                                                __pintcode 0008  
                                                 ?___lwmod 0001  
                                              __pintcodelo 0018  
                                            ?_CatchFrisbee 0001  
                                                 ?_highIsr 0001  
                                              __smallconst 1000  
                                __size_of_random_generator 006A  
                                             _teamA_player 00B2  
                                             _teamB_player 00AA  
                                           __size_of_right 024A  
                                                _segValues 0052  
                                              __size_of_up 0260  
                                           ___wmul@product 00F0  
                                    _selected_teamA_player 00A2  
                                                 _IPR1bits 000F9F  
                                                 _PIE1bits 000F9D  
                                    _selected_teamB_player 009A  
                                                 i1u326_27 0056  
                                                 i1u327_27 0070  
                                                 i1u328_27 0096  
                                                 i2u200_45 2288  
                                                 i2u201_40 22F0  
                                                 i2u201_41 22EC  
                                                 i2u202_45 2308  
                                                 i2u203_40 2370  
                                                 i2u203_41 236C  
                                                 i2u204_45 2388  
                                                 i2u205_40 23F2  
                                                 i2u205_41 23EE  
                                                 i2u150_40 2F08  
                                                 i2u150_41 2F04  
                                                 i2u231_40 1712  
                                                 i2u231_41 170E  
                                                 i2u160_40 1D94  
                                                 i2u152_40 2C36  
                                                 i2u240_40 17C4  
                                                 i2u232_40 1728  
                                                 i2u160_41 1D90  
                                                 i2u152_41 2C32  
                                                 i2u240_41 17C0  
                                                 i2u232_41 1724  
                                                 i2u161_40 1DF2  
                                                 i2u241_40 1838  
                                                 i2u233_40 174E  
                                                 i2u161_41 1DEE  
                                                 i2u241_41 1834  
                                                 i2u233_41 174A  
                                                 i2u153_45 2C54  
                                                 i2u170_40 2B16  
                                                 i2u162_40 1E40  
                                                 i2u154_40 1C74  
                                                 i2u250_40 1B08  
                                                 i2u242_40 184A  
                                                 i2u234_40 175C  
                                                 i2u170_41 2B12  
                                                 i2u162_41 1E3C  
                                                 i2u154_41 1C70  
                                                 i2u250_41 1B04  
                                                 i2u242_41 1846  
                                                 i2u234_41 1758  
                                                 i2u171_40 2B4A  
                                                 i2u147_40 2F24  
                                                 i2u163_40 1E5E  
                                                 i2u155_40 1CA6  
                                                 i2u251_40 1B18  
                                                 i2u235_40 176C  
                                                 i2u171_41 2B46  
                                                 i2u147_41 2F20  
                                                 i2u163_41 1E5A  
                                                 i2u155_41 1CA2  
                                                 i2u251_41 1B14  
                                                 i2u235_41 1768  
                                                 i2u243_45 185A  
                                                 i2u172_40 2B7A  
                                                 i2u148_40 2F42  
                                                 i2u164_40 1EC0  
                                                 i2u156_40 1CD8  
                                                 i2u180_40 2114  
                                                 i2u244_40 18D4  
                                                 i2u236_40 177E  
                                                 i2u172_41 2B76  
                                                 i2u148_41 2F3E  
                                                 i2u164_41 1EBC  
                                                 i2u156_41 1CD4  
                                                 i2u180_41 2110  
                                                 i2u244_41 18D0  
                                                 i2u236_41 1778  
                                                 i2u173_40 2C24  
                                                 i2u149_40 2F58  
                                                 i2u165_40 1F26  
                                                 i2u157_40 1CEE  
                                                 i2u245_40 18E4  
                                                 i2u237_40 1780  
                                                 i2u173_41 2C20  
                                                 i2u149_41 2F54  
                                                 i2u165_41 1F22  
                                                 i2u157_41 1CEA  
                                                 i2u245_41 18E0  
                                                 i2u181_45 212C  
                                                 i2u166_40 1F7C  
                                                 i2u158_40 1D08  
                                                 i2u182_40 2196  
                                                 i2u174_40 1FA2  
                                                 i2u246_40 191E  
                                                 i2u238_40 179A  
                                                 i2u166_41 1F78  
                                                 i2u158_41 1D04  
                                                 i2u182_41 2192  
                                                 i2u174_41 1F9E  
                                                 i2u246_41 191A  
                                                 i2u238_41 1796  
                                                 i2u190_45 25D6  
                                                 i2u159_40 1D3A  
                                                 i2u191_40 263C  
                                                 i2u183_40 2458  
                                                 i2u247_40 1A58  
                                                 i2u239_40 17AA  
                                                 i2u159_41 1D36  
                                                 i2u191_41 2638  
                                                 i2u183_41 2454  
                                                 i2u247_41 1A54  
                                                 i2u239_41 17A6  
                                                 i2u175_45 1FBA  
                                                 i2u192_40 26A6  
                                                 i2u176_40 2018  
                                                 i2u248_40 1A68  
                                                 i2u192_41 26A2  
                                                 i2u176_41 2014  
                                                 i2u248_41 1A64  
                                                 i2u184_45 2470  
                                                 i2u193_40 2710  
                                                 i2u185_40 24CA  
                                                 i2u249_40 1A9E  
                                                 i2u193_41 270C  
                                                 i2u185_41 24C6  
                                                 i2u249_41 1A9A  
                                                 _PIR1bits 000F9E  
                                                 i2u177_45 202C  
                                                 i2u194_40 2780  
                                                 i2u178_40 2094  
                                                 i2u194_41 277C  
                                                 i2u178_41 2090  
                                                 i2u186_45 24DE  
                                                 i2u195_40 27F4  
                                                 i2u187_40 2542  
                                                 i2u195_41 27F0  
                                                 i2u187_41 253E  
                                                 i2u179_45 20AC  
                                                 i2u196_40 286A  
                                                 i2u196_41 2866  
                                                 i2u188_45 255A  
                                                 i2u197_40 21FE  
                                                 i2u189_40 25BE  
                                                 i2u197_41 21FA  
                                                 i2u189_41 25BA  
                                                 i2u198_45 2216  
                                                 i2u199_40 2274  
                                                 i2u199_41 2270  
                                                 _RCONbits 000FD0  
                                                _portbVals 0050  
                                           ??_CatchFrisbee 0003  
                           __size_of_UpdateAndPrintDisplay 06E0  
                                        ___wmul@multiplier 00EC  
                            __end_of_UpdateAndPrintDisplay 16E6  
                                                 i2___wmul 30BA  
                                         __size_of_LCDGoto 0078  
                                  ?_LCDAddSpecialCharacter 00F0  
                                           CatchFrisbee@pl 0001  
                                     _SetupDebouncingTimer 3112  
                                              _INTCON2bits 000FF1  
                                              _INTCON3bits 000FF0  
                                                copy_data0 2E4A  
                                                copy_data1 2E6A  
                                   random_generator@modulo 0006  
                                         __size_of_InitLCD 0032  
                                                 __Hrparam 0000  
                            __size_of_CheckIfCaughtFrisbee 014C  
                                                 __Lrparam 0000  
                                              _frisbeeChar 0082  
                                        ??_InitGameObjects 01BC  
                                    i2___wmul@multiplicand 0003  
                                         __size_of___lwmod 0064  
                                         __size_of_highIsr 1C26  
                           __end_of_LCDAddSpecialCharacter 2FC0  
                                         _acceptInterrupts 0051  
                                                 __ptext10 2FFA  
                                                 __ptext20 2F12  
                                                 __ptext21 3112  
                                                 __ptext13 1F86  
                                                 __ptext22 2ADA  
                                                 __ptext14 243E  
                                                 __ptext23 30BA  
                                                 __ptext15 21E6  
                                                 __ptext16 2688  
                                    ?_SetupDebouncingTimer 0001  
                                                 __ptext17 2C26  
                                                 __ptext18 1C2E  
                                                 __ptext19 2EA8  
                               UpdateAndPrintDisplay@i_830 01CE  
                               UpdateAndPrintDisplay@i_828 01CA  
                               UpdateAndPrintDisplay@i_829 01CC  
                                            __size_of_main 001C  
                                            __size_of_left 0258  
                                            __size_of_down 0232  
                       _selected_teamB_player_with_frisbee 008A  
                                                 int$flags 0068  
                                               _INTCONbits 000FF2  
                                         _random_generator 2EA8  
                                        random_generator@i 000A  
                              __end_of_AddCustomCharacters 2DBE  
                                                 intlevel1 0000  
                                                 intlevel2 0000  
                                         ___lwmod@dividend 0001  
                                     __end_of_CatchFrisbee 2CB2  
                                          _curFrisbeeSteps 003C  
                                     InitGameObjects@i_841 00F6  
                                  __size_of_InitInterrupts 008A  
                                          ___lwmod@divisor 0003  
                                          ___lwmod@counter 0005  
                                   ??_SetupDebouncingTimer 0001  
                        compute_frisbee_target_and_route@i 0014  
                        compute_frisbee_target_and_route@x 0026  
                        compute_frisbee_target_and_route@y 0028  
