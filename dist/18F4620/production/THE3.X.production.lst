

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 24 23:55:56 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4620 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  002030                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _lcd_y
    91  002030  01                 	db	1
    92                           
    93                           ;initializer for _lcd_x
    94  002031  01                 	db	1
    95                           
    96                           	psect	idataBANK0
    97  001EBA                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _frisbee_target
   101  001EBA  0E                 	db	14
   102  001EBB  11                 	db	17
   103  001EBC  11                 	db	17
   104  001EBD  11                 	db	17
   105  001EBE  0E                 	db	14
   106  001EBF  00                 	db	0
   107  001EC0  00                 	db	0
   108  001EC1  00                 	db	0
   109                           
   110                           ;initializer for _frisbeeChar
   111  001EC2  0E                 	db	14
   112  001EC3  1F                 	db	31
   113  001EC4  1F                 	db	31
   114  001EC5  1F                 	db	31
   115  001EC6  0E                 	db	14
   116  001EC7  00                 	db	0
   117  001EC8  00                 	db	0
   118  001EC9  00                 	db	0
   119                           
   120                           ;initializer for _selected_teamB_player_with_frisbee
   121  001ECA  1F                 	db	31
   122  001ECB  15                 	db	21
   123  001ECC  0A                 	db	10
   124  001ECD  04                 	db	4
   125  001ECE  0E                 	db	14
   126  001ECF  1F                 	db	31
   127  001ED0  0A                 	db	10
   128  001ED1  1F                 	db	31
   129                           
   130                           ;initializer for _selected_teamA_player_with_frisbee
   131  001ED2  1F                 	db	31
   132  001ED3  15                 	db	21
   133  001ED4  0A                 	db	10
   134  001ED5  04                 	db	4
   135  001ED6  04                 	db	4
   136  001ED7  04                 	db	4
   137  001ED8  0A                 	db	10
   138  001ED9  1F                 	db	31
   139                           
   140                           ;initializer for _selected_teamB_player
   141  001EDA  11                 	db	17
   142  001EDB  15                 	db	21
   143  001EDC  0A                 	db	10
   144  001EDD  04                 	db	4
   145  001EDE  0E                 	db	14
   146  001EDF  1F                 	db	31
   147  001EE0  0A                 	db	10
   148  001EE1  1F                 	db	31
   149                           
   150                           ;initializer for _selected_teamA_player
   151  001EE2  11                 	db	17
   152  001EE3  15                 	db	21
   153  001EE4  0A                 	db	10
   154  001EE5  04                 	db	4
   155  001EE6  04                 	db	4
   156  001EE7  04                 	db	4
   157  001EE8  0A                 	db	10
   158  001EE9  1F                 	db	31
   159                           
   160                           ;initializer for _teamB_player
   161  001EEA  11                 	db	17
   162  001EEB  15                 	db	21
   163  001EEC  0A                 	db	10
   164  001EED  04                 	db	4
   165  001EEE  0E                 	db	14
   166  001EEF  1F                 	db	31
   167  001EF0  0A                 	db	10
   168  001EF1  0A                 	db	10
   169                           
   170                           ;initializer for _teamA_player
   171  001EF2  11                 	db	17
   172  001EF3  15                 	db	21
   173  001EF4  0A                 	db	10
   174  001EF5  04                 	db	4
   175  001EF6  04                 	db	4
   176  001EF7  04                 	db	4
   177  001EF8  0A                 	db	10
   178  001EF9  0A                 	db	10
   179                           
   180                           	psect	nvBANK0
   181  0000FA                     __pnvBANK0:
   182                           	callstack 0
   183  0000FA                     _game_state:
   184                           	callstack 0
   185  0000FA                     	ds	1
   186  0000                     _TMR0H	set	4055
   187  0000                     _TMR0L	set	4054
   188  0000                     _T0CON	set	4053
   189  0000                     _TRISA	set	3986
   190  0000                     _TRISB	set	3987
   191  0000                     _T3CON	set	4017
   192  0000                     _INTCON2bits	set	4081
   193  0000                     _ADCON1	set	4033
   194  0000                     _INTCON3bits	set	4080
   195  0000                     _T0CONbits	set	4053
   196  0000                     _INTCONbits	set	4082
   197  0000                     _PORTB	set	3969
   198  0000                     _TRISD	set	3989
   199  0000                     _TRISEbits	set	3990
   200  0000                     _PORTD	set	3971
   201  0000                     _PORTEbits	set	3972
   202  0000                     _TMR3H	set	4019
   203  0000                     _TMR3L	set	4018
   204  0000                     _T3CONbits	set	4017
   205                           
   206                           	psect	smallconst
   207  001000                     __psmallconst:
   208                           	callstack 0
   209  001000  00                 	db	0
   210  001001                     STR_1:
   211  001001  25                 	db	37
   212  001002  64                 	db	100	;'d'
   213  001003  00                 	db	0
   214  001004  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  001CB4                     __pcinit:
   220                           	callstack 0
   221  001CB4                     start_initialization:
   222                           	callstack 0
   223  001CB4                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK0 (64 bytes)
   227                           ; load TBLPTR registers with __pidataBANK0
   228  001CB4  0EBA               	movlw	low __pidataBANK0
   229  001CB6  6EF6               	movwf	tblptrl,c
   230  001CB8  0E1E               	movlw	high __pidataBANK0
   231  001CBA  6EF7               	movwf	tblptrh,c
   232  001CBC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   233  001CBE  6EF8               	movwf	tblptru,c
   234  001CC0  EE00  F080         	lfsr	0,__pdataBANK0
   235  001CC4  EE10 F040          	lfsr	1,64
   236  001CC8                     copy_data0:
   237  001CC8  0009               	tblrd		*+
   238  001CCA  CFF5 FFEE          	movff	tablat,postinc0
   239  001CCE  50E5               	movf	postdec1,w,c
   240  001CD0  50E1               	movf	fsr1l,w,c
   241  001CD2  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to COMRAM (2 bytes)
   244                           ; load TBLPTR registers with __pidataCOMRAM
   245  001CD4  0E30               	movlw	low __pidataCOMRAM
   246  001CD6  6EF6               	movwf	tblptrl,c
   247  001CD8  0E20               	movlw	high __pidataCOMRAM
   248  001CDA  6EF7               	movwf	tblptrh,c
   249  001CDC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   250  001CDE  6EF8               	movwf	tblptru,c
   251  001CE0  0009               	tblrd		*+	;fetch initializer
   252  001CE2  CFF5 F074          	movff	tablat,__pdataCOMRAM
   253  001CE6  0009               	tblrd		*+	;fetch initializer
   254  001CE8  CFF5 F075          	movff	tablat,__pdataCOMRAM+1
   255                           
   256                           ; Clear objects allocated to BANK1 (252 bytes)
   257  001CEC  EE01  F000         	lfsr	0,__pbssBANK1
   258  001CF0  0EFC               	movlw	252
   259  001CF2                     clear_0:
   260  001CF2  6AEE               	clrf	postinc0,c
   261  001CF4  06E8               	decf	wreg,f,c
   262  001CF6  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (58 bytes)
   265  001CF8  EE00  F0C0         	lfsr	0,__pbssBANK0
   266  001CFC  0E3A               	movlw	58
   267  001CFE                     clear_1:
   268  001CFE  6AEE               	clrf	postinc0,c
   269  001D00  06E8               	decf	wreg,f,c
   270  001D02  E1FD               	bnz	clear_1
   271                           
   272                           ; Clear objects allocated to COMRAM (7 bytes)
   273  001D04  EE00  F06D         	lfsr	0,__pbssCOMRAM
   274  001D08  0E07               	movlw	7
   275  001D0A                     clear_2:
   276  001D0A  6AEE               	clrf	postinc0,c
   277  001D0C  06E8               	decf	wreg,f,c
   278  001D0E  E1FD               	bnz	clear_2
   279  001D10                     end_of_initialization:
   280                           	callstack 0
   281  001D10                     __end_of__initialization:
   282                           	callstack 0
   283  001D10  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   284  001D12  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   285  001D14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   286  001D16  6EF8               	movwf	tblptru,c
   287  001D18  0100               	movlb	0
   288  001D1A  EFC2  F00B         	goto	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMRAM
   291  00006D                     __pbssCOMRAM:
   292                           	callstack 0
   293  00006D                     _prec:
   294                           	callstack 0
   295  00006D                     	ds	2
   296  00006F                     _flags:
   297                           	callstack 0
   298  00006F                     	ds	2
   299  000071                     _a:
   300                           	callstack 0
   301  000071                     	ds	2
   302  000073                     _acceptInterrupts:
   303                           	callstack 0
   304  000073                     	ds	1
   305                           
   306                           	psect	dataCOMRAM
   307  000074                     __pdataCOMRAM:
   308                           	callstack 0
   309  000074                     _lcd_y:
   310                           	callstack 0
   311  000074                     	ds	1
   312  000075                     _lcd_x:
   313                           	callstack 0
   314  000075                     	ds	1
   315                           
   316                           	psect	bssBANK0
   317  0000C0                     __pbssBANK0:
   318                           	callstack 0
   319  0000C0                     _objs:
   320                           	callstack 0
   321  0000C0                     	ds	18
   322  0000D2                     _nout:
   323                           	callstack 0
   324  0000D2                     	ds	2
   325  0000D4                     _width:
   326                           	callstack 0
   327  0000D4                     	ds	2
   328  0000D6                     _c:
   329                           	callstack 0
   330  0000D6                     	ds	2
   331  0000D8                     _b:
   332                           	callstack 0
   333  0000D8                     	ds	2
   334  0000DA                     _dbuf:
   335                           	callstack 0
   336  0000DA                     	ds	32
   337                           
   338                           	psect	dataBANK0
   339  000080                     __pdataBANK0:
   340                           	callstack 0
   341  000080                     _frisbee_target:
   342                           	callstack 0
   343  000080                     	ds	8
   344  000088                     _frisbeeChar:
   345                           	callstack 0
   346  000088                     	ds	8
   347  000090                     _selected_teamB_player_with_frisbee:
   348                           	callstack 0
   349  000090                     	ds	8
   350  000098                     _selected_teamA_player_with_frisbee:
   351                           	callstack 0
   352  000098                     	ds	8
   353  0000A0                     _selected_teamB_player:
   354                           	callstack 0
   355  0000A0                     	ds	8
   356  0000A8                     _selected_teamA_player:
   357                           	callstack 0
   358  0000A8                     	ds	8
   359  0000B0                     _teamB_player:
   360                           	callstack 0
   361  0000B0                     	ds	8
   362  0000B8                     _teamA_player:
   363                           	callstack 0
   364  0000B8                     	ds	8
   365                           
   366                           	psect	bssBANK1
   367  000100                     __pbssBANK1:
   368                           	callstack 0
   369  000100                     _display:
   370                           	callstack 0
   371  000100                     	ds	192
   372  0001C0                     _frisbee_steps:
   373                           	callstack 0
   374  0001C0                     	ds	60
   375                           
   376                           	psect	cstackBANK2
   377  000200                     __pcstackBANK2:
   378                           	callstack 0
   379  000200                     main@arr:
   380                           	callstack 0
   381                           
   382                           ; 5 bytes @ 0x0
   383  000200                     	ds	5
   384  000205                     _main$548:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x5
   388  000205                     	ds	2
   389  000207                     main@i:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x7
   393  000207                     	ds	2
   394                           
   395                           	psect	cstackCOMRAM
   396  000001                     __pcstackCOMRAM:
   397                           	callstack 0
   398  000001                     ??_highIsr:
   399  000001                     
   400                           ; 1 bytes @ 0x0
   401  000001                     	ds	2
   402  000003                     highIsr@portbVals:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x2
   406  000003                     	ds	1
   407  000004                     ??_LCDCmd:
   408  000004                     ??_LCDDat:
   409  000004                     ?_strlen:
   410                           	callstack 0
   411  000004                     ?___aodiv:
   412                           	callstack 0
   413  000004                     ?___aomod:
   414                           	callstack 0
   415  000004                     fputc@c:
   416                           	callstack 0
   417  000004                     strlen@s:
   418                           	callstack 0
   419  000004                     ___aodiv@dividend:
   420                           	callstack 0
   421  000004                     ___aomod@dividend:
   422                           	callstack 0
   423                           
   424                           ; 8 bytes @ 0x3
   425  000004                     	ds	1
   426  000005                     LCDCmd@cmd:
   427                           	callstack 0
   428  000005                     LCDDat@dat:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x4
   432  000005                     	ds	1
   433  000006                     LCDGoto@p_1:
   434                           	callstack 0
   435  000006                     fputc@fp:
   436                           	callstack 0
   437  000006                     strlen@a:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x5
   441  000006                     	ds	1
   442  000007                     LCDGoto@p_2:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x6
   446  000007                     	ds	1
   447  000008                     ??_fputc:
   448  000008                     LCDStr@str:
   449                           	callstack 0
   450  000008                     LCDAddSpecialCharacter@data:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x7
   454  000008                     	ds	2
   455  00000A                     LCDStr@i:
   456                           	callstack 0
   457  00000A                     LCDAddSpecialCharacter@character_index:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x9
   461  00000A                     	ds	1
   462  00000B                     LCDAddSpecialCharacter@i:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xA
   466  00000B                     	ds	1
   467  00000C                     ___aodiv@divisor:
   468                           	callstack 0
   469  00000C                     ___aomod@divisor:
   470                           	callstack 0
   471                           
   472                           ; 8 bytes @ 0xB
   473  00000C                     	ds	1
   474  00000D                     fputs@s:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xC
   478  00000D                     	ds	2
   479  00000F                     fputs@fp:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0xE
   483  00000F                     	ds	2
   484  000011                     fputs@c:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x10
   488  000011                     	ds	1
   489  000012                     fputs@i:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x11
   493  000012                     	ds	2
   494  000014                     ?_pad:
   495                           	callstack 0
   496  000014                     ___aodiv@counter:
   497                           	callstack 0
   498  000014                     ___aomod@counter:
   499                           	callstack 0
   500  000014                     pad@fp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x13
   504  000014                     	ds	1
   505  000015                     ___aodiv@sign:
   506                           	callstack 0
   507  000015                     ___aomod@sign:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x14
   511  000015                     	ds	1
   512  000016                     ?_abs:
   513                           	callstack 0
   514  000016                     pad@buf:
   515                           	callstack 0
   516  000016                     abs@a:
   517                           	callstack 0
   518  000016                     ___aodiv@quotient:
   519                           	callstack 0
   520                           
   521                           ; 8 bytes @ 0x15
   522  000016                     	ds	2
   523  000018                     ??_abs:
   524  000018                     pad@p:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x17
   528  000018                     	ds	2
   529  00001A                     ??_pad:
   530                           
   531                           ; 1 bytes @ 0x19
   532  00001A                     	ds	1
   533  00001B                     pad@i:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00001B                     	ds	2
   538  00001D                     pad@w:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1C
   542  00001D                     	ds	2
   543  00001F                     ?_dtoa:
   544                           	callstack 0
   545  00001F                     dtoa@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1E
   549  00001F                     	ds	2
   550  000021                     dtoa@d:
   551                           	callstack 0
   552                           
   553                           ; 8 bytes @ 0x20
   554  000021                     	ds	8
   555  000029                     ??_dtoa:
   556                           
   557                           ; 1 bytes @ 0x28
   558  000029                     	ds	8
   559  000031                     _dtoa$1095:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x30
   563  000031                     	ds	2
   564  000033                     dtoa@p:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x32
   568  000033                     	ds	2
   569  000035                     dtoa@w:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x34
   573  000035                     	ds	2
   574  000037                     dtoa@s:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x36
   578  000037                     	ds	2
   579  000039                     dtoa@n:
   580                           	callstack 0
   581                           
   582                           ; 8 bytes @ 0x38
   583  000039                     	ds	8
   584  000041                     dtoa@i:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x40
   588  000041                     	ds	2
   589  000043                     ?_vfpfcnvrt:
   590                           	callstack 0
   591  000043                     vfpfcnvrt@fp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x42
   595  000043                     	ds	2
   596  000045                     vfpfcnvrt@fmt:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x44
   600  000045                     	ds	2
   601  000047                     vfpfcnvrt@ap:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x46
   605  000047                     	ds	2
   606  000049                     ??_vfpfcnvrt:
   607                           
   608                           ; 1 bytes @ 0x48
   609  000049                     	ds	2
   610  00004B                     vfpfcnvrt@ll:
   611                           	callstack 0
   612                           
   613                           ; 8 bytes @ 0x4A
   614  00004B                     	ds	8
   615  000053                     ?_vfprintf:
   616                           	callstack 0
   617  000053                     vfprintf@fp:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x52
   621  000053                     	ds	2
   622  000055                     vfprintf@fmt:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x54
   626  000055                     	ds	2
   627  000057                     vfprintf@ap:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x56
   631  000057                     	ds	2
   632  000059                     vfprintf@cfmt:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x58
   636  000059                     	ds	2
   637  00005B                     ?_sprintf:
   638                           	callstack 0
   639  00005B                     sprintf@s:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x5A
   643  00005B                     	ds	2
   644  00005D                     sprintf@fmt:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x5C
   648  00005D                     	ds	4
   649  000061                     
   650                           ; 1 bytes @ 0x60
   651  000061                     	ds	2
   652  000063                     sprintf@ap:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x62
   656  000063                     	ds	2
   657  000065                     sprintf@f:
   658                           	callstack 0
   659                           
   660                           ; 6 bytes @ 0x64
   661  000065                     	ds	6
   662  00006B                     ??_main:
   663                           
   664                           ; 1 bytes @ 0x6A
   665  00006B                     	ds	2
   666                           
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   669 ;;
   670 ;; *************** function _main *****************
   671 ;; Defined at:
   672 ;;		line 86 in file "main.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  i               2    7[BANK2 ] int 
   677 ;;  arr             5    0[BANK2 ] unsigned char [5]
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Totals:         2       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;Total ram usage:       11 bytes
   692 ;; Hardware stack levels required when called:   10
   693 ;; This function calls:
   694 ;;		_AddCustomCharacters
   695 ;;		_InitInterrupts
   696 ;;		_InitLCD
   697 ;;		_LCDDat
   698 ;;		_LCDGoto
   699 ;;		_LCDStr
   700 ;;		_sprintf
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text0
   707  001784                     __ptext0:
   708                           	callstack 0
   709  001784                     _main:
   710                           	callstack 21
   711  001784                     
   712                           ;main.c: 89:     game_state = GS_INACTIVE;
   713  001784  0E01               	movlw	1
   714  001786  0100               	movlb	0	; () banked
   715  001788  6FFA               	movwf	_game_state& (0+255),b
   716  00178A                     
   717                           ; BSR set to: 0
   718                           ;main.c: 91:     InitInterrupts();
   719  00178A  EC8F  F00E         	call	_InitInterrupts	;wreg free
   720  00178E                     
   721                           ;main.c: 93:     InitLCD();
   722  00178E  ECB8  F00F         	call	_InitLCD	;wreg free
   723                           
   724                           ;main.c: 94:     lcd_x = 1;
   725  001792  0E01               	movlw	1
   726  001794  6E75               	movwf	_lcd_x^0,c
   727                           
   728                           ;main.c: 95:     lcd_y = 1;
   729  001796  0E01               	movlw	1
   730  001798  6E74               	movwf	_lcd_y^0,c
   731  00179A                     
   732                           ;main.c: 96:     AddCustomCharacters();
   733  00179A  EC21  F00E         	call	_AddCustomCharacters	;wreg free
   734  00179E                     l2717:
   735                           
   736                           ;main.c: 100:     {;main.c: 101:         char arr[5];;main.c: 103:         lcd_x = 1;
   737  00179E  0E01               	movlw	1
   738  0017A0  6E75               	movwf	_lcd_x^0,c
   739  0017A2                     
   740                           ;main.c: 104:         lcd_y = 1;
   741  0017A2  0E01               	movlw	1
   742  0017A4  6E74               	movwf	_lcd_y^0,c
   743  0017A6                     
   744                           ;main.c: 105:         LCDGoto(lcd_x, lcd_y);
   745  0017A6  C074  F006         	movff	_lcd_y,LCDGoto@p_1
   746  0017AA  5075               	movf	_lcd_x^0,w,c
   747  0017AC  ECE7  F00D         	call	_LCDGoto
   748  0017B0                     
   749                           ;main.c: 106:         for (int i = 7; i >= 0; i--) {
   750  0017B0  0E00               	movlw	0
   751  0017B2  0102               	movlb	2	; () banked
   752  0017B4  6F08               	movwf	(main@i+1)& (0+255),b
   753  0017B6  0E07               	movlw	7
   754  0017B8  6F07               	movwf	main@i& (0+255),b
   755  0017BA                     l2729:
   756                           
   757                           ; BSR set to: 2
   758                           ;main.c: 107:             LCDDat(((PORTB >> i) & 1) ? '1' : '0');
   759  0017BA  C207  F06B         	movff	main@i,??_main
   760  0017BE  CF81 F06C          	movff	3969,??_main+1	;volatile
   761  0017C2  2A6B               	incf	??_main^0,f,c
   762  0017C4  EFE6  F00B         	goto	u2054
   763  0017C8                     u2055:
   764  0017C8  90D8               	bcf	status,0,c
   765  0017CA  326C               	rrcf	(??_main+1)^0,f,c
   766  0017CC                     u2054:
   767  0017CC  2E6B               	decfsz	??_main^0,f,c
   768  0017CE  EFE4  F00B         	goto	u2055
   769  0017D2  B06C               	btfsc	(??_main+1)^0,0,c
   770  0017D4  EFEE  F00B         	goto	u2061
   771  0017D8  EFF0  F00B         	goto	u2060
   772  0017DC                     u2061:
   773  0017DC  EFF7  F00B         	goto	l2733
   774  0017E0                     u2060:
   775  0017E0  0E00               	movlw	0
   776  0017E2  0102               	movlb	2	; () banked
   777  0017E4  6F06               	movwf	(_main$548+1)& (0+255),b
   778  0017E6  0E30               	movlw	48
   779  0017E8  6F05               	movwf	_main$548& (0+255),b
   780  0017EA  EFFC  F00B         	goto	l2735
   781  0017EE                     l2733:
   782  0017EE  0E00               	movlw	0
   783  0017F0  0102               	movlb	2	; () banked
   784  0017F2  6F06               	movwf	(_main$548+1)& (0+255),b
   785  0017F4  0E31               	movlw	49
   786  0017F6  6F05               	movwf	_main$548& (0+255),b
   787  0017F8                     l2735:
   788                           
   789                           ; BSR set to: 2
   790  0017F8  5105               	movf	_main$548& (0+255),w,b
   791  0017FA  ECD1  F00F         	call	_LCDDat
   792  0017FE                     
   793                           ;main.c: 108:         }
   794  0017FE  0102               	movlb	2	; () banked
   795  001800  0707               	decf	main@i& (0+255),f,b
   796  001802  A0D8               	btfss	status,0,c
   797  001804  0708               	decf	(main@i+1)& (0+255),f,b
   798  001806                     
   799                           ; BSR set to: 2
   800  001806  BF08               	btfsc	(main@i+1)& (0+255),7,b
   801  001808  EF0A  F00C         	goto	u2070
   802  00180C  EF08  F00C         	goto	u2071
   803  001810                     u2071:
   804  001810  EFDD  F00B         	goto	l2729
   805  001814                     u2070:
   806  001814                     
   807                           ; BSR set to: 2
   808                           ;main.c: 110:         lcd_y = 2;
   809  001814  0E02               	movlw	2
   810  001816  6E74               	movwf	_lcd_y^0,c
   811                           
   812                           ;main.c: 111:         lcd_x = 1;
   813  001818  0E01               	movlw	1
   814  00181A  6E75               	movwf	_lcd_x^0,c
   815  00181C                     
   816                           ; BSR set to: 2
   817                           ;main.c: 112:         LCDGoto(lcd_x, lcd_y);
   818  00181C  C074  F006         	movff	_lcd_y,LCDGoto@p_1
   819  001820  5075               	movf	_lcd_x^0,w,c
   820  001822  ECE7  F00D         	call	_LCDGoto
   821  001826                     
   822                           ;main.c: 113:         sprintf(arr, "%d", a);
   823  001826  0E00               	movlw	low main@arr
   824  001828  6E5B               	movwf	sprintf@s^0,c
   825  00182A  0E02               	movlw	high main@arr
   826  00182C  6E5C               	movwf	(sprintf@s+1)^0,c
   827  00182E  0E01               	movlw	low STR_1
   828  001830  6E5D               	movwf	sprintf@fmt^0,c
   829  001832  0E10               	movlw	high STR_1
   830  001834  6E5E               	movwf	(sprintf@fmt+1)^0,c
   831  001836  C071  F05F         	movff	_a,?_sprintf+4
   832  00183A  C072  F060         	movff	_a+1,?_sprintf+5
   833  00183E  ECF3  F00E         	call	_sprintf	;wreg free
   834  001842                     
   835                           ;main.c: 114:         LCDStr(arr);
   836  001842  0E00               	movlw	low main@arr
   837  001844  6E08               	movwf	LCDStr@str^0,c
   838  001846  0E02               	movlw	high main@arr
   839  001848  6E09               	movwf	(LCDStr@str+1)^0,c
   840  00184A  ECAD  F00D         	call	_LCDStr	;wreg free
   841  00184E                     
   842                           ;main.c: 116:         lcd_y = 3;
   843  00184E  0E03               	movlw	3
   844  001850  6E74               	movwf	_lcd_y^0,c
   845  001852                     
   846                           ;main.c: 117:         lcd_x = 1;
   847  001852  0E01               	movlw	1
   848  001854  6E75               	movwf	_lcd_x^0,c
   849  001856                     
   850                           ;main.c: 118:         LCDGoto(lcd_x, lcd_y);
   851  001856  C074  F006         	movff	_lcd_y,LCDGoto@p_1
   852  00185A  5075               	movf	_lcd_x^0,w,c
   853  00185C  ECE7  F00D         	call	_LCDGoto
   854  001860                     
   855                           ;main.c: 119:         sprintf(arr, "%d", b);
   856  001860  0E00               	movlw	low main@arr
   857  001862  6E5B               	movwf	sprintf@s^0,c
   858  001864  0E02               	movlw	high main@arr
   859  001866  6E5C               	movwf	(sprintf@s+1)^0,c
   860  001868  0E01               	movlw	low STR_1
   861  00186A  6E5D               	movwf	sprintf@fmt^0,c
   862  00186C  0E10               	movlw	high STR_1
   863  00186E  6E5E               	movwf	(sprintf@fmt+1)^0,c
   864  001870  C0D8  F05F         	movff	_b,?_sprintf+4
   865  001874  C0D9  F060         	movff	_b+1,?_sprintf+5
   866  001878  ECF3  F00E         	call	_sprintf	;wreg free
   867  00187C                     
   868                           ;main.c: 120:         LCDStr(arr);
   869  00187C  0E00               	movlw	low main@arr
   870  00187E  6E08               	movwf	LCDStr@str^0,c
   871  001880  0E02               	movlw	high main@arr
   872  001882  6E09               	movwf	(LCDStr@str+1)^0,c
   873  001884  ECAD  F00D         	call	_LCDStr	;wreg free
   874                           
   875                           ;main.c: 122:         lcd_y = 4;
   876  001888  0E04               	movlw	4
   877  00188A  6E74               	movwf	_lcd_y^0,c
   878                           
   879                           ;main.c: 123:         lcd_x = 1;
   880  00188C  0E01               	movlw	1
   881  00188E  6E75               	movwf	_lcd_x^0,c
   882  001890                     
   883                           ;main.c: 124:         LCDGoto(lcd_x, lcd_y);
   884  001890  C074  F006         	movff	_lcd_y,LCDGoto@p_1
   885  001894  5075               	movf	_lcd_x^0,w,c
   886  001896  ECE7  F00D         	call	_LCDGoto
   887  00189A                     
   888                           ;main.c: 125:         sprintf(arr, "%d", c);
   889  00189A  0E00               	movlw	low main@arr
   890  00189C  6E5B               	movwf	sprintf@s^0,c
   891  00189E  0E02               	movlw	high main@arr
   892  0018A0  6E5C               	movwf	(sprintf@s+1)^0,c
   893  0018A2  0E01               	movlw	low STR_1
   894  0018A4  6E5D               	movwf	sprintf@fmt^0,c
   895  0018A6  0E10               	movlw	high STR_1
   896  0018A8  6E5E               	movwf	(sprintf@fmt+1)^0,c
   897  0018AA  C0D6  F05F         	movff	_c,?_sprintf+4
   898  0018AE  C0D7  F060         	movff	_c+1,?_sprintf+5
   899  0018B2  ECF3  F00E         	call	_sprintf	;wreg free
   900  0018B6                     
   901                           ;main.c: 126:         LCDStr(arr);
   902  0018B6  0E00               	movlw	low main@arr
   903  0018B8  6E08               	movwf	LCDStr@str^0,c
   904  0018BA  0E02               	movlw	high main@arr
   905  0018BC  6E09               	movwf	(LCDStr@str+1)^0,c
   906  0018BE  ECAD  F00D         	call	_LCDStr	;wreg free
   907  0018C2  EFCF  F00B         	goto	l2717
   908  0018C6  EF07  F000         	goto	start
   909  0018CA                     __end_of_main:
   910                           	callstack 0
   911                           
   912 ;; *************** function _sprintf *****************
   913 ;; Defined at:
   914 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_sprintf.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  s               2   90[COMRAM] PTR unsigned char 
   917 ;;		 -> main@arr(5), 
   918 ;;  fmt             2   92[COMRAM] PTR const unsigned char 
   919 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  f               6  100[COMRAM] struct _IO_FILE
   922 ;;  ap              2   98[COMRAM] PTR void [1]
   923 ;;		 -> ?_sprintf(2), 
   924 ;;  ret             2    0        int 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2   90[COMRAM] int 
   927 ;; Registers used:
   928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:       16 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    9
   941 ;; This function calls:
   942 ;;		_vfprintf
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text1
   949  001DE6                     __ptext1:
   950                           	callstack 0
   951  001DE6                     _sprintf:
   952                           	callstack 21
   953  001DE6  0E5F               	movlw	low (?_sprintf+4)
   954  001DE8  6E63               	movwf	sprintf@ap^0,c
   955  001DEA  0E00               	movlw	high (?_sprintf+4)
   956  001DEC  6E64               	movwf	(sprintf@ap+1)^0,c
   957  001DEE  C05B  F065         	movff	sprintf@s,sprintf@f
   958  001DF2  C05C  F066         	movff	sprintf@s+1,sprintf@f+1
   959  001DF6  0E00               	movlw	0
   960  001DF8  6E68               	movwf	(sprintf@f+3)^0,c
   961  001DFA  0E00               	movlw	0
   962  001DFC  6E67               	movwf	(sprintf@f+2)^0,c
   963  001DFE  0E00               	movlw	0
   964  001E00  6E6A               	movwf	(sprintf@f+5)^0,c
   965  001E02  0E00               	movlw	0
   966  001E04  6E69               	movwf	(sprintf@f+4)^0,c
   967  001E06  0E65               	movlw	low sprintf@f
   968  001E08  6E53               	movwf	vfprintf@fp^0,c
   969  001E0A  0E00               	movlw	high sprintf@f
   970  001E0C  6E54               	movwf	(vfprintf@fp+1)^0,c
   971  001E0E  C05D  F055         	movff	sprintf@fmt,vfprintf@fmt
   972  001E12  C05E  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
   973  001E16  0E63               	movlw	low sprintf@ap
   974  001E18  6E57               	movwf	vfprintf@ap^0,c
   975  001E1A  0E00               	movlw	high sprintf@ap
   976  001E1C  6E58               	movwf	(vfprintf@ap+1)^0,c
   977  001E1E  ECC2  F00E         	call	_vfprintf	;wreg free
   978  001E22  5067               	movf	(sprintf@f+2)^0,w,c
   979  001E24  245B               	addwf	sprintf@s^0,w,c
   980  001E26  6ED9               	movwf	fsr2l,c
   981  001E28  5068               	movf	(sprintf@f+3)^0,w,c
   982  001E2A  205C               	addwfc	(sprintf@s+1)^0,w,c
   983  001E2C  6EDA               	movwf	fsr2h,c
   984  001E2E  0E00               	movlw	0
   985  001E30  6EDF               	movwf	indf2,c
   986  001E32  0012               	return		;funcret
   987  001E34                     __end_of_sprintf:
   988                           	callstack 0
   989                           
   990 ;; *************** function _vfprintf *****************
   991 ;; Defined at:
   992 ;;		line 1390 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
   995 ;;		 -> sprintf@f(6), 
   996 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
   997 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
   998 ;;  ap              2   86[COMRAM] PTR PTR void 
   999 ;;		 -> sprintf@ap(2), 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1002 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2   82[COMRAM] int 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        8 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    8
  1019 ;; This function calls:
  1020 ;;		_vfpfcnvrt
  1021 ;; This function is called by:
  1022 ;;		_sprintf
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text2
  1027  001D84                     __ptext2:
  1028                           	callstack 0
  1029  001D84                     _vfprintf:
  1030                           	callstack 21
  1031  001D84                     
  1032                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  1033  001D84  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1034  001D88  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1035  001D8C                     
  1036                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1037  001D8C  0E00               	movlw	0
  1038  001D8E  0100               	movlb	0	; () banked
  1039  001D90  6FD3               	movwf	(_nout+1)& (0+255),b
  1040  001D92  0E00               	movlw	0
  1041  001D94  6FD2               	movwf	_nout& (0+255),b
  1042                           
  1043                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1044  001D96  EFE0  F00E         	goto	l2613
  1045  001D9A                     l2611:
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1049  001D9A  C053  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1050  001D9E  C054  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1051  001DA2  0E59               	movlw	low vfprintf@cfmt
  1052  001DA4  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1053  001DA6  0E00               	movlw	high vfprintf@cfmt
  1054  001DA8  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1055  001DAA  C057  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1056  001DAE  C058  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1057  001DB2  EC72  F009         	call	_vfpfcnvrt	;wreg free
  1058  001DB6  5043               	movf	?_vfpfcnvrt^0,w,c
  1059  001DB8  0100               	movlb	0	; () banked
  1060  001DBA  27D2               	addwf	_nout& (0+255),f,b
  1061  001DBC  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1062  001DBE  23D3               	addwfc	(_nout+1)& (0+255),f,b
  1063  001DC0                     l2613:
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  1067  001DC0  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1068  001DC4  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1069  001DC8                     	if	0	;tblptru may be non-zero
  1070  001DC8                     	endif
  1071  001DC8                     	if	0	;tblptru may be non-zero
  1072  001DC8                     	endif
  1073  001DC8  0008               	tblrd		*
  1074  001DCA  50F5               	movf	tablat,w,c
  1075  001DCC  0900               	iorlw	0
  1076  001DCE  A4D8               	btfss	status,2,c
  1077  001DD0  EFEC  F00E         	goto	u2011
  1078  001DD4  EFEE  F00E         	goto	u2010
  1079  001DD8                     u2011:
  1080  001DD8  EFCD  F00E         	goto	l2611
  1081  001DDC                     u2010:
  1082  001DDC                     
  1083                           ; BSR set to: 0
  1084                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  1085  001DDC  C0D2  F053         	movff	_nout,?_vfprintf
  1086  001DE0  C0D3  F054         	movff	_nout+1,?_vfprintf+1
  1087  001DE4                     
  1088                           ; BSR set to: 0
  1089  001DE4  0012               	return		;funcret
  1090  001DE6                     __end_of_vfprintf:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _vfpfcnvrt *****************
  1094 ;; Defined at:
  1095 ;;		line 692 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1098 ;;		 -> sprintf@f(6), 
  1099 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1100 ;;		 -> vfprintf@cfmt(2), 
  1101 ;;  ap              2   70[COMRAM] PTR PTR void 
  1102 ;;		 -> sprintf@ap(2), 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  ll              8   74[COMRAM] long long 
  1105 ;;  llu             8    0        unsigned long long 
  1106 ;;  f               4    0        unsigned long long 
  1107 ;;  vp              3    0        PTR void 
  1108 ;;  ct              3    0        unsigned char [3]
  1109 ;;  cp              3    0        PTR unsigned char 
  1110 ;;  i               2    0        int 
  1111 ;;  done            2    0        int 
  1112 ;;  c               1    0        unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  2   66[COMRAM] int 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1122 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;Total ram usage:       16 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    7
  1129 ;; This function calls:
  1130 ;;		_dtoa
  1131 ;;		_fputc
  1132 ;; This function is called by:
  1133 ;;		_vfprintf
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text3
  1138  0012E4                     __ptext3:
  1139                           	callstack 0
  1140  0012E4                     _vfpfcnvrt:
  1141                           	callstack 21
  1142  0012E4                     
  1143                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  1144  0012E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1145  0012E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1146  0012EC  CFDE FFF6          	movff	postinc2,tblptrl
  1147  0012F0  CFDD FFF7          	movff	postdec2,tblptrh
  1148  0012F4                     	if	0	;tblptru may be non-zero
  1149  0012F4                     	endif
  1150  0012F4                     	if	0	;tblptru may be non-zero
  1151  0012F4                     	endif
  1152  0012F4  0008               	tblrd		*
  1153  0012F6  50F5               	movf	tablat,w,c
  1154  0012F8  0A25               	xorlw	37
  1155  0012FA  A4D8               	btfss	status,2,c
  1156  0012FC  EF82  F009         	goto	u1961
  1157  001300  EF84  F009         	goto	u1960
  1158  001304                     u1961:
  1159  001304  EF30  F00A         	goto	l2583
  1160  001308                     u1960:
  1161  001308                     
  1162                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1163  001308  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1164  00130C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1165  001310  2ADE               	incf	postinc2,f,c
  1166  001312  0E00               	movlw	0
  1167  001314  22DD               	addwfc	postdec2,f,c
  1168  001316                     
  1169                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  1170  001316  0E00               	movlw	0
  1171  001318  0100               	movlb	0	; () banked
  1172  00131A  6FD5               	movwf	(_width+1)& (0+255),b
  1173  00131C  0E00               	movlw	0
  1174  00131E  6FD4               	movwf	_width& (0+255),b
  1175  001320  C0D4  F06F         	movff	_width,_flags
  1176  001324  C0D5  F070         	movff	_width+1,_flags+1
  1177  001328                     
  1178                           ; BSR set to: 0
  1179                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  1180  001328  686D               	setf	_prec^0,c
  1181  00132A  686E               	setf	(_prec+1)^0,c
  1182  00132C                     
  1183                           ; BSR set to: 0
  1184                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  1185  00132C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1186  001330  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1187  001334  CFDE FFF6          	movff	postinc2,tblptrl
  1188  001338  CFDD FFF7          	movff	postdec2,tblptrh
  1189  00133C                     	if	0	;tblptru may be non-zero
  1190  00133C                     	endif
  1191  00133C                     	if	0	;tblptru may be non-zero
  1192  00133C                     	endif
  1193  00133C  0008               	tblrd		*
  1194  00133E  50F5               	movf	tablat,w,c
  1195  001340  0A64               	xorlw	100
  1196  001342  B4D8               	btfsc	status,2,c
  1197  001344  EFA6  F009         	goto	u1971
  1198  001348  EFA8  F009         	goto	u1970
  1199  00134C                     u1971:
  1200  00134C  EFBA  F009         	goto	l2561
  1201  001350                     u1970:
  1202  001350                     
  1203                           ; BSR set to: 0
  1204  001350  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1205  001354  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1206  001358  CFDE FFF6          	movff	postinc2,tblptrl
  1207  00135C  CFDD FFF7          	movff	postdec2,tblptrh
  1208  001360                     	if	0	;tblptru may be non-zero
  1209  001360                     	endif
  1210  001360                     	if	0	;tblptru may be non-zero
  1211  001360                     	endif
  1212  001360  0008               	tblrd		*
  1213  001362  50F5               	movf	tablat,w,c
  1214  001364  0A69               	xorlw	105
  1215  001366  A4D8               	btfss	status,2,c
  1216  001368  EFB8  F009         	goto	u1981
  1217  00136C  EFBA  F009         	goto	u1980
  1218  001370                     u1981:
  1219  001370  EFFA  F009         	goto	l2567
  1220  001374                     u1980:
  1221  001374                     l2561:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  1225  001374  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1226  001378  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1227  00137C  2ADE               	incf	postinc2,f,c
  1228  00137E  0E00               	movlw	0
  1229  001380  22DD               	addwfc	postdec2,f,c
  1230                           
  1231                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  1232  001382  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1233  001386  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1234  00138A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1235  00138E  0E02               	movlw	2
  1236  001390  26DE               	addwf	postinc2,f,c
  1237  001392  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1238  001396  0E00               	movlw	0
  1239  001398  22DD               	addwfc	postdec2,f,c
  1240  00139A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1241  00139E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1242  0013A2  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  1243  0013A6  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  1244  0013AA  0E00               	movlw	0
  1245  0013AC  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1246  0013AE  0EFF               	movlw	-1
  1247  0013B0  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  1248  0013B2  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  1249  0013B4  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  1250  0013B6  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  1251  0013B8  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  1252  0013BA  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  1253  0013BC                     
  1254                           ; BSR set to: 0
  1255                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  1256  0013BC  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  1257  0013C0  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1258  0013C4  C04B  F021         	movff	vfpfcnvrt@ll,dtoa@d
  1259  0013C8  C04C  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1260  0013CC  C04D  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1261  0013D0  C04E  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1262  0013D4  C04F  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1263  0013D8  C050  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1264  0013DC  C051  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1265  0013E0  C052  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1266  0013E4  EC03  F008         	call	_dtoa	;wreg free
  1267  0013E8  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  1268  0013EC  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1269  0013F0  EF4B  F00A         	goto	l964
  1270  0013F4                     l2567:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  1274  0013F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1275  0013F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1276  0013FC  CFDE FFF6          	movff	postinc2,tblptrl
  1277  001400  CFDD FFF7          	movff	postdec2,tblptrh
  1278  001404                     	if	0	;tblptru may be non-zero
  1279  001404                     	endif
  1280  001404                     	if	0	;tblptru may be non-zero
  1281  001404                     	endif
  1282  001404  0008               	tblrd		*
  1283  001406  50F5               	movf	tablat,w,c
  1284  001408  0A25               	xorlw	37
  1285  00140A  A4D8               	btfss	status,2,c
  1286  00140C  EF0A  F00A         	goto	u1991
  1287  001410  EF0C  F00A         	goto	u1990
  1288  001414                     u1991:
  1289  001414  EF23  F00A         	goto	l2577
  1290  001418                     u1990:
  1291  001418                     
  1292                           ; BSR set to: 0
  1293                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  1294  001418  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1295  00141C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1296  001420  2ADE               	incf	postinc2,f,c
  1297  001422  0E00               	movlw	0
  1298  001424  22DD               	addwfc	postdec2,f,c
  1299  001426                     
  1300                           ; BSR set to: 0
  1301                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  1302  001426  0E00               	movlw	0
  1303  001428  6E05               	movwf	(fputc@c+1)^0,c
  1304  00142A  0E25               	movlw	37
  1305  00142C  6E04               	movwf	fputc@c^0,c
  1306  00142E  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1307  001432  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1308  001436  ECE7  F00C         	call	_fputc	;wreg free
  1309  00143A                     l2573:
  1310                           
  1311                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  1312  00143A  0E00               	movlw	0
  1313  00143C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1314  00143E  0E01               	movlw	1
  1315  001440  6E43               	movwf	?_vfpfcnvrt^0,c
  1316  001442  EF4B  F00A         	goto	l964
  1317  001446                     l2577:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  1321  001446  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1322  00144A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1323  00144E  2ADE               	incf	postinc2,f,c
  1324  001450  0E00               	movlw	0
  1325  001452  22DD               	addwfc	postdec2,f,c
  1326  001454                     
  1327                           ; BSR set to: 0
  1328                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  1329  001454  0E00               	movlw	0
  1330  001456  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1331  001458  0E00               	movlw	0
  1332  00145A  6E43               	movwf	?_vfpfcnvrt^0,c
  1333  00145C  EF4B  F00A         	goto	l964
  1334  001460                     l2583:
  1335                           
  1336                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  1337  001460  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1338  001464  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1339  001468  CFDE FFF6          	movff	postinc2,tblptrl
  1340  00146C  CFDD FFF7          	movff	postdec2,tblptrh
  1341  001470                     	if	0	;tblptru may be non-zero
  1342  001470                     	endif
  1343  001470                     	if	0	;tblptru may be non-zero
  1344  001470                     	endif
  1345  001470  0008               	tblrd		*
  1346  001472  50F5               	movf	tablat,w,c
  1347  001474  6E04               	movwf	fputc@c^0,c
  1348  001476  6A05               	clrf	(fputc@c+1)^0,c
  1349  001478  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1350  00147C  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1351  001480  ECE7  F00C         	call	_fputc	;wreg free
  1352  001484                     
  1353                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  1354  001484  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1355  001488  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1356  00148C  2ADE               	incf	postinc2,f,c
  1357  00148E  0E00               	movlw	0
  1358  001490  22DD               	addwfc	postdec2,f,c
  1359  001492  EF1D  F00A         	goto	l2573
  1360  001496                     l964:
  1361  001496  0012               	return		;funcret
  1362  001498                     __end_of_vfpfcnvrt:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _dtoa *****************
  1366 ;; Defined at:
  1367 ;;		line 287 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  1370 ;;		 -> sprintf@f(6), 
  1371 ;;  d               8   32[COMRAM] long long 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  n               8   56[COMRAM] long long 
  1374 ;;  i               2   64[COMRAM] int 
  1375 ;;  s               2   54[COMRAM] int 
  1376 ;;  w               2   52[COMRAM] int 
  1377 ;;  p               2   50[COMRAM] int 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  2   30[COMRAM] int 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1387 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;Total ram usage:       36 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    6
  1394 ;; This function calls:
  1395 ;;		___aodiv
  1396 ;;		___aomod
  1397 ;;		_abs
  1398 ;;		_pad
  1399 ;; This function is called by:
  1400 ;;		_vfpfcnvrt
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text4
  1405  001006                     __ptext4:
  1406                           	callstack 0
  1407  001006                     _dtoa:
  1408                           	callstack 21
  1409  001006                     
  1410                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.30/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .30/pic/sources/c99/common/doprnt.c: 293:     n = d;
  1411  001006  C021  F039         	movff	dtoa@d,dtoa@n
  1412  00100A  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  1413  00100E  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  1414  001012  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  1415  001016  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  1416  00101A  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  1417  00101E  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  1418  001022  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  1419  001026                     
  1420                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  1421  001026  BE40               	btfsc	(dtoa@n+7)^0,7,c
  1422  001028  EF18  F008         	goto	u1781
  1423  00102C  EF1B  F008         	goto	u1780
  1424  001030                     u1781:
  1425  001030  0E01               	movlw	1
  1426  001032  EF1C  F008         	goto	u1790
  1427  001036                     u1780:
  1428  001036  0E00               	movlw	0
  1429  001038                     u1790:
  1430  001038  6E37               	movwf	dtoa@s^0,c
  1431  00103A  6A38               	clrf	(dtoa@s+1)^0,c
  1432                           
  1433                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1434  00103C  5037               	movf	dtoa@s^0,w,c
  1435  00103E  1038               	iorwf	(dtoa@s+1)^0,w,c
  1436  001040  B4D8               	btfsc	status,2,c
  1437  001042  EF25  F008         	goto	u1801
  1438  001046  EF27  F008         	goto	u1800
  1439  00104A                     u1801:
  1440  00104A  EF37  F008         	goto	l2461
  1441  00104E                     u1800:
  1442  00104E                     
  1443                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1444  00104E  1E40               	comf	(dtoa@n+7)^0,f,c
  1445  001050  1E3F               	comf	(dtoa@n+6)^0,f,c
  1446  001052  1E3E               	comf	(dtoa@n+5)^0,f,c
  1447  001054  1E3D               	comf	(dtoa@n+4)^0,f,c
  1448  001056  1E3C               	comf	(dtoa@n+3)^0,f,c
  1449  001058  1E3B               	comf	(dtoa@n+2)^0,f,c
  1450  00105A  1E3A               	comf	(dtoa@n+1)^0,f,c
  1451  00105C  6C39               	negf	dtoa@n^0,c
  1452  00105E  0E00               	movlw	0
  1453  001060  223A               	addwfc	(dtoa@n+1)^0,f,c
  1454  001062  223B               	addwfc	(dtoa@n+2)^0,f,c
  1455  001064  223C               	addwfc	(dtoa@n+3)^0,f,c
  1456  001066  223D               	addwfc	(dtoa@n+4)^0,f,c
  1457  001068  223E               	addwfc	(dtoa@n+5)^0,f,c
  1458  00106A  223F               	addwfc	(dtoa@n+6)^0,f,c
  1459  00106C  2240               	addwfc	(dtoa@n+7)^0,f,c
  1460  00106E                     l2461:
  1461                           
  1462                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  1463  00106E  BE6E               	btfsc	(_prec+1)^0,7,c
  1464  001070  EF3C  F008         	goto	u1811
  1465  001074  EF3E  F008         	goto	u1810
  1466  001078                     u1811:
  1467  001078  EF3F  F008         	goto	l2465
  1468  00107C                     u1810:
  1469  00107C                     
  1470                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  1471  00107C  926F               	bcf	_flags^0,1,c
  1472  00107E                     l2465:
  1473                           
  1474                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  1475  00107E  BE6E               	btfsc	(_prec+1)^0,7,c
  1476  001080  EF4C  F008         	goto	u1820
  1477  001084  506E               	movf	(_prec+1)^0,w,c
  1478  001086  E106               	bnz	u1821
  1479  001088  046D               	decf	_prec^0,w,c
  1480  00108A  B0D8               	btfsc	status,0,c
  1481  00108C  EF4A  F008         	goto	u1821
  1482  001090  EF4C  F008         	goto	u1820
  1483  001094                     u1821:
  1484  001094  EF52  F008         	goto	l937
  1485  001098                     u1820:
  1486  001098  0E00               	movlw	0
  1487  00109A  6E34               	movwf	(dtoa@p+1)^0,c
  1488  00109C  0E01               	movlw	1
  1489  00109E  6E33               	movwf	dtoa@p^0,c
  1490  0010A0  EF56  F008         	goto	l939
  1491  0010A4                     l937:
  1492  0010A4  C06D  F033         	movff	_prec,dtoa@p
  1493  0010A8  C06E  F034         	movff	_prec+1,dtoa@p+1
  1494  0010AC                     l939:
  1495                           
  1496                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1497  0010AC  C0D4  F035         	movff	_width,dtoa@w
  1498  0010B0  C0D5  F036         	movff	_width+1,dtoa@w+1
  1499  0010B4                     
  1500                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  1501  0010B4  5037               	movf	dtoa@s^0,w,c
  1502  0010B6  1038               	iorwf	(dtoa@s+1)^0,w,c
  1503  0010B8  A4D8               	btfss	status,2,c
  1504  0010BA  EF61  F008         	goto	u1831
  1505  0010BE  EF63  F008         	goto	u1830
  1506  0010C2                     u1831:
  1507  0010C2  EF6A  F008         	goto	l2473
  1508  0010C6                     u1830:
  1509  0010C6  A46F               	btfss	_flags^0,2,c
  1510  0010C8  EF68  F008         	goto	u1841
  1511  0010CC  EF6A  F008         	goto	u1840
  1512  0010D0                     u1841:
  1513  0010D0  EF6D  F008         	goto	l2475
  1514  0010D4                     u1840:
  1515  0010D4                     l2473:
  1516                           
  1517                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 306:         --w;
  1518  0010D4  0635               	decf	dtoa@w^0,f,c
  1519  0010D6  A0D8               	btfss	status,0,c
  1520  0010D8  0636               	decf	(dtoa@w+1)^0,f,c
  1521  0010DA                     l2475:
  1522                           
  1523                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  1524  0010DA  0E00               	movlw	0
  1525  0010DC  6E42               	movwf	(dtoa@i+1)^0,c
  1526  0010DE  0E1F               	movlw	31
  1527  0010E0  6E41               	movwf	dtoa@i^0,c
  1528  0010E2                     
  1529                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  1530  0010E2  0E00               	movlw	0
  1531  0010E4  0100               	movlb	0	; () banked
  1532  0010E6  6FF9               	movwf	(_dbuf+31)& (0+255),b
  1533                           
  1534                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1535  0010E8  EFF2  F008         	goto	l2489
  1536  0010EC                     l2479:
  1537                           
  1538                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 313:         --i;
  1539  0010EC  0641               	decf	dtoa@i^0,f,c
  1540  0010EE  A0D8               	btfss	status,0,c
  1541  0010F0  0642               	decf	(dtoa@i+1)^0,f,c
  1542  0010F2                     
  1543                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  1544  0010F2  0EDA               	movlw	low _dbuf
  1545  0010F4  2441               	addwf	dtoa@i^0,w,c
  1546  0010F6  6ED9               	movwf	fsr2l,c
  1547  0010F8  0E00               	movlw	high _dbuf
  1548  0010FA  2042               	addwfc	(dtoa@i+1)^0,w,c
  1549  0010FC  6EDA               	movwf	fsr2h,c
  1550  0010FE  C039  F004         	movff	dtoa@n,___aomod@dividend
  1551  001102  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  1552  001106  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  1553  00110A  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  1554  00110E  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  1555  001112  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  1556  001116  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  1557  00111A  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  1558  00111E  0E0A               	movlw	10
  1559  001120  6E0C               	movwf	___aomod@divisor^0,c
  1560  001122  0E00               	movlw	0
  1561  001124  6E0D               	movwf	(___aomod@divisor+1)^0,c
  1562  001126  0E00               	movlw	0
  1563  001128  6E0E               	movwf	(___aomod@divisor+2)^0,c
  1564  00112A  0E00               	movlw	0
  1565  00112C  6E0F               	movwf	(___aomod@divisor+3)^0,c
  1566  00112E  0E00               	movlw	0
  1567  001130  6E10               	movwf	(___aomod@divisor+4)^0,c
  1568  001132  0E00               	movlw	0
  1569  001134  6E11               	movwf	(___aomod@divisor+5)^0,c
  1570  001136  0E00               	movlw	0
  1571  001138  6E12               	movwf	(___aomod@divisor+6)^0,c
  1572  00113A  0E00               	movlw	0
  1573  00113C  6E13               	movwf	(___aomod@divisor+7)^0,c
  1574  00113E  EC10  F00B         	call	___aomod	;wreg free
  1575  001142  C004  F029         	movff	?___aomod,??_dtoa
  1576  001146  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  1577  00114A  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  1578  00114E  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  1579  001152  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  1580  001156  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  1581  00115A  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  1582  00115E  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  1583  001162  C029  F016         	movff	??_dtoa,abs@a
  1584  001166  C02B  F017         	movff	??_dtoa+2,abs@a+1
  1585  00116A  EC7D  F00F         	call	_abs	;wreg free
  1586  00116E  5016               	movf	?_abs^0,w,c
  1587  001170  0F30               	addlw	48
  1588  001172  6EDF               	movwf	indf2,c
  1589  001174                     
  1590                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 315:         --p;
  1591  001174  0633               	decf	dtoa@p^0,f,c
  1592  001176  A0D8               	btfss	status,0,c
  1593  001178  0634               	decf	(dtoa@p+1)^0,f,c
  1594  00117A                     
  1595                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 316:         --w;
  1596  00117A  0635               	decf	dtoa@w^0,f,c
  1597  00117C  A0D8               	btfss	status,0,c
  1598  00117E  0636               	decf	(dtoa@w+1)^0,f,c
  1599  001180                     
  1600                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  1601  001180  C039  F004         	movff	dtoa@n,___aodiv@dividend
  1602  001184  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  1603  001188  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  1604  00118C  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  1605  001190  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  1606  001194  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  1607  001198  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  1608  00119C  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  1609  0011A0  0E0A               	movlw	10
  1610  0011A2  6E0C               	movwf	___aodiv@divisor^0,c
  1611  0011A4  0E00               	movlw	0
  1612  0011A6  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  1613  0011A8  0E00               	movlw	0
  1614  0011AA  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  1615  0011AC  0E00               	movlw	0
  1616  0011AE  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  1617  0011B0  0E00               	movlw	0
  1618  0011B2  6E10               	movwf	(___aodiv@divisor+4)^0,c
  1619  0011B4  0E00               	movlw	0
  1620  0011B6  6E11               	movwf	(___aodiv@divisor+5)^0,c
  1621  0011B8  0E00               	movlw	0
  1622  0011BA  6E12               	movwf	(___aodiv@divisor+6)^0,c
  1623  0011BC  0E00               	movlw	0
  1624  0011BE  6E13               	movwf	(___aodiv@divisor+7)^0,c
  1625  0011C0  EC4C  F00A         	call	___aodiv	;wreg free
  1626  0011C4  C004  F039         	movff	?___aodiv,dtoa@n
  1627  0011C8  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  1628  0011CC  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  1629  0011D0  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  1630  0011D4  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  1631  0011D8  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  1632  0011DC  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  1633  0011E0  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  1634  0011E4                     l2489:
  1635                           
  1636                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1637  0011E4  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1638  0011E6  EFFD  F008         	goto	u1851
  1639  0011EA  5042               	movf	(dtoa@i+1)^0,w,c
  1640  0011EC  E108               	bnz	u1850
  1641  0011EE  0441               	decf	dtoa@i^0,w,c
  1642  0011F0  A0D8               	btfss	status,0,c
  1643  0011F2  EFFD  F008         	goto	u1851
  1644  0011F6  EFFF  F008         	goto	u1850
  1645  0011FA                     u1851:
  1646  0011FA  EF2F  F009         	goto	l2499
  1647  0011FE                     u1850:
  1648  0011FE  5039               	movf	dtoa@n^0,w,c
  1649  001200  103A               	iorwf	(dtoa@n+1)^0,w,c
  1650  001202  103B               	iorwf	(dtoa@n+2)^0,w,c
  1651  001204  103C               	iorwf	(dtoa@n+3)^0,w,c
  1652  001206  103D               	iorwf	(dtoa@n+4)^0,w,c
  1653  001208  103E               	iorwf	(dtoa@n+5)^0,w,c
  1654  00120A  103F               	iorwf	(dtoa@n+6)^0,w,c
  1655  00120C  1040               	iorwf	(dtoa@n+7)^0,w,c
  1656  00120E  A4D8               	btfss	status,2,c
  1657  001210  EF0C  F009         	goto	u1861
  1658  001214  EF0E  F009         	goto	u1860
  1659  001218                     u1861:
  1660  001218  EF76  F008         	goto	l2479
  1661  00121C                     u1860:
  1662  00121C  BE34               	btfsc	(dtoa@p+1)^0,7,c
  1663  00121E  EF1B  F009         	goto	u1870
  1664  001222  5034               	movf	(dtoa@p+1)^0,w,c
  1665  001224  E106               	bnz	u1871
  1666  001226  0433               	decf	dtoa@p^0,w,c
  1667  001228  B0D8               	btfsc	status,0,c
  1668  00122A  EF19  F009         	goto	u1871
  1669  00122E  EF1B  F009         	goto	u1870
  1670  001232                     u1871:
  1671  001232  EF76  F008         	goto	l2479
  1672  001236                     u1870:
  1673  001236  BE36               	btfsc	(dtoa@w+1)^0,7,c
  1674  001238  EF26  F009         	goto	u1881
  1675  00123C  5036               	movf	(dtoa@w+1)^0,w,c
  1676  00123E  E108               	bnz	u1880
  1677  001240  0435               	decf	dtoa@w^0,w,c
  1678  001242  A0D8               	btfss	status,0,c
  1679  001244  EF26  F009         	goto	u1881
  1680  001248  EF28  F009         	goto	u1880
  1681  00124C                     u1881:
  1682  00124C  EF2F  F009         	goto	l2499
  1683  001250                     u1880:
  1684  001250  B26F               	btfsc	_flags^0,1,c
  1685  001252  EF2D  F009         	goto	u1891
  1686  001256  EF2F  F009         	goto	u1890
  1687  00125A                     u1891:
  1688  00125A  EF76  F008         	goto	l2479
  1689  00125E                     u1890:
  1690  00125E                     l2499:
  1691                           
  1692                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  1693  00125E  5037               	movf	dtoa@s^0,w,c
  1694  001260  1038               	iorwf	(dtoa@s+1)^0,w,c
  1695  001262  A4D8               	btfss	status,2,c
  1696  001264  EF36  F009         	goto	u1901
  1697  001268  EF38  F009         	goto	u1900
  1698  00126C                     u1901:
  1699  00126C  EF3F  F009         	goto	l2503
  1700  001270                     u1900:
  1701  001270  A46F               	btfss	_flags^0,2,c
  1702  001272  EF3D  F009         	goto	u1911
  1703  001276  EF3F  F009         	goto	u1910
  1704  00127A                     u1911:
  1705  00127A  EF5D  F009         	goto	l2513
  1706  00127E                     u1910:
  1707  00127E                     l2503:
  1708                           
  1709                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 322:         --i;
  1710  00127E  0641               	decf	dtoa@i^0,f,c
  1711  001280  A0D8               	btfss	status,0,c
  1712  001282  0642               	decf	(dtoa@i+1)^0,f,c
  1713  001284                     
  1714                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  1715  001284  5037               	movf	dtoa@s^0,w,c
  1716  001286  1038               	iorwf	(dtoa@s+1)^0,w,c
  1717  001288  A4D8               	btfss	status,2,c
  1718  00128A  EF49  F009         	goto	u1921
  1719  00128E  EF4B  F009         	goto	u1920
  1720  001292                     u1921:
  1721  001292  EF51  F009         	goto	l2509
  1722  001296                     u1920:
  1723  001296  0E00               	movlw	0
  1724  001298  6E32               	movwf	(_dtoa$1095+1)^0,c
  1725  00129A  0E2B               	movlw	43
  1726  00129C  6E31               	movwf	_dtoa$1095^0,c
  1727  00129E  EF55  F009         	goto	l2511
  1728  0012A2                     l2509:
  1729  0012A2  0E00               	movlw	0
  1730  0012A4  6E32               	movwf	(_dtoa$1095+1)^0,c
  1731  0012A6  0E2D               	movlw	45
  1732  0012A8  6E31               	movwf	_dtoa$1095^0,c
  1733  0012AA                     l2511:
  1734  0012AA  0EDA               	movlw	low _dbuf
  1735  0012AC  2441               	addwf	dtoa@i^0,w,c
  1736  0012AE  6ED9               	movwf	fsr2l,c
  1737  0012B0  0E00               	movlw	high _dbuf
  1738  0012B2  2042               	addwfc	(dtoa@i+1)^0,w,c
  1739  0012B4  6EDA               	movwf	fsr2h,c
  1740  0012B6  C031  FFDF         	movff	_dtoa$1095,indf2
  1741  0012BA                     l2513:
  1742                           
  1743                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  1744  0012BA  C01F  F014         	movff	dtoa@fp,pad@fp
  1745  0012BE  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  1746  0012C2  0EDA               	movlw	low _dbuf
  1747  0012C4  2441               	addwf	dtoa@i^0,w,c
  1748  0012C6  6E16               	movwf	pad@buf^0,c
  1749  0012C8  0E00               	movlw	high _dbuf
  1750  0012CA  2042               	addwfc	(dtoa@i+1)^0,w,c
  1751  0012CC  6E17               	movwf	(pad@buf+1)^0,c
  1752  0012CE  C035  F018         	movff	dtoa@w,pad@p
  1753  0012D2  C036  F019         	movff	dtoa@w+1,pad@p+1
  1754  0012D6  EC4C  F00D         	call	_pad	;wreg free
  1755  0012DA  C014  F01F         	movff	?_pad,?_dtoa
  1756  0012DE  C015  F020         	movff	?_pad+1,?_dtoa+1
  1757  0012E2  0012               	return		;funcret
  1758  0012E4                     __end_of_dtoa:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _pad *****************
  1762 ;; Defined at:
  1763 ;;		line 72 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  1766 ;;		 -> sprintf@f(6), 
  1767 ;;  buf             2   21[COMRAM] PTR unsigned char 
  1768 ;;		 -> dbuf(32), 
  1769 ;;  p               2   23[COMRAM] int 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  w               2   28[COMRAM] int 
  1772 ;;  i               2   26[COMRAM] int 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2   19[COMRAM] int 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1782 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;Total ram usage:       11 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    5
  1789 ;; This function calls:
  1790 ;;		_fputc
  1791 ;;		_fputs
  1792 ;;		_strlen
  1793 ;; This function is called by:
  1794 ;;		_dtoa
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text5
  1799  001A98                     __ptext5:
  1800                           	callstack 0
  1801  001A98                     _pad:
  1802                           	callstack 21
  1803  001A98                     
  1804                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.30/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  1805  001A98  A06F               	btfss	_flags^0,0,c
  1806  001A9A  EF51  F00D         	goto	u1731
  1807  001A9E  EF53  F00D         	goto	u1730
  1808  001AA2                     u1731:
  1809  001AA2  EF5D  F00D         	goto	l2421
  1810  001AA6                     u1730:
  1811  001AA6                     
  1812                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  1813  001AA6  C016  F00D         	movff	pad@buf,fputs@s
  1814  001AAA  C017  F00E         	movff	pad@buf+1,fputs@s+1
  1815  001AAE  C014  F00F         	movff	pad@fp,fputs@fp
  1816  001AB2  C015  F010         	movff	pad@fp+1,fputs@fp+1
  1817  001AB6  EC1A  F00F         	call	_fputs	;wreg free
  1818  001ABA                     l2421:
  1819                           
  1820                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  1821  001ABA  BE19               	btfsc	(pad@p+1)^0,7,c
  1822  001ABC  EF62  F00D         	goto	u1741
  1823  001AC0  EF64  F00D         	goto	u1740
  1824  001AC4                     u1741:
  1825  001AC4  EF6A  F00D         	goto	l2425
  1826  001AC8                     u1740:
  1827  001AC8  C018  F01D         	movff	pad@p,pad@w
  1828  001ACC  C019  F01E         	movff	pad@p+1,pad@w+1
  1829  001AD0  EF6E  F00D         	goto	l926
  1830  001AD4                     l2425:
  1831  001AD4  0E00               	movlw	0
  1832  001AD6  6E1E               	movwf	(pad@w+1)^0,c
  1833  001AD8  0E00               	movlw	0
  1834  001ADA  6E1D               	movwf	pad@w^0,c
  1835  001ADC                     l926:
  1836                           
  1837                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1838  001ADC  0E00               	movlw	0
  1839  001ADE  6E1C               	movwf	(pad@i+1)^0,c
  1840  001AE0  0E00               	movlw	0
  1841  001AE2  6E1B               	movwf	pad@i^0,c
  1842                           
  1843                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1844  001AE4  EF80  F00D         	goto	l2431
  1845  001AE8                     l2427:
  1846                           
  1847                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  1848  001AE8  0E00               	movlw	0
  1849  001AEA  6E05               	movwf	(fputc@c+1)^0,c
  1850  001AEC  0E20               	movlw	32
  1851  001AEE  6E04               	movwf	fputc@c^0,c
  1852  001AF0  C014  F006         	movff	pad@fp,fputc@fp
  1853  001AF4  C015  F007         	movff	pad@fp+1,fputc@fp+1
  1854  001AF8  ECE7  F00C         	call	_fputc	;wreg free
  1855  001AFC                     
  1856                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1857  001AFC  4A1B               	infsnz	pad@i^0,f,c
  1858  001AFE  2A1C               	incf	(pad@i+1)^0,f,c
  1859  001B00                     l2431:
  1860                           
  1861                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1862  001B00  501D               	movf	pad@w^0,w,c
  1863  001B02  5C1B               	subwf	pad@i^0,w,c
  1864  001B04  501C               	movf	(pad@i+1)^0,w,c
  1865  001B06  0A80               	xorlw	128
  1866  001B08  6E1A               	movwf	??_pad^0,c
  1867  001B0A  501E               	movf	(pad@w+1)^0,w,c
  1868  001B0C  0A80               	xorlw	128
  1869  001B0E  581A               	subwfb	??_pad^0,w,c
  1870  001B10  A0D8               	btfss	status,0,c
  1871  001B12  EF8D  F00D         	goto	u1751
  1872  001B16  EF8F  F00D         	goto	u1750
  1873  001B1A                     u1751:
  1874  001B1A  EF74  F00D         	goto	l2427
  1875  001B1E                     u1750:
  1876  001B1E                     
  1877                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  1878  001B1E  B06F               	btfsc	_flags^0,0,c
  1879  001B20  EF94  F00D         	goto	u1761
  1880  001B24  EF96  F00D         	goto	u1760
  1881  001B28                     u1761:
  1882  001B28  EFA0  F00D         	goto	l2435
  1883  001B2C                     u1760:
  1884  001B2C                     
  1885                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  1886  001B2C  C016  F00D         	movff	pad@buf,fputs@s
  1887  001B30  C017  F00E         	movff	pad@buf+1,fputs@s+1
  1888  001B34  C014  F00F         	movff	pad@fp,fputs@fp
  1889  001B38  C015  F010         	movff	pad@fp+1,fputs@fp+1
  1890  001B3C  EC1A  F00F         	call	_fputs	;wreg free
  1891  001B40                     l2435:
  1892                           
  1893                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  1894  001B40  C016  F004         	movff	pad@buf,strlen@s
  1895  001B44  C017  F005         	movff	pad@buf+1,strlen@s+1
  1896  001B48  EC9D  F00F         	call	_strlen	;wreg free
  1897  001B4C  501D               	movf	pad@w^0,w,c
  1898  001B4E  2404               	addwf	?_strlen^0,w,c
  1899  001B50  6E14               	movwf	?_pad^0,c
  1900  001B52  501E               	movf	(pad@w+1)^0,w,c
  1901  001B54  2005               	addwfc	(?_strlen+1)^0,w,c
  1902  001B56  6E15               	movwf	(?_pad+1)^0,c
  1903  001B58  0012               	return		;funcret
  1904  001B5A                     __end_of_pad:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _strlen *****************
  1908 ;; Defined at:
  1909 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/strlen.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  s               2    3[COMRAM] PTR const unsigned char 
  1912 ;;		 -> dbuf(32), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  a               2    5[COMRAM] PTR const unsigned char 
  1915 ;;		 -> dbuf(32), 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  2    3[COMRAM] unsigned int 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:        4 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    2
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_pad
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text6
  1940  001F3A                     __ptext6:
  1941                           	callstack 0
  1942  001F3A                     _strlen:
  1943                           	callstack 23
  1944  001F3A  C004  F006         	movff	strlen@s,strlen@a
  1945  001F3E  C005  F007         	movff	strlen@s+1,strlen@a+1
  1946  001F42  EFA5  F00F         	goto	l2331
  1947  001F46                     l2329:
  1948  001F46  4A04               	infsnz	strlen@s^0,f,c
  1949  001F48  2A05               	incf	(strlen@s+1)^0,f,c
  1950  001F4A                     l2331:
  1951  001F4A  C004  FFD9         	movff	strlen@s,fsr2l
  1952  001F4E  C005  FFDA         	movff	strlen@s+1,fsr2h
  1953  001F52  50DF               	movf	indf2,w,c
  1954  001F54  A4D8               	btfss	status,2,c
  1955  001F56  EFAF  F00F         	goto	u1591
  1956  001F5A  EFB1  F00F         	goto	u1590
  1957  001F5E                     u1591:
  1958  001F5E  EFA3  F00F         	goto	l2329
  1959  001F62                     u1590:
  1960  001F62  5006               	movf	strlen@a^0,w,c
  1961  001F64  5C04               	subwf	strlen@s^0,w,c
  1962  001F66  6E04               	movwf	?_strlen^0,c
  1963  001F68  5007               	movf	(strlen@a+1)^0,w,c
  1964  001F6A  5805               	subwfb	(strlen@s+1)^0,w,c
  1965  001F6C  6E05               	movwf	(?_strlen+1)^0,c
  1966  001F6E  0012               	return		;funcret
  1967  001F70                     __end_of_strlen:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _fputs *****************
  1971 ;; Defined at:
  1972 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputs.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  s               2   12[COMRAM] PTR const unsigned char 
  1975 ;;		 -> dbuf(32), 
  1976 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  1977 ;;		 -> sprintf@f(6), 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  i               2   17[COMRAM] int 
  1980 ;;  c               1   16[COMRAM] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  2   12[COMRAM] int 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;Total ram usage:        7 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    4
  1997 ;; This function calls:
  1998 ;;		_fputc
  1999 ;; This function is called by:
  2000 ;;		_pad
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text7
  2005  001E34                     __ptext7:
  2006                           	callstack 0
  2007  001E34                     _fputs:
  2008                           	callstack 21
  2009  001E34  0E00               	movlw	0
  2010  001E36  6E13               	movwf	(fputs@i+1)^0,c
  2011  001E38  0E00               	movlw	0
  2012  001E3A  6E12               	movwf	fputs@i^0,c
  2013  001E3C  EF2B  F00F         	goto	l2325
  2014  001E40                     l2321:
  2015  001E40  C011  F004         	movff	fputs@c,fputc@c
  2016  001E44  6A05               	clrf	(fputc@c+1)^0,c
  2017  001E46  C00F  F006         	movff	fputs@fp,fputc@fp
  2018  001E4A  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  2019  001E4E  ECE7  F00C         	call	_fputc	;wreg free
  2020  001E52  4A12               	infsnz	fputs@i^0,f,c
  2021  001E54  2A13               	incf	(fputs@i+1)^0,f,c
  2022  001E56                     l2325:
  2023  001E56  5012               	movf	fputs@i^0,w,c
  2024  001E58  240D               	addwf	fputs@s^0,w,c
  2025  001E5A  6ED9               	movwf	fsr2l,c
  2026  001E5C  5013               	movf	(fputs@i+1)^0,w,c
  2027  001E5E  200E               	addwfc	(fputs@s+1)^0,w,c
  2028  001E60  6EDA               	movwf	fsr2h,c
  2029  001E62  50DF               	movf	indf2,w,c
  2030  001E64  6E11               	movwf	fputs@c^0,c
  2031  001E66  5011               	movf	fputs@c^0,w,c
  2032  001E68  A4D8               	btfss	status,2,c
  2033  001E6A  EF39  F00F         	goto	u1581
  2034  001E6E  EF3B  F00F         	goto	u1580
  2035  001E72                     u1581:
  2036  001E72  EF20  F00F         	goto	l2321
  2037  001E76                     u1580:
  2038  001E76  0012               	return		;funcret
  2039  001E78                     __end_of_fputs:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _fputc *****************
  2043 ;; Defined at:
  2044 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputc.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  c               2    3[COMRAM] int 
  2047 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  2048 ;;		 -> sprintf@f(6), 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  2    3[COMRAM] int 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;Total ram usage:        9 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    3
  2067 ;; This function calls:
  2068 ;;		_putch
  2069 ;; This function is called by:
  2070 ;;		_pad
  2071 ;;		_vfpfcnvrt
  2072 ;;		_fputs
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text8
  2077  0019CE                     __ptext8:
  2078                           	callstack 0
  2079  0019CE                     _fputc:
  2080                           	callstack 24
  2081  0019CE  5006               	movf	fputc@fp^0,w,c
  2082  0019D0  1007               	iorwf	(fputc@fp+1)^0,w,c
  2083  0019D2  B4D8               	btfsc	status,2,c
  2084  0019D4  EFEE  F00C         	goto	u1541
  2085  0019D8  EFF0  F00C         	goto	u1540
  2086  0019DC                     u1541:
  2087  0019DC  EFF9  F00C         	goto	l2309
  2088  0019E0                     u1540:
  2089  0019E0  5006               	movf	fputc@fp^0,w,c
  2090  0019E2  1007               	iorwf	(fputc@fp+1)^0,w,c
  2091  0019E4  A4D8               	btfss	status,2,c
  2092  0019E6  EFF7  F00C         	goto	u1551
  2093  0019EA  EFF9  F00C         	goto	u1550
  2094  0019EE                     u1551:
  2095  0019EE  EFFE  F00C         	goto	l2311
  2096  0019F2                     u1550:
  2097  0019F2                     l2309:
  2098  0019F2  5004               	movf	fputc@c^0,w,c
  2099  0019F4  EC19  F010         	call	_putch
  2100  0019F8  EF4B  F00D         	goto	l990
  2101  0019FC                     l2311:
  2102  0019FC  EE20 F004          	lfsr	2,4
  2103  001A00  5006               	movf	fputc@fp^0,w,c
  2104  001A02  26D9               	addwf	fsr2l,f,c
  2105  001A04  5007               	movf	(fputc@fp+1)^0,w,c
  2106  001A06  22DA               	addwfc	fsr2h,f,c
  2107  001A08  50DE               	movf	postinc2,w,c
  2108  001A0A  10DE               	iorwf	postinc2,w,c
  2109  001A0C  B4D8               	btfsc	status,2,c
  2110  001A0E  EF0B  F00D         	goto	u1561
  2111  001A12  EF0D  F00D         	goto	u1560
  2112  001A16                     u1561:
  2113  001A16  EF28  F00D         	goto	l2315
  2114  001A1A                     u1560:
  2115  001A1A  EE20 F004          	lfsr	2,4
  2116  001A1E  5006               	movf	fputc@fp^0,w,c
  2117  001A20  26D9               	addwf	fsr2l,f,c
  2118  001A22  5007               	movf	(fputc@fp+1)^0,w,c
  2119  001A24  22DA               	addwfc	fsr2h,f,c
  2120  001A26  EE10 F002          	lfsr	1,2
  2121  001A2A  5006               	movf	fputc@fp^0,w,c
  2122  001A2C  26E1               	addwf	fsr1l,f,c
  2123  001A2E  5007               	movf	(fputc@fp+1)^0,w,c
  2124  001A30  22E2               	addwfc	fsr1h,f,c
  2125  001A32  50DE               	movf	postinc2,w,c
  2126  001A34  5CE6               	subwf	postinc1,w,c
  2127  001A36  50E6               	movf	postinc1,w,c
  2128  001A38  0A80               	xorlw	128
  2129  001A3A  6E0C               	movwf	(??_fputc+4)^0,c
  2130  001A3C  50DE               	movf	postinc2,w,c
  2131  001A3E  0A80               	xorlw	128
  2132  001A40  580C               	subwfb	(??_fputc+4)^0,w,c
  2133  001A42  B0D8               	btfsc	status,0,c
  2134  001A44  EF26  F00D         	goto	u1571
  2135  001A48  EF28  F00D         	goto	u1570
  2136  001A4C                     u1571:
  2137  001A4C  EF4B  F00D         	goto	l990
  2138  001A50                     u1570:
  2139  001A50                     l2315:
  2140  001A50  EE20 F002          	lfsr	2,2
  2141  001A54  5006               	movf	fputc@fp^0,w,c
  2142  001A56  26D9               	addwf	fsr2l,f,c
  2143  001A58  5007               	movf	(fputc@fp+1)^0,w,c
  2144  001A5A  22DA               	addwfc	fsr2h,f,c
  2145  001A5C  CFDE F008          	movff	postinc2,??_fputc
  2146  001A60  CFDD F009          	movff	postdec2,??_fputc+1
  2147  001A64  C006  FFD9         	movff	fputc@fp,fsr2l
  2148  001A68  C007  FFDA         	movff	fputc@fp+1,fsr2h
  2149  001A6C  CFDE F00A          	movff	postinc2,??_fputc+2
  2150  001A70  CFDD F00B          	movff	postdec2,??_fputc+3
  2151  001A74  5008               	movf	??_fputc^0,w,c
  2152  001A76  240A               	addwf	(??_fputc+2)^0,w,c
  2153  001A78  6ED9               	movwf	fsr2l,c
  2154  001A7A  5009               	movf	(??_fputc+1)^0,w,c
  2155  001A7C  200B               	addwfc	(??_fputc+3)^0,w,c
  2156  001A7E  6EDA               	movwf	fsr2h,c
  2157  001A80  C004  FFDF         	movff	fputc@c,indf2
  2158  001A84  EE20 F002          	lfsr	2,2
  2159  001A88  5006               	movf	fputc@fp^0,w,c
  2160  001A8A  26D9               	addwf	fsr2l,f,c
  2161  001A8C  5007               	movf	(fputc@fp+1)^0,w,c
  2162  001A8E  22DA               	addwfc	fsr2h,f,c
  2163  001A90  2ADE               	incf	postinc2,f,c
  2164  001A92  0E00               	movlw	0
  2165  001A94  22DD               	addwfc	postdec2,f,c
  2166  001A96                     l990:
  2167  001A96  0012               	return		;funcret
  2168  001A98                     __end_of_fputc:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _putch *****************
  2172 ;; Defined at:
  2173 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/putch.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  c               1    wreg     unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  c               1    0[COMRAM] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    2
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_fputc
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text9
  2202  002032                     __ptext9:
  2203                           	callstack 0
  2204  002032                     _putch:
  2205                           	callstack 24
  2206  002032  0012               	return		;funcret
  2207  002034                     __end_of_putch:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _abs *****************
  2211 ;; Defined at:
  2212 ;;		line 1 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/abs.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  a               2   21[COMRAM] int 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  2   21[COMRAM] int 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:        4 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    2
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_dtoa
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text10
  2241  001EFA                     __ptext10:
  2242                           	callstack 0
  2243  001EFA                     _abs:
  2244                           	callstack 24
  2245  001EFA  BE17               	btfsc	(abs@a+1)^0,7,c
  2246  001EFC  EF8A  F00F         	goto	u1770
  2247  001F00  5017               	movf	(abs@a+1)^0,w,c
  2248  001F02  E106               	bnz	u1771
  2249  001F04  0416               	decf	abs@a^0,w,c
  2250  001F06  B0D8               	btfsc	status,0,c
  2251  001F08  EF88  F00F         	goto	u1771
  2252  001F0C  EF8A  F00F         	goto	u1770
  2253  001F10                     u1771:
  2254  001F10  EF98  F00F         	goto	l975
  2255  001F14                     u1770:
  2256  001F14  C016  F018         	movff	abs@a,??_abs
  2257  001F18  C017  F019         	movff	abs@a+1,??_abs+1
  2258  001F1C  1E18               	comf	??_abs^0,f,c
  2259  001F1E  1E19               	comf	(??_abs+1)^0,f,c
  2260  001F20  4A18               	infsnz	??_abs^0,f,c
  2261  001F22  2A19               	incf	(??_abs+1)^0,f,c
  2262  001F24  C018  F016         	movff	??_abs,?_abs
  2263  001F28  C019  F017         	movff	??_abs+1,?_abs+1
  2264  001F2C  EF9C  F00F         	goto	l978
  2265  001F30                     l975:
  2266  001F30  C016  F016         	movff	abs@a,?_abs
  2267  001F34  C017  F017         	movff	abs@a+1,?_abs+1
  2268  001F38                     l978:
  2269  001F38  0012               	return		;funcret
  2270  001F3A                     __end_of_abs:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function ___aomod *****************
  2274 ;; Defined at:
  2275 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aomod.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  dividend        8    3[COMRAM] long long 
  2278 ;;  divisor         8   11[COMRAM] long long 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  sign            1   20[COMRAM] unsigned char 
  2281 ;;  counter         1   19[COMRAM] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  8    3[COMRAM] long long 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2291 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;Total ram usage:       18 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_dtoa
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text11
  2306  001620                     __ptext11:
  2307                           	callstack 0
  2308  001620                     ___aomod:
  2309                           	callstack 24
  2310  001620  0E00               	movlw	0
  2311  001622  6E15               	movwf	___aomod@sign^0,c
  2312  001624  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  2313  001626  EF19  F00B         	goto	u1670
  2314  00162A  EF17  F00B         	goto	u1671
  2315  00162E                     u1671:
  2316  00162E  EF2B  F00B         	goto	l2389
  2317  001632                     u1670:
  2318  001632  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  2319  001634  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  2320  001636  1E09               	comf	(___aomod@dividend+5)^0,f,c
  2321  001638  1E08               	comf	(___aomod@dividend+4)^0,f,c
  2322  00163A  1E07               	comf	(___aomod@dividend+3)^0,f,c
  2323  00163C  1E06               	comf	(___aomod@dividend+2)^0,f,c
  2324  00163E  1E05               	comf	(___aomod@dividend+1)^0,f,c
  2325  001640  6C04               	negf	___aomod@dividend^0,c
  2326  001642  0E00               	movlw	0
  2327  001644  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  2328  001646  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  2329  001648  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  2330  00164A  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  2331  00164C  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  2332  00164E  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  2333  001650  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  2334  001652  0E01               	movlw	1
  2335  001654  6E15               	movwf	___aomod@sign^0,c
  2336  001656                     l2389:
  2337  001656  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  2338  001658  EF32  F00B         	goto	u1680
  2339  00165C  EF30  F00B         	goto	u1681
  2340  001660                     u1681:
  2341  001660  EF42  F00B         	goto	l2393
  2342  001664                     u1680:
  2343  001664  1E13               	comf	(___aomod@divisor+7)^0,f,c
  2344  001666  1E12               	comf	(___aomod@divisor+6)^0,f,c
  2345  001668  1E11               	comf	(___aomod@divisor+5)^0,f,c
  2346  00166A  1E10               	comf	(___aomod@divisor+4)^0,f,c
  2347  00166C  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  2348  00166E  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  2349  001670  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  2350  001672  6C0C               	negf	___aomod@divisor^0,c
  2351  001674  0E00               	movlw	0
  2352  001676  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  2353  001678  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  2354  00167A  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  2355  00167C  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  2356  00167E  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  2357  001680  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  2358  001682  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  2359  001684                     l2393:
  2360  001684  500C               	movf	___aomod@divisor^0,w,c
  2361  001686  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  2362  001688  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  2363  00168A  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  2364  00168C  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  2365  00168E  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  2366  001690  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  2367  001692  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  2368  001694  B4D8               	btfsc	status,2,c
  2369  001696  EF4F  F00B         	goto	u1691
  2370  00169A  EF51  F00B         	goto	u1690
  2371  00169E                     u1691:
  2372  00169E  EF99  F00B         	goto	l2409
  2373  0016A2                     u1690:
  2374  0016A2  0E01               	movlw	1
  2375  0016A4  6E14               	movwf	___aomod@counter^0,c
  2376  0016A6  EF5F  F00B         	goto	l2399
  2377  0016AA                     l2397:
  2378  0016AA  90D8               	bcf	status,0,c
  2379  0016AC  360C               	rlcf	___aomod@divisor^0,f,c
  2380  0016AE  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  2381  0016B0  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  2382  0016B2  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  2383  0016B4  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  2384  0016B6  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  2385  0016B8  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  2386  0016BA  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  2387  0016BC  2A14               	incf	___aomod@counter^0,f,c
  2388  0016BE                     l2399:
  2389  0016BE  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  2390  0016C0  EF64  F00B         	goto	u1701
  2391  0016C4  EF66  F00B         	goto	u1700
  2392  0016C8                     u1701:
  2393  0016C8  EF55  F00B         	goto	l2397
  2394  0016CC                     u1700:
  2395  0016CC                     l2401:
  2396  0016CC  500C               	movf	___aomod@divisor^0,w,c
  2397  0016CE  5C04               	subwf	___aomod@dividend^0,w,c
  2398  0016D0  500D               	movf	(___aomod@divisor+1)^0,w,c
  2399  0016D2  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  2400  0016D4  500E               	movf	(___aomod@divisor+2)^0,w,c
  2401  0016D6  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  2402  0016D8  500F               	movf	(___aomod@divisor+3)^0,w,c
  2403  0016DA  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  2404  0016DC  5010               	movf	(___aomod@divisor+4)^0,w,c
  2405  0016DE  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  2406  0016E0  5011               	movf	(___aomod@divisor+5)^0,w,c
  2407  0016E2  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  2408  0016E4  5012               	movf	(___aomod@divisor+6)^0,w,c
  2409  0016E6  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  2410  0016E8  5013               	movf	(___aomod@divisor+7)^0,w,c
  2411  0016EA  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  2412  0016EC  A0D8               	btfss	status,0,c
  2413  0016EE  EF7B  F00B         	goto	u1711
  2414  0016F2  EF7D  F00B         	goto	u1710
  2415  0016F6                     u1711:
  2416  0016F6  EF8D  F00B         	goto	l2405
  2417  0016FA                     u1710:
  2418  0016FA  500C               	movf	___aomod@divisor^0,w,c
  2419  0016FC  5E04               	subwf	___aomod@dividend^0,f,c
  2420  0016FE  500D               	movf	(___aomod@divisor+1)^0,w,c
  2421  001700  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  2422  001702  500E               	movf	(___aomod@divisor+2)^0,w,c
  2423  001704  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  2424  001706  500F               	movf	(___aomod@divisor+3)^0,w,c
  2425  001708  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  2426  00170A  5010               	movf	(___aomod@divisor+4)^0,w,c
  2427  00170C  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  2428  00170E  5011               	movf	(___aomod@divisor+5)^0,w,c
  2429  001710  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  2430  001712  5012               	movf	(___aomod@divisor+6)^0,w,c
  2431  001714  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  2432  001716  5013               	movf	(___aomod@divisor+7)^0,w,c
  2433  001718  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  2434  00171A                     l2405:
  2435  00171A  90D8               	bcf	status,0,c
  2436  00171C  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  2437  00171E  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  2438  001720  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  2439  001722  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  2440  001724  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  2441  001726  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  2442  001728  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  2443  00172A  320C               	rrcf	___aomod@divisor^0,f,c
  2444  00172C  2E14               	decfsz	___aomod@counter^0,f,c
  2445  00172E  EF66  F00B         	goto	l2401
  2446  001732                     l2409:
  2447  001732  5015               	movf	___aomod@sign^0,w,c
  2448  001734  B4D8               	btfsc	status,2,c
  2449  001736  EF9F  F00B         	goto	u1721
  2450  00173A  EFA1  F00B         	goto	u1720
  2451  00173E                     u1721:
  2452  00173E  EFB1  F00B         	goto	l2413
  2453  001742                     u1720:
  2454  001742  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  2455  001744  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  2456  001746  1E09               	comf	(___aomod@dividend+5)^0,f,c
  2457  001748  1E08               	comf	(___aomod@dividend+4)^0,f,c
  2458  00174A  1E07               	comf	(___aomod@dividend+3)^0,f,c
  2459  00174C  1E06               	comf	(___aomod@dividend+2)^0,f,c
  2460  00174E  1E05               	comf	(___aomod@dividend+1)^0,f,c
  2461  001750  6C04               	negf	___aomod@dividend^0,c
  2462  001752  0E00               	movlw	0
  2463  001754  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  2464  001756  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  2465  001758  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  2466  00175A  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  2467  00175C  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  2468  00175E  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  2469  001760  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  2470  001762                     l2413:
  2471  001762  C004  F004         	movff	___aomod@dividend,?___aomod
  2472  001766  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  2473  00176A  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  2474  00176E  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  2475  001772  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  2476  001776  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  2477  00177A  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  2478  00177E  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  2479  001782  0012               	return		;funcret
  2480  001784                     __end_of___aomod:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function ___aodiv *****************
  2484 ;; Defined at:
  2485 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aodiv.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  dividend        8    3[COMRAM] long long 
  2488 ;;  divisor         8   11[COMRAM] long long 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  quotient        8   21[COMRAM] long long 
  2491 ;;  sign            1   20[COMRAM] unsigned char 
  2492 ;;  counter         1   19[COMRAM] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  8    3[COMRAM] long long 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:       26 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    2
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_dtoa
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text12
  2517  001498                     __ptext12:
  2518                           	callstack 0
  2519  001498                     ___aodiv:
  2520                           	callstack 24
  2521  001498  0E00               	movlw	0
  2522  00149A  6E15               	movwf	___aodiv@sign^0,c
  2523  00149C  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  2524  00149E  EF55  F00A         	goto	u1600
  2525  0014A2  EF53  F00A         	goto	u1601
  2526  0014A6                     u1601:
  2527  0014A6  EF67  F00A         	goto	l2345
  2528  0014AA                     u1600:
  2529  0014AA  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  2530  0014AC  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  2531  0014AE  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  2532  0014B0  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  2533  0014B2  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  2534  0014B4  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  2535  0014B6  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  2536  0014B8  6C0C               	negf	___aodiv@divisor^0,c
  2537  0014BA  0E00               	movlw	0
  2538  0014BC  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  2539  0014BE  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  2540  0014C0  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  2541  0014C2  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  2542  0014C4  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  2543  0014C6  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  2544  0014C8  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  2545  0014CA  0E01               	movlw	1
  2546  0014CC  6E15               	movwf	___aodiv@sign^0,c
  2547  0014CE                     l2345:
  2548  0014CE  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  2549  0014D0  EF6E  F00A         	goto	u1610
  2550  0014D4  EF6C  F00A         	goto	u1611
  2551  0014D8                     u1611:
  2552  0014D8  EF80  F00A         	goto	l2351
  2553  0014DC                     u1610:
  2554  0014DC  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  2555  0014DE  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  2556  0014E0  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  2557  0014E2  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  2558  0014E4  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  2559  0014E6  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  2560  0014E8  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  2561  0014EA  6C04               	negf	___aodiv@dividend^0,c
  2562  0014EC  0E00               	movlw	0
  2563  0014EE  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  2564  0014F0  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  2565  0014F2  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  2566  0014F4  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  2567  0014F6  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  2568  0014F8  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  2569  0014FA  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  2570  0014FC  0E01               	movlw	1
  2571  0014FE  1A15               	xorwf	___aodiv@sign^0,f,c
  2572  001500                     l2351:
  2573  001500  EE20  F016         	lfsr	2,___aodiv@quotient
  2574  001504  0E07               	movlw	7
  2575  001506                     u1621:
  2576  001506  6ADE               	clrf	postinc2,c
  2577  001508  06E8               	decf	wreg,f,c
  2578  00150A  E2FD               	bc	u1621
  2579  00150C  500C               	movf	___aodiv@divisor^0,w,c
  2580  00150E  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  2581  001510  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  2582  001512  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  2583  001514  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  2584  001516  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  2585  001518  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  2586  00151A  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  2587  00151C  B4D8               	btfsc	status,2,c
  2588  00151E  EF93  F00A         	goto	u1631
  2589  001522  EF95  F00A         	goto	u1630
  2590  001526                     u1631:
  2591  001526  EFE7  F00A         	goto	l2373
  2592  00152A                     u1630:
  2593  00152A  0E01               	movlw	1
  2594  00152C  6E14               	movwf	___aodiv@counter^0,c
  2595  00152E  EFA3  F00A         	goto	l2359
  2596  001532                     l2357:
  2597  001532  90D8               	bcf	status,0,c
  2598  001534  360C               	rlcf	___aodiv@divisor^0,f,c
  2599  001536  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  2600  001538  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  2601  00153A  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  2602  00153C  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  2603  00153E  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  2604  001540  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  2605  001542  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  2606  001544  2A14               	incf	___aodiv@counter^0,f,c
  2607  001546                     l2359:
  2608  001546  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  2609  001548  EFA8  F00A         	goto	u1641
  2610  00154C  EFAA  F00A         	goto	u1640
  2611  001550                     u1641:
  2612  001550  EF99  F00A         	goto	l2357
  2613  001554                     u1640:
  2614  001554                     l2361:
  2615  001554  90D8               	bcf	status,0,c
  2616  001556  3616               	rlcf	___aodiv@quotient^0,f,c
  2617  001558  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  2618  00155A  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  2619  00155C  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  2620  00155E  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  2621  001560  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  2622  001562  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  2623  001564  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  2624  001566  500C               	movf	___aodiv@divisor^0,w,c
  2625  001568  5C04               	subwf	___aodiv@dividend^0,w,c
  2626  00156A  500D               	movf	(___aodiv@divisor+1)^0,w,c
  2627  00156C  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  2628  00156E  500E               	movf	(___aodiv@divisor+2)^0,w,c
  2629  001570  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  2630  001572  500F               	movf	(___aodiv@divisor+3)^0,w,c
  2631  001574  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  2632  001576  5010               	movf	(___aodiv@divisor+4)^0,w,c
  2633  001578  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  2634  00157A  5011               	movf	(___aodiv@divisor+5)^0,w,c
  2635  00157C  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  2636  00157E  5012               	movf	(___aodiv@divisor+6)^0,w,c
  2637  001580  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  2638  001582  5013               	movf	(___aodiv@divisor+7)^0,w,c
  2639  001584  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  2640  001586  A0D8               	btfss	status,0,c
  2641  001588  EFC8  F00A         	goto	u1651
  2642  00158C  EFCA  F00A         	goto	u1650
  2643  001590                     u1651:
  2644  001590  EFDB  F00A         	goto	l2369
  2645  001594                     u1650:
  2646  001594  500C               	movf	___aodiv@divisor^0,w,c
  2647  001596  5E04               	subwf	___aodiv@dividend^0,f,c
  2648  001598  500D               	movf	(___aodiv@divisor+1)^0,w,c
  2649  00159A  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  2650  00159C  500E               	movf	(___aodiv@divisor+2)^0,w,c
  2651  00159E  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  2652  0015A0  500F               	movf	(___aodiv@divisor+3)^0,w,c
  2653  0015A2  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  2654  0015A4  5010               	movf	(___aodiv@divisor+4)^0,w,c
  2655  0015A6  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  2656  0015A8  5011               	movf	(___aodiv@divisor+5)^0,w,c
  2657  0015AA  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  2658  0015AC  5012               	movf	(___aodiv@divisor+6)^0,w,c
  2659  0015AE  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  2660  0015B0  5013               	movf	(___aodiv@divisor+7)^0,w,c
  2661  0015B2  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  2662  0015B4  8016               	bsf	___aodiv@quotient^0,0,c
  2663  0015B6                     l2369:
  2664  0015B6  90D8               	bcf	status,0,c
  2665  0015B8  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  2666  0015BA  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  2667  0015BC  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  2668  0015BE  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  2669  0015C0  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  2670  0015C2  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  2671  0015C4  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  2672  0015C6  320C               	rrcf	___aodiv@divisor^0,f,c
  2673  0015C8  2E14               	decfsz	___aodiv@counter^0,f,c
  2674  0015CA  EFAA  F00A         	goto	l2361
  2675  0015CE                     l2373:
  2676  0015CE  5015               	movf	___aodiv@sign^0,w,c
  2677  0015D0  B4D8               	btfsc	status,2,c
  2678  0015D2  EFED  F00A         	goto	u1661
  2679  0015D6  EFEF  F00A         	goto	u1660
  2680  0015DA                     u1661:
  2681  0015DA  EFFF  F00A         	goto	l2377
  2682  0015DE                     u1660:
  2683  0015DE  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  2684  0015E0  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  2685  0015E2  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  2686  0015E4  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  2687  0015E6  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  2688  0015E8  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  2689  0015EA  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  2690  0015EC  6C16               	negf	___aodiv@quotient^0,c
  2691  0015EE  0E00               	movlw	0
  2692  0015F0  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  2693  0015F2  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  2694  0015F4  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  2695  0015F6  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  2696  0015F8  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  2697  0015FA  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  2698  0015FC  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  2699  0015FE                     l2377:
  2700  0015FE  C016  F004         	movff	___aodiv@quotient,?___aodiv
  2701  001602  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  2702  001606  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  2703  00160A  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  2704  00160E  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  2705  001612  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  2706  001616  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  2707  00161A  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  2708  00161E  0012               	return		;funcret
  2709  001620                     __end_of___aodiv:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _LCDStr *****************
  2713 ;; Defined at:
  2714 ;;		line 105 in file "./lcd.h"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  str             2    7[COMRAM] PTR const unsigned char 
  2717 ;;		 -> main@arr(5), 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  i               1    9[COMRAM] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;Total ram usage:        3 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    4
  2736 ;; This function calls:
  2737 ;;		_LCDDat
  2738 ;;		_LCDGoto
  2739 ;; This function is called by:
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text13
  2745  001B5A                     __ptext13:
  2746                           	callstack 0
  2747  001B5A                     _LCDStr:
  2748                           	callstack 26
  2749  001B5A                     
  2750                           ;./lcd.h: 106:   for (unsigned char i = 0; str[i] != 0; i++) {
  2751  001B5A  0E00               	movlw	0
  2752  001B5C  6E0A               	movwf	LCDStr@i^0,c
  2753  001B5E  EFD8  F00D         	goto	l2635
  2754  001B62                     l2617:
  2755                           
  2756                           ;./lcd.h: 107:     LCDDat(str[i]);
  2757  001B62  500A               	movf	LCDStr@i^0,w,c
  2758  001B64  2408               	addwf	LCDStr@str^0,w,c
  2759  001B66  6ED9               	movwf	fsr2l,c
  2760  001B68  0E00               	movlw	0
  2761  001B6A  2009               	addwfc	(LCDStr@str+1)^0,w,c
  2762  001B6C  6EDA               	movwf	fsr2h,c
  2763  001B6E  50DF               	movf	indf2,w,c
  2764  001B70  ECD1  F00F         	call	_LCDDat
  2765  001B74                     
  2766                           ;./lcd.h: 108:     lcd_x ++;
  2767  001B74  2A75               	incf	_lcd_x^0,f,c
  2768  001B76                     
  2769                           ;./lcd.h: 109:     if(lcd_x == 17) {
  2770  001B76  0E11               	movlw	17
  2771  001B78  1875               	xorwf	_lcd_x^0,w,c
  2772  001B7A  A4D8               	btfss	status,2,c
  2773  001B7C  EFC2  F00D         	goto	u2021
  2774  001B80  EFC4  F00D         	goto	u2020
  2775  001B84                     u2021:
  2776  001B84  EFD7  F00D         	goto	l2633
  2777  001B88                     u2020:
  2778  001B88                     
  2779                           ;./lcd.h: 110:       lcd_x = 1;
  2780  001B88  0E01               	movlw	1
  2781  001B8A  6E75               	movwf	_lcd_x^0,c
  2782  001B8C                     
  2783                           ;./lcd.h: 111:       lcd_y++;
  2784  001B8C  2A74               	incf	_lcd_y^0,f,c
  2785  001B8E                     
  2786                           ;./lcd.h: 112:       if (lcd_y == 5) {
  2787  001B8E  0E05               	movlw	5
  2788  001B90  1874               	xorwf	_lcd_y^0,w,c
  2789  001B92  A4D8               	btfss	status,2,c
  2790  001B94  EFCE  F00D         	goto	u2031
  2791  001B98  EFD0  F00D         	goto	u2030
  2792  001B9C                     u2031:
  2793  001B9C  EFD2  F00D         	goto	l2631
  2794  001BA0                     u2030:
  2795  001BA0                     
  2796                           ;./lcd.h: 113:          lcd_y = 1;
  2797  001BA0  0E01               	movlw	1
  2798  001BA2  6E74               	movwf	_lcd_y^0,c
  2799  001BA4                     l2631:
  2800                           
  2801                           ;./lcd.h: 115:       LCDGoto(lcd_x, lcd_y);
  2802  001BA4  C074  F006         	movff	_lcd_y,LCDGoto@p_1
  2803  001BA8  5075               	movf	_lcd_x^0,w,c
  2804  001BAA  ECE7  F00D         	call	_LCDGoto
  2805  001BAE                     l2633:
  2806                           
  2807                           ;./lcd.h: 117:   }
  2808  001BAE  2A0A               	incf	LCDStr@i^0,f,c
  2809  001BB0                     l2635:
  2810  001BB0  500A               	movf	LCDStr@i^0,w,c
  2811  001BB2  2408               	addwf	LCDStr@str^0,w,c
  2812  001BB4  6ED9               	movwf	fsr2l,c
  2813  001BB6  0E00               	movlw	0
  2814  001BB8  2009               	addwfc	(LCDStr@str+1)^0,w,c
  2815  001BBA  6EDA               	movwf	fsr2h,c
  2816  001BBC  50DF               	movf	indf2,w,c
  2817  001BBE  A4D8               	btfss	status,2,c
  2818  001BC0  EFE4  F00D         	goto	u2041
  2819  001BC4  EFE6  F00D         	goto	u2040
  2820  001BC8                     u2041:
  2821  001BC8  EFB1  F00D         	goto	l2617
  2822  001BCC                     u2040:
  2823  001BCC  0012               	return		;funcret
  2824  001BCE                     __end_of_LCDStr:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function _InitLCD *****************
  2828 ;; Defined at:
  2829 ;;		line 122 in file "./lcd.h"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    3
  2850 ;; This function calls:
  2851 ;;		_LCDCmd
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text14
  2858  001F70                     __ptext14:
  2859                           	callstack 0
  2860  001F70                     _InitLCD:
  2861                           	callstack 27
  2862  001F70                     
  2863                           ;./lcd.h: 123:   TRISEbits.RE1 = 0;
  2864  001F70  9296               	bcf	150,1,c	;volatile
  2865                           
  2866                           ;./lcd.h: 124:   TRISEbits.RE2 = 0;
  2867  001F72  9496               	bcf	150,2,c	;volatile
  2868  001F74                     
  2869                           ;./lcd.h: 125:   TRISD = 0;
  2870  001F74  0E00               	movlw	0
  2871  001F76  6E95               	movwf	149,c	;volatile
  2872  001F78                     
  2873                           ;./lcd.h: 127:   PORTEbits.RE1 = 0;
  2874  001F78  9284               	bcf	132,1,c	;volatile
  2875  001F7A                     
  2876                           ;./lcd.h: 128:   PORTEbits.RE2 = 0;
  2877  001F7A  9484               	bcf	132,2,c	;volatile
  2878  001F7C                     
  2879                           ;./lcd.h: 129:   LCDCmd(0x38);
  2880  001F7C  0E38               	movlw	56
  2881  001F7E  ECEA  F00F         	call	_LCDCmd
  2882  001F82                     
  2883                           ;./lcd.h: 130:   LCDCmd(0x08);
  2884  001F82  0E08               	movlw	8
  2885  001F84  ECEA  F00F         	call	_LCDCmd
  2886  001F88                     
  2887                           ;./lcd.h: 131:   LCDCmd(0x0C);
  2888  001F88  0E0C               	movlw	12
  2889  001F8A  ECEA  F00F         	call	_LCDCmd
  2890  001F8E                     
  2891                           ;./lcd.h: 132:   LCDCmd(0x06);
  2892  001F8E  0E06               	movlw	6
  2893  001F90  ECEA  F00F         	call	_LCDCmd
  2894  001F94                     
  2895                           ;./lcd.h: 133:   LCDCmd(0x01);
  2896  001F94  0E01               	movlw	1
  2897  001F96  ECEA  F00F         	call	_LCDCmd
  2898  001F9A                     
  2899                           ;./lcd.h: 134:   LCDCmd(0x80);
  2900  001F9A  0E80               	movlw	128
  2901  001F9C  ECEA  F00F         	call	_LCDCmd
  2902  001FA0  0012               	return		;funcret
  2903  001FA2                     __end_of_InitLCD:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _InitInterrupts *****************
  2907 ;; Defined at:
  2908 ;;		line 132 in file "main.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    2
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text15
  2937  001D1E                     __ptext15:
  2938                           	callstack 0
  2939  001D1E                     _InitInterrupts:
  2940                           	callstack 28
  2941  001D1E                     
  2942                           ;main.c: 133:     a = b = c = 0;
  2943  001D1E  0E00               	movlw	0
  2944  001D20  0100               	movlb	0	; () banked
  2945  001D22  6FD7               	movwf	(_c+1)& (0+255),b
  2946  001D24  0E00               	movlw	0
  2947  001D26  6FD6               	movwf	_c& (0+255),b
  2948  001D28  C0D6  F0D8         	movff	_c,_b
  2949  001D2C  C0D7  F0D9         	movff	_c+1,_b+1
  2950  001D30  C0D8  F071         	movff	_b,_a
  2951  001D34  C0D9  F072         	movff	_b+1,_a+1
  2952                           
  2953                           ;main.c: 135:     ADCON1 = 0b0111;
  2954  001D38  0E07               	movlw	7
  2955  001D3A  6EC1               	movwf	193,c	;volatile
  2956  001D3C                     
  2957                           ; BSR set to: 0
  2958                           ;main.c: 136:     INTCON2bits.RBPU = 0;
  2959  001D3C  9EF1               	bcf	241,7,c	;volatile
  2960                           
  2961                           ;main.c: 137:     PORTB = 0;
  2962  001D3E  0E00               	movlw	0
  2963  001D40  6E81               	movwf	129,c	;volatile
  2964                           
  2965                           ;main.c: 139:     T3CON = 0b10000001;
  2966  001D42  0E81               	movlw	129
  2967  001D44  6EB1               	movwf	177,c	;volatile
  2968  001D46                     
  2969                           ; BSR set to: 0
  2970                           ;main.c: 140:     TRISB = 0xff;
  2971  001D46  6893               	setf	147,c	;volatile
  2972                           
  2973                           ;main.c: 141:     TRISA = 0x0;
  2974  001D48  0E00               	movlw	0
  2975  001D4A  6E92               	movwf	146,c	;volatile
  2976                           
  2977                           ;main.c: 142:     TRISD = 0x0;
  2978  001D4C  0E00               	movlw	0
  2979  001D4E  6E95               	movwf	149,c	;volatile
  2980                           
  2981                           ;main.c: 144:     T0CON = 0b00010011;
  2982  001D50  0E13               	movlw	19
  2983  001D52  6ED5               	movwf	213,c	;volatile
  2984                           
  2985                           ;main.c: 145:     acceptInterrupts = 0;
  2986  001D54  0E00               	movlw	0
  2987  001D56  6E73               	movwf	_acceptInterrupts^0,c
  2988                           
  2989                           ;main.c: 146:     TMR0L = 0;
  2990  001D58  0E00               	movlw	0
  2991  001D5A  6ED6               	movwf	214,c	;volatile
  2992                           
  2993                           ;main.c: 147:     TMR0H = 0xFB;
  2994  001D5C  0EFB               	movlw	251
  2995  001D5E  6ED7               	movwf	215,c	;volatile
  2996  001D60                     
  2997                           ; BSR set to: 0
  2998                           ;main.c: 148:     T0CONbits.TMR0ON = 1;
  2999  001D60  8ED5               	bsf	213,7,c	;volatile
  3000  001D62                     
  3001                           ; BSR set to: 0
  3002                           ;main.c: 150:     INTCONbits.PEIE = 1;
  3003  001D62  8CF2               	bsf	242,6,c	;volatile
  3004  001D64                     
  3005                           ; BSR set to: 0
  3006                           ;main.c: 151:     INTCONbits.INT0E = 1;
  3007  001D64  88F2               	bsf	242,4,c	;volatile
  3008  001D66                     
  3009                           ; BSR set to: 0
  3010                           ;main.c: 152:     INTCONbits.RBIE = 1;
  3011  001D66  86F2               	bsf	242,3,c	;volatile
  3012  001D68                     
  3013                           ; BSR set to: 0
  3014                           ;main.c: 153:     INTCONbits.T0IE = 1;
  3015  001D68  8AF2               	bsf	242,5,c	;volatile
  3016  001D6A                     
  3017                           ; BSR set to: 0
  3018                           ;main.c: 154:     INTCON3bits.INT1E = 1;
  3019  001D6A  86F0               	bsf	240,3,c	;volatile
  3020  001D6C                     
  3021                           ; BSR set to: 0
  3022                           ;main.c: 156:     INTCON2bits.INTEDG0 = 0;
  3023  001D6C  9CF1               	bcf	241,6,c	;volatile
  3024  001D6E                     
  3025                           ; BSR set to: 0
  3026                           ;main.c: 157:     INTCON2bits.INTEDG1 = 0;
  3027  001D6E  9AF1               	bcf	241,5,c	;volatile
  3028  001D70                     
  3029                           ; BSR set to: 0
  3030                           ;main.c: 160:     INTCONbits.RBIF = 0;
  3031  001D70  90F2               	bcf	242,0,c	;volatile
  3032  001D72                     
  3033                           ; BSR set to: 0
  3034                           ;main.c: 161:     INTCONbits.INT0IF = 0;
  3035  001D72  92F2               	bcf	242,1,c	;volatile
  3036  001D74                     
  3037                           ; BSR set to: 0
  3038                           ;main.c: 162:     INTCON3bits.INT1IF = 0;
  3039  001D74  90F0               	bcf	240,0,c	;volatile
  3040  001D76                     
  3041                           ; BSR set to: 0
  3042                           ;main.c: 165:     INTCONbits.RBIE = 0;
  3043  001D76  96F2               	bcf	242,3,c	;volatile
  3044  001D78                     
  3045                           ; BSR set to: 0
  3046                           ;main.c: 166:     INTCONbits.GIE = 1;
  3047  001D78  8EF2               	bsf	242,7,c	;volatile
  3048  001D7A                     
  3049                           ; BSR set to: 0
  3050                           ;main.c: 167:     PORTB = PORTB;
  3051  001D7A  CF81 FF81          	movff	3969,3969	;volatile
  3052  001D7E                     
  3053                           ; BSR set to: 0
  3054                           ;main.c: 168:     INTCONbits.RBIF = 0;
  3055  001D7E  90F2               	bcf	242,0,c	;volatile
  3056  001D80                     
  3057                           ; BSR set to: 0
  3058                           ;main.c: 170:     INTCONbits.RBIE = 1;
  3059  001D80  86F2               	bsf	242,3,c	;volatile
  3060  001D82                     
  3061                           ; BSR set to: 0
  3062  001D82  0012               	return		;funcret
  3063  001D84                     __end_of_InitInterrupts:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _AddCustomCharacters *****************
  3067 ;; Defined at:
  3068 ;;		line 159 in file "./lcd.h"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    5
  3089 ;; This function calls:
  3090 ;;		_LCDAddSpecialCharacter
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text16
  3097  001C42                     __ptext16:
  3098                           	callstack 0
  3099  001C42                     _AddCustomCharacters:
  3100                           	callstack 25
  3101  001C42                     
  3102                           ;./lcd.h: 160:     LCDAddSpecialCharacter(0, teamA_player);
  3103  001C42  0EB8               	movlw	low _teamA_player
  3104  001C44  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3105  001C46  0E00               	movlw	high _teamA_player
  3106  001C48  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3107  001C4A  0E00               	movlw	0
  3108  001C4C  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3109                           
  3110                           ;./lcd.h: 161:     LCDAddSpecialCharacter(1, teamB_player);
  3111  001C50  0EB0               	movlw	low _teamB_player
  3112  001C52  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3113  001C54  0E00               	movlw	high _teamB_player
  3114  001C56  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3115  001C58  0E01               	movlw	1
  3116  001C5A  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3117                           
  3118                           ;./lcd.h: 162:     LCDAddSpecialCharacter(2, selected_teamA_player);
  3119  001C5E  0EA8               	movlw	low _selected_teamA_player
  3120  001C60  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3121  001C62  0E00               	movlw	high _selected_teamA_player
  3122  001C64  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3123  001C66  0E02               	movlw	2
  3124  001C68  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3125                           
  3126                           ;./lcd.h: 163:     LCDAddSpecialCharacter(3, selected_teamB_player);
  3127  001C6C  0EA0               	movlw	low _selected_teamB_player
  3128  001C6E  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3129  001C70  0E00               	movlw	high _selected_teamB_player
  3130  001C72  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3131  001C74  0E03               	movlw	3
  3132  001C76  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3133                           
  3134                           ;./lcd.h: 164:     LCDAddSpecialCharacter(4, selected_teamA_player_with_frisbee);
  3135  001C7A  0E98               	movlw	low _selected_teamA_player_with_frisbee
  3136  001C7C  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3137  001C7E  0E00               	movlw	high _selected_teamA_player_with_frisbee
  3138  001C80  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3139  001C82  0E04               	movlw	4
  3140  001C84  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3141                           
  3142                           ;./lcd.h: 165:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
  3143  001C88  0E90               	movlw	low _selected_teamB_player_with_frisbee
  3144  001C8A  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3145  001C8C  0E00               	movlw	high _selected_teamB_player_with_frisbee
  3146  001C8E  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3147  001C90  0E05               	movlw	5
  3148  001C92  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3149                           
  3150                           ;./lcd.h: 166:     LCDAddSpecialCharacter(6, frisbeeChar);
  3151  001C96  0E88               	movlw	low _frisbeeChar
  3152  001C98  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3153  001C9A  0E00               	movlw	high _frisbeeChar
  3154  001C9C  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3155  001C9E  0E06               	movlw	6
  3156  001CA0  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3157                           
  3158                           ;./lcd.h: 167:     LCDAddSpecialCharacter(7, frisbee_target);
  3159  001CA4  0E80               	movlw	low _frisbee_target
  3160  001CA6  6E08               	movwf	LCDAddSpecialCharacter@data^0,c
  3161  001CA8  0E00               	movlw	high _frisbee_target
  3162  001CAA  6E09               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
  3163  001CAC  0E07               	movlw	7
  3164  001CAE  EC3C  F00F         	call	_LCDAddSpecialCharacter
  3165  001CB2  0012               	return		;funcret
  3166  001CB4                     __end_of_AddCustomCharacters:
  3167                           	callstack 0
  3168                           
  3169 ;; *************** function _LCDAddSpecialCharacter *****************
  3170 ;; Defined at:
  3171 ;;		line 143 in file "./lcd.h"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  character_in    1    wreg     unsigned char 
  3174 ;;  data            2    7[COMRAM] PTR unsigned char 
  3175 ;;		 -> frisbee_target(8), frisbeeChar(8), selected_teamB_player_with_frisbee(8), selected_teamA_player_with_frisbee(8),
      + 
  3176 ;;		 -> selected_teamB_player(8), selected_teamA_player(8), teamB_player(8), teamA_player(8), 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  character_in    1    9[COMRAM] unsigned char 
  3179 ;;  i               1   10[COMRAM] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;Total ram usage:        4 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    4
  3196 ;; This function calls:
  3197 ;;		_LCDCmd
  3198 ;;		_LCDDat
  3199 ;;		_LCDGoto
  3200 ;; This function is called by:
  3201 ;;		_AddCustomCharacters
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text17
  3206  001E78                     __ptext17:
  3207                           	callstack 0
  3208  001E78                     _LCDAddSpecialCharacter:
  3209                           	callstack 25
  3210                           
  3211                           ;incstack = 0
  3212                           ;LCDAddSpecialCharacter@character_index stored from wreg
  3213  001E78  6E0A               	movwf	LCDAddSpecialCharacter@character_index^0,c
  3214  001E7A                     
  3215                           ;./lcd.h: 149:     LCDCmd(0b01000000+(character_index*8));
  3216  001E7A  500A               	movf	LCDAddSpecialCharacter@character_index^0,w,c
  3217  001E7C  0D08               	mullw	8
  3218  001E7E  50F3               	movf	243,w,c
  3219  001E80  0F40               	addlw	64
  3220  001E82  ECEA  F00F         	call	_LCDCmd
  3221  001E86                     
  3222                           ;./lcd.h: 150:     for(byte i=0; i < 8; i++) {
  3223  001E86  0E00               	movlw	0
  3224  001E88  6E0B               	movwf	LCDAddSpecialCharacter@i^0,c
  3225  001E8A                     l2599:
  3226                           
  3227                           ;./lcd.h: 151:         LCDDat(data[i]);
  3228  001E8A  500B               	movf	LCDAddSpecialCharacter@i^0,w,c
  3229  001E8C  2408               	addwf	LCDAddSpecialCharacter@data^0,w,c
  3230  001E8E  6ED9               	movwf	fsr2l,c
  3231  001E90  0E00               	movlw	0
  3232  001E92  2009               	addwfc	(LCDAddSpecialCharacter@data+1)^0,w,c
  3233  001E94  6EDA               	movwf	fsr2h,c
  3234  001E96  50DF               	movf	indf2,w,c
  3235  001E98  ECD1  F00F         	call	_LCDDat
  3236  001E9C                     
  3237                           ;./lcd.h: 152:     }
  3238  001E9C  2A0B               	incf	LCDAddSpecialCharacter@i^0,f,c
  3239  001E9E  0E07               	movlw	7
  3240  001EA0  640B               	cpfsgt	LCDAddSpecialCharacter@i^0,c
  3241  001EA2  EF55  F00F         	goto	u2001
  3242  001EA6  EF57  F00F         	goto	u2000
  3243  001EAA                     u2001:
  3244  001EAA  EF45  F00F         	goto	l2599
  3245  001EAE                     u2000:
  3246  001EAE                     
  3247                           ;./lcd.h: 154:     LCDGoto(lcd_x, lcd_y);
  3248  001EAE  C074  F006         	movff	_lcd_y,LCDGoto@p_1
  3249  001EB2  5075               	movf	_lcd_x^0,w,c
  3250  001EB4  ECE7  F00D         	call	_LCDGoto
  3251  001EB8  0012               	return		;funcret
  3252  001EBA                     __end_of_LCDAddSpecialCharacter:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _LCDGoto *****************
  3256 ;; Defined at:
  3257 ;;		line 86 in file "./lcd.h"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  p_2             1    wreg     unsigned char 
  3260 ;;  p_1             1    5[COMRAM] unsigned char 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  p_2             1    6[COMRAM] unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3272 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;Total ram usage:        2 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    3
  3279 ;; This function calls:
  3280 ;;		_LCDCmd
  3281 ;; This function is called by:
  3282 ;;		_LCDStr
  3283 ;;		_LCDAddSpecialCharacter
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text18
  3289  001BCE                     __ptext18:
  3290                           	callstack 0
  3291  001BCE                     _LCDGoto:
  3292                           	callstack 26
  3293                           
  3294                           ;incstack = 0
  3295                           ;LCDGoto@p_2 stored from wreg
  3296  001BCE  6E07               	movwf	LCDGoto@p_2^0,c
  3297  001BD0                     
  3298                           ;./lcd.h: 87:   if(p_1==1) {
  3299  001BD0  0406               	decf	LCDGoto@p_1^0,w,c
  3300  001BD2  A4D8               	btfss	status,2,c
  3301  001BD4  EFEE  F00D         	goto	u1931
  3302  001BD8  EFF0  F00D         	goto	u1930
  3303  001BDC                     u1931:
  3304  001BDC  EFF7  F00D         	goto	l2535
  3305  001BE0                     u1930:
  3306  001BE0                     
  3307                           ;./lcd.h: 88:     LCDCmd(0x80 +((p_2-1)%16));
  3308  001BE0  0407               	decf	LCDGoto@p_2^0,w,c
  3309  001BE2  0B0F               	andlw	15
  3310  001BE4  0F80               	addlw	128
  3311  001BE6  ECEA  F00F         	call	_LCDCmd
  3312                           
  3313                           ;./lcd.h: 89:   }
  3314  001BEA  EF1C  F00E         	goto	l2545
  3315  001BEE                     l2535:
  3316  001BEE  0E02               	movlw	2
  3317  001BF0  1806               	xorwf	LCDGoto@p_1^0,w,c
  3318  001BF2  A4D8               	btfss	status,2,c
  3319  001BF4  EFFE  F00D         	goto	u1941
  3320  001BF8  EF00  F00E         	goto	u1940
  3321  001BFC                     u1941:
  3322  001BFC  EF07  F00E         	goto	l2539
  3323  001C00                     u1940:
  3324  001C00                     
  3325                           ;./lcd.h: 91:     LCDCmd(0xC0 +((p_2-1)%16));
  3326  001C00  0407               	decf	LCDGoto@p_2^0,w,c
  3327  001C02  0B0F               	andlw	15
  3328  001C04  0FC0               	addlw	192
  3329  001C06  ECEA  F00F         	call	_LCDCmd
  3330                           
  3331                           ;./lcd.h: 92:   }
  3332  001C0A  EF1C  F00E         	goto	l2545
  3333  001C0E                     l2539:
  3334  001C0E  0E03               	movlw	3
  3335  001C10  1806               	xorwf	LCDGoto@p_1^0,w,c
  3336  001C12  A4D8               	btfss	status,2,c
  3337  001C14  EF0E  F00E         	goto	u1951
  3338  001C18  EF10  F00E         	goto	u1950
  3339  001C1C                     u1951:
  3340  001C1C  EF17  F00E         	goto	l2543
  3341  001C20                     u1950:
  3342  001C20                     
  3343                           ;./lcd.h: 94:     LCDCmd(0x90 +((p_2-1)%16));
  3344  001C20  0407               	decf	LCDGoto@p_2^0,w,c
  3345  001C22  0B0F               	andlw	15
  3346  001C24  0F90               	addlw	144
  3347  001C26  ECEA  F00F         	call	_LCDCmd
  3348                           
  3349                           ;./lcd.h: 95:   }
  3350  001C2A  EF1C  F00E         	goto	l2545
  3351  001C2E                     l2543:
  3352                           
  3353                           ;./lcd.h: 97:     LCDCmd(0xD0 +((p_2-1)%16));
  3354  001C2E  0407               	decf	LCDGoto@p_2^0,w,c
  3355  001C30  0B0F               	andlw	15
  3356  001C32  0FD0               	addlw	208
  3357  001C34  ECEA  F00F         	call	_LCDCmd
  3358  001C38                     l2545:
  3359                           
  3360                           ;./lcd.h: 99:   lcd_x = p_2;
  3361  001C38  C007  F075         	movff	LCDGoto@p_2,_lcd_x
  3362  001C3C                     
  3363                           ;./lcd.h: 100:   lcd_y = p_1;
  3364  001C3C  C006  F074         	movff	LCDGoto@p_1,_lcd_y
  3365  001C40  0012               	return		;funcret
  3366  001C42                     __end_of_LCDGoto:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function _LCDCmd *****************
  3370 ;; Defined at:
  3371 ;;		line 62 in file "./lcd.h"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  cmd             1    wreg     unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  cmd             1    4[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:        2 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    2
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_LCDGoto
  3396 ;;		_InitLCD
  3397 ;;		_LCDAddSpecialCharacter
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text19
  3402  001FD4                     __ptext19:
  3403                           	callstack 0
  3404  001FD4                     _LCDCmd:
  3405                           	callstack 26
  3406                           
  3407                           ;incstack = 0
  3408                           ;LCDCmd@cmd stored from wreg
  3409  001FD4  6E05               	movwf	LCDCmd@cmd^0,c
  3410  001FD6                     
  3411                           ;./lcd.h: 63:   PORTEbits.RE1 = 0;
  3412  001FD6  9284               	bcf	132,1,c	;volatile
  3413                           
  3414                           ;./lcd.h: 64:   PORTEbits.RE2 = 0;
  3415  001FD8  9484               	bcf	132,2,c	;volatile
  3416  001FDA                     
  3417                           ;./lcd.h: 65:   PORTD = cmd;
  3418  001FDA  C005  FF83         	movff	LCDCmd@cmd,3971	;volatile
  3419  001FDE                     
  3420                           ;./lcd.h: 66:   PORTEbits.RE1 = 1;
  3421  001FDE  8284               	bsf	132,1,c	;volatile
  3422  001FE0                     
  3423                           ;./lcd.h: 67:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3424  001FE0  0E07               	movlw	7
  3425  001FE2  6E04               	movwf	??_LCDCmd^0,c
  3426  001FE4  0E7D               	movlw	125
  3427  001FE6                     u2087:
  3428  001FE6  2EE8               	decfsz	wreg,f,c
  3429  001FE8  D7FE               	bra	u2087
  3430  001FEA  2E04               	decfsz	??_LCDCmd^0,f,c
  3431  001FEC  D7FC               	bra	u2087
  3432  001FEE  F000               	nop	
  3433  001FF0                     
  3434                           ;./lcd.h: 68:   PORTEbits.RE1 = 0;
  3435  001FF0  9284               	bcf	132,1,c	;volatile
  3436  001FF2                     
  3437                           ;./lcd.h: 69:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3438  001FF2  0E07               	movlw	7
  3439  001FF4  6E04               	movwf	??_LCDCmd^0,c
  3440  001FF6  0E7D               	movlw	125
  3441  001FF8                     u2097:
  3442  001FF8  2EE8               	decfsz	wreg,f,c
  3443  001FFA  D7FE               	bra	u2097
  3444  001FFC  2E04               	decfsz	??_LCDCmd^0,f,c
  3445  001FFE  D7FC               	bra	u2097
  3446  002000  F000               	nop	
  3447  002002  0012               	return		;funcret
  3448  002004                     __end_of_LCDCmd:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _LCDDat *****************
  3452 ;; Defined at:
  3453 ;;		line 72 in file "./lcd.h"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  dat             1    wreg     unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  dat             1    4[COMRAM] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;Total ram usage:        2 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    2
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_LCDStr
  3478 ;;		_LCDAddSpecialCharacter
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text20
  3484  001FA2                     __ptext20:
  3485                           	callstack 0
  3486  001FA2                     _LCDDat:
  3487                           	callstack 27
  3488                           
  3489                           ;incstack = 0
  3490                           ;LCDDat@dat stored from wreg
  3491  001FA2  6E05               	movwf	LCDDat@dat^0,c
  3492  001FA4                     
  3493                           ;./lcd.h: 73:   PORTEbits.RE1 = 0;
  3494  001FA4  9284               	bcf	132,1,c	;volatile
  3495                           
  3496                           ;./lcd.h: 74:   PORTEbits.RE2 = 1;
  3497  001FA6  8484               	bsf	132,2,c	;volatile
  3498  001FA8                     
  3499                           ;./lcd.h: 75:   PORTD = dat;
  3500  001FA8  C005  FF83         	movff	LCDDat@dat,3971	;volatile
  3501  001FAC                     
  3502                           ;./lcd.h: 76:   PORTEbits.RE1 = 1;
  3503  001FAC  8284               	bsf	132,1,c	;volatile
  3504  001FAE                     
  3505                           ;./lcd.h: 77:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3506  001FAE  0E07               	movlw	7
  3507  001FB0  6E04               	movwf	??_LCDDat^0,c
  3508  001FB2  0E7D               	movlw	125
  3509  001FB4                     u2107:
  3510  001FB4  2EE8               	decfsz	wreg,f,c
  3511  001FB6  D7FE               	bra	u2107
  3512  001FB8  2E04               	decfsz	??_LCDDat^0,f,c
  3513  001FBA  D7FC               	bra	u2107
  3514  001FBC  F000               	nop	
  3515  001FBE                     
  3516                           ;./lcd.h: 78:   PORTEbits.RE1 = 0;
  3517  001FBE  9284               	bcf	132,1,c	;volatile
  3518  001FC0                     
  3519                           ;./lcd.h: 79:   _delay((unsigned long)((2000)*(10000000L/4000000.0)));
  3520  001FC0  0E07               	movlw	7
  3521  001FC2  6E04               	movwf	??_LCDDat^0,c
  3522  001FC4  0E7D               	movlw	125
  3523  001FC6                     u2117:
  3524  001FC6  2EE8               	decfsz	wreg,f,c
  3525  001FC8  D7FE               	bra	u2117
  3526  001FCA  2E04               	decfsz	??_LCDDat^0,f,c
  3527  001FCC  D7FC               	bra	u2117
  3528  001FCE  F000               	nop	
  3529  001FD0                     
  3530                           ;./lcd.h: 80:   PORTEbits.RE2 = 0;
  3531  001FD0  9484               	bcf	132,2,c	;volatile
  3532  001FD2  0012               	return		;funcret
  3533  001FD4                     __end_of_LCDDat:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _highIsr *****************
  3537 ;; Defined at:
  3538 ;;		line 27 in file "main.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  portbVals       1    2[COMRAM] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;Total ram usage:        3 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    1
  3559 ;; This function calls:
  3560 ;;		_SetupDebouncingTimer
  3561 ;;		_down
  3562 ;;		_left
  3563 ;;		_right
  3564 ;;		_up
  3565 ;; This function is called by:
  3566 ;;		Interrupt level 2
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	intcode
  3571  000008                     __pintcode:
  3572                           	callstack 0
  3573  000008                     _highIsr:
  3574                           	callstack 21
  3575                           
  3576                           ;incstack = 0
  3577  000008  8276               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3578  00000A  ED65  F00C         	call	int_func,f	;refresh shadow registers
  3579                           
  3580                           	psect	intcode_body
  3581  0018CA                     __pintcode_body:
  3582                           	callstack 21
  3583  0018CA                     int_func:
  3584                           	callstack 21
  3585  0018CA  0006               	pop		; remove dummy address from shadow register refresh
  3586  0018CC                     
  3587                           ;main.c: 28:     byte portbVals = PORTB;
  3588  0018CC  CF81 F003          	movff	3969,highIsr@portbVals	;volatile
  3589                           
  3590                           ;main.c: 30:     if (INTCONbits.TMR0IF) {
  3591  0018D0  A4F2               	btfss	242,2,c	;volatile
  3592  0018D2  EF6D  F00C         	goto	i2u141_41
  3593  0018D6  EF6F  F00C         	goto	i2u141_40
  3594  0018DA                     i2u141_41:
  3595  0018DA  EF73  F00C         	goto	i2l2163
  3596  0018DE                     i2u141_40:
  3597  0018DE                     
  3598                           ;main.c: 31:         acceptInterrupts = 1;
  3599  0018DE  0E01               	movlw	1
  3600  0018E0  6E73               	movwf	_acceptInterrupts^0,c
  3601  0018E2                     
  3602                           ;main.c: 32:         T0CONbits.TMR0ON = 0;
  3603  0018E2  9ED5               	bcf	213,7,c	;volatile
  3604  0018E4                     
  3605                           ;main.c: 33:         INTCONbits.TMR0IF = 0;
  3606  0018E4  94F2               	bcf	242,2,c	;volatile
  3607  0018E6                     i2l2163:
  3608                           
  3609                           ;main.c: 36:     if (INTCONbits.INT0IF ){
  3610  0018E6  A2F2               	btfss	242,1,c	;volatile
  3611  0018E8  EF78  F00C         	goto	i2u142_41
  3612  0018EC  EF7A  F00C         	goto	i2u142_40
  3613  0018F0                     i2u142_41:
  3614  0018F0  EF86  F00C         	goto	i2l2171
  3615  0018F4                     i2u142_40:
  3616  0018F4                     
  3617                           ;main.c: 37:         if (acceptInterrupts) {
  3618  0018F4  5073               	movf	_acceptInterrupts^0,w,c
  3619  0018F6  B4D8               	btfsc	status,2,c
  3620  0018F8  EF80  F00C         	goto	i2u143_41
  3621  0018FC  EF82  F00C         	goto	i2u143_40
  3622  001900                     i2u143_41:
  3623  001900  EF86  F00C         	goto	i2l2171
  3624  001904                     i2u143_40:
  3625  001904                     
  3626                           ;main.c: 38:             a++;
  3627  001904  4A71               	infsnz	_a^0,f,c
  3628  001906  2A72               	incf	(_a+1)^0,f,c
  3629  001908                     
  3630                           ;main.c: 39:             SetupDebouncingTimer();
  3631  001908  EC02  F010         	call	_SetupDebouncingTimer	;wreg free
  3632  00190C                     i2l2171:
  3633                           
  3634                           ;main.c: 43:     if (INTCON3bits.INT1IF ) {
  3635  00190C  A0F0               	btfss	240,0,c	;volatile
  3636  00190E  EF8B  F00C         	goto	i2u144_41
  3637  001912  EF8D  F00C         	goto	i2u144_40
  3638  001916                     i2u144_41:
  3639  001916  EF9A  F00C         	goto	i2l2179
  3640  00191A                     i2u144_40:
  3641  00191A                     
  3642                           ;main.c: 44:         if (acceptInterrupts) {
  3643  00191A  5073               	movf	_acceptInterrupts^0,w,c
  3644  00191C  B4D8               	btfsc	status,2,c
  3645  00191E  EF93  F00C         	goto	i2u145_41
  3646  001922  EF95  F00C         	goto	i2u145_40
  3647  001926                     i2u145_41:
  3648  001926  EF9A  F00C         	goto	i2l2179
  3649  00192A                     i2u145_40:
  3650  00192A                     
  3651                           ;main.c: 45:             b++;
  3652  00192A  0100               	movlb	0	; () banked
  3653  00192C  4BD8               	infsnz	_b& (0+255),f,b
  3654  00192E  2BD9               	incf	(_b+1)& (0+255),f,b
  3655  001930                     
  3656                           ; BSR set to: 0
  3657                           ;main.c: 46:             SetupDebouncingTimer();
  3658  001930  EC02  F010         	call	_SetupDebouncingTimer	;wreg free
  3659  001934                     i2l2179:
  3660                           
  3661                           ;main.c: 50:     if (INTCONbits.RBIF) {
  3662  001934  A0F2               	btfss	242,0,c	;volatile
  3663  001936  EF9F  F00C         	goto	i2u146_41
  3664  00193A  EFA1  F00C         	goto	i2u146_40
  3665  00193E                     i2u146_41:
  3666  00193E  EFE2  F00C         	goto	i2l2203
  3667  001942                     i2u146_40:
  3668  001942                     
  3669                           ;main.c: 51:         if (acceptInterrupts) {
  3670  001942  5073               	movf	_acceptInterrupts^0,w,c
  3671  001944  B4D8               	btfsc	status,2,c
  3672  001946  EFA7  F00C         	goto	i2u147_41
  3673  00194A  EFA9  F00C         	goto	i2u147_40
  3674  00194E                     i2u147_41:
  3675  00194E  EFE2  F00C         	goto	i2l2203
  3676  001952                     i2u147_40:
  3677  001952                     
  3678                           ;main.c: 52:             portbVals = portbVals >> 4;
  3679  001952  3803               	swapf	highIsr@portbVals^0,w,c
  3680  001954  0B0F               	andlw	15
  3681  001956  6E03               	movwf	highIsr@portbVals^0,c
  3682                           
  3683                           ;main.c: 53:             switch (portbVals) {
  3684  001958  EFC0  F00C         	goto	i2l2197
  3685  00195C                     i2l2185:
  3686                           
  3687                           ;main.c: 55:                     up();
  3688  00195C  EC0A  F010         	call	_up	;wreg free
  3689                           
  3690                           ;main.c: 56:                     break;
  3691  001960  EFDD  F00C         	goto	i2l2199
  3692  001964                     i2l2187:
  3693                           
  3694                           ;main.c: 58:                     right();
  3695  001964  EC12  F010         	call	_right	;wreg free
  3696                           
  3697                           ;main.c: 59:                     break;
  3698  001968  EFDD  F00C         	goto	i2l2199
  3699  00196C                     i2l2189:
  3700                           
  3701                           ;main.c: 61:                     down();
  3702  00196C  EC0E  F010         	call	_down	;wreg free
  3703                           
  3704                           ;main.c: 62:                     break;
  3705  001970  EFDD  F00C         	goto	i2l2199
  3706  001974                     i2l2191:
  3707                           
  3708                           ;main.c: 64:                     left();
  3709  001974  EC15  F010         	call	_left	;wreg free
  3710                           
  3711                           ;main.c: 65:                     break;
  3712  001978  EFDD  F00C         	goto	i2l2199
  3713  00197C                     i2l2193:
  3714                           
  3715                           ;main.c: 68:                     break;
  3716  00197C  EFDD  F00C         	goto	i2l2199
  3717  001980                     i2l2197:
  3718  001980  5003               	movf	highIsr@portbVals^0,w,c
  3719  001982  6E01               	movwf	??_highIsr^0,c
  3720  001984  6A02               	clrf	(??_highIsr+1)^0,c
  3721                           
  3722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3723                           ; Switch size 1, requested type "simple"
  3724                           ; Number of cases is 1, Range of values is 0 to 0
  3725                           ; switch strategies available:
  3726                           ; Name         Instructions Cycles
  3727                           ; simple_byte            4     3 (average)
  3728                           ;	Chosen strategy is simple_byte
  3729  001986  5002               	movf	(??_highIsr+1)^0,w,c
  3730  001988  0A00               	xorlw	0	; case 0
  3731  00198A  B4D8               	btfsc	status,2,c
  3732  00198C  EFCA  F00C         	goto	i2l2785
  3733  001990  EFBE  F00C         	goto	i2l2193
  3734  001994                     i2l2785:
  3735                           
  3736                           ; Switch size 1, requested type "simple"
  3737                           ; Number of cases is 4, Range of values is 7 to 14
  3738                           ; switch strategies available:
  3739                           ; Name         Instructions Cycles
  3740                           ; simple_byte           13     7 (average)
  3741                           ;	Chosen strategy is simple_byte
  3742  001994  5001               	movf	??_highIsr^0,w,c
  3743  001996  0A07               	xorlw	7	; case 7
  3744  001998  B4D8               	btfsc	status,2,c
  3745  00199A  EFBA  F00C         	goto	i2l2191
  3746  00199E  0A0C               	xorlw	12	; case 11
  3747  0019A0  B4D8               	btfsc	status,2,c
  3748  0019A2  EFB6  F00C         	goto	i2l2189
  3749  0019A6  0A06               	xorlw	6	; case 13
  3750  0019A8  B4D8               	btfsc	status,2,c
  3751  0019AA  EFB2  F00C         	goto	i2l2187
  3752  0019AE  0A03               	xorlw	3	; case 14
  3753  0019B0  B4D8               	btfsc	status,2,c
  3754  0019B2  EFAE  F00C         	goto	i2l2185
  3755  0019B6  EFBE  F00C         	goto	i2l2193
  3756  0019BA                     i2l2199:
  3757                           
  3758                           ;main.c: 71:             c++;
  3759  0019BA  0100               	movlb	0	; () banked
  3760  0019BC  4BD6               	infsnz	_c& (0+255),f,b
  3761  0019BE  2BD7               	incf	(_c+1)& (0+255),f,b
  3762  0019C0                     
  3763                           ; BSR set to: 0
  3764                           ;main.c: 72:             SetupDebouncingTimer();
  3765  0019C0  EC02  F010         	call	_SetupDebouncingTimer	;wreg free
  3766  0019C4                     i2l2203:
  3767                           
  3768                           ;main.c: 75:     INTCON3bits.INT1IF = 0;
  3769  0019C4  90F0               	bcf	240,0,c	;volatile
  3770  0019C6                     
  3771                           ;main.c: 76:     INTCONbits.INT0IF = 0;
  3772  0019C6  92F2               	bcf	242,1,c	;volatile
  3773  0019C8                     
  3774                           ;main.c: 77:     INTCONbits.RBIF = 0;
  3775  0019C8  90F2               	bcf	242,0,c	;volatile
  3776  0019CA  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3777  0019CC  0011               	retfie		f
  3778  0019CE                     __end_of_highIsr:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _up *****************
  3782 ;; Defined at:
  3783 ;;		line 190 in file "main.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_highIsr
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text22
  3811  002014                     __ptext22:
  3812                           	callstack 0
  3813  002014                     _up:
  3814                           	callstack 21
  3815  002014                     
  3816                           ;main.c: 191:     b++;
  3817  002014  0100               	movlb	0	; () banked
  3818  002016  4BD8               	infsnz	_b& (0+255),f,b
  3819  002018  2BD9               	incf	(_b+1)& (0+255),f,b
  3820  00201A                     
  3821                           ; BSR set to: 0
  3822  00201A  0012               	return		;funcret
  3823  00201C                     __end_of_up:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _right *****************
  3827 ;; Defined at:
  3828 ;;		line 186 in file "main.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_highIsr
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text23
  3856  002024                     __ptext23:
  3857                           	callstack 0
  3858  002024                     _right:
  3859                           	callstack 21
  3860  002024                     
  3861                           ;main.c: 187:     a++;
  3862  002024  4A71               	infsnz	_a^0,f,c
  3863  002026  2A72               	incf	(_a+1)^0,f,c
  3864  002028  0012               	return		;funcret
  3865  00202A                     __end_of_right:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _left *****************
  3869 ;; Defined at:
  3870 ;;		line 182 in file "main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_highIsr
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text24
  3898  00202A                     __ptext24:
  3899                           	callstack 0
  3900  00202A                     _left:
  3901                           	callstack 21
  3902  00202A                     
  3903                           ;main.c: 183:     a++;
  3904  00202A  4A71               	infsnz	_a^0,f,c
  3905  00202C  2A72               	incf	(_a+1)^0,f,c
  3906  00202E  0012               	return		;funcret
  3907  002030                     __end_of_left:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _down *****************
  3911 ;; Defined at:
  3912 ;;		line 194 in file "main.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_highIsr
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text25
  3940  00201C                     __ptext25:
  3941                           	callstack 0
  3942  00201C                     _down:
  3943                           	callstack 21
  3944  00201C                     
  3945                           ;main.c: 195:     b++;
  3946  00201C  0100               	movlb	0	; () banked
  3947  00201E  4BD8               	infsnz	_b& (0+255),f,b
  3948  002020  2BD9               	incf	(_b+1)& (0+255),f,b
  3949  002022                     
  3950                           ; BSR set to: 0
  3951  002022  0012               	return		;funcret
  3952  002024                     __end_of_down:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function _SetupDebouncingTimer *****************
  3956 ;; Defined at:
  3957 ;;		line 175 in file "main.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_highIsr
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text26
  3985  002004                     __ptext26:
  3986                           	callstack 0
  3987  002004                     _SetupDebouncingTimer:
  3988                           	callstack 21
  3989  002004                     
  3990                           ;main.c: 176:     acceptInterrupts = 0;
  3991  002004  0E00               	movlw	0
  3992  002006  6E73               	movwf	_acceptInterrupts^0,c
  3993                           
  3994                           ;main.c: 177:     TMR0L = 0;
  3995  002008  0E00               	movlw	0
  3996  00200A  6ED6               	movwf	214,c	;volatile
  3997                           
  3998                           ;main.c: 178:     TMR0H = 0;
  3999  00200C  0E00               	movlw	0
  4000  00200E  6ED7               	movwf	215,c	;volatile
  4001  002010                     
  4002                           ;main.c: 179:     T0CONbits.TMR0ON = 1;
  4003  002010  8ED5               	bsf	213,7,c	;volatile
  4004  002012  0012               	return		;funcret
  4005  002014                     __end_of_SetupDebouncingTimer:
  4006                           	callstack 0
  4007                           
  4008                           	psect	rparam
  4009  0000                     
  4010                           	psect	temp
  4011  000076                     btemp:
  4012                           	callstack 0
  4013  000076                     	ds	1
  4014  0000                     int$flags	set	btemp
  4015  0000                     wtemp8	set	btemp+1
  4016  0000                     ttemp5	set	btemp+1
  4017  0000                     ttemp6	set	btemp+4
  4018  0000                     ttemp7	set	btemp+8
  4019                           
  4020                           	psect	idloc
  4021                           
  4022                           ;Config register IDLOC0 @ 0x200000
  4023                           ;	unspecified, using default values
  4024  200000                     	org	2097152
  4025  200000  FF                 	db	255
  4026                           
  4027                           ;Config register IDLOC1 @ 0x200001
  4028                           ;	unspecified, using default values
  4029  200001                     	org	2097153
  4030  200001  FF                 	db	255
  4031                           
  4032                           ;Config register IDLOC2 @ 0x200002
  4033                           ;	unspecified, using default values
  4034  200002                     	org	2097154
  4035  200002  FF                 	db	255
  4036                           
  4037                           ;Config register IDLOC3 @ 0x200003
  4038                           ;	unspecified, using default values
  4039  200003                     	org	2097155
  4040  200003  FF                 	db	255
  4041                           
  4042                           ;Config register IDLOC4 @ 0x200004
  4043                           ;	unspecified, using default values
  4044  200004                     	org	2097156
  4045  200004  FF                 	db	255
  4046                           
  4047                           ;Config register IDLOC5 @ 0x200005
  4048                           ;	unspecified, using default values
  4049  200005                     	org	2097157
  4050  200005  FF                 	db	255
  4051                           
  4052                           ;Config register IDLOC6 @ 0x200006
  4053                           ;	unspecified, using default values
  4054  200006                     	org	2097158
  4055  200006  FF                 	db	255
  4056                           
  4057                           ;Config register IDLOC7 @ 0x200007
  4058                           ;	unspecified, using default values
  4059  200007                     	org	2097159
  4060  200007  FF                 	db	255
  4061                           
  4062                           	psect	config
  4063                           
  4064                           ; Padding undefined space
  4065  300000                     	org	3145728
  4066  300000  FF                 	db	255
  4067                           
  4068                           ;Config register CONFIG1H @ 0x300001
  4069                           ;	unspecified, using default values
  4070                           ;	Oscillator Selection bits
  4071                           ;	OSC = 0x7, unprogrammed default
  4072                           ;	Fail-Safe Clock Monitor Enable bit
  4073                           ;	FCMEN = 0x0, unprogrammed default
  4074                           ;	Internal/External Oscillator Switchover bit
  4075                           ;	IESO = 0x0, unprogrammed default
  4076  300001                     	org	3145729
  4077  300001  07                 	db	7
  4078                           
  4079                           ;Config register CONFIG2L @ 0x300002
  4080                           ;	unspecified, using default values
  4081                           ;	Power-up Timer Enable bit
  4082                           ;	PWRT = 0x1, unprogrammed default
  4083                           ;	Brown-out Reset Enable bits
  4084                           ;	BOREN = 0x3, unprogrammed default
  4085                           ;	Brown Out Reset Voltage bits
  4086                           ;	BORV = 0x3, unprogrammed default
  4087  300002                     	org	3145730
  4088  300002  1F                 	db	31
  4089                           
  4090                           ;Config register CONFIG2H @ 0x300003
  4091                           ;	unspecified, using default values
  4092                           ;	Watchdog Timer Enable bit
  4093                           ;	WDT = 0x1, unprogrammed default
  4094                           ;	Watchdog Timer Postscale Select bits
  4095                           ;	WDTPS = 0xF, unprogrammed default
  4096  300003                     	org	3145731
  4097  300003  1F                 	db	31
  4098                           
  4099                           ; Padding undefined space
  4100  300004                     	org	3145732
  4101  300004  FF                 	db	255
  4102                           
  4103                           ;Config register CONFIG3H @ 0x300005
  4104                           ;	unspecified, using default values
  4105                           ;	CCP2 MUX bit
  4106                           ;	CCP2MX = 0x1, unprogrammed default
  4107                           ;	PORTB A/D Enable bit
  4108                           ;	PBADEN = 0x1, unprogrammed default
  4109                           ;	Low-Power Timer1 Oscillator Enable bit
  4110                           ;	LPT1OSC = 0x0, unprogrammed default
  4111                           ;	MCLR Pin Enable bit
  4112                           ;	MCLRE = 0x1, unprogrammed default
  4113  300005                     	org	3145733
  4114  300005  83                 	db	131
  4115                           
  4116                           ;Config register CONFIG4L @ 0x300006
  4117                           ;	unspecified, using default values
  4118                           ;	Stack Full/Underflow Reset Enable bit
  4119                           ;	STVREN = 0x1, unprogrammed default
  4120                           ;	Single-Supply ICSP Enable bit
  4121                           ;	LVP = 0x1, unprogrammed default
  4122                           ;	Extended Instruction Set Enable bit
  4123                           ;	XINST = 0x0, unprogrammed default
  4124                           ;	Background Debugger Enable bit
  4125                           ;	DEBUG = 0x1, unprogrammed default
  4126  300006                     	org	3145734
  4127  300006  85                 	db	133
  4128                           
  4129                           ; Padding undefined space
  4130  300007                     	org	3145735
  4131  300007  FF                 	db	255
  4132                           
  4133                           ;Config register CONFIG5L @ 0x300008
  4134                           ;	unspecified, using default values
  4135                           ;	Code Protection bit
  4136                           ;	CP0 = 0x1, unprogrammed default
  4137                           ;	Code Protection bit
  4138                           ;	CP1 = 0x1, unprogrammed default
  4139                           ;	Code Protection bit
  4140                           ;	CP2 = 0x1, unprogrammed default
  4141                           ;	Code Protection bit
  4142                           ;	CP3 = 0x1, unprogrammed default
  4143  300008                     	org	3145736
  4144  300008  0F                 	db	15
  4145                           
  4146                           ;Config register CONFIG5H @ 0x300009
  4147                           ;	unspecified, using default values
  4148                           ;	Boot Block Code Protection bit
  4149                           ;	CPB = 0x1, unprogrammed default
  4150                           ;	Data EEPROM Code Protection bit
  4151                           ;	CPD = 0x1, unprogrammed default
  4152  300009                     	org	3145737
  4153  300009  C0                 	db	192
  4154                           
  4155                           ;Config register CONFIG6L @ 0x30000A
  4156                           ;	unspecified, using default values
  4157                           ;	Write Protection bit
  4158                           ;	WRT0 = 0x1, unprogrammed default
  4159                           ;	Write Protection bit
  4160                           ;	WRT1 = 0x1, unprogrammed default
  4161                           ;	Write Protection bit
  4162                           ;	WRT2 = 0x1, unprogrammed default
  4163                           ;	Write Protection bit
  4164                           ;	WRT3 = 0x1, unprogrammed default
  4165  30000A                     	org	3145738
  4166  30000A  0F                 	db	15
  4167                           
  4168                           ;Config register CONFIG6H @ 0x30000B
  4169                           ;	unspecified, using default values
  4170                           ;	Configuration Register Write Protection bit
  4171                           ;	WRTC = 0x1, unprogrammed default
  4172                           ;	Boot Block Write Protection bit
  4173                           ;	WRTB = 0x1, unprogrammed default
  4174                           ;	Data EEPROM Write Protection bit
  4175                           ;	WRTD = 0x1, unprogrammed default
  4176  30000B                     	org	3145739
  4177  30000B  E0                 	db	224
  4178                           
  4179                           ;Config register CONFIG7L @ 0x30000C
  4180                           ;	unspecified, using default values
  4181                           ;	Table Read Protection bit
  4182                           ;	EBTR0 = 0x1, unprogrammed default
  4183                           ;	Table Read Protection bit
  4184                           ;	EBTR1 = 0x1, unprogrammed default
  4185                           ;	Table Read Protection bit
  4186                           ;	EBTR2 = 0x1, unprogrammed default
  4187                           ;	Table Read Protection bit
  4188                           ;	EBTR3 = 0x1, unprogrammed default
  4189  30000C                     	org	3145740
  4190  30000C  0F                 	db	15
  4191                           
  4192                           ;Config register CONFIG7H @ 0x30000D
  4193                           ;	unspecified, using default values
  4194                           ;	Boot Block Table Read Protection bit
  4195                           ;	EBTRB = 0x1, unprogrammed default
  4196  30000D                     	org	3145741
  4197  30000D  40                 	db	64
  4198                           tosu	equ	0xFFF
  4199                           tosh	equ	0xFFE
  4200                           tosl	equ	0xFFD
  4201                           stkptr	equ	0xFFC
  4202                           pclatu	equ	0xFFB
  4203                           pclath	equ	0xFFA
  4204                           pcl	equ	0xFF9
  4205                           tblptru	equ	0xFF8
  4206                           tblptrh	equ	0xFF7
  4207                           tblptrl	equ	0xFF6
  4208                           tablat	equ	0xFF5
  4209                           prodh	equ	0xFF4
  4210                           prodl	equ	0xFF3
  4211                           indf0	equ	0xFEF
  4212                           postinc0	equ	0xFEE
  4213                           postdec0	equ	0xFED
  4214                           preinc0	equ	0xFEC
  4215                           plusw0	equ	0xFEB
  4216                           fsr0h	equ	0xFEA
  4217                           fsr0l	equ	0xFE9
  4218                           wreg	equ	0xFE8
  4219                           indf1	equ	0xFE7
  4220                           postinc1	equ	0xFE6
  4221                           postdec1	equ	0xFE5
  4222                           preinc1	equ	0xFE4
  4223                           plusw1	equ	0xFE3
  4224                           fsr1h	equ	0xFE2
  4225                           fsr1l	equ	0xFE1
  4226                           bsr	equ	0xFE0
  4227                           indf2	equ	0xFDF
  4228                           postinc2	equ	0xFDE
  4229                           postdec2	equ	0xFDD
  4230                           preinc2	equ	0xFDC
  4231                           plusw2	equ	0xFDB
  4232                           fsr2h	equ	0xFDA
  4233                           fsr2l	equ	0xFD9
  4234                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        66
    BSS         317
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    108     117
    BANK0           128      0     123
    BANK1           256      0     252
    BANK2           256      9       9
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK2[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK2[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1022_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK2[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK2[5]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(BANK0[8]), frisbeeChar(BANK0[8]), selected_teamB_player_with_frisbee(BANK0[8]), selected_teamA_player_with_frisbee(BANK0[8]), 
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), teamB_player(BANK0[8]), teamA_player(BANK0[8]), 

    LCDStr@str	PTR const unsigned char  size(2) Largest target is 5
		 -> main@arr(BANK2[5]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDStr->_LCDGoto
    _InitLCD->_LCDCmd
    _AddCustomCharacters->_LCDAddSpecialCharacter
    _LCDAddSpecialCharacter->_LCDGoto
    _LCDGoto->_LCDCmd

Critical Paths under _highIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   13103
                                            106 COMRAM     2     2      0
                                              0 BANK2      9     9      0
                _AddCustomCharacters
                     _InitInterrupts
                            _InitLCD
                             _LCDDat
                            _LCDGoto
                             _LCDStr
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    8777
                                             90 COMRAM    16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             66 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _LCDStr                                               3     1      2    1281
                                              7 COMRAM     3     1      2
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AddCustomCharacters                                  0     0      0    1793
             _LCDAddSpecialCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDAddSpecialCharacter                               4     2      2    1793
                                              7 COMRAM     4     2      2
                             _LCDCmd
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1     850
                                              5 COMRAM     2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      31
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      31
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _highIsr                                              3     3      0      47
                                              0 COMRAM     3     3      0
               _SetupDebouncingTimer
                               _down
                               _left
                              _right
                                 _up
 ---------------------------------------------------------------------------------
 (10) _up                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _right                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _left                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _down                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _SetupDebouncingTimer                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddCustomCharacters
     _LCDAddSpecialCharacter
       _LCDCmd
       _LCDDat
       _LCDGoto
         _LCDCmd
   _InitInterrupts
   _InitLCD
     _LCDCmd
   _LCDDat
   _LCDGoto
     _LCDCmd
   _LCDStr
     _LCDDat
     _LCDGoto
       _LCDCmd
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _highIsr (ROOT)
   _SetupDebouncingTimer
   _down
   _left
   _right
   _up

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      9       9       9        3.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FC       7       98.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7B       5       96.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6C      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F5      34        0.0%
DATA                 0      0     1F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 24 23:55:56 2023

                                    _a 0071                                      _b 00D8  
                                    _c 00D6                                     _up 2014  
           LCDAddSpecialCharacter@data 0008  LCDAddSpecialCharacter@character_index 000A  
                                  l122 2002                                    l203 1D82  
                                  l125 1FD2                                    l134 1C40  
                                  l150 1EB8                                    l142 1BCC  
                                  l153 1CB2                                    l145 1FA0  
                                  l335 161E                                    l348 1782  
                                  ?_up 0001                                    l931 1B58  
                                  l926 1ADC                                    l929 1B1E  
                                  l937 10A4                                    l970 1DDC  
                                  l939 10AC                                    l971 1DE4  
                                  l964 1496                                    l957 12E2  
                                  l990 1A96                                    l975 1F30  
                                  l978 1F38                                    l899 1E32  
                                  l998 1E76                                    _abs 1EFA  
                                  _pad 1A98                                    wreg 000FE8  
                                 ??_up 0001                        __end_of_LCDGoto 1C42  
                                 l1001 2032                                   l1007 1F6E  
                                 ?_abs 0016                                   l2311 19FC  
                                 l2401 16CC                                   l2313 1A1A  
                                 l2305 19CE                                   l2321 1E40  
                                 l2411 1742                                   l2403 16FA  
                                 l2315 1A50                                   l2307 19E0  
                                 l2323 1E52                                   l2331 1F4A  
                                 l2341 14AA                                   l2413 1762  
                                 l2405 171A                                   l2309 19F2  
                                 l2325 1E56                                   l2333 1F62  
                                 l2421 1ABA                                   l2501 1270  
                                 l2351 1500                                   l2343 14CA  
                                 l2407 172C                                   l2319 1E34  
                                 l2327 1F3A                                   l2431 1B00  
                                 l2423 1AC8                                   l2511 12AA  
                                 l2503 127E                                   l2521 1FAC  
                                 l2601 1E9C                                   l2361 1554  
                                 l2353 150C                                   l2345 14CE  
                                 l2337 1498                                   l2409 1732  
                                 l2441 1F14                                   l2329 1F46  
                                 l2433 1B2C                                   l2425 1AD4  
                                 l2417 1A98                                   l2505 1284  
                                 l2513 12BA                                   l2523 1FAE  
                                 l2451 1FF0                                   l2443 1FD6  
                                 l2531 1BD0                                   l2603 1E9E  
                                 l2371 15C8                                   l2363 1566  
                                 l2355 152A                                   l2347 14DC  
                                 l2339 149C                                   l2435 1B40  
                                 l2427 1AE8                                   l2419 1AA6  
                                 l2507 1296                                   l2611 1D9A  
                                 l2525 1FBE                                   l2517 1FA4  
                                 l2453 1FF2                                   l2445 1FDA  
                                 l2541 1C20                                   l2533 1BE0  
                                 l2605 1EAE                                   l2621 1B76  
                                 l2365 1594                                   l2357 1532  
                                 l2373 15CE                                   l2349 14FC  
                                 l2381 1620                                   l2429 1AFC  
                                 l2509 12A2                                   l2461 106E  
                                 l2613 1DC0                                   l2701 1DFE  
                                 l2527 1FC0                                   l2519 1FA8  
                                 l2447 1FDE                                   l2543 1C2E  
                                 l2535 1BEE                                   l2631 1BA4  
                                 l2623 1B88                                   l2615 1B5A  
                                 l2375 15DE                                   l2367 15B4  
                                 l2359 1546                                   l2391 1664  
                                 l2383 1624                                   l2439 1EFA  
                                 l2471 10C6                                   l2463 107C  
                                 l2455 1006                                   l2551 1308  
                                 l2607 1D84                                   l2703 1E06  
                                 l2711 178A                                   l2529 1FD0  
                                 l2449 1FE0                                   l2537 1C00  
                                 l2545 1C38                                   l2641 1F78  
                                 l2625 1B8C                                   l2633 1BAE  
                                 l2617 1B62                                   l2377 15FE  
                                 l2369 15B6                                   l2393 1684  
                                 l2385 1632                                   l2481 10F2  
                                 l2473 10D4                                   l2465 107E  
                                 l2457 1026                                   l2561 1374  
                                 l2553 1316                                   l2609 1D8C  
                                 l2705 1E22                                   l2721 17A6  
                                 l2713 178E                                   l2547 1C3C  
                                 l2539 1C0E                                   l2651 1F8E  
                                 l2643 1F7A                                   l2627 1B8E  
                                 l2619 1B74                                   l2635 1BB0  
                                 l2395 16A2                                   l2387 1652  
                                 l2491 11FE                                   l2483 1174  
                                 l2475 10DA                                   l2467 1098  
                                 l2459 104E                                   l2571 1426  
                                 l2563 13BC                                   l2555 1328  
                                 l2731 17E0                                   l2723 17B0  
                                 l2715 179A                                   l2661 1D3C  
                                 l2653 1F94                                   l2645 1F7C  
                                 l2637 1F70                                   l2629 1BA0  
                                 l2397 16AA                                   l2389 1656  
                                 l2493 121C                                   l2485 117A  
                                 l2477 10E2                                   l2469 10B4  
                                 l2573 143A                                   l2557 132C  
                                 l2549 12E4                                   l2741 1814  
                                 l2733 17EE                                   l2717 179E  
                                 l2709 1784                                   l2591 1E7A  
                                 l2671 1D66                                   l2663 1D46  
                                 l2655 1F9A                                   l2647 1F82  
                                 l2639 1F74                                   l2399 16BE  
                                 l2495 1236                                   l2487 1180  
                                 l2479 10EC                                   l2567 13F4  
                                 l2559 1350                                   l2583 1460  
                                 l2751 1852                                   l2743 181C  
                                 l2735 17F8                                   l2719 17A2  
                                 l2593 1E86                                   l2657 1C42  
                                 l2681 1D70                                   l2673 1D68  
                                 l2665 1D60                                   l2649 1F88  
                                 l2497 1250                                   l2489 11E4  
                                 l2585 1484                                   l2569 1418  
                                 l2577 1446                                   l2761 189A  
                                 l2753 1856                                   l2745 1826  
                                 l2737 17FE                                   l2729 17BA  
                                 l2691 1D7A                                   l2683 1D72  
                                 l2675 1D6A                                   l2667 1D62  
                                 l2659 1D1E                                   l2499 125E  
                                 l2579 1454                                   l2763 18B6  
                                 l2755 1860                                   l2747 1842  
                                 l2739 1806                                   l2693 1D7E  
                                 l2685 1D74                                   l2677 1D6C  
                                 l2669 1D64                                   l2757 187C  
                                 l2749 184E                                   ?_pad 0014  
                                 l2599 1E8A                                   l2695 1D80  
                                 l2687 1D76                                   l2679 1D6E  
                                 l2759 1890                                   l2689 1D78  
                                 l2697 1DE6                                   l2699 1DF6  
                                 STR_1 1001                                   STR_2 1001  
                                 STR_3 1001                                   u2000 1EAE  
                                 u2001 1EAA                                   u2010 1DDC  
                                 u2011 1DD8                                   u2020 1B88  
                                 u2021 1B84                                   u2030 1BA0  
                                 u2031 1B9C                                   u2040 1BCC  
                                 u2041 1BC8                                   u2107 1FB4  
                                 u2060 17E0                                   u2117 1FC6  
                                 u2061 17DC                                   u2070 1814  
                                 u2054 17CC                                   u2071 1810  
                                 u2055 17C8                                   u1600 14AA  
                                 u1601 14A6                                   u1610 14DC  
                                 u1611 14D8                                   u1700 16CC  
                                 u1540 19E0                                   u1621 1506  
                                 u1701 16C8                                   u1541 19DC  
                                 u1630 152A                                   u1710 16FA  
                                 u1550 19F2                                   u2087 1FE6  
                                 u1631 1526                                   u1711 16F6  
                                 u1551 19EE                                   u1640 1554  
                                 u1720 1742                                   u1560 1A1A  
                                 u1800 104E                                   u2097 1FF8  
                                 u1641 1550                                   u1721 173E  
                                 u1561 1A16                                   u1801 104A  
                                 u1650 1594                                   u1570 1A50  
                                 u1730 1AA6                                   u1810 107C  
                                 u1651 1590                                   u1571 1A4C  
                                 u1731 1AA2                                   u1811 1078  
                                 u1660 15DE                                   u1580 1E76  
                                 u1740 1AC8                                   u1900 1270  
                                 u1820 1098                                   u1661 15DA  
                                 u1581 1E72                                   u1741 1AC4  
                                 u1901 126C                                   u1821 1094  
                                 u1670 1632                                   u1590 1F62  
                                 u1750 1B1E                                   u1910 127E  
                                 u1830 10C6                                   u1671 162E  
                                 u1591 1F5E                                   u1751 1B1A  
                                 u1911 127A                                   u1831 10C2  
                                 u1680 1664                                   u1760 1B2C  
                                 u1920 1296                                   u1840 10D4  
                                 u1681 1660                                   u1761 1B28  
                                 u1921 1292                                   u1841 10D0  
                                 u1930 1BE0                                   u1690 16A2  
                                 u1770 1F14                                   u1850 11FE  
                                 u1931 1BDC                                   u1691 169E  
                                 u1771 1F10                                   u1851 11FA  
                                 u1940 1C00                                   u1860 121C  
                                 u1780 1036                                   u1941 1BFC  
                                 u1861 1218                                   u1781 1030  
                                 u1950 1C20                                   u1870 1236  
                                 u1790 1038                                   u1951 1C1C  
                                 u1871 1232                                   u1880 1250  
                                 u1960 1308                                   u1881 124C  
                                 u1961 1304                                   u1890 125E  
                                 u1970 1350                                   u1891 125A  
                                 u1971 134C                                   u1980 1374  
                                 u1981 1370                                   u1990 1418  
                                 u1991 1414                                   abs@a 0016  
                                 _dbuf 00DA                                   _main 1784  
                                 _dtoa 1006                                   _left 202A  
                                 _down 201C                                   _objs 00C0  
                                 _prec 006D                                   _nout 00D2  
                                 pad@i 001B                                   pad@p 0018  
                                 fsr1h 000FE2                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 pad@w 001D                                   fsr2l 000FD9  
                                 btemp 0076                                   prodl 000FF3  
                                 start 000E                           ___param_bank 000000  
                      __end_of_InitLCD 1FA2                                  ??_abs 0018  
                                ??_pad 001A                        __end_of___aodiv 1620  
                                ?_main 0001                                  ?_dtoa 001F  
                                ?_left 0001                                  ?_down 0001  
                      __end_of___aomod 1784                                  _T0CON 000FD5  
                                _T3CON 000FB1                                  i2l212 2028  
                                i2l206 2012                                  i2l215 201A  
                                i2l209 202E                                  i2l218 2022  
                                i2l186 19CA                           vfpfcnvrt@fmt 0045  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISD 000F95                        __end_of_highIsr 19CE  
                                _flags 006F                                  _lcd_x 0075  
                                _lcd_y 0074                                  _fputc 19CE  
                                _fputs 1E34                                  _right 2024  
                                pad@fp 0014                                  _width 00D4  
                                _putch 2032                                  main@i 0207  
                                dtoa@d 0021                                  dtoa@i 0041  
                                dtoa@n 0039                                  dtoa@p 0033  
                                dtoa@s 0037                                  dtoa@w 0035  
                                tablat 000FF5                                  ttemp5 0077  
                                ttemp6 007A                                  ttemp7 007E  
                                status 000FD8                                  wtemp8 0077  
                      __end_of_sprintf 1E34                        __initialization 1CB4  
                         __end_of_main 18CA                           __end_of_dtoa 12E4  
                         __end_of_left 2030                           __end_of_down 2024  
                       _InitInterrupts 1D1E                                 ??_main 006B  
                               ??_dtoa 0029                                 ??_left 0001  
                               ??_down 0001                          __activetblptr 000002  
                            ??_LCDGoto 0007                                 _ADCON1 000FC1  
                               ?_fputc 0004                                 ?_fputs 000D  
                               ?_right 0001                                 ?_putch 0001  
                               _LCDDat 1FA2                                 _LCDCmd 1FD4  
                               i2l2011 202A                                 i2l2003 2024  
                               i2l2007 201C                                 i2l2201 19C0  
                               i2l2203 19C4                                 i2l2205 19C6  
                               i2l2207 19C8                                 i2l2161 18E4  
                               i2l2171 190C                                 i2l2163 18E6  
                               i2l2155 18CC                                 i2l2181 1942  
                               i2l2173 191A                                 i2l2165 18F4  
                               i2l2157 18DE                                 _LCDStr 1B5A  
                               i2l2191 1974                                 i2l2183 1952  
                               i2l2175 192A                                 i2l2167 1904  
                               i2l2159 18E2                                 i2l2193 197C  
                               i2l2185 195C                                 i2l2177 1930  
                               i2l2169 1908                                 i2l2187 1964  
                               i2l2179 1934                                 i2l2189 196C  
                               i2l2197 1980                                 i2l2199 19BA  
                               i2l2785 1994                                 i2l1995 2004  
                               i2l1997 2010                                 i2l1999 2014  
                            ??_InitLCD 0006                 __end_of_InitInterrupts 1D84  
                         vfprintf@cfmt 0059                              ??___aodiv 0014  
                            ??___aomod 0014                                 clear_0 1CF2  
                               clear_1 1CFE                                 clear_2 1D0A  
                               pad@buf 0016                              ??_highIsr 0001  
                               dtoa@fp 001F                                 _strlen 1F3A  
                               fputc@c 0004                                 fputs@c 0011  
                               fputs@i 0012                           __pdataCOMRAM 0074  
                               fputs@s 000D                          _frisbee_steps 01C0  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               putch@c 0001                       __end_of_vfprintf 1DE6  
                            ??_sprintf 0061                              LCDDat@dat 0005  
                            LCDCmd@cmd 0005                             __accesstop 0080  
              __end_of__initialization 1D10                          ___rparam_used 000001  
         __size_of_AddCustomCharacters 0072                        ?_InitInterrupts 0001  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1EBA  
                            LCDStr@str 0008                          __end_of_fputc 1A98  
             ??_LCDAddSpecialCharacter 000A                          __end_of_fputs 1E78  
                        __end_of_right 202A                          __end_of_putch 2034  
                           __end_of_up 201C          __size_of_SetupDebouncingTimer 0010  
                              ??_fputc 0008                                ??_fputs 0011  
                              ??_right 0001                                ??_putch 0004  
                              ?_LCDDat 0001                                ?_LCDCmd 0001  
                           __pbssBANK0 00C0                             __pbssBANK1 0100  
                              ?_LCDStr 0008                                LCDStr@i 000A  
                           _game_state 00FA                                ?_strlen 0004  
                              _LCDGoto 1BCE                     __size_of_vfpfcnvrt 01B4  
                      __size_of_LCDDat 0032                        __size_of_LCDCmd 0030  
                      __size_of_LCDStr 0074                                _InitLCD 1F70  
                              __Hparam 0000                                __Lparam 0000  
                              ___aodiv 1498                                ___aomod 1620  
                            ?_vfprintf 0053                           __psmallconst 1000  
      __size_of_LCDAddSpecialCharacter 0042                                __pcinit 1CB4  
                              __ramtop 1000                                __ptext0 1784  
                              __ptext1 1DE6                                __ptext2 1D84  
                              __ptext3 12E4                                __ptext4 1006  
                              __ptext5 1A98                                __ptext6 1F3A  
                              __ptext7 1E34                                __ptext8 19CE  
                              __ptext9 2032                                _highIsr 0008  
                              _display 0100                              _T0CONbits 000FD5  
                      __size_of_strlen 0036                           __size_of_abs 0040  
                         __size_of_pad 00C2                              _T3CONbits 000FB1  
                              main@arr 0200                                _sprintf 1DE6  
                       __pintcode_body 18CA                   end_of_initialization 1D10  
                       _frisbee_target 0080                                fputc@fp 0006  
                        __Lmediumconst 0000                                int_func 18CA  
                              fputs@fp 000F                      __end_of_vfpfcnvrt 1498  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                             ??_vfprintf 0059  
                              strlen@a 0006                                strlen@s 0004  
                            _PORTEbits 000F84                    _AddCustomCharacters 1C42  
                            _TRISEbits 000F96                 _LCDAddSpecialCharacter 1E78  
                     ??_InitInterrupts 0004                         __end_of_LCDDat 1FD4  
                       __end_of_LCDCmd 2004                         __end_of_LCDStr 1BCE  
                           LCDGoto@p_1 0006                             LCDGoto@p_2 0007  
                 ?_AddCustomCharacters 0001     _selected_teamA_player_with_frisbee 0098  
                          vfpfcnvrt@ap 0047                            vfpfcnvrt@fp 0043  
                          vfpfcnvrt@ll 004B                          __pidataCOMRAM 2030  
                       __end_of_strlen 1F70                    start_initialization 1CB4  
                          __end_of_abs 1F3A                            __end_of_pad 1B5A  
                             ??_LCDDat 0004                               ??_LCDCmd 0004  
                             ??_LCDStr 000A                  ??_AddCustomCharacters 000C  
                          vfprintf@fmt 0055           __end_of_SetupDebouncingTimer 2014  
              LCDAddSpecialCharacter@i 000B                            __pdataBANK0 0080  
                             ??_strlen 0006                               ?_LCDGoto 0006  
                          __pbssCOMRAM 006D                          __pcstackBANK2 0200  
                     ___aodiv@dividend 0004                               ?_InitLCD 0001  
                            __pnvBANK0 00FA                              _dtoa$1095 0031  
                            __pintcode 0008                               ?___aodiv 0004  
                             ?___aomod 0004                       ___aodiv@quotient 0016  
                             ?_highIsr 0001                      __size_of_vfprintf 0062  
                          __smallconst 1000                           _teamA_player 00B8  
                             ?_sprintf 005B                           _teamB_player 00B0  
                       __size_of_fputc 00CA                         __size_of_fputs 0044  
                       __size_of_right 0006                         __size_of_putch 0002  
                          __size_of_up 0008                  _selected_teamA_player 00A8  
                _selected_teamB_player 00A0                               i2u141_40 18DE  
                             i2u141_41 18DA                               i2u142_40 18F4  
                             i2u142_41 18F0                               i2u143_40 1904  
                             i2u143_41 1900                               i2u144_40 191A  
                             i2u144_41 1916                               i2u145_40 192A  
                             i2u145_41 1926                               i2u146_40 1942  
                             i2u146_41 193E                               i2u147_40 1952  
                             i2u147_41 194E                              _vfpfcnvrt 12E4  
                     __size_of_LCDGoto 0074                ?_LCDAddSpecialCharacter 0008  
                 _SetupDebouncingTimer 2004                            _INTCON2bits 000FF1  
                          _INTCON3bits 000FF0                              copy_data0 1CC8  
                     highIsr@portbVals 0003                       __size_of_InitLCD 0032  
                             __Hrparam 0000                             vfprintf@ap 0057  
                             __Lrparam 0000                             vfprintf@fp 0053  
                          _frisbeeChar 0088                       __size_of___aodiv 0188  
                     __size_of___aomod 0164                             ?_vfpfcnvrt 0043  
                      ___aodiv@divisor 000C                        ___aodiv@counter 0014  
                     __size_of_highIsr 19C6         __end_of_LCDAddSpecialCharacter 1EBA  
                           sprintf@fmt 005D                               _main$548 0205  
                     _acceptInterrupts 0073                               __ptext10 1EFA  
                             __ptext11 1620                               __ptext20 1FA2  
                             __ptext12 1498                               __ptext13 1B5A  
                             __ptext22 2014                               __ptext14 1F70  
                             __ptext23 2024                               __ptext15 1D1E  
                             __ptext24 202A                               __ptext16 1C42  
                ?_SetupDebouncingTimer 0001                               __ptext25 201C  
                             __ptext17 1E78                               __ptext26 2004  
                             __ptext18 1BCE                               __ptext19 1FD4  
                     __size_of_sprintf 004E                          __size_of_main 0146  
                        __size_of_dtoa 02DE                          __size_of_left 0006  
                        __size_of_down 0008     _selected_teamB_player_with_frisbee 0090  
                             int$flags 0076                               _vfprintf 1D84  
                     ___aomod@dividend 0004                             _INTCONbits 000FF2  
          __end_of_AddCustomCharacters 1CB4                               intlevel2 0000  
                            sprintf@ap 0063                __size_of_InitInterrupts 0066  
                      ___aomod@divisor 000C                            ??_vfpfcnvrt 0049  
                      ___aomod@counter 0014                               sprintf@f 0065  
                             sprintf@s 005B                 ??_SetupDebouncingTimer 0001  
                         ___aodiv@sign 0015                           ___aomod@sign 0015  
